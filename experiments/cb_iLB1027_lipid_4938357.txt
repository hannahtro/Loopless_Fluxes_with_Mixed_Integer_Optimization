┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 3, 94, 3, 3, 14, 38, 44, 5, 3, 121, 3, 14, 3, 98, 3, 4, 31, 15, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 24, 4, 174, 31, 3, 13, 3, 4, 6, 9, 7, 7, 520, 400, 5, 3, 26, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 85, 3, 87, 6, 10, 10, 3, 119, 9, 132, 54, 93, 10, 93, 87, 136, 73, 3, 117]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 62, 3, 90, 6, 4, 8, 25, 5, 9, 8, 4, 3, 8, 3, 3, 4, 22, 10, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 4, 4, 10, 4, 8, 3, 3, 6, 58, 4, 3, 8, 4, 4, 20, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 18, 3, 45, 6, 8, 3, 3, 45, 3, 4, 4, 7, 4, 5, 4, 7, 23, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 54, 10, 4, 9, 4, 4, 26, 141, 3, 4, 7, 4, 5, 4, 4, 24, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 4, 4, 40, 12, 38, 4, 4, 93, 4, 4, 38, 10, 4, 5, 58, 4, 21, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 3, 11, 9, 92, 4, 7, 4, 4, 4, 10, 4, 4, 23, 3, 34, 33, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 19, 4, 4, 42, 4, 6, 4, 5, 54, 4, 4, 4, 6, 4, 4, 4, 30, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 4, 4, 4, 4, 4, 6, 3, 4, 45, 4, 4, 4, 5, 4, 4, 4, 3, 21, 11, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 4, 4, 3, 147, 5, 26, 4, 27, 8, 5, 6, 5, 4, 4, 4, 4, 22, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 4, 4, 4, 82, 4, 4, 4, 4, 5, 4, 14, 4, 4, 75, 4, 4, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 43, 5, 5, 84, 4, 15, 4, 4, 5, 4, 4, 4, 30, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 5, 11, 4, 6, 52, 4, 369, 4, 4, 4, 6, 4, 4, 307, 4, 44, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 21, 4, 3, 4, 4, 5, 4, 4, 57, 18, 3, 4, 5, 4, 4, 5, 53, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 3, 221, 4, 4, 3, 5, 407, 4, 14, 4, 3, 4, 6, 5, 3, 3, 21, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 5, 3, 46, 3, 5, 536, 6, 8, 3, 4, 236, 24, 9, 4, 5, 21, 3, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 98, 4, 36, 4, 132, 142, 4, 12, 4, 4, 11, 6, 371, 3, 4, 38, 18, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 35, 57, 9, 4, 4, 6, 3, 4, 3, 3, 3, 4, 5, 4, 4, 8, 4, 25, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 6, 10, 10, 5, 3, 4, 7, 4, 4, 9, 5, 6, 4, 10, 10, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 3, 4, 9, 4, 269, 4, 3, 3, 4, 4, 4, 6, 6, 3, 3, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 4, 4, 8, 4, 4, 5, 4, 4, 25, 4, 4, 5, 4, 4, 4, 5, 26, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 3, 4, 4, 5, 12, 3, 3, 32, 5, 7, 4, 6, 3, 3, 4, 28, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 11, 3, 19, 3, 3, 4, 9, 5, 3, 3, 157, 5, 3, 12, 5, 13, 3, 4, 10, 31, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 19, 4, 4, 4, 31, 4, 4, 4, 4, 3, 53, 6, 55, 4, 4, 21, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 4, 4, 4, 3, 137, 5, 4, 26, 91, 4, 4, 5, 4, 4, 3, 28, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 4, 6, 8, 3, 6, 186, 29, 3, 39, 7, 4, 48, 6, 40, 8, 6, 4, 6, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 6, 3, 8, 7, 3, 6, 3, 3, 3, 6, 3, 4, 5, 7, 3, 3, 4, 3, 15]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 18, 3, 3, 4, 6, 5, 57, 3, 340, 4, 4, 49, 5, 50, 4, 4, 30, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 14, 3, 3, 4, 3, 13, 9, 6, 3, 11, 24, 3, 3, 114, 7, 12, 4, 3, 11, 3, 8, 11]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 5, 3, 4, 4, 204, 18, 4, 4, 3, 4, 10, 4, 230, 3, 3, 12, 4, 13, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4, 9, 14, 3, 6, 6, 11, 7, 24, 6, 6, 4, 10, 4, 4, 217, 21, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 6, 8, 7, 7, 3, 10, 148, 6, 4, 6, 5, 4, 6, 3, 3, 3, 8, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 6, 4, 8, 9, 4, 7, 5, 5, 5, 5, 6, 45, 17, 46, 4, 32, 18, 10, 4, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [34, 4, 3, 6, 3, 3, 24, 3, 6, 4, 4, 3, 4, 4, 4, 12, 7, 4, 131, 3, 19, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 70, 3, 6, 3, 8, 5, 6, 3, 3, 6, 13, 12, 7, 18, 3, 3, 21, 11, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 34, 3, 3, 249, 3, 50, 3, 3, 4, 5, 10, 4, 6, 6, 6, 6, 21, 6, 11]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 5, 7, 3, 5, 5, 4, 6, 64, 6, 6, 10, 5, 60, 5, 4, 3, 54, 52, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 19, 6, 8, 37, 6, 6, 17, 3, 25, 6, 3, 13, 18, 9, 6, 6, 42, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 3, 4, 4, 21, 26, 3, 4, 4, 3, 6, 8, 3, 3, 19, 20, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 34, 6, 11, 11, 3, 6, 27, 4, 27, 6, 3, 4, 5, 469, 4, 3, 3, 23, 4, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 3, 4, 5, 3, 5, 3, 198, 4, 4, 3, 4, 6, 178, 3, 3, 41, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 54, 3, 5, 4, 4, 5, 27, 4, 28, 4, 4, 4, 5, 4, 3, 4, 23, 7, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 3, 4, 6, 4, 7, 3, 4, 3, 4, 5, 4, 3, 4, 3, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 46, 6, 3, 31, 3, 6, 37, 6, 28, 6, 8, 8, 5, 8, 6, 3, 22, 32, 10]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 9, 4, 3, 4, 214, 4, 4, 4, 5, 4, 4, 6, 4, 4, 5, 3, 4, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 3, 3, 4, 3, 4, 345, 4, 3, 41, 4, 4, 5, 4, 4, 4, 27, 31, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 3, 3, 3, 4, 5, 4, 3, 4, 4, 4, 4, 5, 3, 3, 4, 3, 5, 6, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 3, 3, 4, 3, 7, 4, 3, 4, 6, 4, 4, 7, 4, 3, 5, 4, 3, 8, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 3, 11, 3, 3, 6, 3, 4, 4, 4, 3, 13, 6, 13, 3, 3, 10, 4, 3, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 3, 4, 3, 5, 6, 6, 3, 16, 4, 3, 19, 6, 19, 3, 3, 3, 3, 5, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 4, 4, 6, 4, 3, 33, 3, 6, 3, 7, 4, 3, 6, 3, 33, 7, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 3, 4, 8, 3, 3, 5, 4, 6, 3, 4, 4, 4, 5, 8, 8, 4, 4, 4, 8, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [3, 63, 3, 38, 3, 4, 35, 4, 166, 41, 3, 545, 3, 147, 3, 6, 10, 3, 3, 21, 32, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 11, 3, 3, 3, 6, 28, 3, 29, 3, 5, 4, 5, 3, 5, 4, 27, 23, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 4, 4, 5, 46, 3, 50, 4, 3, 3, 5, 7, 6, 4, 4, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [6, 23, 4, 3, 5, 23, 7, 5, 23, 13, 6, 4, 13, 6, 14, 3, 6, 58, 6, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 4, 4, 3, 59, 4, 5, 62, 6, 30, 4, 31, 4, 5, 4, 3, 4, 23, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 6, 9, 3, 5, 16, 4, 3, 4, 3, 4, 6, 4, 3, 4, 7, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 18, 4, 7, 4, 7, 3, 4, 37, 5, 5, 5, 135, 9, 4, 5, 3, 26, 8, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 3, 4, 3, 642, 4, 4, 4, 4, 6, 5, 3, 4, 128, 3, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [3, 10, 3, 3, 4, 3, 74, 3, 6, 3, 4, 3, 7, 9, 4, 6, 6, 200, 8, 3, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [19, 4, 4, 18, 179, 3, 4, 7, 7, 3, 6, 26, 3, 3, 4, 7, 3, 4, 26, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 17, 3, 3, 3, 4, 3, 18, 7, 3, 4, 3, 9, 3, 4, 6, 3, 20, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 3, 3, 6, 22, 4, 32, 3, 4, 3, 6, 3, 4, 3, 4, 15, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 3, 3, 3, 3, 3, 22, 3, 3, 4, 4, 3, 3, 5, 4, 5, 4, 8, 22, 5, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 3, 3, 6, 6, 13, 11, 5, 3, 4, 6, 126, 4, 3, 4, 8, 4, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 6, 3, 3, 4, 7, 3, 5, 3, 3, 4, 4, 8, 4, 4, 5, 4, 3, 4, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 28, 4, 4, 34, 3, 7, 54, 4, 4, 4, 4, 4, 7, 3, 3, 3, 4, 43, 8, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [7, 7, 19, 5, 3, 59, 4, 5, 4, 3, 3, 3, 4, 4, 6, 3, 3, 5, 3, 4, 23, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 4, 3, 4, 3, 6, 33, 9, 40, 6, 3, 3, 6, 3, 3, 3, 37, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 8, 4, 23, 8, 6, 4, 4, 6, 3, 37, 7, 35, 8, 4, 3, 36, 9, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 3, 16, 8, 3, 3, 6, 14, 6, 79, 56, 3, 8, 10, 8, 6, 12, 50, 6, 16]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 10, 4, 6, 3, 3, 6, 4, 18, 28, 4, 40, 6, 39, 3, 6, 22, 32, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 3, 3, 7, 104, 4, 6, 4, 3, 3, 3, 4, 5, 5, 3, 4, 10, 7, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 37, 6, 8, 13, 3, 6, 29, 3, 32, 5, 10, 3, 5, 66, 4, 4, 3, 4, 3, 272]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 3, 3, 3, 4, 4, 6, 3, 4, 4, 4, 4, 5, 4, 103, 3, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 4, 3, 5, 4, 4, 4, 4, 5, 3, 6, 4, 4, 3, 4, 5, 3, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 4, 4, 4, 5, 4, 4, 26, 3, 3, 4, 5, 4, 3, 4, 4, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 4, 3, 3, 4, 48, 6, 47, 4, 4, 3, 3, 24, 8, 4, 3, 43, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 4, 6, 3, 48, 3, 6, 62, 4, 48, 6, 4, 77, 5, 75, 12, 6, 34, 4, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [6, 26, 143, 3, 3, 4, 6, 6, 6, 3, 26, 5, 10, 3, 6, 3, 3, 4, 5, 5, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 8, 16, 4, 6, 4, 57, 4, 403, 63, 4, 28, 48, 3, 8, 6, 133, 4, 4, 42, 3, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 31, 8, 4, 5, 3, 16, 75, 6, 30, 3, 4, 14, 6, 13, 7, 8, 6, 22, 4, 71]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 16, 3, 6, 34, 6, 7, 3, 6, 17, 3, 6, 7, 8, 6, 3, 6, 30, 37, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 4, 54, 11, 7, 10, 28, 145, 72, 35, 3, 13, 4, 6, 3, 7, 5, 8, 6, 4, 47, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 3, 3, 4, 55, 3, 6, 4, 3, 33, 3, 3, 4, 6, 3, 4, 4, 22, 32, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 7, 5, 3, 6, 3, 4, 13, 3, 3, 6, 3, 8, 25, 4, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 4, 6, 4, 3, 6, 6, 3, 3, 4, 3, 4, 6, 5, 4, 4, 4, 4, 3, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [3, 4, 10, 10, 3, 4, 3, 12, 16, 4, 277, 3, 4, 3, 6, 3, 8, 4, 3, 5, 11, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 5, 4, 4, 5, 4, 7, 3, 4, 14, 4, 4, 4, 5, 3, 3, 3, 4, 38]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 3, 4, 10, 3, 3, 6, 3, 4, 3, 4, 3, 6, 3, 8, 639, 6, 57, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 3, 4, 5, 3, 3, 5, 9, 4, 3, 4, 3, 4, 5, 4, 3, 4, 4, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 3, 4, 6, 3, 7, 50, 4, 4, 4, 5, 3, 8, 4, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 3, 28, 4, 6, 4, 4, 3, 4, 4, 4, 273, 3, 3, 5, 4, 4, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [3, 5, 9, 3, 3, 3, 5, 5, 4, 4, 5, 3, 5, 4, 5, 426, 9, 3, 3, 3, 9]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 3, 3, 6, 4, 4, 11, 6, 3, 6, 3, 4, 14, 6, 6, 5, 8, 15, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 7, 4, 28, 4, 6, 26, 3, 4, 5, 3, 4, 6, 4, 4, 4, 4, 3, 5, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 6, 12, 6, 6, 6, 6, 3, 6, 11, 3, 29, 4, 4, 15, 6, 15, 8, 6, 36, 12, 20]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 3, 6, 4, 4, 4, 6, 4, 3, 49, 4, 4, 38, 239, 3, 11, 4, 29, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 3, 3, 4, 6, 3, 791, 25, 3, 29, 4, 3, 40, 6, 40, 8, 7, 3, 4, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 3, 3, 4, 36, 8, 6, 33, 3, 32, 6, 3, 15, 6, 15, 4, 3, 33, 3, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 19, 3, 5, 6, 4, 6, 3, 6, 4, 3, 8, 8, 49, 8, 3, 10, 6, 3, 20]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 3, 3, 8, 5, 3, 5, 28, 6, 3, 6, 4, 7, 5, 12, 5, 3, 3, 44, 5, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 3, 4, 3, 4, 4, 6, 3, 6, 4, 4, 4, 3, 6, 4, 411, 4, 3, 3, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 8, 4, 4, 3, 6, 3, 3, 4, 15, 4, 4, 12, 4, 4, 3, 3, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 31, 14, 8, 3, 3, 13, 3, 3, 3, 3, 3, 3, 6, 3, 8, 4, 4, 22, 52, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 50, 3, 3, 22, 5, 5, 3, 3, 38, 3, 4, 5, 6, 4, 3, 37, 3, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 32, 10, 11, 3, 10, 11, 4, 3, 6, 6, 3, 3, 6, 3, 3, 3, 3, 88, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 4, 12, 4, 3, 5, 19, 3, 4, 3, 4, 3, 6, 4, 3, 3, 7, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 3, 6, 8, 4, 445, 6, 3, 8, 3, 3, 3, 6, 4, 4, 3, 3, 4, 8, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 34, 3, 3, 5, 6, 6, 3, 63, 36, 4, 4, 3, 11, 7, 8, 4, 3, 11, 3, 138]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 5, 4, 37, 3, 5, 39, 4, 3, 4, 3, 7, 6, 4, 3, 3, 29, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 3, 31, 4, 6, 23, 3, 31, 5, 3, 3, 6, 3, 3, 3, 22, 220, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 8, 4, 29, 3, 6, 3, 6, 3, 3, 4, 4, 6, 4, 3, 6, 4, 3, 5, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 29, 3, 3, 6, 3, 6, 30, 6, 33, 6, 3, 4, 6, 6, 8, 3, 3, 6, 50, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 3, 3, 4, 6, 4, 4, 3, 4, 5, 4, 6, 3, 298, 5, 4, 5, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 4, 4, 4, 6, 43, 3, 4, 3, 3, 13, 7, 4, 4, 8, 7, 160, 3, 41]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 9, 4, 8, 6, 5, 6, 5, 4, 8, 6, 129, 529, 3, 7, 3, 34, 25, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 4, 4, 4, 6, 6, 4, 4, 4, 3, 3, 3, 6, 6, 4, 4, 3, 9, 4, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 4, 3, 4, 3, 10, 11, 3, 4, 4, 4, 10, 3, 6, 3, 4, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 145, 3, 4, 6, 9, 60, 4, 5, 5, 7, 3, 3, 5, 3, 6, 3, 3, 3, 34, 38, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 4, 3, 7, 4, 3, 225, 7, 3, 3, 4, 3, 83, 4, 8, 4, 3, 6, 3, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [5, 23, 18, 4, 6, 3, 31, 4, 190, 72, 4, 76, 11, 28, 11, 14, 38, 6, 6, 4, 66, 4, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [5, 8, 3, 11, 6, 3, 3, 3, 5, 6, 4, 28, 6, 3, 3, 79, 7, 3, 3, 6, 6, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 3, 4, 4, 7, 3, 9, 9, 16, 4, 4, 4, 8, 4, 9, 5, 33, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 28, 4, 3, 62, 3, 7, 51, 6, 59, 4, 3, 3, 26, 4, 4, 3, 10, 33, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 4, 4, 5, 4, 3, 26, 26, 39, 73, 5, 3, 3, 9, 8, 3, 3, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 4, 3, 4, 5, 6, 60, 6, 23, 6, 8, 14, 10, 6, 4, 67, 6, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 11, 3, 8, 6, 3, 3, 6, 3, 3, 30, 58, 3, 8, 7, 13, 29, 3, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 4, 4, 5, 9, 3, 5, 12, 99, 4, 3, 9, 5, 7, 3, 4, 43, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 3, 4, 4, 9, 5, 5, 3, 3, 5, 42, 44, 3, 4, 4, 3, 3, 3, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 3, 4, 4, 16, 4, 6, 4, 3, 3, 3, 4, 3, 363, 5, 4, 4, 4, 3, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 3, 3, 3, 5, 29, 3, 4, 3, 3, 204, 5, 5, 4, 24, 15, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 4, 3, 5, 4, 4, 5, 9, 5, 4, 5, 4, 4, 6, 8, 3, 4, 22, 4, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 14, 3, 70, 9, 5, 72, 3, 60, 4, 4, 64, 10, 66, 5, 5, 68, 70, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 40, 4, 3, 4, 4, 7, 4, 3, 4, 3, 3, 7, 3, 4, 5, 4, 4, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 4, 3, 3, 4, 3, 5, 6, 3, 4, 3, 6, 3, 5, 3, 30, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 9, 9, 3, 5, 7, 3, 6, 6, 3, 10, 402, 4, 4, 4, 3, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 4, 4, 3, 4, 6, 37, 5, 38, 4, 5, 4, 6, 7, 3, 4, 56, 7, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 3, 4, 10, 6, 3, 94, 8, 3, 3, 3, 3, 13, 9, 4, 3, 14, 21, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 4, 4, 4, 3, 3, 311, 4, 3, 3, 4, 4, 5, 4, 3, 4, 6, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 8, 5, 7, 88, 6, 4, 8, 3, 5, 305, 4, 4, 6, 3, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 6, 6, 7, 3, 6, 59, 6, 8, 4, 3, 57, 55, 58, 8, 4, 4, 35, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 3, 4, 9, 4, 38, 10, 5, 8, 3, 11, 4, 6, 4, 5, 3, 12, 33, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 3, 3, 4, 3, 4, 5, 3, 4, 4, 3, 3, 3, 6, 5, 5, 4, 3, 43, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 163, 3, 16, 4, 6, 12, 4, 3, 8, 3, 3, 85, 3, 3, 4, 46, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 5, 3, 5, 38, 3, 14, 30, 3, 31, 4, 3, 13, 8, 13, 8, 234, 4, 42, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
termination = MathOptInterface.INFEASIBLE
objective_value = 0.3596067077745708
