┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSFxv_1172
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSFxv_1172
----------------------------------
number of metabolites : 1918
number of reactions : 2638
number of genes : 1169

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
max_cuts = 53
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2638 flux variables and 4884 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [7, 2, 11, 11, 11, 21, 11, 11, 11, 2, 3, 17, 17, 18, 17, 18, 23, 17, 14, 14, 15, 14, 15, 14, 14, 276, 14, 15, 15, 14, 14, 16, 14, 15, 14, 16, 14, 14, 15, 14, 15, 4, 40, 2, 2, 4, 7, 7, 40, 41, 41]
length(C_list) = 51
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 4, 2, 3, 7, 3, 2, 2, 3, 3, 4, 2, 2, 2, 2, 4, 61, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 4, 4, 12, 3, 3, 8, 9, 2, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 11, 4, 2, 7, 2, 2, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 8, 7, 12, 12, 19, 12, 12, 12, 12, 3, 18, 18, 20, 18, 19, 18, 51, 15, 15, 16, 15, 16, 15, 15, 16, 16, 16, 18, 30, 15, 15, 15, 16, 15, 16, 15, 15, 15, 15, 15, 15, 8, 41, 9, 8, 8, 41, 42, 42]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 4, 3, 4, 5, 4, 5, 6, 2, 5, 4, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 3, 4, 5, 4, 5, 8, 3, 5, 6, 4, 10, 9, 61, 6, 25, 12, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 38, 4, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 2, 4, 6, 25, 82]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 7, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 0.8940890826549578
thermo_feasible = true
