ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 26
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [13, 2, 2, 2, 2, 2, 3, 8, 4, 6, 6, 6, 2, 5, 8, 23, 8, 2, 8, 4, 8, 90, 4, 7, 7, 5, 8, 8, 12, 4, 7, 4, 9, 6, 9, 7, 2, 5, 413, 9, 6, 4, 11]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 8, 2, 4, 3, 4, 6, 8, 4, 5, 4, 6, 8, 6, 7, 6, 5, 6, 10, 4, 7, 4, 279, 6, 7, 7, 9, 4, 6, 6, 213, 6, 30, 6, 4, 11, 6, 8, 3, 4, 4, 7, 2, 7, 7, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 4, 6, 7, 3, 5, 103, 4, 4, 3, 5, 8, 7, 9, 6, 4, 7, 7, 5, 4, 3, 7, 7, 6, 4, 6, 15, 4, 5, 3, 5, 10, 171, 7, 5, 4, 9, 4, 6, 4, 6, 5, 76, 7, 10, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 2, 6, 7, 6, 7, 3, 5, 4, 7, 4, 7, 7, 121, 4, 4, 4, 5, 8, 7, 3, 5, 4, 6, 10, 4, 7, 5, 6, 5, 4, 10, 8, 6, 6, 9, 11, 8, 4, 4, 4, 3, 7, 5, 3, 20, 5, 8, 40, 6, 9, 6, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 2, 4, 3, 6, 4, 4, 7, 3, 6, 7, 6, 3, 161, 9, 7, 4, 8, 7, 9, 5, 6, 6, 6, 6, 5, 7, 4, 6, 5, 7, 7, 6, 13, 6, 8, 8, 12, 6, 5, 4, 9, 45, 8, 4, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 3, 4, 8, 3, 4, 3, 7, 12, 6, 5, 4, 7, 10, 6, 6, 4, 4, 7, 10, 7, 5, 9, 5, 6, 7, 5, 5, 6, 6, 4, 6, 8, 6, 7, 7, 4, 6, 37, 7, 9, 8, 30, 6, 6, 5, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [10, 8, 5, 4, 4, 6, 9, 5, 4, 3, 5, 8, 4, 5, 5, 6, 9, 7, 4, 4, 6, 4, 5, 3, 6, 7, 16, 4, 5, 8, 3, 4, 7, 4, 6, 7, 14, 4, 3, 33, 6, 4, 7, 7, 8, 5, 4, 7, 6, 7, 11, 3, 13, 6]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 7, 5, 8, 18, 6, 3, 5, 4, 4, 317, 6, 7, 7, 8, 8, 8, 4, 3, 6, 4, 168, 4, 8, 7, 3, 4, 66, 3, 5, 6, 214, 4, 7, 5, 5, 8, 12, 7, 5, 4, 6, 15, 8, 5, 6, 5, 4, 22]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 10, 6, 7, 6, 8, 4, 3, 4, 5, 11, 4, 8, 6, 6, 6, 3, 4, 3, 6, 4, 3, 9, 7, 5, 37, 81, 4, 6, 4, 9, 4, 4, 4, 6, 6, 11, 4, 4, 4, 6, 5, 4, 4, 7, 5, 7, 4, 8]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 6, 4, 8, 17, 11, 5, 10, 6, 6, 5, 3, 4, 89, 6, 4, 5, 11, 107, 5, 4, 6, 8, 4, 9, 7, 13, 3, 8, 8, 27, 4, 6, 8, 6, 5, 9]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 5, 2, 4, 5, 5, 4, 7, 13, 3, 5, 3, 4, 6, 10, 6, 4, 4, 5, 2, 16, 4, 4, 24, 6, 6, 7, 2, 6, 5, 4, 6, 5, 22, 3, 6, 20, 6, 23, 11, 22, 20, 6, 7, 7, 5, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 5, 4, 8, 6, 7, 3, 71, 4, 5, 6, 5, 4, 8, 8, 5, 4, 10, 4, 5, 7, 3, 4, 9, 7, 8, 12, 4, 16, 5, 5, 8, 170, 7, 4, 7, 9, 5, 5, 9, 11, 3, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 5, 45, 5, 6, 5, 4, 5, 5, 10, 4, 6, 7, 87, 4, 43, 7, 5, 6, 7, 8, 5, 8, 5, 9, 6, 6, 4, 9, 8, 234, 4, 4, 27, 8, 6, 6, 7, 15, 7, 4, 4, 10, 4, 3, 4, 8, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 8, 4, 6, 6, 8, 4, 83, 6, 4, 5, 6, 4, 6, 6, 6, 6, 4, 8, 6, 6, 8, 4, 25, 5, 6, 6, 6, 2, 5, 8, 5, 6, 3, 4, 6, 12, 5, 7, 4, 6, 7, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 7, 4, 5, 6, 4, 205, 6, 7, 4, 6, 7, 7, 10, 5, 7, 6, 4, 5, 5, 4, 7, 6, 6, 4, 4, 6, 4, 8, 11, 9, 5, 4, 13, 6, 4, 4, 5, 6, 10, 6, 3, 4, 4, 4, 42, 4, 5, 6, 6, 8, 7, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 12, 5, 4, 5, 6, 10, 8, 9, 7, 8, 7, 5, 7, 7, 6, 4, 6, 8, 5, 7, 10, 7, 10, 7, 5, 6, 10, 7, 6, 39, 6, 4, 6, 6, 5, 10, 33, 14, 7, 9, 5, 13, 4, 6, 14, 6, 5, 265, 5, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 4, 8, 4, 4, 5, 3, 10, 4, 7, 4, 7, 4, 9, 7, 4, 4, 15, 7, 11, 5, 8, 10, 4, 4, 13, 4, 6, 5, 9, 7, 5, 7, 4, 3, 5, 7, 35, 6, 5, 4, 4, 3, 11, 4, 4, 287, 15, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 8, 4, 4, 4, 6, 3, 5, 3, 6, 10, 7, 5, 7, 7, 5, 8, 192, 4, 10, 3, 4, 7, 4, 4, 11, 5, 4, 4, 4, 6, 5, 5, 4, 5, 5, 6, 3, 5, 6, 6, 7, 8, 12, 4, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 4, 9, 7, 6, 9, 6, 8, 7, 14, 6, 6, 4, 5, 42, 6, 7, 6, 6, 53, 72, 9, 6, 5, 4, 4, 226, 4, 3, 8, 5, 8, 4, 6, 7, 9, 11, 5, 9, 15, 11, 87, 4, 8, 7, 6, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 5, 11, 6, 4, 7, 9, 5, 6, 5, 3, 324, 5, 4, 10, 18, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 5, 6, 4, 6, 5, 468, 8, 4, 5, 9, 6, 5, 5, 8, 7, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 10, 4, 3, 4, 12, 9, 12, 6, 3, 11, 7, 11, 7, 192, 7, 4, 6, 5, 5, 5, 4, 4, 12, 39, 7, 11, 10, 4, 9, 3, 6, 8, 11, 26, 55, 47, 11, 13, 4, 89, 8, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 9, 8, 8, 10, 4, 6, 4, 6, 5, 9, 11, 5, 9, 5, 6, 4, 14, 16, 3, 16, 6, 5, 6, 22, 58, 7, 4, 6, 10, 10, 11, 8, 4, 12, 4, 5, 4, 9, 4, 35, 6, 10, 5, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 4, 3, 12, 5, 5, 5, 4, 7, 4, 5, 5, 8, 6, 6, 5, 6, 6, 5, 4, 4, 8, 4, 7, 5, 6, 16, 4, 8, 5, 5, 16, 6, 5, 4, 12, 5, 4, 5, 6, 11, 7, 6, 6, 4, 8, 6, 4, 4, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 8, 4, 4, 12, 13, 10, 4, 8, 5, 5, 6, 6, 3, 6, 6, 8, 7, 119, 6, 9, 10, 4, 10, 4, 8, 5, 8, 6, 7, 6, 9, 8, 13, 10, 7, 6, 3, 8, 4, 11, 151, 8, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 11, 7, 6, 6, 10, 12, 4, 4, 11, 5, 6, 9, 4, 215, 6, 11, 8, 5, 4, 12, 4, 5, 114, 10, 9, 11, 6, 43, 10, 10, 11, 6, 5, 7, 159, 4, 14, 6, 9, 3, 9, 4, 8, 6, 6, 7, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [10, 5, 5, 6, 9, 5, 5, 4, 9, 5, 6, 5, 3, 5, 11, 9, 7, 4, 5, 8, 6, 338, 5, 5, 3, 5, 4, 7, 7, 7, 7, 7, 317, 4, 5, 6, 7, 8, 7, 4, 6, 4, 8, 189, 6, 7, 8, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [14, 7, 4, 5, 9, 6, 4, 13, 9, 5, 4, 3, 3, 10, 7, 4, 7, 7, 7, 8, 6, 9, 386, 4, 7, 9, 9, 5, 12, 65, 8, 5, 8, 6, 7, 9, 7, 8, 4, 323, 5, 12, 8, 4, 131]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 4, 9, 5, 4, 10, 15, 7, 4, 12, 4, 4, 18, 11, 4, 5, 10, 7, 6, 14, 4, 10, 11, 9, 8, 117, 8, 6, 4, 4, 7, 63, 6, 9, 11, 7, 9, 6, 20, 11, 12, 6, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 7, 6, 4, 7, 4, 10, 23, 10, 5, 7, 11, 5, 280, 42, 11, 10, 159, 6, 4, 8, 9, 6, 9, 6, 9, 9, 9, 4, 3, 7, 7, 4, 9, 6, 6, 12, 10, 7, 4, 6, 10, 9, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 6, 11, 7, 7, 10, 8, 6, 11, 6, 7, 5, 13, 69, 19, 4, 8, 8, 6, 6, 11, 9, 5, 10, 153, 5, 32, 4, 4, 3, 5, 6, 4, 5, 143, 12, 4, 6, 4, 8, 6, 9, 8, 8, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 4, 6, 9, 3, 5, 10, 9, 5, 4, 6, 11, 4, 3, 63, 7, 8, 9, 5, 8, 7, 21, 9, 4, 4, 7, 8, 6, 10, 10, 9, 5, 8, 198, 7, 10, 5, 222, 6, 10, 8, 144, 4, 7, 4, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 12, 4, 8, 4, 10, 5, 7, 12, 4, 4, 6, 3, 6, 33, 11, 8, 6, 9, 9, 5, 11, 11, 12, 5, 8, 4, 5, 7, 4, 7, 4, 9, 26, 11, 15, 7, 147, 6, 5, 12, 8, 11, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 6, 10, 9, 7, 5, 6, 4, 6, 5, 5, 86, 7, 8, 5, 7, 5, 5, 8, 4, 9, 6, 7, 12, 3, 4, 15, 4, 6, 9, 8, 6, 8, 3, 11, 5, 11, 6, 30, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [13, 8, 7, 7, 5, 4, 4, 4, 6, 10, 7, 4, 5, 9, 5, 5, 7, 6, 5, 6, 4, 8, 6, 3, 8, 6, 57, 4, 10, 6, 3, 5, 5, 11, 4, 4, 10, 4, 14, 308, 5, 6, 5, 7, 6, 4, 4, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 6, 22, 11, 7, 4, 5, 3, 5, 9, 8, 8, 8, 4, 4, 7, 260, 5, 6, 5, 6, 18, 19, 7, 52, 4, 5, 5, 5, 9, 5, 13, 8, 6, 3, 5, 5, 5, 4, 10, 6, 8, 5, 3, 6, 5, 3, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [11, 5, 10, 13, 8, 4, 6, 4, 8, 4, 12, 4, 7, 10, 396, 9, 4, 4, 8, 8, 12, 11, 7, 11, 7, 5, 6, 8, 9, 50, 15, 5, 9, 39, 5, 10, 13, 6, 6, 7, 204, 5, 3, 15, 10, 6, 8, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 4, 7, 15, 6, 4, 4, 7, 17, 6, 370, 8, 6, 11, 7, 5, 4, 6, 5, 21, 7, 5, 7, 3, 5, 4, 5, 6, 15, 6, 6, 4, 3, 5, 4, 9, 6, 156, 12, 12, 9, 4, 9, 4, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 4, 5, 4, 12, 10, 11, 8, 7, 4, 4, 4, 11, 12, 5, 8, 4, 5, 5, 6, 5, 4, 5, 16, 35, 4, 9, 8, 10, 4, 12, 4, 4, 10, 15, 4, 6, 5, 5, 3, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 13, 4, 9, 8, 7, 10, 11, 8, 4, 6, 9, 8, 8, 5, 4, 5, 9, 7, 6, 5, 7, 4, 6, 8, 8, 10, 6, 4, 11, 8, 11, 35, 4, 6, 4, 10, 5, 4, 4, 6, 11, 9, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [11, 8, 15, 5, 4, 9, 4, 5, 6, 4, 4, 7, 5, 4, 4, 7, 8, 6, 4, 7, 79, 4, 6, 4, 4, 10, 6, 5, 8, 21, 132, 7, 4, 6, 8, 7, 7, 4, 10, 5, 7, 4, 5, 5, 9, 4, 209, 8]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 9, 8, 7, 3, 4, 7, 9, 6, 5, 6, 9, 9, 5, 7, 6, 4, 5, 5, 6, 4, 5, 4, 6, 53, 6, 5, 10, 5, 8, 12, 6, 5, 4, 16, 6, 10, 8, 5, 7, 6, 8, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 5, 4, 4, 10, 5, 3, 5, 6, 4, 6, 6, 11, 6, 4, 4, 13, 5, 8, 8, 15, 56, 4, 4, 43, 3, 4, 7, 5, 4, 7, 4, 31, 6, 90, 5, 7, 10, 6, 6, 4, 8, 4, 7, 25, 9, 9, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 9, 5, 5, 6, 5, 3, 6, 8, 5, 5, 9, 9, 9, 7, 5, 7, 4, 9, 4, 5, 9, 5, 7, 9, 12, 8, 9, 9, 8, 7, 4, 71, 4, 3, 6, 4, 10, 12, 9, 8, 5, 7, 5, 8, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 4, 12, 9, 6, 5, 4, 4, 6, 5, 12, 8, 24, 8, 7, 7, 4, 4, 11, 11, 10, 12, 5, 8, 122, 6, 12, 4, 7, 11, 4, 10, 10, 9, 33, 4, 8, 5, 4, 7, 10, 10, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 5, 3, 4, 4, 6, 5, 7, 13, 5, 5, 4, 12, 5, 4, 122, 279, 5, 8, 5, 177, 9, 6, 5, 4, 4, 6, 4, 99, 4, 13, 5, 5, 4, 5, 5, 5, 8, 5, 7, 8, 7, 8, 9, 9, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 10, 7, 3, 7, 9, 4, 4, 7, 6, 5, 7, 23, 110, 6, 8, 122, 5, 4, 9, 6, 12, 39, 3, 14, 9, 7, 5, 3, 5, 4, 6, 5, 7, 9, 7, 9, 6, 10, 4, 108, 5, 4, 9, 8, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 9, 8, 8, 6, 9, 5, 6, 5, 7, 4, 4, 167, 10, 4, 11, 5, 7, 11, 4, 6, 5, 10, 11, 6, 4, 6, 11, 4, 8, 4, 10, 5, 6, 5, 5, 8, 7, 8, 7, 447, 4, 5, 5, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [8, 5, 10, 4, 10, 6, 3, 9, 4, 5, 5, 5, 5, 5, 5, 12, 4, 4, 211, 4, 4, 9, 8, 4, 48, 4, 4, 5, 10, 6, 4, 4, 6, 5, 6, 4, 8, 6, 5, 9, 3, 4, 157, 10, 3, 11, 3, 6, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [5, 11, 8, 4, 3, 10, 8, 4, 8, 9, 6, 10, 4, 4, 5, 3, 373, 10, 6, 8, 3, 3, 7, 11, 8, 9, 10, 7, 3, 5, 7, 10, 4, 14, 9, 11, 13, 9, 4, 9, 10, 4, 6, 4, 11, 64, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [16, 5, 4, 4, 9, 4, 5, 3, 9, 6, 4, 10, 4, 11, 552, 7, 8, 5, 5, 149, 6, 4, 5, 168, 112, 3, 4, 8, 31, 10, 10, 3, 5, 4, 10, 5, 4, 394, 5, 7, 5, 551]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 4, 4, 7, 5, 3, 4, 5, 3, 242, 36, 4, 10, 5, 8, 7, 4, 4, 11, 195, 8, 5, 4, 6, 48, 3, 4, 4, 6, 5, 4, 5, 3, 7, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 9, 7, 8, 5, 6, 4, 4, 5, 5, 5, 10, 33, 4, 13, 7, 4, 9, 7, 4, 7, 7, 5, 4, 3, 7, 6, 6, 9, 3, 4, 22, 8, 4, 8, 7, 7, 4, 5, 9, 10, 12, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [14, 9, 7, 4, 8, 5, 5, 10, 4, 10, 4, 9, 6, 7, 6, 7, 5, 12, 4, 12, 11, 6, 6, 8, 8, 12, 5, 5, 9, 7, 9, 355, 10, 10, 4, 10, 7, 6, 9, 35, 4, 6, 7, 10, 49, 43, 7, 9, 8, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [2, 5, 9, 5, 3, 7, 4, 3, 7, 7, 11, 5, 5, 20, 3, 6, 5, 5, 6, 112, 5, 6, 10, 12, 41, 10, 7, 4, 6, 4, 9, 6, 11, 4, 6, 4, 4, 11, 32, 6, 17, 15, 5, 9, 10, 7, 5, 39]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [9, 7, 12, 3, 6, 6, 8, 8, 4, 4, 5, 3, 4, 6, 11, 11, 12, 4, 112, 4, 6, 5, 7, 74, 9, 4, 7, 4, 12, 8, 7, 5, 5, 6, 9, 7, 100, 5, 9, 8, 5, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 7, 46, 6, 4, 5, 4, 6, 7, 8, 13, 3, 15, 11, 8, 11, 4, 11, 4, 4, 42, 9, 10, 11, 5, 6, 6, 5, 7, 10, 10, 4, 11, 5, 5, 11, 7, 17, 7, 11, 7, 34, 40, 11, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [11, 8, 5, 4, 9, 10, 5, 5, 7, 9, 3, 6, 9, 227, 103, 9, 4, 10, 5, 4, 4, 4, 9, 106, 30, 14, 10, 10, 5, 11, 8, 11, 5, 8, 10, 11, 458, 12, 5, 17, 4, 52, 4, 3, 9, 6, 11]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [12, 12, 10, 13, 93, 11, 8, 10, 11, 10, 14, 12, 12, 13, 118, 11, 6, 297, 7, 11, 10, 11, 12, 13, 14, 13, 8, 12, 13, 11, 12, 16, 12, 37, 10, 7, 6, 13, 12, 14, 8, 46, 38, 11, 12, 9, 11, 3, 9, 9, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [14, 13, 11, 3, 11, 12, 12, 9, 8, 10, 12, 7, 7, 7, 5, 9, 11, 4, 3, 13, 8, 331, 4, 8, 13, 9, 9, 9, 15, 5, 11, 5, 10, 10, 4, 8, 10, 9, 12, 31, 13, 11, 11, 10, 5, 9, 3, 9]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [10, 12, 10, 9, 128, 10, 11, 182, 13, 11, 6, 12, 11, 12, 4, 3, 5, 12, 12, 10, 11, 4, 10, 11, 11, 4, 21, 4, 15, 13, 10, 126, 10, 10, 11, 8, 6, 10, 12, 11, 8, 10, 13, 12, 10, 10, 12, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [11, 11, 13, 14, 9, 8, 4, 12, 7, 8, 10, 9, 9, 9, 34, 11, 3, 9, 8, 28, 15, 14, 13, 11, 10, 82, 11, 12, 9, 626, 5, 7, 9, 13, 11, 11, 10, 8, 12, 10, 9, 11, 9, 8, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [16, 11, 14, 11, 9, 11, 8, 12, 4, 9, 13, 4, 12, 11, 6, 11, 14, 13, 8, 13, 4, 32, 14, 13, 13, 12, 462, 13, 13, 10, 10, 10, 12, 8, 4, 13, 12, 12, 9, 12, 12, 9, 10, 11, 12, 26, 9, 252]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [16, 11, 13, 10, 5, 4, 10, 12, 4, 13, 15, 12, 5, 11, 6, 5, 4, 9, 10, 12, 10, 5, 12, 9, 5, 9, 11, 11, 9, 13, 12, 11, 11, 4, 12, 35, 7, 9, 5, 175, 12, 4, 4, 12, 9, 14, 12, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [14, 13, 4, 5, 4, 10, 4, 3, 19, 4, 4, 5, 18, 4, 164, 4, 4, 4, 6, 5, 5, 4, 5, 5, 7, 6, 12, 4, 5, 5, 5, 66, 4, 6, 5, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 13, 16, 20, 9, 6, 4, 5, 6, 5, 15, 11, 6, 5, 4, 6, 5, 15, 30, 14, 2, 5, 4, 5, 4, 4, 6, 16, 4, 12, 12, 5, 9, 5, 9, 12, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 4, 6, 4, 6, 4, 5, 336, 6, 4, 4, 13, 5, 4, 4, 4, 6, 5, 4, 5, 11, 5, 5, 6, 7, 10, 10, 3, 9, 11, 56, 4, 7, 5, 9, 7, 6, 7, 23, 465]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [14, 9, 4, 13, 3, 4, 4, 8, 10, 5, 3, 5, 5, 10, 6, 9, 4, 7, 9, 8, 8, 10, 10, 12, 10, 4, 8, 6, 11, 8, 6, 3, 4, 10, 4, 15, 5, 5, 9, 11, 11, 10, 8, 6, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 9, 4, 4, 6, 13, 11, 10, 9, 276, 6, 5, 8, 3, 6, 7, 136, 5, 5, 4, 6, 10, 7, 8, 5, 5, 4, 7, 14, 3, 5, 6, 14, 4, 7, 11, 6, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 4, 5, 6, 6, 4, 4, 5, 7, 4, 13, 5, 4, 4, 4, 7, 17, 5, 4, 6, 7, 8, 8, 8, 7, 6, 4, 70, 4, 4, 568, 11, 5, 6, 4, 10, 6, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 3, 4, 5, 4, 4, 8, 3, 5, 112, 8, 208, 13, 8, 4, 3, 9, 4, 7, 6, 5, 3, 6, 23, 10, 5, 4, 7, 4, 5, 7, 4, 9, 10, 6, 55, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [16, 3, 7, 8, 4, 9, 4, 12, 5, 5, 5, 7, 283, 10, 7, 4, 6, 8, 4, 5, 12, 4, 6, 10, 6, 6, 4, 6, 8, 8, 8, 9, 11, 4, 6, 16, 173, 11, 7, 18, 6, 26, 10, 4, 4, 6, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [16, 4, 6, 4, 6, 4, 5, 5, 7, 6, 4, 55, 6, 9, 4, 4, 7, 7, 8, 5, 8, 4, 7, 8, 8, 3, 6, 5, 4, 6, 5, 7, 5, 8, 6, 64, 4, 5, 7, 6, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [2, 9, 38, 4, 4, 7, 7, 6, 6, 4, 4, 6, 7, 4, 6, 10, 16, 7, 9, 3, 11, 6, 4, 3, 4, 7, 9, 5, 15, 6, 4, 8, 5, 4, 6, 5, 5, 7, 9, 4, 80, 12, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [17, 10, 7, 8, 6, 4, 4, 8, 9, 24, 4, 154, 14, 6, 4, 6, 4, 5, 9, 5, 4, 4, 6, 6, 10, 6, 5, 13, 6, 25, 6, 5, 12, 11, 12, 5, 4, 7, 7, 4, 3, 5, 10, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [8, 8, 9, 7, 9, 9, 4, 4, 5, 7, 7, 5, 4, 25, 7, 7, 8, 12, 8, 35, 9, 8, 4, 5, 4, 4, 19, 10, 4, 59, 8, 4, 5, 3, 9, 4, 5, 56, 8, 16, 11, 513]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 9, 8, 8, 6, 6, 5, 5, 4, 7, 6, 5, 13, 80, 4, 11, 5, 10, 15, 6, 5, 6, 6, 9, 10, 9, 10, 7, 4, 5, 172, 5, 8, 10, 10, 7, 6, 12, 5, 5, 8, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 7, 4, 3, 3, 4, 7, 8, 6, 7, 9, 7, 9, 4, 9, 7, 5, 6, 9, 4, 6, 5, 6, 7, 604, 4, 4, 4, 10, 7, 7, 5, 4, 24, 5, 8, 5, 71, 181]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 6, 9, 4, 6, 4, 10, 5, 7, 9, 4, 5, 10, 13, 4, 4, 6, 10, 9, 10, 11, 10, 5, 10, 9, 4, 9, 8, 10, 6, 8, 10, 10, 9, 200, 4, 8, 8, 10, 9, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [15, 7, 6, 8, 4, 6, 10, 24, 11, 4, 7, 7, 13, 4, 6, 6, 5, 17, 7, 8, 7, 148, 6, 8, 4, 7, 10, 6, 6, 5, 6, 6, 7, 13, 87, 10, 9, 5, 8, 6, 7, 6, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 9, 6, 9, 7, 4, 4, 4, 8, 6, 544, 5, 14, 5, 4, 16, 6, 13, 7, 7, 7, 10, 39, 5, 121, 4, 11, 3, 11, 13, 6, 6, 9, 6, 35, 29, 7, 4, 291]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 5, 4, 4, 48, 4, 5, 6, 9, 32, 6, 6, 3, 8, 4, 5, 7, 4, 5, 11, 11, 6, 5, 5, 6, 4, 4, 10, 4, 5, 27, 7, 6, 6, 6, 5, 11, 11, 5, 11, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 7, 4, 7, 4, 9, 12, 188, 11, 12, 13, 7, 5, 10, 5, 10, 7, 6, 10, 10, 7, 10, 11, 13, 3, 13, 6, 7, 80, 5, 3, 10, 5, 8, 10, 5, 7, 9, 19, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 11, 7, 8, 8, 11, 6, 4, 9, 12, 17, 7, 5, 8, 13, 14, 8, 14, 13, 8, 7, 12, 7, 11, 6, 7, 3, 9, 6, 6, 10, 7, 5, 6, 211, 7, 8, 13, 7, 6, 4, 5, 11, 6, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 11, 14, 10, 10, 8, 8, 10, 4, 8, 10, 158, 10, 4, 8, 13, 8, 12, 140, 10, 8, 10, 12, 20, 16, 14, 28, 9, 11, 9, 10, 7, 15, 96, 10, 5, 14, 14, 11]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 9, 7, 9, 11, 7, 7, 7, 8, 11, 19, 4, 7, 3, 7, 7, 8, 11, 7, 4, 9, 11, 9, 11, 8, 129, 13, 7, 10, 4, 11, 9, 11, 430, 11, 8, 12]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [16, 6, 4, 6, 7, 7, 7, 3, 5, 13, 12, 6, 10, 24, 23, 9, 11, 8, 5, 8, 4, 9, 4, 9, 11, 6, 7, 6, 5, 5, 14, 9, 9, 10, 12, 15, 12, 11, 11, 35, 30, 7, 4, 7, 6, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [13, 13, 9, 3, 13, 8, 4, 7, 18, 6, 69, 3, 7, 5, 12, 7, 5, 7, 5, 10, 8, 11, 9, 7, 6, 6, 5, 7, 6, 8, 7, 8, 5, 5, 4, 7, 58, 16, 14, 15, 10, 11, 7, 11]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [8, 14, 12, 16, 13, 15, 10, 14, 8, 11, 14, 9, 4, 10, 14, 15, 12, 13, 9, 302, 9, 4, 11, 9, 17, 12, 9, 13, 10, 14, 14, 13, 365, 11, 9, 13, 15, 13, 8, 12, 9]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [9, 13, 12, 12, 9, 11, 20, 14, 2, 12, 9, 12, 13, 7, 9, 10, 3, 13, 9, 3, 11, 8, 11, 5, 9, 10, 15, 12, 9, 9, 14, 10, 7, 74, 3, 12, 13, 9, 10, 4, 13, 12, 39, 21, 12, 9, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [13, 10, 12, 5, 8, 11, 4, 10, 7, 4, 9, 12, 9, 14, 11, 5, 13, 12, 13, 12, 12, 11, 7, 10, 4, 11, 3, 15, 5, 4, 4, 5, 4, 10, 10, 29, 12, 3, 11, 10, 5, 5, 4, 10, 21, 7, 5, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [18, 12, 12, 11, 11, 14, 4, 13, 8, 13, 13, 13, 14, 6, 13, 12, 5, 5, 10, 13, 12, 12, 13, 11, 15, 12, 4, 15, 14, 4, 11, 11, 6, 14, 3, 289, 12, 38, 16, 16, 8, 25, 11, 13, 4, 11, 11, 11, 14]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [10, 14, 12, 13, 13, 5, 13, 4, 12, 13, 14, 4, 4, 12, 16, 6, 14, 25, 7, 14, 12, 16, 16, 8, 11, 14, 14, 14, 12, 13, 5, 15, 14, 13, 12, 14, 26, 4, 14, 16, 11, 13, 12, 15, 13, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 6, 4, 3, 4, 9, 6, 8, 174, 51, 3, 7, 5, 7, 9, 7, 5, 4, 8, 5, 4, 6, 6, 4, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [9, 10, 7, 11, 4, 5, 11, 11, 6, 6, 8, 4, 10, 24, 8, 10, 9, 9, 5, 9, 5, 17, 9, 10, 4, 10, 13, 12, 9, 10, 10, 6, 9, 9, 11, 7, 9, 12, 13, 9, 8, 9, 10, 8, 6, 7, 9, 11, 4, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [11, 10, 11, 11, 12, 8, 8, 10, 8, 9, 7, 12, 9, 9, 8, 11, 10, 9, 14, 11, 8, 10, 14, 12, 11, 10, 11, 10, 10, 7, 8, 12, 14, 14, 8, 9, 10, 11, 8, 11, 8, 26, 16, 10, 11, 3, 11, 10, 9, 8, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [38, 5, 8, 5, 9, 6, 7, 7, 6, 7, 7, 4, 5, 7, 7, 6, 10, 7, 8, 8, 8, 8, 7, 7, 8, 9, 12, 10, 7, 6, 4, 8, 4, 7, 8, 6, 11, 6, 28, 10, 7, 5, 8, 7, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [13, 7, 9, 7, 12, 9, 9, 12, 10, 136, 10, 14, 9, 14, 9, 11, 4, 14, 7, 8, 10, 9, 10, 11, 39, 10, 8, 10, 8, 12, 9, 10, 9, 243, 12, 8, 6, 8, 10, 11, 11, 10, 9, 9, 7, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [6, 11, 3, 10, 11, 228, 8, 10, 11, 418, 8, 10, 10, 9, 11, 11, 7, 12, 13, 4, 4, 12, 10, 6, 8, 9, 7, 11, 3, 11, 22, 11, 11, 14, 9, 213, 10, 10, 11, 9, 10, 13, 12, 8, 9, 11, 10, 10, 13, 10, 57, 9, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [12, 10, 9, 9, 10, 12, 11, 10, 10, 7, 10, 9, 9, 9, 9, 9, 10, 4, 11, 8, 10, 10, 9, 10, 18, 10, 10, 9, 9, 12, 10, 79, 13, 4, 82, 7, 9, 12, 8, 9, 12, 14, 8, 9, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [5, 11, 8, 6, 13, 4, 4, 4, 8, 10, 6, 10, 6, 5, 11, 5, 3, 10, 8, 8, 9, 5, 8, 8, 4, 11, 12, 4, 7, 7, 20, 6, 6, 13, 11, 13, 57]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [9, 5, 7, 6, 7, 7, 7, 6, 10, 4, 5, 5, 4, 5, 6, 8, 6, 7, 4, 8, 54, 4, 11, 9, 8, 5, 7, 6, 11, 6, 7, 4, 8, 122, 7, 9, 12, 6, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [17, 4, 4, 5, 9, 9, 10, 93, 8, 11, 4, 11, 11, 9, 6, 10, 9, 60, 11, 9, 38, 4, 5, 11, 9, 9, 9, 421, 10, 10, 10, 371, 11, 8, 8, 8, 5, 9, 10, 10, 8, 9, 7, 6, 12, 8, 7, 11, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [5, 9, 10, 4, 9, 170, 10, 8, 5, 8, 9, 11, 5, 9, 12, 8, 5, 9, 8, 8, 8, 8, 8, 9, 11, 9, 10, 9, 47, 3, 8, 11, 8, 9, 9, 7, 8, 9, 8, 6, 10, 10, 11, 8, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [16, 5, 4, 4, 9, 22, 8, 15, 14, 7, 18, 9, 12, 8, 291, 3, 4, 8, 20, 5, 7, 9, 8, 8, 76, 12, 8, 15, 6, 180, 9, 4, 6, 15, 16, 16, 15, 11, 8, 14, 13, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [15, 11, 9, 10, 12, 11, 4, 144, 12, 7, 11, 12, 8, 9, 15, 10, 8, 11, 6, 10, 9, 10, 10, 8, 10, 7, 8, 86, 9, 14, 10, 10, 12, 10, 9, 6, 11, 11, 15, 9, 10, 12, 40, 11, 14, 13, 7, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [10, 11, 9, 9, 16, 14, 10, 13, 4, 12, 10, 10, 8, 10, 13, 9, 10, 12, 13, 19, 72, 10, 14, 11, 12, 10, 8, 9, 15, 112, 8, 10, 13, 9, 13, 8, 13, 9, 10, 11, 9, 12, 13, 11, 10, 8, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [19, 5, 14, 16, 11, 181, 233, 7, 4, 5, 16, 5, 16, 5, 13, 5, 7, 8, 4, 9, 5, 4, 15, 6, 5, 50, 8, 14, 14, 5, 10, 20, 5, 16, 8, 20, 16, 8, 8, 9, 5, 5, 17, 7, 8, 15, 10, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [15, 10, 4, 10, 6, 18, 7, 4, 11, 7, 16, 7, 6, 9, 4, 10, 7, 13, 12, 10, 11, 4, 9, 15, 12, 24, 4, 4, 8, 14, 16, 7, 54, 5, 9, 14, 8, 15, 28, 7, 8, 8, 10, 6, 9, 12, 17, 9, 5, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 9, 11, 12, 7, 9, 17, 5, 11, 82, 4, 9, 7, 24, 13, 44, 9, 3, 5, 4, 6, 9, 10, 10, 6, 11, 9, 5, 7, 13, 54, 12, 9, 36, 10, 8, 12, 11, 9, 9, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [15, 9, 10, 9, 9, 10, 8, 5, 8, 8, 9, 6, 9, 8, 455, 8, 9, 7, 12, 9, 10, 8, 13, 9, 9, 11, 7, 8, 9, 9, 8, 9, 33, 9, 9, 9, 23, 6, 12, 7, 11, 12, 7, 9, 7, 9, 9, 10, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [7, 7, 2, 8, 4, 5, 4, 6, 6, 6, 4, 8, 4, 7, 5, 9, 245, 8, 4, 7, 8, 6, 7, 7, 9, 20, 4, 7, 7, 4, 9, 8, 4, 7, 6, 2, 7, 8, 6, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [15, 5, 9, 9, 9, 10, 10, 8, 8, 10, 8, 11, 8, 9, 11, 4, 9, 8, 10, 9, 7, 10, 8, 11, 10, 9, 11, 11, 10, 11, 9, 8, 8, 11, 23, 11, 7, 11, 10, 16, 8, 11, 10, 11, 7, 11, 9, 11, 14, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [16, 9, 4, 11, 6, 4, 7, 9, 4, 14, 12, 4, 9, 11, 10, 347, 10, 4, 10, 12, 4, 5, 13, 32, 5, 7, 6, 3, 12, 12, 8, 6, 7, 7, 9, 123, 6, 4, 8, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 5, 7, 9, 7, 8, 11, 9, 7, 6, 8, 8, 3, 13, 10, 5, 7, 9, 8, 16, 6, 6, 4, 6, 6, 8, 10, 6, 4, 4, 5, 8, 6, 6, 8, 9, 8, 8, 9, 7, 8, 102, 10, 7, 81, 6, 10, 7, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [12, 7, 4, 7, 5, 11, 4, 8, 6, 301, 20, 13, 9, 4, 8, 4, 5, 5, 5, 9, 6, 6, 5, 8, 10, 8, 5, 4, 5, 11, 7, 6, 4, 4, 8, 9, 7, 23, 4, 16, 10, 4, 25]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [13, 6, 4, 5, 5, 6, 4, 6, 6, 5, 4, 6, 5, 267, 4, 5, 5, 4, 4, 7, 4, 4, 6, 16, 6, 6, 6, 6, 6, 7, 4, 7, 5, 6, 5, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 4, 12, 5, 3, 4, 10, 192, 7, 9, 8, 7, 10, 80, 4, 8, 9, 59, 2, 40, 6, 6, 9, 6, 10, 10, 16, 9, 17, 6, 16, 3, 3, 4, 24, 7, 5, 11, 8, 50, 8, 8, 8, 9, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [7, 5, 8, 4, 5, 4, 5, 13, 4, 4, 4, 8, 4, 451, 15, 6, 6, 4, 3, 6, 10, 5, 5, 10, 11, 4, 3, 226, 7, 7, 5, 8, 4, 220, 8, 6, 6, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[10, 8, 8, 7, 3, 6, 9, 10, 7, 10, 6, 8, 9, 5, 12, 7, 30, 6, 8, 6, 5, 7, 9, 6, 6, 31, 7, 8, 7, 7, 7, 7, 9, 8, 11, 3, 3, 9, 4, 12, 9, 9, 55, 9, 5, 11, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 5, 4, 6, 4, 5, 15, 9, 4, 6, 34, 4, 8, 10, 23, 8, 12, 10, 8, 5, 10, 5, 11, 6, 6, 6, 11, 11, 8, 55, 14, 4, 9, 6, 6, 13, 7, 6, 4, 9, 5, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 4, 10, 9, 9, 5, 10, 4, 9, 10, 9, 436, 4, 10, 7, 4, 59, 6, 4, 6, 9, 6, 8, 4, 11, 8, 7, 9, 16, 6, 9, 4, 9, 10, 5, 11, 9, 8, 4, 7, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [14, 4, 5, 7, 4, 8, 9, 342, 4, 4, 5, 5, 21, 4, 5, 5, 4, 4, 16, 3, 8, 9, 5, 8, 237, 348, 7, 15, 5, 8, 4, 5, 30, 8, 5, 19, 8, 7, 5, 16, 4, 38, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [12, 15, 5, 9, 6, 6, 17, 16, 8, 13, 5, 8, 7, 8, 11, 7, 8, 51, 7, 6, 8, 8, 8, 10, 8, 5, 8, 7, 8, 7, 49, 17, 5, 20, 7, 10, 14, 16, 6, 7, 15, 6, 9, 17, 8, 8, 8, 4, 16]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 11, 8, 10, 6, 4, 9, 8, 6, 7, 6, 8, 8, 9, 9, 9, 10, 9, 8, 6, 7, 7, 7, 8, 11, 7, 9, 21, 6, 8, 3, 12, 12, 10, 8, 10, 9, 10, 11, 4, 8, 6, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 7, 9, 5, 9, 4, 9, 8, 10, 9, 8, 9, 11, 7, 7, 9, 5, 9, 7, 7, 9, 6, 9, 7, 7, 11, 9, 7, 159, 11, 10, 9, 14, 9, 9, 14, 134, 12, 10, 8, 9, 8, 6, 9, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 7, 10, 7, 7, 3, 4, 7, 11, 7, 11, 8, 6, 2, 9, 8, 11, 7, 7, 15, 9, 6, 8, 9, 8, 6, 7, 11, 7, 3, 7, 7, 7, 7, 669, 8, 6, 7, 8, 14, 4, 51, 7, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 5, 10, 12, 82, 10, 7, 8, 10, 4, 8, 10, 8, 6, 4, 8, 9, 10, 8, 10, 11, 27, 6, 10, 4, 8, 12, 460, 10, 8, 11, 11, 8, 8, 5, 12, 9, 9, 14, 9, 4, 10, 9, 7, 47, 17, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [10, 10, 5, 11, 6, 7, 6, 4, 5, 8, 4, 4, 7, 5, 7, 5, 7, 6, 7, 5, 4, 6, 4, 8, 4, 5, 3, 5, 90, 8, 5, 7, 11, 11, 10, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [5, 12, 4, 6, 4, 11, 4, 3, 5, 7, 4, 4, 4, 10, 4, 9, 7, 11, 9, 12, 10, 10, 8, 7, 10, 10, 9, 9, 7, 11, 5, 3, 9, 9, 10, 46, 27, 7, 11, 10, 4, 9, 7, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [19, 10, 10, 17, 12, 10, 11, 12, 13, 12, 9, 14, 11, 6, 11, 5, 26, 10, 11, 8, 6, 10, 10, 13, 13, 10, 12, 8, 6, 8, 12, 8, 8, 5, 12, 10, 11, 17, 8, 13, 11, 9, 12, 8, 9, 7, 9, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 9, 7, 14, 6, 13, 7, 32, 4, 13, 10, 9, 10, 8, 9, 7, 6, 5, 14, 8, 11, 13, 5, 20, 9, 6, 15, 12, 12, 9, 7, 7, 8, 10, 10, 7, 4, 9, 5, 7, 11, 6, 7, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 5, 7, 5, 5, 7, 7, 7, 4, 8, 8, 8, 66, 4, 4, 8, 8, 8, 5, 71, 7, 8, 7, 6, 7, 7, 7, 6, 5, 4, 5, 8, 5, 6, 6, 9, 5, 5, 7, 48, 5, 8, 5, 6, 7, 7, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [16, 8, 9, 9, 10, 13, 8, 16, 3, 19, 12, 14, 11, 43, 6, 12, 9, 12, 14, 7, 12, 7, 9, 183, 14, 6, 4, 5, 9, 7, 6, 6, 6, 15, 10, 8, 6, 11, 7, 7, 12, 16, 7, 10, 8, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [11, 7, 8, 5, 6, 7, 7, 5, 11, 6, 7, 11, 7, 9, 182, 275, 5, 13, 9, 11, 17, 3, 7, 6, 6, 113, 10, 7, 6, 18, 4, 5, 6, 7, 9, 5, 15, 5, 8, 9, 6, 5, 7, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 6, 4, 5, 4, 9, 4, 4, 5, 9, 6, 6, 6, 11, 5, 7, 4, 8, 6, 9, 7, 4, 5, 4, 11, 5, 6, 3, 4, 5, 8, 11, 12, 8, 7, 10, 92, 13, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [10, 12, 4, 4, 26, 10, 10, 186, 5, 4, 9, 133, 18, 10, 5, 12, 6, 6, 75, 9, 4, 9, 4, 9, 8, 7, 7, 12, 10, 4, 8, 10, 8, 13, 11, 8, 13, 124, 10, 12, 7, 4, 9, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [8, 10, 10, 6, 5, 7, 6, 10, 12, 10, 10, 10, 59, 9, 8, 12, 12, 9, 8, 17, 6, 10, 10, 8, 3, 13, 12, 10, 10, 10, 6, 6, 7, 8, 11, 11, 37, 8, 8, 10, 4, 6, 8, 10, 6, 7, 9, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [17, 8, 3, 8, 11, 16, 10, 13, 2, 6, 11, 7, 9, 9, 15, 11, 8, 17, 11, 15, 12, 8, 8, 9, 7, 12, 15, 6, 365, 12, 7, 9, 12, 590, 302, 6, 8, 11, 6, 8, 10, 15, 10, 11, 10, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [10, 8, 15, 18, 5, 16, 7, 15, 8, 8, 21, 21, 10, 9, 13, 6, 16, 16, 13, 11, 15, 18, 15, 14, 29, 316, 15, 15, 11, 15, 18, 12, 15, 16, 14, 18, 149, 15, 9, 19, 9, 16, 9, 7, 6, 15, 17, 20, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 16, 21, 16, 15, 18, 16, 153, 8, 16, 17, 6, 13, 308, 15, 15, 15, 16, 9, 17, 7, 7, 15, 14, 18, 16, 17, 9, 15, 18, 35, 9, 16, 8, 6, 34, 17, 15, 7, 10, 6, 16, 16, 13, 7, 6, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [21, 8, 8, 6, 10, 6, 17, 17, 9, 9, 8, 4, 9, 9, 38, 521, 10, 107, 19, 4, 19, 17, 10, 8, 7, 9, 12, 6, 10, 14, 11, 6, 9, 9, 10, 8, 5, 55, 9, 8, 17, 7, 10, 15, 10, 11, 11, 9, 8, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [7, 4, 11, 6, 17, 9, 8, 16, 16, 15, 16, 13, 19, 4, 10, 27, 19, 4, 4, 9, 6, 17, 363, 16, 4, 6, 12, 13, 2, 22, 19, 14, 19, 16, 15, 15, 20, 18, 15, 18, 9, 73, 14, 9, 15, 18, 116]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 9, 7, 10, 9, 52, 4, 14, 7, 75, 8, 13, 18, 7, 10, 9, 9, 11, 4, 14, 9, 9, 12, 7, 275, 9, 10, 7, 7, 9, 7, 19, 18, 9, 10, 10, 8, 11, 59, 3, 13, 219]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 8, 7, 8, 8, 6, 10, 8, 11, 7, 9, 11, 6, 11, 10, 7, 7, 9, 9, 8, 10, 10, 7, 139, 9, 9, 6, 6, 7, 9, 8, 9, 7, 4, 9, 9, 4, 9, 7, 148, 10, 10, 9, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 17, 15, 18, 8, 17, 7, 6, 9, 15, 13, 26, 6, 222, 16, 11, 131, 9, 7, 8, 11, 17, 7, 8, 17, 10, 51, 16, 19, 8, 10, 10, 15, 16, 7, 20, 18, 188, 18, 7, 14, 7, 8, 16, 9, 15, 10, 11, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 7, 4, 10, 9, 5, 9, 11, 13, 8, 10, 9, 9, 5, 8, 10, 12, 10, 9, 13, 9, 4, 15, 5, 4, 4, 7, 13, 7, 19, 8, 9, 24, 8, 10, 4, 15, 8, 13, 9, 10, 15, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [8, 8, 12, 7, 154, 17, 8, 8, 16, 9, 15, 17, 8, 17, 7, 11, 8, 16, 17, 13, 9, 7, 8, 8, 12, 8, 9, 6, 8, 8, 8, 8, 7, 7, 19, 17, 17, 15, 8, 8, 17, 16, 10, 16, 9, 8, 39, 11, 7, 16, 4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [14, 8, 8, 17, 72, 10, 16, 9, 7, 17, 10, 4, 10, 7, 8, 7, 9, 9, 18, 11, 7, 16, 9, 17, 10, 13, 20, 16, 161, 11, 11, 15, 10, 17, 21, 9, 8, 30, 4, 18, 16, 11, 16, 16, 9, 17, 28, 7, 17, 26]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [24, 6, 10, 5, 9, 8, 7, 11, 8, 9, 6, 8, 7, 6, 5, 5, 10, 5, 8, 8, 10, 7, 9, 11, 12, 10, 8, 10, 8, 9, 8, 9, 7, 6, 8, 9, 9, 9, 7, 8, 9, 9, 9, 8, 8, 7, 10, 8, 10, 13, 15]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [17, 11, 6, 6, 11, 7, 11, 9, 3, 8, 8, 7, 7, 7, 356, 16, 18, 8, 6, 7, 12, 15, 7, 16, 19, 16, 316, 5, 15, 12, 16, 17, 26, 7, 16, 8, 5, 8, 6, 17, 4, 7, 16, 9, 14, 17, 21]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [12, 6, 10, 3, 10, 20, 9, 12, 12, 7, 7, 10, 4, 7, 10, 11, 3, 4, 8, 7, 13, 7, 98, 7, 10, 15, 7, 11, 110, 6, 9, 12, 6, 8, 11, 7, 14, 11, 9, 9, 9, 23]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 3, 5, 7, 6, 2, 3, 3, 7, 12, 6, 6, 8, 5, 7, 9, 3, 5, 105, 3, 487, 98, 5, 6, 7, 9, 4, 5, 34, 7, 2, 27]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 7, 16, 18, 14, 17, 8, 9, 148, 14, 16, 13, 16, 15, 5, 10, 11, 10, 10, 8, 250, 6, 16, 6, 14, 16, 500, 14, 27, 10, 105, 9, 14, 16, 7, 34, 6, 16, 22, 11, 9, 9, 168, 7, 15, 8, 14, 6, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 4, 8, 8, 7, 7, 6, 13, 10, 4, 29, 8, 8, 5, 7, 8, 7, 7, 20, 9, 3, 8, 8, 26, 3, 8, 8, 8, 7, 10, 7, 8, 8, 5, 7, 9, 8, 7, 7, 8, 7, 57, 8, 11]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 5, 3, 8, 2, 8, 5, 3, 8, 5, 4, 9, 8, 9, 10, 4, 4, 10, 9, 3, 9, 2, 11, 8, 2, 9, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [7, 6, 7, 7, 8, 6, 6, 7, 7, 8, 6, 23, 7, 7, 7, 7, 7, 8, 7, 74, 8, 6, 7, 40, 8, 7, 8, 6, 8, 6, 7, 8, 6, 7, 8, 7, 7, 18, 7, 3, 9, 8, 7, 8, 7, 48, 4, 5, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [13, 13, 3, 13, 15, 8, 17, 6, 16, 7, 16, 6, 14, 8, 10, 17, 8, 14, 224, 14, 15, 7, 7, 13, 4, 12, 17, 14, 15, 7, 191, 15, 8, 14, 16, 16, 16, 6, 7, 7, 13, 14, 14, 18, 16, 8, 16, 7, 24, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 6, 8, 7, 2, 8, 8, 7, 7, 6, 7, 7, 419, 8, 6, 7, 6, 6, 8, 8, 8, 6, 8, 7, 8, 9, 6, 7, 8, 7, 9, 6, 9, 10, 7, 24, 6, 7, 7, 15, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [13, 15, 15, 16, 15, 8, 15, 16, 289, 18, 7, 8, 17, 9, 16, 21, 104, 7, 17, 11, 18, 18, 14, 18, 9, 16, 19, 6, 16, 7, 17, 17, 15, 16, 15, 15, 8, 10, 14, 18, 7, 9, 6, 13, 17, 9, 2, 13, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 6, 10, 4, 10, 9, 6, 14, 13, 11, 8, 8, 9, 11, 11, 5, 7, 9, 7, 7, 8, 13, 7, 8, 7, 8, 14, 14, 6, 7, 22, 12, 7, 7, 6, 12, 7, 6, 13, 6, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [4, 15, 18, 16, 20, 14, 7, 17, 15, 209, 6, 17, 15, 16, 15, 207, 16, 16, 15, 7, 15, 10, 9, 7, 15, 25, 8, 19, 14, 14, 17, 17, 6, 15, 15, 7, 18, 14, 16, 11, 16, 16, 15, 7, 17, 16, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 6, 11, 7, 3, 11, 7, 372, 8, 7, 8, 4, 179, 10, 11, 9, 12, 11, 12, 10, 9, 7, 13, 9, 6, 13, 6, 8, 13, 8, 9, 9, 8, 209, 8, 14, 13, 13, 8, 7, 7, 14, 13, 7, 13, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [15, 13, 7, 7, 17, 7, 6, 7, 8, 16, 18, 12, 350, 14, 8, 13, 14, 13, 7, 8, 13, 16, 8, 18, 17, 15, 7, 16, 8, 15, 12, 13, 14, 7, 18, 7, 16, 11, 12, 6, 14, 313]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [13, 6, 9, 25, 9, 4, 5, 5, 6, 7, 33, 8, 8, 4, 3, 3, 8, 4, 4, 8, 5, 8, 13, 6, 5, 7, 9, 7, 6, 5, 7, 5, 6, 7, 9, 6, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [9, 10, 10, 8, 9, 9, 5, 7, 8, 10, 13, 7, 116, 5, 17, 7, 192, 5, 10, 31, 10, 10, 5, 9, 7, 4, 12, 7, 6, 6, 9, 9, 7, 108, 9, 5, 14, 7, 5, 11, 11, 5, 8, 12, 7, 5, 6, 6, 7, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 12, 10, 261, 11, 9, 9, 10, 12, 8, 5, 10, 7, 9, 14, 10, 9, 29, 12, 7, 12, 7, 10, 4, 13, 12, 8, 57, 11, 10, 15, 12, 13, 5, 9, 12, 11, 11, 11, 10, 10, 14, 8, 10, 13, 40, 16, 12, 130]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [15, 14, 10, 8, 12, 12, 4, 12, 4, 9, 5, 9, 12, 13, 11, 9, 14, 15, 14, 8, 11, 11, 11, 12, 8, 5, 9, 11, 5, 17, 10, 11, 13, 11, 13, 10, 3, 12, 5, 15, 9, 5, 13, 9, 5, 17, 10, 253]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [15, 10, 13, 7, 12, 13, 11, 15, 11, 11, 11, 9, 12, 12, 11, 9, 50, 11, 15, 12, 10, 10, 13, 12, 127, 11, 11, 11, 11, 8, 8, 9, 11, 4, 12, 10, 11, 9, 11, 8, 16, 10, 11, 10, 12, 12, 52, 11, 11, 54, 12, 11, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [35, 11, 12, 10, 14, 9, 11, 10, 9, 11, 12, 12, 13, 10, 7, 8, 9, 9, 13, 11, 10, 11, 11, 12, 339, 9, 37, 76, 11, 8, 13, 10, 10, 11, 11, 11, 4, 9, 38, 8, 13, 12, 9, 20, 11, 10, 10, 11, 10, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [3, 12, 9, 13, 11, 7, 8, 10, 11, 10, 13, 11, 11, 13, 22, 4, 11, 9, 10, 12, 13, 10, 12, 11, 9, 10, 9, 12, 11, 8, 15, 8, 15, 10, 12, 12, 14, 18, 11, 9, 9, 20, 9, 12, 10, 16, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [11, 10, 13, 12, 16, 9, 12, 16, 9, 13, 11, 10, 6, 11, 11, 17, 566, 10, 7, 11, 16, 8, 12, 10, 4, 6, 13, 6, 11, 8, 10, 7, 26, 8, 19, 9, 11, 9, 11, 13, 11, 6, 6, 10, 9, 7, 13, 10, 12, 6, 19, 6, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [14, 10, 10, 11, 11, 6, 12, 14, 9, 7, 6, 14, 10, 12, 7, 10, 6, 14, 11, 6, 11, 7, 9, 11, 8, 10, 9, 7, 11, 8, 11, 442, 11, 6, 11, 13, 8, 9, 11, 6, 6, 10, 10, 9, 10, 11, 13, 9, 5]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [13, 9, 10, 11, 13, 8, 9, 13, 9, 11, 9, 12, 10, 8, 7, 14, 13, 10, 12, 10, 17, 9, 16, 9, 13, 12, 8, 20, 13, 11, 17, 12, 15, 134, 10, 9, 13, 12, 90, 11, 11, 10, 12, 13, 12, 10, 24, 18, 10, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 18, 9, 5, 4, 8, 13, 24, 12, 7, 16, 12, 14, 7, 9, 12, 12, 11, 11, 9, 10, 10, 8, 14, 6, 11, 283, 9, 4, 9, 9, 8, 11, 11, 14, 3, 12, 24, 9, 9, 12, 4, 12, 11, 11, 7, 10, 4, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 10, 3, 12, 11, 13, 4, 10, 9, 14, 21, 10, 10, 10, 5, 13, 10, 7, 23, 11, 11, 10, 10, 12, 15, 8, 10, 13, 4, 8, 6, 10, 6, 7, 8, 10, 9, 10, 6, 17, 13, 7, 10, 10, 3, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 18, 11, 4, 11, 10, 8, 9, 5, 11, 6, 71, 12, 4, 9, 8, 6, 17, 4, 6, 12, 8, 4, 10, 7, 17, 8, 7, 21, 12, 5, 6, 9, 10, 7, 15, 10, 12, 15, 4, 11, 14, 10, 12, 15, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 11, 4, 9, 8, 12, 4, 17, 13, 5, 7, 12, 10, 11, 59, 7, 11, 12, 11, 9, 12, 14, 13, 10, 8, 12, 13, 12, 11, 9, 14, 10, 8, 3, 8, 10, 115, 11, 14, 12, 73, 20, 11, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [13, 4, 9, 8, 10, 10, 8, 9, 6, 8, 13, 4, 6, 8, 11, 11, 8, 25, 11, 15, 4, 6, 12, 10, 10, 7, 12, 4, 17, 10, 9, 14, 11, 101, 8, 8, 11, 11, 12, 11, 15, 11, 20, 11, 10, 15, 8, 15, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [25, 11, 11, 7, 10, 10, 12, 9, 12, 11, 10, 11, 10, 19, 15, 15, 4, 10, 8, 11, 12, 9, 11, 11, 16, 12, 8, 8, 8, 11, 16, 7, 10, 4, 11, 8, 12, 17, 21, 5, 10, 8, 10, 9, 13, 10, 9, 8, 11, 6, 13, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [12, 9, 10, 15, 10, 18, 14, 8, 13, 9, 10, 266, 9, 11, 14, 15, 7, 13, 10, 10, 12, 11, 9, 11, 10, 11, 8, 14, 9, 8, 9, 9, 12, 5, 12, 13, 14, 10, 9, 7, 5, 8, 9, 12, 9, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [17, 10, 12, 10, 19, 10, 11, 11, 20, 9, 4, 10, 10, 6, 8, 15, 20, 12, 8, 11, 18, 12, 9, 12, 15, 8, 21, 12, 25, 8, 9, 12, 12, 9, 5, 16, 22, 10, 27, 14, 8, 11, 10, 402, 69, 8, 12, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [10, 13, 11, 19, 11, 10, 13, 8, 11, 13, 14, 10, 9, 86, 9, 14, 13, 14, 12, 23, 12, 10, 8, 19, 9, 10, 15, 11, 10, 245, 11, 10, 12, 16, 10, 10, 10, 13, 10, 7, 15]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 5, 19, 4, 6, 7, 11, 4, 5, 4, 15, 6, 7, 6, 3, 8, 6, 6, 9, 232, 7, 11, 13, 27, 4, 9, 8, 4, 7, 9, 5, 6, 3, 7, 7, 7, 9, 10, 6, 17, 8, 7, 9, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 3, 8, 8, 9, 7, 9, 5, 8, 3, 5, 3, 6, 5, 9, 11, 4, 11, 5, 8, 6, 12, 6, 4, 10, 5, 11, 8, 286, 9, 7, 11, 8, 8, 10, 7, 7, 10, 12, 7, 30, 7, 9]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [12, 5, 12, 4, 6, 7, 3, 5, 5, 8, 7, 6, 10, 6, 12, 3, 50, 8, 18, 6, 3, 10, 4, 29, 3, 189, 6, 4, 5, 13, 12, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [12, 7, 6, 17, 10, 17, 7, 6, 5, 8, 12, 7, 8, 6, 8, 459, 9, 3, 11, 6, 7, 35, 172, 83, 5, 6, 17, 6, 11, 7, 6, 6, 201, 8, 5, 7, 15, 10, 4, 6, 8, 225, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 12, 7, 6, 6, 10, 4, 4, 6, 6, 365, 6, 7, 8, 4, 12, 8, 574, 5, 7, 6, 8, 11, 8, 8, 13, 7, 6, 8, 7, 6, 5, 8, 12, 13, 10, 8, 9, 6, 7, 6, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 7, 10, 11, 10, 7, 8, 9, 8, 8, 8, 5, 11, 12, 8, 13, 9, 5, 7, 11, 6, 11, 21, 6, 7, 13, 7, 6, 11, 8, 10, 8, 10, 10, 7, 15, 11, 8, 4, 7, 6, 12, 10, 11, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 4, 8, 9, 12, 6, 5, 14, 6, 5, 8, 4, 8, 6, 9, 10, 4, 5, 7, 6, 90, 19, 9, 5, 9, 9, 8, 29, 6, 4, 9, 3, 5, 4, 8, 12, 10, 8, 4, 8, 6, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 7, 3, 4, 4, 11, 5, 6, 4, 5, 6, 86, 3, 6, 6, 6, 9, 6, 8, 5, 4, 8, 5, 13, 4, 8, 9, 7, 5, 14, 7, 8, 10, 7, 8, 7, 5, 10, 19, 4, 14, 7, 4, 15, 9]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 12, 6, 6, 8, 14, 6, 6, 6, 6, 11, 8, 6, 4, 6, 194, 5, 6, 15, 6, 7, 6, 6, 5, 4, 6, 8, 218, 4, 342, 8, 7, 9, 8, 6, 9, 9, 6, 10, 6, 5, 3, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 11, 10, 9, 10, 8, 10, 10, 9, 8, 11, 4, 24, 8, 8, 10, 8, 6, 8, 6, 6, 6, 11, 6, 106, 8, 445, 7, 17, 9, 492, 10, 8, 7, 11, 10, 10, 30, 6, 8, 9, 10, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 9, 6, 11, 10, 10, 7, 6, 10, 6, 16, 7, 4, 52, 10, 6, 10, 158, 8, 10, 11, 11, 8, 7, 6, 9, 8, 7, 9, 11, 7, 9, 17, 140, 9, 10, 8, 5, 28, 9, 9, 11, 15, 9, 9]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 12, 9, 9, 9, 10, 10, 9, 7, 9, 11, 7, 10, 4, 10, 414, 10, 10, 123, 9, 12, 9, 10, 11, 10, 6, 11, 6, 12, 8, 10, 56, 51, 7, 10, 8, 8, 8, 10, 6, 9, 10, 10, 11, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 10, 8, 8, 12, 10, 8, 13, 9, 8, 238, 9, 10, 9, 7, 10, 9, 11, 9, 6, 11, 12, 11, 6, 11, 78, 10, 10, 15, 9, 10, 12, 10, 9, 10, 6, 9, 9, 10, 6, 9, 10, 21, 11, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [25, 10, 8, 10, 8, 7, 6, 10, 8, 12, 9, 5, 10, 8, 4, 6, 10, 6, 10, 9, 6, 64, 8, 7, 8, 9, 9, 11, 6, 6, 23, 6, 10, 178, 8, 6, 8, 8, 127, 8, 6, 10, 6, 7, 6, 8, 11, 8, 10, 8, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [44, 10, 9, 8, 8, 6, 8, 6, 9, 8, 12, 6, 9, 5, 8, 5, 6, 229, 8, 11, 7, 9, 7, 8, 7, 7, 9, 8, 7, 11, 14, 10, 6, 11, 9, 9, 6, 16, 20, 6, 13, 6, 6, 8, 4, 27, 8, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [24, 10, 7, 10, 5, 6, 4, 10, 8, 12, 6, 8, 8, 8, 7, 6, 7, 8, 12, 6, 9, 8, 8, 10, 10, 6, 9, 6, 8, 8, 6, 11, 6, 8, 4, 10, 8, 8, 538, 10, 12, 10, 38, 8, 7, 5, 9, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [19, 12, 12, 4, 24, 17, 8, 6, 16, 10, 16, 19, 12, 8, 10, 9, 12, 11, 3, 11, 5, 6, 12, 12, 124, 18, 13, 44, 20, 11, 17, 9, 8, 8, 19, 9, 11, 11, 11, 13, 14, 17, 11, 18, 9, 11, 9, 10, 84, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [18, 11, 18, 10, 10, 9, 12, 12, 14, 10, 4, 6, 10, 11, 28, 9, 16, 9, 21, 11, 11, 14, 7, 8, 11, 10, 13, 12, 55, 14, 4, 12, 10, 12, 9, 11, 15, 9, 11, 13, 19, 12, 165, 501]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 19, 10, 6, 11, 12, 9, 22, 9, 12, 17, 8, 8, 11, 19, 12, 7, 17, 8, 11, 24, 12, 10, 8, 6, 9, 10, 7, 10, 8, 9, 9, 15, 7, 13, 10, 7, 8, 5, 9, 8, 10, 15, 15, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [6, 6, 16, 9, 7, 9, 8, 20, 8, 13, 11, 18, 8, 6, 4, 14, 8, 9, 10, 9, 9, 17, 8, 11, 18, 9, 14, 7, 10, 14, 12, 101, 23, 14, 14, 15, 12, 21, 16, 12, 7, 131, 6, 8, 8, 9, 16, 19, 11, 515, 14, 23, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [24, 11, 12, 8, 12, 9, 17, 15, 15, 15, 12, 11, 15, 17, 9, 8, 12, 14, 9, 9, 10, 18, 17, 9, 15, 11, 11, 10, 13, 12, 13, 12, 14, 12, 12, 11, 2, 11, 11, 15, 12, 15, 17, 17, 14, 11, 14, 16, 12, 13, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [44, 12, 21, 11, 16, 14, 17, 12, 16, 10, 10, 9, 21, 16, 10, 14, 11, 12, 3, 15, 3, 15, 4, 15, 10, 13, 8, 11, 13, 11, 17, 13, 11, 10, 18, 25, 12, 13, 12, 20, 11, 12, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [43, 6, 7, 11, 8, 9, 22, 12, 14, 10, 9, 22, 13, 7, 9, 16, 11, 11, 23, 17, 8, 11, 11, 11, 8, 14, 6, 18, 9, 10, 10, 10, 9, 12, 10, 19, 10, 5, 11, 8, 10, 9, 8, 9, 15, 7, 12, 21, 13, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [11, 12, 13, 7, 12, 12, 13, 124, 9, 14, 12, 15, 14, 17, 9, 11, 10, 11, 14, 9, 13, 10, 10, 11, 8, 9, 10, 17, 22, 6, 20, 11, 152, 13, 11, 14, 14, 15, 8, 13, 18, 14, 10, 18, 11, 13, 13, 12, 9]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [17, 10, 10, 11, 12, 7, 13, 12, 4, 8, 7, 14, 10, 11, 5, 13, 7, 7, 4, 12, 12, 9, 81, 10, 9, 12, 10, 44, 11, 12, 12, 11, 10, 13, 15, 12, 10, 9, 13, 11, 18, 9, 50, 9, 8, 12, 11, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [10, 11, 15, 4, 9, 7, 10, 12, 13, 4, 8, 6, 8, 13, 23, 170, 13, 13, 6, 15, 11, 15, 10, 10, 15, 11, 10, 9, 9, 7, 11, 12, 10, 12, 10, 12, 12, 8, 9, 172, 7, 10, 12, 15, 3, 4, 10, 11, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [7, 10, 13, 12, 203, 13, 11, 29, 15, 10, 10, 10, 5, 10, 13, 13, 18, 10, 12, 17, 12, 138, 8, 14, 11, 10, 10, 12, 9, 8, 15, 14, 7, 9, 9, 15, 9, 13, 9, 11, 12, 8, 8, 10, 12, 14, 16, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [11, 10, 13, 12, 16, 16, 8, 10, 11, 12, 12, 14, 14, 10, 12, 13, 41, 10, 14, 19, 9, 11, 16, 12, 10, 8, 9, 24, 12, 11, 12, 8, 10, 11, 154, 14, 12, 11, 8, 13, 12, 11, 11, 12, 8, 11, 12, 11, 13, 6]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [11, 7, 16, 10, 10, 9, 8, 7, 9, 16, 9, 8, 14, 7, 9, 8, 12, 4, 11, 10, 9, 12, 10, 39, 12, 8, 13, 12, 8, 6, 14, 7, 10, 230, 9, 11, 9, 9, 8, 8, 16, 9, 10, 7, 7, 4, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [15, 10, 10, 11, 11, 14, 10, 6, 11, 11, 12, 9, 6, 10, 13, 12, 11, 7, 8, 10, 11, 148, 6, 9, 9, 9, 7, 295, 7, 6, 11, 121, 9, 10, 11, 5, 11, 14, 7, 5, 9, 8, 8, 10, 10, 17, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [5, 5, 10, 12, 7, 7, 11, 14, 5, 11, 13, 7, 10, 4, 12, 8, 14, 5, 11, 101, 4, 12, 279, 5, 13, 6, 10, 12, 16, 11, 8, 8, 11, 4, 404, 9, 10, 14, 8, 11, 5, 11, 16, 7, 12, 464, 7, 7, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [4, 12, 16, 11, 14, 4, 6, 9, 7, 8, 8, 9, 14, 7, 497, 24, 5, 11, 4, 11, 6, 126, 12, 19, 4, 10, 12, 10, 6, 18, 12, 14, 4, 6, 66, 7, 14, 4, 13, 12, 4, 11, 17, 22, 5, 11, 7, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [4, 14, 17, 12, 17, 6, 7, 8, 3, 18, 10, 13, 7, 8, 12, 8, 13, 4, 7, 15, 11, 9, 13, 9, 11, 7, 12, 12, 33, 11, 31, 10, 10, 8, 18, 12, 13, 68, 12, 61, 180, 8, 11, 13, 7, 8, 13, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [12, 11, 9, 11, 12, 11, 4, 13, 13, 10, 8, 16, 11, 8, 6, 3, 12, 6, 9, 6, 13, 12, 11, 11, 17, 11, 14, 17, 12, 12, 11, 13, 13, 11, 12, 8, 19, 4, 10, 13, 27, 7, 8, 14, 4, 13, 13, 13, 16, 17, 6, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [14, 13, 9, 12, 9, 17, 6, 7, 11, 12, 23, 11, 9, 11, 7, 26, 7, 12, 13, 10, 14, 15, 14, 8, 9, 3, 7, 11, 4, 9, 89, 8, 19, 8, 17, 11, 10, 12, 13, 6, 6, 6, 24, 10, 83, 7, 9, 17, 14, 9, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [10, 9, 5, 12, 8, 11, 8, 11, 7, 20, 5, 7, 7, 9, 6, 10, 6, 4, 21, 37, 9, 10, 14, 7, 11, 9, 7, 9, 11, 10, 11, 6, 61, 12, 10, 6, 7, 8, 16, 6, 4, 5, 34, 9, 13, 8, 14, 14, 8, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [14, 13, 10, 6, 7, 13, 49, 6, 16, 12, 8, 11, 7, 34, 18, 11, 13, 9, 11, 11, 11, 11, 14, 26, 14, 13, 8, 8, 21, 12, 9, 12, 12, 7, 11, 13, 8, 8, 11, 15, 10, 12, 9, 14, 11, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [19, 9, 7, 6, 12, 4, 7, 5, 8, 6, 6, 11, 9, 17, 14, 4, 5, 9, 169, 12, 5, 12, 5, 8, 7, 9, 11, 6, 8, 8, 9, 96, 13, 108, 10, 7, 15, 9, 6, 4, 14, 8, 8, 10, 5, 6, 10, 7, 15, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [11, 12, 10, 7, 5, 23, 8, 10, 10, 11, 10, 10, 9, 16, 6, 13, 14, 8, 12, 13, 16, 12, 14, 13, 10, 15, 8, 15, 10, 16, 10, 9, 15, 14, 23, 12, 10, 10, 12, 13, 10, 3, 11, 12, 9, 8, 11, 11, 31, 10, 11, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 9, 11, 6, 12, 14, 10, 15, 22, 10, 17, 186, 12, 186, 10, 8, 13, 11, 12, 8, 9, 9, 14, 12, 12, 13, 9, 14, 9, 6, 8, 12, 12, 8, 8, 8, 12, 10, 3, 8, 37, 17, 11, 8, 12, 12, 10, 11, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [37, 10, 6, 11, 14, 8, 11, 6, 16, 12, 11, 9, 11, 82, 8, 10, 14, 11, 10, 12, 11, 12, 10, 9, 12, 10, 10, 9, 8, 5, 9, 9, 15, 10, 14, 12, 8, 47, 15, 9, 173, 15, 9, 9, 11, 12, 6, 11, 5, 10, 74]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [12, 10, 11, 8, 17, 8, 17, 10, 13, 12, 9, 9, 10, 12, 6, 189, 8, 11, 269, 37, 14, 12, 12, 25, 8, 9, 8, 8, 12, 11, 5, 11, 7, 13, 11, 5, 9, 23, 12, 16, 10, 11, 19, 28, 10, 15, 11, 12, 12, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [23, 10, 6, 12, 11, 15, 24, 10, 14, 14, 5, 10, 69, 7, 8, 170, 10, 10, 16, 14, 9, 15, 12, 12, 11, 10, 6, 9, 12, 6, 14, 12, 12, 4, 10, 9, 13, 10, 10, 12, 5, 14, 12, 15, 12, 13, 10, 9, 8, 8, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [10, 10, 6, 17, 9, 8, 7, 14, 13, 9, 10, 24, 11, 11, 6, 12, 7, 15, 18, 318, 8, 9, 10, 12, 12, 8, 88, 12, 12, 8, 13, 7, 11, 11, 14, 8, 17, 17, 10, 11, 27, 13, 216, 11, 12, 9, 11, 7, 11, 6]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [11, 6, 11, 10, 10, 10, 5, 5, 10, 12, 4, 5, 10, 5, 9, 6, 9, 8, 12, 10, 52, 7, 12, 11, 5, 9, 4, 10, 12, 14, 6, 10, 10, 9, 8, 9, 12, 10, 6, 14, 8, 12, 10, 9, 5, 10, 11, 8, 10, 25, 12, 35, 8, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [15, 12, 5, 9, 4, 10, 7, 12, 11, 16, 15, 9, 8, 12, 10, 439, 10, 11, 9, 8, 8, 7, 11, 8, 13, 5, 8, 8, 9, 8, 9, 8, 8, 6, 7, 11, 4, 10, 9, 12, 12, 5, 8, 10, 11, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [4, 10, 11, 9, 12, 12, 8, 11, 10, 5, 9, 11, 9, 282, 10, 11, 9, 12, 10, 11, 12, 9, 4, 22, 22, 4, 12, 4, 10, 9, 12, 8, 14, 29, 14, 8, 3, 11, 10, 8, 10, 12, 14, 11, 4, 12]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [13, 13, 10, 8, 16, 13, 5, 16, 6, 8, 8, 8, 4, 6, 13, 5, 29, 3, 14, 8, 6, 8, 8, 6, 6, 7, 6, 6, 4, 4, 9, 10, 8, 9, 14, 7, 4, 10, 8, 8, 12, 35, 8, 9, 8, 9, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [13, 13, 8, 7, 3, 8, 29, 4, 7, 15, 196, 256, 10, 8, 10, 9, 8, 11, 5, 11, 7, 4, 5, 11, 12, 6, 12, 8, 16, 9, 4, 7, 8, 9, 10, 12, 9, 7, 22, 14, 5, 9, 87, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [7, 10, 9, 6, 10, 17, 10, 4, 8, 4, 8, 7, 5, 7, 4, 5, 5, 4, 101, 8, 10, 12, 7, 6, 11, 6, 25, 8, 7, 7, 8, 5, 6, 6, 69, 3, 8, 3, 9, 8, 8, 5, 22, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [3, 8, 10, 7, 7, 10, 10, 5, 3, 9, 7, 10, 9, 14, 9, 12, 7, 5, 10, 3, 5, 10, 10, 9, 14, 7, 10, 5, 11, 7, 11, 9, 7, 9, 7, 20, 7, 8, 6, 16, 16, 14, 9, 10, 12, 10, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[3, 7, 9, 8, 12, 9, 11, 11, 10, 13, 14, 8, 11, 84, 11, 11, 9, 10, 10, 10, 11, 9, 12, 12, 11, 12, 13, 9, 10, 8, 10, 266, 12, 9, 14, 8, 392, 11, 12, 14, 10, 10, 12, 12, 8, 12, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [11, 7, 8, 11, 8, 10, 7, 9, 9, 12, 11, 13, 8, 10, 9, 10, 11, 12, 9, 12, 10, 10, 10, 8, 11, 10, 10, 11, 10, 9, 86, 12, 11, 12, 8, 20, 11, 11, 8, 10, 11, 9, 9, 10, 10]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [17, 12, 6, 8, 8, 16, 12, 12, 12, 9, 199, 9, 9, 11, 19, 13, 15, 13, 15, 12, 14, 5, 55, 13, 21, 17, 11, 15, 11, 10, 11, 9, 11, 11, 12, 6, 13, 11, 7, 11, 6, 14, 123, 19, 8, 8, 14, 9, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [6, 12, 9, 8, 10, 7, 7, 9, 8, 8, 12, 10, 9, 17, 13, 11, 9, 15, 13, 8, 464, 16, 17, 16, 5, 8, 11, 11, 10, 13, 9, 5, 11, 11, 22, 8, 11, 12, 13, 54, 5, 17, 10, 8, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [12, 11, 8, 12, 9, 16, 6, 8, 8, 12, 19, 14, 8, 10, 15, 7, 10, 7, 16, 12, 16, 14, 8, 11, 15, 7, 11, 9, 3, 12, 11, 52, 9, 14, 10, 10, 10, 13, 18, 9, 7, 14, 11, 8, 14, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [3, 11, 13, 14, 8, 13, 12, 10, 7, 11, 5, 12, 11, 17, 8, 10, 6, 7, 11, 9, 4, 9, 10, 13, 6, 8, 10, 11, 9, 10, 6, 10, 12, 8, 8, 15, 11, 8, 14, 9, 9, 8, 14, 12, 10, 11, 13, 8, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 9, 8, 9, 9, 7, 6, 13, 156, 6, 9, 5, 7, 6, 11, 8, 6, 4, 8, 7, 8, 8, 11, 11, 7, 8, 10, 146, 5, 10, 9, 6, 12, 9, 9, 10, 10, 11, 4, 8, 8, 10, 11, 10, 14, 10, 9, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [8, 8, 11, 6, 10, 7, 10, 9, 14, 10, 10, 10, 8, 9, 10, 4, 10, 7, 7, 8, 8, 7, 10, 13, 6, 9, 13, 14, 8, 10, 11, 10, 8, 8, 9, 10, 10, 13, 7, 11, 13, 9, 6, 12, 14, 10, 8, 6, 9, 10, 11, 6, 7, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [11, 10, 12, 8, 10, 6, 9, 12, 11, 10, 8, 8, 8, 8, 9, 8, 9, 6, 9, 8, 10, 7, 9, 11, 9, 11, 6, 10, 11, 79, 7, 11, 6, 8, 8, 6, 8, 9, 7, 12, 10, 34, 43, 7, 8, 10, 7, 6, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [13, 10, 10, 11, 11, 8, 8, 11, 4, 10, 10, 7, 10, 10, 10, 365, 11, 5, 11, 12, 10, 9, 18, 9, 12, 4, 7, 4, 13, 8, 4, 10, 6, 7, 25, 7, 5, 11, 7, 13, 10, 8, 7, 16, 136]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [15, 3, 6, 6, 6, 6, 7, 10, 9, 5, 6, 8, 7, 13, 11, 8, 6, 7, 8, 6, 9, 9, 6, 10, 12, 6, 6, 6, 7, 9, 8, 8, 9, 11, 12, 6, 6, 15, 10, 8, 11, 18, 15, 16, 106]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [17, 6, 10, 55, 8, 10, 6, 10, 6, 10, 8, 11, 11, 9, 8, 298, 10, 8, 6, 9, 9, 7, 6, 4, 6, 10, 13, 20, 9, 12, 20, 10, 10, 7, 9, 8, 10, 11, 6, 11, 11, 14, 11, 8, 11, 10, 6, 144, 12]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [11, 10, 10, 8, 14, 10, 11, 8, 42, 8, 10, 6, 10, 9, 8, 167, 8, 4, 6, 10, 9, 6, 13, 11, 8, 8, 10, 10, 11, 9, 7, 13, 140, 13, 8, 24, 9, 10, 12, 8, 14, 9, 8, 10, 9, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [13, 10, 7, 9, 8, 10, 10, 12, 8, 9, 8, 7, 9, 10, 6, 6, 10, 7, 9, 10, 39, 8, 11, 7, 13, 11, 8, 35, 11, 7, 9, 8, 8, 8, 9, 8, 203, 7, 47, 7, 6, 7, 9, 9, 18, 8, 8, 9, 9]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [9, 12, 10, 11, 11, 9, 14, 11, 10, 9, 6, 12, 11, 10, 12, 13, 7, 13, 12, 12, 7, 11, 11, 13, 10, 9, 284, 11, 10, 13, 11, 130, 13, 8, 13, 12, 274, 11, 12, 269, 11, 13, 7, 88, 11, 8, 11, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [6, 17, 16, 16, 17, 16, 16, 15, 17, 18, 3, 18, 5, 17, 15, 7, 18, 18, 16, 6, 19, 16, 21, 3, 7, 3, 13, 14, 18, 15, 13, 15, 14, 16, 14, 14, 6, 17, 17, 17, 11, 17, 16, 16, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [4, 13, 8, 10, 14, 17, 4, 10, 14, 8, 4, 10, 12, 5, 12, 15, 9, 14, 13, 12, 15, 4, 9, 8, 10, 7, 19, 10, 10, 15, 9, 15, 8, 11, 16, 10, 10, 5, 15, 7, 4, 10, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [11, 12, 11, 14, 10, 10, 10, 4, 11, 10, 7, 9, 8, 6, 12, 6, 6, 6, 9, 10, 10, 12, 11, 9, 10, 11, 13, 10, 11, 12, 9, 14, 13, 7, 11, 13, 10, 7, 7, 8, 9, 7, 7, 10, 10, 8, 13, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [5, 8, 18, 11, 9, 14, 10, 8, 9, 13, 11, 12, 15, 12, 15, 10, 11, 12, 16, 14, 12, 13, 8, 15, 7, 8, 14, 9, 10, 5, 19, 6, 16, 13, 6, 7, 9, 12, 5, 8, 15, 16, 7, 6, 61, 14, 8, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [7, 9, 14, 26, 6, 15, 14, 5, 13, 6, 18, 11, 14, 52, 19, 34, 16, 16, 15, 16, 13, 18, 15, 15, 14, 15, 15, 22, 18, 16, 7, 16, 7, 16, 16, 14, 8, 9, 17, 12, 10, 345, 17, 16, 10, 14, 9, 20, 17, 14, 332]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [10, 10, 8, 15, 11, 11, 12, 10, 10, 8, 12, 5, 10, 6, 7, 10, 10, 10, 7, 7, 5, 11, 10, 10, 9, 11, 10, 12, 11, 9, 8, 8, 8, 6, 21, 11, 10, 9, 13, 9, 15, 10, 7, 8, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [6, 12, 8, 22, 9, 10, 7, 6, 10, 9, 12, 9, 15, 8, 72, 8, 9, 6, 14, 168, 10, 9, 6, 11, 17, 5, 9, 9, 12, 10, 8, 6, 10, 9, 13, 11, 11, 3, 13, 10, 8, 12, 9, 9, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [17, 10, 15, 11, 8, 12, 11, 9, 11, 10, 11, 12, 11, 362, 10, 13, 9, 14, 45, 8, 9, 8, 12, 13, 11, 17, 11, 12, 11, 7, 12, 10, 8, 7, 13, 6, 9, 13, 11, 10, 11, 9, 7, 10, 9, 169, 10, 229]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [18, 13, 7, 7, 14, 15, 6, 7, 7, 25, 8, 8, 10, 14, 11, 12, 11, 11, 8, 43, 9, 13, 9, 9, 9, 9, 12, 6, 9, 11, 8, 7, 6, 6, 8, 10, 10, 8, 13, 27, 6, 7, 7, 12, 4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [15, 13, 11, 13, 7, 13, 11, 14, 9, 10, 8, 9, 7, 41, 9, 33, 9, 9, 5, 15, 72, 10, 9, 10, 9, 10, 4, 15, 13, 11, 7, 12, 8, 6, 8, 21, 12, 7, 14, 12, 13, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [15, 13, 10, 11, 8, 7, 15, 9, 7, 7, 15, 20, 222, 12, 7, 8, 11, 11, 13, 9, 8, 15, 8, 12, 16, 19, 10, 15, 9, 9, 10, 12, 7, 14, 10, 7, 18, 9, 10, 12, 268, 14, 10, 9, 13, 11, 5, 8, 18]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [7, 13, 13, 9, 9, 14, 8, 8, 16, 15, 12, 10, 12, 10, 15, 11, 13, 12, 12, 13, 8, 21, 15, 9, 13, 9, 16, 23, 9, 53, 9, 10, 9, 21, 9, 65, 12, 9, 9, 13, 11, 8, 10, 16, 12, 31, 8, 8, 9, 17]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 8, 15, 8, 4, 122, 29, 65, 8, 198, 6, 12, 11, 13, 358, 8, 11, 4, 4, 3, 5, 7, 7, 8, 5, 3, 9, 7, 11, 8, 10, 22, 8, 13, 7, 11, 6, 20, 347, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [9, 15, 11, 10, 7, 11, 10, 7, 16, 11, 7, 25, 7, 7, 7, 8, 9, 9, 10, 11, 3, 10, 4, 283, 8, 8, 8, 9, 10, 8, 9, 8, 13, 8, 6, 9, 10, 7, 9, 11, 15, 19, 18, 9, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 10, 10, 11, 14, 12, 9, 10, 9, 7, 7, 10, 10, 72, 10, 12, 7, 7, 13, 6, 6, 10, 10, 11, 10, 7, 8, 6, 340, 12, 8, 11, 12, 6, 8, 8, 41, 28, 11, 19, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [3, 9, 7, 4, 6, 6, 7, 4, 15, 13, 12, 4, 10, 8, 9, 10, 5, 7, 5, 6, 9, 7, 13, 9, 11, 5, 5, 9, 8, 13, 9, 8, 5, 10, 12, 5, 11, 8, 7, 4, 6, 9, 25, 4, 11, 9, 12, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [12, 5, 8, 9, 12, 4, 12, 9, 10, 3, 11, 5, 10, 7, 11, 12, 11, 6, 13, 11, 8, 9, 9, 8, 11, 11, 13, 10, 5, 10, 8, 16, 11, 15, 11, 4, 7, 8, 7, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [17, 8, 3, 10, 7, 8, 6, 10, 10, 11, 8, 8, 7, 6, 14, 6, 12, 7, 110, 8, 5, 8, 12, 7, 10, 11, 9, 9, 10, 9, 11, 9, 8, 7, 7, 5, 10, 8, 109]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [15, 8, 11, 11, 12, 10, 9, 9, 8, 12, 6, 19, 29, 10, 11, 134, 17, 8, 11, 26, 12, 9, 10, 10, 40, 9, 9, 9, 8, 10, 12, 8, 8, 9, 12, 11, 11, 7, 96]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 12, 9, 4, 11, 8, 25, 5, 9, 6, 8, 5, 410, 6, 9, 7, 13, 3, 13, 45, 4, 12, 13, 20, 7, 8, 7, 4, 291, 11, 10, 7, 7, 12, 12, 5, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [5, 9, 5, 4, 11, 21, 11, 15, 3, 18, 8, 12, 6, 4, 124, 66, 7, 11, 5, 3, 11, 9, 5, 11, 3, 10, 4, 10, 3, 10, 8, 9, 10, 11, 8, 10, 4, 175, 168, 13, 12, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [16, 8, 6, 4, 5, 6, 8, 11, 12, 4, 4, 5, 5, 7, 4, 9, 21, 7, 14, 11, 4, 3, 11, 6, 6, 4, 10, 8, 12, 6, 7, 15, 12, 9, 10, 13, 18]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 13, 10, 10, 10, 62, 14, 11, 11, 4, 13, 10, 4, 13, 11, 3, 11, 78, 10, 4, 15, 12, 4, 7, 6, 12, 13, 11, 11, 16, 10, 11, 10, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [13, 4, 17, 20, 14, 9, 14, 11, 4, 13, 10, 15, 12, 7, 6, 15, 8, 14, 7, 14, 12, 4, 109, 5, 11, 15, 9, 13, 13, 3, 13, 10, 12, 10, 11, 11, 15, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 9, 9, 10, 9, 10, 11, 11, 11, 12, 8, 3, 10, 18, 11, 11, 10, 7, 12, 3, 13, 10, 3, 11, 10, 12, 8, 10, 10, 10, 7, 9, 11, 8, 9, 11, 12, 8, 11, 11, 10, 63]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [4, 12, 11, 8, 11, 12, 7, 13, 11, 10, 4, 12, 67, 13, 9, 11, 11, 10, 10, 13, 11, 11, 8, 10, 12, 11, 11, 11, 9, 172, 10, 8, 11, 9, 10, 13, 11, 13, 10, 8, 11, 9, 16, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [12, 11, 8, 9, 8, 11, 13, 15, 15, 10, 10, 14, 5, 13, 8, 14, 11, 30, 9, 9, 14, 11, 7, 14, 15, 7, 6, 7, 10, 63, 112, 10, 12, 12, 13, 11, 7, 8, 14, 14, 11, 15, 60]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [10, 11, 13, 12, 14, 3, 14, 7, 13, 9, 8, 11, 11, 7, 10, 11, 8, 14, 13, 9, 55, 8, 14, 11, 13, 4, 11, 11, 9, 14, 12, 12, 13, 15, 11, 14, 13, 75, 12, 14, 9, 12]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [4, 11, 34, 6, 13, 13, 13, 13, 16, 14, 10, 9, 7, 7, 96, 10, 8, 14, 8, 10, 15, 4, 11, 12, 39, 14, 14, 13, 10, 12, 11, 15, 12, 8, 12, 10, 13, 14, 14, 8, 13, 9, 9, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [17, 11, 6, 9, 6, 10, 8, 15, 16, 16, 10, 4, 7, 12, 10, 9, 3, 15, 13, 3, 11, 14, 10, 9, 11, 9, 8, 12, 13, 8, 8, 519, 16, 13, 12, 12, 15, 12, 3, 10, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [12, 9, 11, 8, 5, 10, 7, 4, 13, 4, 6, 8, 8, 12, 5, 11, 5, 96, 12, 7, 5, 9, 5, 4, 13, 7, 8, 11, 4, 8, 14, 14, 8, 4, 8, 10, 8, 8, 130, 11]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [12, 11, 9, 11, 12, 12, 11, 11, 9, 10, 7, 7, 11, 11, 13, 14, 10, 11, 11, 12, 8, 11, 30, 9, 14, 6, 100, 13, 8, 13, 7, 11, 11, 9, 10, 12, 14, 8, 12, 9, 7, 10, 7, 12, 13]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [9, 9, 9, 9, 7, 9, 10, 11, 8, 8, 8, 8, 8, 17, 11, 9, 6, 9, 34, 9, 11, 9, 8, 9, 9, 9, 8, 9, 8, 12, 9, 10, 9, 8, 10, 7, 10, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [18, 10, 7, 15, 13, 4, 9, 12, 15, 11, 9, 8, 34, 11, 8, 11, 5, 11, 15, 9, 8, 16, 3, 7, 15, 3, 3, 9, 9, 9, 13, 10, 7, 18, 9, 4, 10, 8, 11, 10, 15, 9, 6, 16, 10, 22, 228]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [14, 9, 9, 7, 10, 11, 7, 6, 9, 15, 14, 10, 6, 14, 8, 9, 5, 4, 15, 4, 16, 260, 14, 356, 30, 17, 4, 78, 7, 11, 13, 8, 5, 10, 11, 9, 4, 9, 16, 14, 9, 13, 9, 14, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [16, 11, 7, 8, 9, 4, 11, 7, 8, 8, 8, 12, 147, 140, 6, 3, 13, 9, 8, 9, 10, 6, 8, 11, 8, 17, 7, 10, 8, 64, 8, 9, 11, 11, 5, 10, 9, 9, 22, 10, 9, 10, 9, 8, 16, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 15, 15, 6, 7, 14, 389, 16, 14, 10, 9, 18, 10, 9, 8, 12, 11, 8, 14, 9, 9, 15, 15, 12, 8, 16, 10, 9, 9, 14, 9, 10, 9, 17, 17, 9, 15, 13, 15, 16, 15, 9, 15, 15, 9, 26, 15]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 9, 17, 7, 10, 14, 13, 64, 15, 5, 10, 5, 8, 14, 4, 14, 9, 16, 13, 5, 14, 20, 7, 5, 17, 73, 9, 6, 8, 13, 16, 18, 10, 5, 18, 14, 18, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [11, 10, 18, 4, 8, 15, 7, 17, 5, 7, 8, 9, 20, 11, 15, 14, 9, 5, 6, 427, 6, 15, 11, 6, 8, 13, 8, 10, 7, 12, 3, 6, 15, 4, 14, 13, 15, 5, 22, 4, 19, 8, 17, 5, 15, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [23, 8, 7, 23, 7, 12, 5, 5, 5, 7, 12, 5, 11, 44, 6, 7, 9, 9, 6, 4, 14, 5, 44, 13, 7, 64, 9, 22, 22, 14, 7, 7, 52, 18, 4, 7, 7, 6, 9, 6, 433, 7, 5, 16, 9, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 13, 15, 6, 6, 14, 7, 12, 9, 13, 8, 8, 10, 6, 21, 10, 8, 8, 7, 4, 4, 12, 12, 12, 5, 15, 17, 5, 6, 6, 5, 16, 8, 10, 19, 6, 12, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
[length(mis) for mis = unique(C_list)] = [7, 5, 17, 9, 8, 16, 8, 16, 7, 8, 18, 6, 12, 12, 8, 8, 320, 63, 5, 7, 11, 14, 13, 7, 17, 18, 16, 9, 15, 11, 4, 9, 14, 6, 17, 9, 8, 8, 11, 11, 14, 9, 10, 28, 8, 11, 28]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 291
[length(mis) for mis = unique(C_list)] = [9, 6, 14, 9, 9, 11, 9, 9, 14, 14, 15, 11, 11, 13, 9, 9, 9, 3, 7, 10, 12, 9, 8, 10, 8, 8, 210, 8, 8, 8, 9, 9, 4, 10, 9, 10, 10, 7, 7, 9, 7, 5, 37, 9, 8, 14, 7, 9, 8, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 292
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 7, 6, 10, 8, 4, 4, 13, 9, 6, 12, 7, 11, 10, 13, 7, 11, 15, 6, 7, 8, 48, 10, 8, 8, 11, 8, 9, 9, 12, 11, 10, 10, 11, 16, 7, 7, 10, 23, 13, 3, 12]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 293
[length(mis) for mis = unique(C_list)] = [11, 6, 8, 7, 15, 8, 6, 9, 8, 10, 9, 10, 11, 33, 14, 14, 226, 13, 5, 9, 9, 10, 14, 8, 10, 16, 9, 6, 9, 4, 10, 14, 10, 112, 7, 18, 15, 9, 8, 7, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 294
[length(mis) for mis = unique(C_list)] = [7, 6, 11, 19, 10, 6, 15, 6, 16, 10, 12, 7, 22, 12, 11, 20, 7, 13, 9, 8, 14, 8, 12, 17, 8, 17, 288, 9, 21, 9, 12, 176, 12, 14, 8, 22, 9, 15, 35, 14, 13, 8, 8, 113, 10, 18, 12]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 295
[length(mis) for mis = unique(C_list)] = [7, 11, 11, 4, 3, 8, 3, 6, 11, 9, 8, 6, 10, 10, 14, 12, 5, 7, 10, 10, 9, 4, 9, 9, 15, 11, 8, 4, 6, 9, 9, 5, 23, 6, 9, 10, 7, 8, 8, 8, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 296
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 4, 10, 11, 5, 9, 8, 9, 111, 7, 9, 11, 10, 67, 9, 53, 8, 9, 8, 8, 10, 7, 7, 11, 10, 12, 9, 8, 132, 9, 8, 6, 8, 8, 10, 9, 9, 8, 4, 10, 3, 11, 13, 6, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 297
[length(mis) for mis = unique(C_list)] = [5, 10, 11, 5, 9, 9, 10, 6, 414, 9, 9, 11, 25, 5, 9, 132, 7, 6, 5, 4, 10, 7, 9, 10, 8, 8, 11, 7, 7, 9, 12, 10, 13, 6, 11, 8, 9, 9, 9, 11, 15, 10, 9, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 298
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
