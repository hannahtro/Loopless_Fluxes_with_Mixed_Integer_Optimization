ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 36
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 7, 134, 9, 6, 2, 7, 6, 10, 5, 2, 6, 5, 19, 2, 7, 10, 5, 10, 4, 5, 5, 6, 3, 4, 8, 3, 4, 7, 2, 5, 5, 3, 58, 2, 7, 4, 7, 4, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [15, 7, 8, 8, 6, 6, 5, 10, 11, 8, 7, 7, 106, 4, 5, 3, 9, 7, 6, 8, 6, 5, 2, 7, 3, 53, 9, 27, 5, 5, 3, 7, 5, 21, 4, 7, 4, 4, 7, 18, 7, 9, 15, 31, 7, 4, 7, 7, 22]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 4, 7, 6, 4, 4, 4, 5, 4, 8, 5, 8, 8, 6, 6, 14, 9, 5, 5, 259, 27, 5, 4, 4, 4, 5, 4, 5, 10, 9, 6, 5, 5, 4, 119, 4, 3, 4, 12, 9, 3, 5, 9, 5, 7, 4, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 6, 6, 3, 3, 4, 7, 8, 7, 6, 4, 8, 4, 7, 23, 23, 4, 9, 5, 413, 5, 7, 12, 4, 5, 7, 4, 3, 5, 5, 4, 127, 6, 5, 8, 10, 6, 15, 18, 5, 5, 135, 5, 7, 7, 9, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 5, 6, 4, 3, 7, 6, 9, 9, 4, 163, 8, 3, 4, 6, 7, 10, 6, 48, 16, 8, 7, 9, 48, 4, 5, 4, 10, 9, 4, 8, 4, 28, 6, 4, 5, 8, 8, 6, 6, 9, 587, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 5, 5, 10, 4, 4, 7, 4, 7, 4, 8, 8, 72, 6, 228, 4, 6, 7, 6, 8, 3, 24, 8, 10, 8, 4, 9, 4, 62, 5, 4, 8, 4, 419, 9, 4, 4, 89, 6, 3, 5, 103, 9, 4, 3, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 7, 4, 4, 4, 5, 4, 4, 4, 8, 4, 8, 5, 6, 18, 6, 12, 4, 6, 3, 309, 4, 6, 8, 13, 7, 12, 9, 10, 4, 4, 4, 167, 5, 3, 5, 11, 4, 66, 7, 7, 10, 6, 4, 4, 8, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 8, 5, 2, 5, 6, 7, 4, 5, 4, 4, 3, 5, 8, 8, 4, 4, 7, 7, 6, 3, 7, 3, 4, 6, 6, 7, 4, 10, 3, 7, 5, 7, 4, 10, 11, 4, 9, 7, 3, 11, 4, 3, 4, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [15, 9, 7, 4, 6, 4, 2, 5, 8, 5, 7, 5, 6, 9, 4, 4, 3, 5, 4, 3, 6, 3, 6, 7, 4, 3, 4, 3, 6, 9, 7, 3, 10, 6, 8, 3, 5, 8, 7, 9, 7, 9, 6, 9, 7, 6, 8, 6, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 3, 4, 6, 6, 6, 6, 7, 30, 5, 4, 5, 5, 5, 3, 29, 5, 7, 11, 5, 138, 10, 4, 6, 8, 21, 7, 26, 32, 5, 6, 6, 7, 4, 4, 4, 7, 6, 182, 6, 9, 4, 274, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 4, 10, 4, 4, 4, 2, 9, 4, 5, 4, 7, 7, 17, 4, 4, 5, 4, 3, 3, 6, 4, 5, 4, 8, 8, 5, 8, 6, 6, 4, 7, 52, 7, 16, 7, 5, 3, 12, 7, 21, 4, 5, 140, 10, 4, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 9, 7, 4, 8, 4, 7, 6, 8, 10, 8, 10, 5, 3, 41, 7, 9, 6, 131, 8, 6, 4, 8, 148, 6, 8, 4, 10, 8, 10, 4, 7, 11, 9, 14, 8, 7, 7, 6, 8, 8, 8, 10, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 10, 8, 5, 7, 9, 4, 4, 6, 8, 8, 4, 11, 5, 8, 5, 6, 6, 6, 8, 9, 8, 9, 3, 7, 6, 5, 8, 10, 9, 6, 50, 8, 10, 6, 6, 7, 3, 7, 18, 3, 8, 9, 8, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 4, 4, 4, 5, 6, 10, 6, 8, 6, 5, 38, 5, 3, 5, 8, 59, 8, 6, 8, 8, 7, 4, 6, 4, 7, 6, 6, 6, 5, 11, 6, 6, 4, 5, 4, 6, 5, 7, 7, 4, 9, 5, 119, 10, 8, 7, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 5, 5, 5, 3, 5, 6, 7, 6, 6, 11, 328, 5, 9, 5, 7, 4, 4, 6, 4, 4, 7, 7, 6, 4, 6, 5, 4, 9, 8, 8, 4, 6, 9, 3, 9, 6, 67, 7, 8, 4, 6, 4, 102, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 6, 4, 5, 5, 6, 4, 6, 3, 4, 5, 6, 5, 6, 5, 4, 6, 7, 5, 7, 8, 7, 3, 5, 5, 4, 4, 5, 5, 8, 6, 3, 4, 4, 4, 4, 6, 4, 4, 5, 4, 4, 4, 4, 9, 7, 7, 8, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 6, 6, 3, 6, 11, 9, 15, 5, 8, 5, 4, 4, 3, 203, 13, 10, 420, 4, 8, 4, 51, 10, 3, 7, 4, 5, 4, 9, 7, 6, 5, 7, 6, 5, 7, 7, 13, 9, 3, 5, 8, 5, 10, 184, 4, 50]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 5, 5, 5, 7, 4, 17, 4, 5, 4, 6, 3, 48, 4, 15, 5, 6, 6, 308, 15, 4, 6, 7, 7, 4, 8, 4, 7, 253, 51, 269, 5, 4, 7, 7, 24, 4, 4, 11, 5, 6, 4, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 5, 7, 7, 4, 3, 204, 7, 7, 42, 7, 5, 16, 6, 5, 3, 6, 3, 4, 4, 7, 5, 9, 4, 3, 12, 8, 5, 295, 4, 7, 6, 9, 9, 5, 5, 6, 5, 9, 6, 5, 17, 4, 7, 36]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [8, 9, 10, 11, 6, 16, 8, 5, 4, 6, 5, 6, 7, 9, 8, 8, 7, 6, 5, 10, 5, 6, 11, 5, 6, 5, 6, 15, 11, 7, 7, 6, 3, 114, 7, 8, 6, 4, 9, 4, 7, 4, 20, 10, 3, 9, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [12, 7, 9, 11, 5, 7, 4, 4, 4, 5, 15, 3, 5, 5, 7, 3, 7, 6, 4, 12, 5, 10, 6, 10, 6, 3, 8, 8, 4, 7, 4, 5, 11, 7, 5, 3, 4, 6, 8, 6, 6, 4, 6, 11, 450, 8, 10, 6, 4, 11, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [14, 6, 3, 5, 6, 4, 2, 4, 10, 4, 5, 2, 2, 4, 7, 15, 67, 4, 7, 4, 4, 6, 6, 6, 3, 7, 5, 5, 4, 4, 6, 5, 7, 4, 6, 5, 8, 5, 6, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 6, 10, 8, 11, 6, 7, 7, 4, 10, 4, 5, 6, 9, 8, 4, 10, 4, 4, 3, 3, 62, 6, 6, 6, 8, 4, 7, 5, 4, 7, 5, 9, 38, 9, 4, 5, 6, 10, 5, 6, 7, 8, 9, 7, 6, 6, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 8, 4, 7, 4, 5, 5, 4, 6, 3, 7, 6, 6, 4, 6, 5, 9, 10, 81, 5, 7, 7, 4, 7, 14, 10, 8, 6, 9, 3, 32, 6, 4, 5, 4, 9, 6, 61, 13, 6, 4, 12, 8, 3, 6, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [14, 5, 4, 3, 4, 4, 6, 9, 5, 4, 8, 6, 12, 16, 6, 7, 11, 5, 14, 48, 4, 5, 6, 14, 4, 7, 7, 6, 31, 4, 4, 115, 3, 6, 166, 5, 4, 4, 7, 4, 4, 3, 4, 4, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [18, 6, 7, 6, 4, 5, 5, 10, 5, 4, 4, 6, 4, 4, 6, 6, 525, 4, 3, 4, 4, 5, 3, 57, 6, 10, 9, 4, 65, 5, 3, 6, 6, 4, 3, 4, 6, 5, 4, 4, 4, 6, 4, 4, 6, 5, 5, 9, 7, 357]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [18, 4, 4, 4, 4, 4, 4, 33, 4, 7, 7, 4, 5, 4, 4, 228, 8, 38, 10, 31, 4, 3, 5, 18, 8, 4, 9, 3, 264, 7, 8, 6, 6, 7, 7, 6, 5, 5, 7, 5, 4, 7, 9, 6, 6, 4, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [7, 8, 12, 5, 4, 7, 4, 7, 10, 3, 4, 4, 28, 21, 12, 5, 8, 4, 8, 4, 7, 7, 3, 4, 4, 128, 8, 6, 19, 3, 8, 7, 5, 3, 4, 6, 7, 7, 6, 4, 5, 8, 7, 6, 31, 4, 109, 5, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 10, 5, 3, 3, 8, 4, 4, 3, 4, 4, 5, 7, 114, 5, 4, 4, 6, 6, 5, 6, 4, 9, 19, 11, 5, 4, 3, 5, 10, 5, 10, 4, 10, 4, 4, 7, 24, 6, 4, 7, 4, 4, 5, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 11, 7, 6, 136, 4, 10, 5, 5, 7, 3, 4, 10, 321, 8, 16, 9, 3, 5, 4, 8, 18, 10, 8, 5, 6, 10, 8, 4, 10, 6, 11, 6, 8, 11, 4, 8, 9, 28, 7, 6, 4, 10, 4, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 12, 9, 6, 4, 4, 5, 5, 35, 20, 6, 251, 10, 12, 18, 4, 5, 6, 4, 6, 4, 9, 18, 5, 6, 7, 4, 9, 3, 4, 6, 5, 35, 24, 5, 5, 6, 214, 3, 8, 10, 4, 5, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 8, 8, 6, 8, 4, 4, 9, 301, 14, 5, 6, 5, 4, 6, 4, 28, 5, 20, 5, 6, 21, 11, 11, 9, 3, 4, 4, 4, 243, 5, 4, 6, 4, 7, 9, 5, 5, 57]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 4, 5, 4, 6, 5, 11, 6, 5, 5, 21, 7, 415, 7, 5, 4, 5, 4, 20, 6, 7, 6, 8, 4, 4, 6, 5, 6, 10, 4, 4, 3, 11, 5, 4, 4, 10, 5, 7, 6, 10, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 5, 9, 8, 8, 6, 5, 9, 6, 8, 5, 11, 7, 18, 8, 6, 5, 4, 11, 4, 20, 3, 4, 8, 8, 4, 6, 80, 12, 54, 8, 9, 4, 15, 6, 4, 4, 7, 11, 8, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 8, 10, 10, 7, 10, 4, 7, 9, 7, 13, 9, 4, 2, 149, 88, 6, 6, 3, 9, 328, 6, 8, 11, 4, 7, 11, 198, 7, 7, 5, 4, 8, 6, 7, 7, 4, 23, 4, 4, 9, 7, 8, 7, 7, 7, 16, 10, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 7, 4, 6, 9, 4, 22, 5, 5, 4, 11, 7, 6, 13, 6, 118, 4, 3, 213, 4, 5, 10, 9, 5, 10, 6, 6, 8, 4, 15, 6, 4, 9, 13, 10, 5, 4, 4, 5, 8, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 5, 7, 11, 5, 6, 12, 10, 9, 13, 5, 7, 7, 95, 5, 7, 28, 6, 6, 4, 4, 7, 9, 42, 9, 8, 4, 6, 8, 4, 11, 11, 117, 3, 8, 4, 5, 5, 4, 8, 5, 8, 6, 9, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [16, 7, 10, 9, 5, 13, 5, 7, 12, 6, 71, 11, 10, 7, 14, 10, 8, 5, 5, 9, 4, 387, 5, 7, 4, 10, 52, 9, 8, 8, 11, 6, 14, 11, 5, 8, 3, 8, 4, 14, 5, 6, 7, 7, 11, 6, 7, 12, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 10, 8, 9, 10, 9, 4, 10, 7, 4, 10, 8, 3, 10, 9, 5, 9, 5, 4, 10, 7, 5, 4, 4, 10, 12, 7, 9, 7, 11, 11, 34, 10, 13, 6, 12, 13, 5, 7, 4, 15, 9, 9, 8, 13, 9, 10, 8, 13, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [20, 7, 6, 5, 5, 7, 8, 8, 6, 7, 6, 7, 11, 5, 8, 3, 4, 6, 20, 5, 6, 5, 4, 5, 9, 9, 18, 7, 4, 8, 9, 9, 10, 4, 6, 5, 9, 6, 9, 4, 5, 4, 4, 4, 7, 8, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 4, 9, 8, 4, 6, 10, 9, 7, 7, 6, 3, 4, 5, 10, 11, 5, 4, 4, 13, 8, 7, 7, 8, 5, 6, 11, 4, 4, 6, 5, 87, 8, 10, 48, 9, 6, 10, 7, 9, 13, 5, 11, 66, 5, 9, 11, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 7, 7, 14, 4, 3, 5, 7, 11, 5, 17, 7, 4, 8, 5, 4, 5, 4, 391, 413, 9, 8, 5, 4, 3, 5, 5, 9, 8, 6, 10, 4, 4, 399, 4, 6, 6, 67, 204]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [11, 3, 10, 4, 5, 6, 5, 8, 9, 4, 4, 5, 9, 9, 4, 5, 5, 6, 4, 8, 6, 12, 9, 171, 10, 10, 7, 8, 4, 6, 11, 5, 8, 8, 5, 4, 4, 7, 9, 80, 8, 5, 8, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [13, 7, 5, 8, 8, 10, 5, 4, 6, 10, 11, 33, 8, 8, 7, 5, 4, 4, 4, 7, 8, 8, 7, 6, 6, 12, 4, 5, 8, 11, 5, 4, 205, 8, 6, 12, 9, 11, 9, 12, 8, 6, 7, 435]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 5, 5, 4, 33, 7, 4, 6, 7, 5, 6, 5, 180, 5, 10, 8, 8, 6, 5, 7, 6, 5, 4, 7, 4, 7, 9, 180, 8, 11, 80, 7, 7, 45, 6, 52, 5, 6, 12, 6, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [18, 7, 7, 6, 8, 5, 3, 3, 196, 10, 9, 3, 4, 9, 6, 70, 5, 5, 7, 4, 7, 5, 4, 6, 4, 6, 5, 11, 7, 9, 9, 110, 504, 4, 7, 7, 6, 9, 4, 8, 4, 5, 6, 8, 47, 5, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [17, 9, 4, 6, 5, 6, 7, 3, 6, 13, 6, 64, 8, 4, 7, 3, 7, 5, 4, 9, 7, 12, 4, 6, 5, 4, 9, 9, 10, 6, 3, 4, 8, 7, 6, 5, 6, 7, 4, 11, 4, 6, 3, 5, 9, 13, 6, 7, 14]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 4, 6, 6, 7, 9, 8, 5, 7, 8, 10, 5, 5, 11, 6, 6, 5, 8, 10, 4, 5, 6, 4, 5, 6, 3, 10, 5, 6, 8, 8, 7, 9, 5, 7, 5, 3, 6, 6, 4, 8, 6, 4, 7, 7]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 8, 8, 7, 11, 6, 3, 4, 4, 5, 120, 5, 6, 5, 8, 5, 7, 11, 8, 6, 10, 5, 5, 485, 3, 3, 8, 7, 4, 9, 4, 5, 4, 6, 7, 6, 172]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [12, 4, 10, 9, 7, 9, 21, 6, 4, 10, 12, 8, 4, 7, 6, 10, 7, 10, 64, 9, 7, 8, 4, 3, 5, 4, 8, 7, 20, 6, 6, 12, 4, 4, 4, 12, 7, 11, 164, 10, 6, 5, 6, 12, 5, 9, 5, 5, 4, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [13, 5, 4, 5, 5, 4, 4, 4, 4, 4, 6, 8, 7, 5, 8, 5, 37, 4, 4, 4, 5, 4, 4, 88, 6, 6, 5, 5, 4, 6, 11, 4, 10, 4, 5, 3, 4, 4, 44, 4, 22]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [14, 4, 9, 4, 4, 7, 3, 7, 186, 11, 14, 12, 6, 6, 9, 7, 4, 5, 7, 5, 4, 13, 8, 7, 11, 4, 11, 6, 3, 4, 23, 8, 7, 4, 21, 7, 6, 7, 4, 11, 212, 10, 8, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [13, 5, 11, 7, 9, 3, 6, 8, 93, 8, 7, 15, 6, 7, 4, 7, 4, 6, 9, 3, 6, 61, 8, 11, 4, 19, 11, 8, 4, 11, 10, 8, 8, 9, 4, 3, 6, 7, 10, 6, 42, 5, 8, 9, 10, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 14, 6, 9, 9, 9, 6, 9, 9, 10, 11, 10, 280, 9, 4, 8, 8, 6, 10, 193, 10, 11, 11, 40, 9, 11, 23, 6, 11, 11, 7, 11, 8, 12, 3, 7, 8, 12, 11, 9, 4, 3, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 10, 6, 10, 10, 15, 7, 5, 12, 5, 7, 12, 5, 6, 3, 12, 4, 11, 8, 4, 5, 12, 10, 7, 7, 5, 5, 4, 10, 10, 22, 121, 4, 10, 4, 9, 10, 4, 9, 11, 12, 13, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 7, 4, 5, 6, 7, 6, 5, 11, 5, 6, 4, 5, 8, 7, 4, 4, 4, 4, 25, 8, 34, 8, 5, 6, 5, 5, 7, 4, 45, 10, 211, 8, 13, 35, 5, 5, 7, 5, 12, 4, 11, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 4, 6, 5, 10, 9, 12, 6, 7, 5, 5, 4, 6, 7, 7, 4, 4, 5, 6, 5, 4, 5, 7, 4, 4, 6, 7, 4, 4, 10, 8, 10, 7, 11, 14, 4, 4, 6, 6, 4, 5, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [12, 8, 10, 4, 5, 5, 10, 6, 6, 6, 12, 9, 11, 12, 6, 4, 11, 9, 11, 13, 5, 6, 13, 12, 5, 5, 4, 12, 11, 13, 11, 11, 3, 7, 5, 11, 6, 11, 11, 5, 6, 6, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [22, 5, 8, 5, 4, 10, 4, 3, 7, 4, 4, 6, 9, 4, 12, 4, 4, 3, 4, 4, 4, 9, 9, 4, 4, 4, 4, 8, 12, 4, 4, 4, 7, 11, 18, 5, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 4, 5, 5, 4, 6, 4, 6, 6, 3, 13, 7, 4, 6, 8, 7, 8, 10, 12, 4, 9, 4, 7, 3, 9, 5, 6, 10, 10, 4, 3, 10, 5, 9, 9, 20, 3, 4, 84, 4, 74, 12, 5, 9, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 4, 4, 10, 13, 4, 5, 8, 14, 5, 3, 198, 8, 12, 4, 5, 11, 3, 8, 9, 181, 4, 3, 4, 4, 10, 8, 10, 3, 79, 4, 8, 13, 3, 6, 12, 4, 8, 4, 8, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 5, 4, 5, 6, 9, 7, 9, 7, 3, 5, 14, 5, 6, 5, 3, 4, 5, 9, 4, 5, 5, 4, 4, 11, 4, 7, 17, 10, 4, 6, 8, 12, 12, 5, 5, 4, 5, 506, 5, 5, 9, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 6, 8, 7, 11, 7, 9, 8, 6, 8, 8, 13, 6, 5, 4, 5, 12, 6, 4, 4, 7, 4, 37, 10, 11, 4, 6, 9, 5, 6, 8, 10, 6, 5, 12, 9, 10, 10, 5, 5, 6, 3, 9, 7, 7, 11, 15, 6, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [8, 11, 5, 13, 6, 4, 9, 6, 6, 4, 6, 9, 7, 4, 7, 18, 6, 5, 9, 10, 13, 8, 11, 5, 7, 4, 12, 13, 5, 12, 10, 7, 11, 7, 6, 7, 11, 6, 7, 7, 7, 4, 4, 8, 9, 13, 6, 6, 8, 6, 9, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [11, 11, 4, 10, 12, 12, 5, 7, 9, 4, 11, 12, 4, 157, 10, 9, 9, 4, 8, 10, 58, 4, 5, 5, 10, 9, 4, 10, 8, 7, 9, 9, 5, 10, 9, 4, 8, 8, 9, 8, 9, 168, 4, 8, 10, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 5, 6, 5, 8, 6, 7, 31, 8, 6, 4, 9, 5, 7, 6, 8, 6, 12, 7, 6, 5, 4, 6, 12, 4, 6, 7, 8, 15, 8, 7, 8, 10, 3, 5, 12, 6, 5, 56, 6, 4, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [16, 8, 12, 6, 12, 11, 8, 10, 5, 6, 11, 5, 5, 152, 14, 4, 13, 13, 11, 11, 6, 9, 4, 4, 8, 4, 11, 12, 8, 276, 7, 11, 5, 13, 16, 10, 8, 8, 10, 10, 11, 6, 10, 9]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [11, 11, 14, 8, 3, 7, 4, 16, 268, 14, 4, 5, 6, 4, 5, 11, 3, 4, 5, 6, 4, 10, 26, 13, 6, 11, 30, 10, 6, 6, 6, 6, 11, 5, 71, 5, 7, 12, 10, 3, 6, 5, 54, 11, 7, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 10, 8, 12, 4, 4, 10, 6, 17, 15, 5, 4, 25, 7, 4, 11, 10, 4, 403, 8, 10, 9, 10, 6, 8, 11, 4, 207, 6, 12, 12, 10, 13, 9, 12, 10, 6, 6, 4, 11]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [9, 4, 6, 4, 4, 5, 9, 11, 3, 4, 6, 10, 4, 4, 4, 6, 9, 9, 389, 4, 5, 4, 4, 4, 55, 7, 7, 12, 10, 7, 7, 8, 113, 5, 4, 5, 5, 7, 7, 64, 6, 11, 11, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 4, 5, 5, 4, 4, 8, 6, 3, 4, 9, 7, 8, 7, 6, 7, 9, 8, 4, 5, 5, 6, 6, 7, 6, 10, 9, 5, 4, 5, 211, 10, 5, 4, 6, 4, 10, 6, 12, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 9, 8, 8, 11, 6, 12, 8, 4, 5, 9, 6, 4, 10, 7, 118, 7, 6, 7, 7, 10, 8, 9, 11, 90, 10, 5, 15, 12, 8, 13, 12, 4, 17, 6, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 10, 4, 4, 5, 4, 3, 4, 11, 4, 17, 9, 8, 11, 13, 4, 6, 4, 166, 12, 11, 9, 4, 10, 10, 4, 187, 5, 6, 7, 5, 11, 216, 66, 10, 199, 4, 8, 6, 6, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 9, 4, 5, 6, 8, 7, 5, 7, 12, 4, 5, 71, 9, 5, 17, 5, 4, 5, 7, 4, 10, 8, 6, 7, 6, 4, 10, 15, 6, 5, 9, 16, 6, 5, 3, 30, 10, 4, 135, 40, 4, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 4, 8, 6, 7, 9, 6, 9, 5, 10, 8, 8, 11, 6, 11, 15, 6, 13, 5, 4, 4, 11, 11, 13, 12, 269, 11, 8, 6, 11, 5, 7, 4, 5, 4, 15, 7, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 10, 4, 9, 8, 9, 8, 10, 4, 9, 5, 7, 8, 4, 5, 4, 7, 13, 6, 8, 8, 8, 9, 5, 10, 7, 8, 8, 9, 5, 8, 8, 12, 7, 8, 5, 12, 10, 14, 14, 5, 30, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [10, 8, 6, 8, 3, 8, 9, 20, 10, 10, 9, 6, 10, 292, 60, 8, 5, 9, 5, 10, 7, 367, 6, 4, 11, 8, 4, 9, 8, 9, 5, 5, 13, 7, 9, 8, 245, 10, 13, 8, 11, 6, 58, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 4, 6, 5, 5, 4, 8, 4, 4, 9, 311, 3, 8, 8, 7, 4, 4, 5, 10, 8, 4, 4, 9, 5, 31, 10, 8, 8, 10, 9, 9, 3, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 4, 5, 7, 10, 7, 4, 4, 10, 4, 9, 8, 5, 5, 5, 9, 4, 338, 5, 6, 8, 4, 10, 9, 7, 8, 10, 5, 10, 4, 6, 4, 4, 10, 10, 10, 4, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 6, 9, 6, 129, 11, 9, 11, 6, 5, 7, 10, 9, 4, 4, 4, 9, 11, 4, 9, 5, 4, 9, 9, 13, 3, 9, 10, 8, 4, 10, 6, 4, 7, 4, 6, 5, 7, 8, 8, 8, 5, 12, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 10, 8, 5, 4, 4, 4, 3, 6, 10, 4, 4, 5, 8, 7, 6, 6, 7, 6, 6, 444, 5, 4, 27, 4, 4, 4, 7, 10, 9, 13, 4, 4, 4, 7, 6, 11, 9, 9, 8, 6, 57, 4, 152]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 7, 4, 8, 4, 9, 10, 7, 6, 11, 7, 8, 10, 9, 10, 7, 5, 3, 8, 4, 8, 6, 4, 8, 8, 7, 7, 10, 8, 9, 7, 9, 6, 10, 14, 10, 6, 74, 12, 10, 148, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 5, 3, 7, 5, 7, 8, 3, 6, 8, 10, 4, 5, 7, 4, 5, 6, 164, 10, 7, 4, 6, 3, 6, 8, 7, 5, 416, 8, 7, 3, 3, 9, 10, 7, 8, 6, 6, 6, 5, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 4, 8, 4, 8, 39, 11, 7, 76, 9, 578, 7, 13, 6, 7, 4, 17, 5, 14, 5, 8, 6, 6, 188, 10, 8, 8, 7, 13, 6, 5, 8, 24, 13, 7, 16, 9, 4, 6, 6, 4, 12, 7, 9, 5, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 7, 6, 8, 11, 9, 4, 7, 6, 7, 7, 7, 12, 4, 7, 6, 9, 4, 8, 4, 6, 8, 6, 458, 5, 7, 7, 5, 5, 5, 11, 7, 6, 5, 9, 7, 8, 7, 5, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 11, 6, 12, 7, 6, 4, 24, 9, 10, 12, 8, 313, 5, 4, 5, 7, 12, 3, 12, 4, 7, 6, 7, 11, 12, 11, 7, 11, 14, 5, 21, 14, 7, 11, 11, 4, 13, 8, 9, 7, 8, 6, 85, 5, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [9, 13, 7, 9, 9, 3, 6, 11, 9, 12, 9, 10, 7, 5, 8, 7, 13, 11, 13, 177, 13, 4, 4, 9, 179, 9, 10, 4, 8, 7, 5, 8, 9, 329, 13, 6, 9, 335, 8, 16, 4, 8, 11, 5, 10, 8, 9, 8, 7, 19, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 11, 13, 8, 9, 3, 8, 14, 12, 4, 11, 9, 10, 11, 11, 10, 3, 6, 6, 12, 7, 9, 8, 8, 28, 618, 8, 8, 7, 13, 12, 10, 9, 12, 8, 14, 8, 7, 6, 7, 11, 7, 8, 11, 10, 6, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 9, 10, 10, 13, 10, 10, 6, 9, 11, 12, 12, 10, 3, 4, 6, 10, 9, 13, 6, 8, 15, 10, 12, 173, 4, 36, 10, 10, 11, 216, 13, 8, 8, 9, 14, 11, 8, 7, 13, 12, 16, 8, 10, 11, 11, 105]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 5, 12, 4, 5, 6, 3, 8, 9, 4, 5, 11, 4, 60, 9, 6, 4, 8, 4, 4, 6, 8, 15, 10, 10, 36, 5, 3, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [9, 10, 4, 15, 3, 5, 6, 4, 5, 6, 5, 9, 5, 6, 10, 7, 9, 6, 8, 3, 379, 4, 7, 5, 4, 5, 4, 13, 8, 6, 11, 11, 6, 650, 5, 4, 4, 7, 4, 48, 4, 9, 12, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 11, 5, 5, 12, 12, 7, 6, 4, 6, 9, 7, 8, 6, 4, 6, 7, 4, 4, 4, 10, 3, 12, 12, 7, 4, 5, 7, 3, 7, 6, 169, 7, 3, 9, 4, 7, 4, 35, 4, 17, 7, 10, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 5, 7, 4, 4, 4, 4, 4, 223, 3, 3, 7, 4, 11, 5, 9, 171, 3, 10, 5, 5, 523, 5, 577, 12, 4, 3, 3, 5, 4, 6, 5, 4, 4, 4, 3, 482, 192, 5, 6, 5, 4, 33]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 4, 4, 8, 4, 8, 8, 10, 6, 8, 3, 6, 7, 9, 7, 4, 3, 6, 7, 399, 9, 4, 30, 4, 118, 60, 4, 17, 4, 4, 12, 3, 6, 125, 10, 3, 5, 6, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 7, 4, 5, 10, 9, 5, 6, 7, 6, 3, 9, 4, 8, 4, 5, 3, 7, 97, 5, 3, 5, 10, 5, 31, 8, 177, 8, 11, 9, 3, 6, 5, 4, 7, 549, 60, 4, 4, 8, 6, 3, 6, 6, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 3, 4, 6, 9, 4, 10, 10, 9, 11, 12, 7, 4, 4, 5, 6, 4, 11, 10, 3, 7, 7, 12, 11, 14, 10, 4, 87, 10, 6, 11, 4, 13, 10, 6, 4, 10, 384, 7, 3, 5, 7, 8, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 9, 4, 10, 10, 19, 3, 9, 6, 80, 4, 406, 11, 12, 3, 4, 4, 9, 6, 6, 4, 5, 3, 23, 7, 51, 4, 4, 10, 9, 6, 12, 7, 4, 4, 4, 7, 7, 107, 12, 6, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 5, 6, 4, 6, 5, 8, 12, 8, 3, 4, 9, 4, 5, 5, 4, 5, 4, 4, 6, 4, 8, 3, 10, 7, 4, 7, 5, 4, 6, 3, 6, 4, 9, 8, 11, 5, 4, 9, 4, 4, 6, 6, 9, 47, 4, 11, 11, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [13, 9, 5, 4, 13, 4, 10, 6, 11, 8, 12, 5, 6, 4, 4, 3, 14, 13, 11, 10, 4, 17, 10, 21, 47, 5, 6, 9, 6, 9, 4, 10, 6, 6, 10, 8, 9, 10, 5, 9, 11, 12, 9, 6, 12, 16]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [9, 8, 8, 4, 11, 11, 7, 11, 9, 3, 4, 4, 5, 9, 11, 8, 11, 10, 6, 12, 108, 6, 12, 8, 12, 11, 7, 7, 9, 10, 7, 14, 4, 8, 11, 4, 3, 7, 5, 9, 8, 3, 5, 5, 10, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 13, 4, 9, 8, 8, 5, 9, 4, 6, 6, 5, 88, 4, 4, 14, 10, 4, 8, 8, 11, 16, 6, 6, 10, 6, 5, 4, 6, 9, 7, 8, 6, 5, 11, 6, 4, 36, 10, 10, 7, 139, 8, 11, 10, 5, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [12, 9, 6, 9, 10, 9, 9, 6, 11, 10, 14, 4, 7, 46, 4, 118, 12, 4, 6, 7, 11, 8, 14, 4, 10, 7, 9, 4, 4, 3, 4, 9, 5, 7, 4, 215, 9, 12, 10, 74, 9, 11, 8, 5, 6, 11, 16, 12, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 7, 6, 8, 8, 7, 8, 8, 7, 7, 8, 245, 10, 7, 6, 9, 8, 12, 7, 8, 9, 9, 6, 8, 6, 10, 9, 510, 12, 8, 9, 9, 130, 7, 7, 8, 5, 4, 11, 10, 7, 6, 7, 8, 6, 14, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [9, 8, 11, 7, 7, 6, 7, 9, 140, 8, 6, 10, 9, 4, 47, 6, 10, 8, 8, 6, 7, 8, 8, 9, 10, 163, 11, 6, 24, 8, 11, 5, 11, 7, 11, 13, 10, 9, 8, 9, 8, 7, 7, 6, 4, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [19, 4, 12, 7, 6, 10, 10, 8, 11, 8, 6, 4, 7, 7, 9, 9, 7, 7, 7, 8, 6, 10, 8, 9, 10, 11, 9, 8, 6, 4, 19, 11, 10, 12, 9, 9, 9, 13, 8, 70, 10, 9, 8, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 4, 3, 8, 9, 4, 6, 12, 8, 13, 13, 8, 9, 4, 7, 7, 5, 10, 13, 5, 4, 10, 94, 6, 5, 4, 10, 9, 18, 4, 13, 7, 6, 12, 12, 15, 6, 12, 9, 4, 8, 4, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [11, 4, 9, 3, 6, 8, 5, 7, 12, 9, 10, 6, 6, 9, 12, 5, 6, 8, 5, 11, 4, 15, 9, 11, 7, 5, 14, 14, 6, 9, 4, 6, 10, 9, 8, 4, 8, 14, 9, 8, 5, 3, 8, 11, 8, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 6, 9, 7, 9, 13, 12, 7, 8, 6, 8, 7, 301, 10, 5, 8, 9, 6, 10, 10, 38, 8, 4, 9, 6, 8, 6, 6, 8, 9, 6, 6, 9, 9, 8, 8, 6, 13, 10, 7, 7, 9, 7, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 4, 11, 10, 6, 9, 12, 5, 11, 4, 4, 4, 4, 8, 4, 8, 20, 4, 7, 8, 7, 10, 11, 9, 8, 8, 11, 10, 8, 6, 8, 8, 5, 7, 5, 8, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 9, 6, 8, 9, 4, 4, 6, 9, 11, 6, 215, 7, 13, 4, 12, 10, 8, 4, 16, 7, 6, 18, 9, 6, 8, 4, 7, 8, 5, 7, 4, 9, 5, 4, 80, 24, 14, 5, 5, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [6, 9, 9, 8, 3, 5, 3, 7, 5, 6, 9, 8, 7, 6, 8, 165, 5, 7, 8, 10, 8, 9, 7, 11, 7, 346, 8, 5, 8, 5, 13, 4, 7, 5, 9, 5, 7, 5, 9, 7, 6, 7, 10, 8, 10, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 5, 5, 7, 6, 3, 5, 9, 5, 9, 5, 183, 4, 9, 53, 7, 4, 5, 4, 5, 8, 9, 3, 8, 10, 10, 7, 10, 11, 5, 5, 7, 4, 4, 10, 8, 8, 4, 9, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 11, 5, 4, 11, 7, 7, 14, 8, 12, 5, 9, 6, 9, 4, 7, 3, 5, 8, 13, 7, 11, 5, 10, 4, 7, 9, 10, 10, 13, 4, 8, 9, 10, 9, 8, 9, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 3, 5, 6, 3, 3, 4, 7, 8, 7, 5, 7, 4, 3, 7, 4, 617, 2, 13, 5, 7, 5, 4, 4, 3, 73, 10, 5, 5, 6, 9, 5, 8, 4, 9, 5, 8, 8, 10, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 2, 4, 6, 6, 7, 8, 8, 6, 5, 9, 5, 14, 5, 4, 5, 388, 4, 6, 7, 4, 7, 7, 5, 9, 5, 3, 4, 9, 4, 5, 5, 4, 7, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 4, 5, 4, 6, 8, 15, 30, 8, 4, 11, 7, 9, 12, 10, 10, 5, 7, 7, 6, 30, 7, 5, 6, 12, 25, 6, 12, 7, 6, 6, 5, 108, 7, 9, 6, 20, 5, 5, 11, 6, 7, 7, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 5, 6, 7, 4, 10, 6, 8, 5, 4, 7, 7, 4, 9, 11, 7, 6, 6, 6, 8, 6, 11, 3, 6, 5, 6, 5, 13, 4, 7, 8, 8, 4, 4, 306, 7, 5, 7, 5, 6, 4, 7, 11, 6, 34, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 4, 5, 8, 4, 10, 5, 5, 6, 3, 10, 8, 67, 6, 5, 16, 4, 6, 10, 7, 448, 7, 4, 4, 5, 4, 26, 5, 5, 147, 5, 4, 3, 5, 5, 7, 80, 2, 8, 10, 282, 10, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 7, 10, 8, 3, 5, 4, 9, 7, 6, 8, 4, 8, 6, 5, 7, 4, 8, 16, 4, 4, 6, 4, 6, 4, 6, 4, 4, 7, 7, 9, 7, 7, 6, 8, 32, 8, 7, 9, 54, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 4, 11, 11, 21, 4, 9, 8, 8, 13, 11, 4, 7, 12, 10, 9, 32, 307, 11, 14, 6, 17, 9, 182, 9, 487, 11, 12, 6, 5, 10, 8, 16, 4, 7, 9, 57, 5, 6, 8, 5, 8, 7, 4, 12, 12, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 121┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539

[length(mis) for mis = unique(C_list)] = [6, 8, 3, 7, 6, 4, 7, 172, 13, 4, 4, 19, 3, 112, 9, 5, 5, 4, 4, 8, 4, 18, 6, 6, 6, 9, 14, 4, 8, 6, 4, 3, 5, 4, 7, 7, 4, 4, 6, 4, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 9, 189, 5, 7, 3, 4, 4, 4, 6, 6, 5, 6, 4, 218, 9, 14, 7, 8, 9, 9, 4, 4, 11, 8, 13, 11, 5, 5, 4, 4, 11, 4, 8, 18, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 11, 6, 7, 10, 8, 6, 9, 9, 6, 4, 7, 9, 13, 9, 5, 10, 59, 9, 11, 11, 9, 8, 5, 10, 12, 5, 7, 7, 41, 7, 10, 11, 458, 8, 5, 10, 13, 10, 10, 8, 11, 5, 6, 39, 24, 9, 14, 10, 9, 211]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [5, 4, 13, 3, 13, 12, 10, 10, 3, 11, 12, 11, 9, 9, 10, 4, 4, 4, 10, 5, 12, 10, 11, 9, 9, 11, 4, 10, 4, 15, 10, 10, 13, 10, 10, 10, 10, 11, 11, 11, 7, 12, 5, 25, 17, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 7, 13, 7, 10, 3, 6, 5, 6, 4, 5, 7, 12, 11, 4, 9, 10, 5, 9, 5, 4, 5, 12, 3, 4, 9, 7, 5, 5, 9, 8, 4, 4, 8, 8, 12, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 6, 14, 11, 7, 5, 5, 4, 6, 5, 13, 8, 9, 10, 4, 7, 36, 11, 6, 10, 6, 3, 7, 4, 8, 6, 6, 4, 5, 6, 11, 12, 4, 232, 5, 4, 9, 18, 4, 8, 9, 28, 22, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 9, 4, 4, 5, 6, 7, 4, 4, 8, 134, 9, 16, 4, 12, 2, 6, 4, 5, 4, 4, 28, 6, 37, 14, 52, 4, 6, 5, 7, 6, 4, 92, 6, 7, 6, 6, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [11, 9, 5, 11, 13, 12, 4, 9, 10, 80, 6, 9, 11, 4, 15, 437, 6, 10, 19, 12, 3, 11, 13, 9, 13, 8, 14, 13, 9, 9, 4, 10, 8, 10, 47, 8, 4, 4, 3, 4, 5, 8, 12, 9, 6, 11, 15, 8, 6, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [2, 9, 11, 11, 11, 6, 6, 6, 4, 6, 9, 7, 10, 8, 11, 6, 10, 9, 5, 7, 10, 28, 6, 4, 6, 7, 13, 2, 9, 6, 9, 8, 7, 7, 9, 7, 35, 10, 9, 7, 8, 11, 7, 13, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [5, 7, 10, 7, 5, 4, 4, 10, 6, 6, 8, 8, 8, 4, 8, 34, 8, 12, 11, 4, 10, 10, 10, 3, 9, 10, 18, 11, 10, 8, 8, 9, 11, 6, 14, 15, 8, 146, 13, 8, 4, 552, 9, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [18, 11, 4, 3, 10, 5, 6, 6, 4, 11, 4, 6, 3, 5, 343, 10, 8, 7, 5, 4, 6, 5, 11, 8, 6, 4, 9, 3, 5, 9, 8, 6, 6, 6, 5, 6, 8, 6, 8, 3, 7, 77, 7, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [11, 6, 8, 5, 7, 6, 6, 10, 4, 6, 272, 6, 11, 7, 8, 6, 4, 10, 6, 10, 7, 6, 17, 4, 7, 24, 7, 8, 5, 7, 13, 8, 9, 5, 4, 9, 3, 7, 9, 6, 10, 7, 11, 9, 7, 4, 11, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [8, 10, 9, 4, 7, 6, 8, 6, 4, 5, 11, 7, 28, 4, 4, 7, 4, 5, 7, 4, 8, 7, 6, 9, 9, 4, 6, 9, 4, 7, 6, 6, 9, 4, 9, 6, 10, 18, 9, 8, 13, 7, 5, 7, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 15, 85, 11, 8, 9, 8, 11, 9, 11, 11, 13, 13, 257, 13, 11, 9, 8, 10, 7, 8, 11, 8, 15, 7, 9, 12, 11, 6, 8, 7, 8, 7, 13, 6, 9, 11, 9, 7, 9, 8, 10, 12, 9, 12, 14, 8, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 10, 5, 12, 9, 9, 10, 8, 7, 6, 9, 12, 9, 12, 11, 9, 4, 6, 7, 6, 6, 64, 43, 13, 12, 4, 8, 6, 3, 5, 8, 7, 5, 17, 8, 11, 5, 12, 10, 26, 5, 8, 6, 10, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [8, 10, 8, 10, 9, 10, 8, 10, 11, 12, 4, 10, 3, 10, 10, 5, 9, 4, 9, 10, 9, 9, 13, 20, 7, 14, 12, 12, 10, 10, 10, 10, 377, 6, 4, 8, 94, 13, 11, 10, 11, 3, 10, 7, 8, 13, 10, 10, 5, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 4, 6, 12, 9, 4, 9, 5, 6, 7, 9, 4, 5, 16, 6, 7, 4, 9, 7, 4, 12, 10, 118, 14, 4, 9, 7, 14, 9, 4, 15, 10, 105, 4, 7, 9, 9, 53, 4, 12, 9, 4, 9, 436]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [5, 6, 13, 13, 5, 10, 4, 11, 6, 8, 12, 10, 11, 9, 4, 7, 13, 4, 84, 5, 11, 12, 10, 5, 14, 5, 11, 35, 14, 12, 138, 7, 6, 12, 4, 5, 8, 9, 10, 14, 5, 9, 35, 11, 9, 13, 9, 7, 11, 11, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [19, 20, 4, 14, 14, 4, 17, 8, 10, 15, 10, 11, 17, 14, 92, 5, 9, 14, 74, 9, 8, 7, 10, 11, 11, 9, 11, 12, 17, 13, 7, 12, 5, 67, 9, 12, 12, 14, 17, 13, 9, 12, 203, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [6, 13, 11, 9, 4, 10, 11, 7, 10, 13, 11, 9, 370, 13, 14, 12, 11, 10, 9, 28, 12, 8, 10, 10, 10, 13, 7, 10, 12, 297, 12, 10, 10, 11, 8, 6, 11, 4, 11, 7, 11, 11, 10, 13, 12, 8, 12, 12, 4, 11, 11, 9]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 10, 9, 7, 5, 9, 12, 11, 9, 9, 7, 7, 8, 7, 9, 14, 13, 9, 7, 8, 5, 6, 7, 9, 8, 8, 8, 9, 7, 22, 8, 10, 9, 8, 10, 9, 14, 6, 9, 4, 14, 9, 9, 11, 12, 30, 32, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [17, 8, 7, 11, 11, 8, 9, 4, 5, 8, 12, 9, 14, 11, 11, 7, 8, 14, 7, 8, 7, 6, 9, 6, 9, 8, 6, 12, 15, 6, 13, 13, 13, 8, 7, 7, 15, 5, 7, 6, 4, 10, 11, 7, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 12, 10, 6, 11, 6, 8, 7, 5, 4, 9, 7, 10, 9, 6, 9, 9, 11, 11, 11, 8, 9, 10, 12, 11, 12, 12, 8, 13, 10, 13, 8, 10, 5, 6, 7, 11, 8, 10, 11, 8, 4, 13, 7, 9, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 7, 9, 11, 7, 6, 7, 9, 5, 5, 6, 9, 7, 6, 14, 8, 5, 5, 12, 9, 4, 9, 4, 7, 8, 6, 415, 5, 6, 9, 5, 5, 7, 296, 5, 19, 10, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 6, 7, 6, 9, 8, 9, 7, 9, 6, 8, 9, 4, 14, 7, 6, 12, 5, 176, 6, 6, 6, 7, 232, 8, 6, 8, 10, 6, 5, 5, 4, 31, 7, 8, 13, 41, 6, 10, 11, 6, 4, 6, 6, 44, 9, 67]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 12, 7, 7, 10, 9, 7, 10, 7, 13, 8, 8, 6, 8, 404, 9, 8, 10, 10, 9, 9, 7, 9, 8, 6, 26, 12, 9, 355, 8, 9, 10, 7, 9, 7, 12, 10, 9, 7, 11, 10, 7, 9, 7, 10, 9, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 4, 11, 5, 7, 12, 5, 5, 9, 14, 5, 10, 9, 7, 10, 14, 11, 12, 9, 8, 12, 4, 7, 8, 13, 4, 8, 9, 4, 4, 12, 5, 10, 9, 413, 10, 14, 11, 12, 6, 13, 7, 57, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [14, 7, 9, 9, 5, 10, 7, 9, 10, 5, 6, 8, 8, 10, 9, 8, 8, 9, 4, 8, 10, 9, 202, 8, 14, 8, 8, 29, 14, 222, 70, 5, 365, 10, 7, 3, 3, 6, 9, 8, 6, 9, 8, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [5, 13, 13, 13, 18, 9, 13, 5, 14, 8, 4, 15, 18, 7, 12, 14, 13, 18, 7, 18, 419, 14, 9, 5, 4, 7, 73, 17, 12, 12, 11, 14, 4, 236, 13, 20, 19, 12, 7, 5, 12, 13, 15, 7, 15]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 10, 4, 5, 10, 11, 7, 15, 22, 10, 8, 13, 7, 10, 4, 5, 4, 5, 9, 8, 5, 11, 13, 10, 4, 9, 6, 15, 138, 15, 6, 8, 6, 15, 5, 9, 9, 4, 16, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [9, 10, 11, 9, 9, 10, 10, 10, 10, 11, 14, 12, 11, 9, 11, 6, 9, 9, 4, 8, 4, 9, 10, 9, 10, 7, 12, 8, 9, 5, 5, 4, 11, 12, 7, 11, 11, 10, 9, 9, 7, 11, 10, 11, 9, 12, 8, 9, 3, 159]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [14, 10, 4, 5, 11, 5, 9, 15, 12, 11, 5, 11, 12, 5, 8, 12, 16, 3, 25, 12, 10, 12, 13, 13, 13, 3, 3, 3, 10, 11, 4, 94, 4, 3, 13, 7, 3, 12, 4, 14, 8, 10, 12, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 10, 8, 11, 4, 5, 9, 9, 56, 15, 7, 7, 300, 10, 7, 4, 9, 6, 5, 396, 6, 9, 7, 31, 13, 8, 8, 31, 12, 11, 10, 5, 4, 11, 10, 11, 5, 6, 6, 6, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 7, 4, 9, 8, 4, 8, 7, 4, 8, 9, 10, 6, 11, 9, 11, 3, 13, 13, 8, 8, 6, 7, 7, 305, 7, 302, 12, 11, 9, 9, 9, 5, 9, 7, 16, 11, 7, 9, 12, 10, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [12, 9, 8, 7, 7, 9, 10, 8, 10, 4, 8, 9, 6, 5, 6, 150, 6, 7, 9, 8, 10, 51, 10, 4, 13, 5, 10, 9, 8, 9, 8, 8, 5, 8, 10, 5, 8, 7, 8, 9, 6, 11, 5, 5, 11, 4, 8, 4, 6, 9, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 9, 11, 5, 5, 7, 4, 6, 9, 10, 7, 9, 3, 10, 8, 7, 6, 12, 6, 9, 7, 9, 6, 11, 10, 7, 4, 7, 20, 6, 6, 8, 8, 10, 10, 8, 6, 10, 5, 7, 9, 4, 7, 10, 6, 11, 8, 7, 6, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 4, 6, 6, 4, 9, 6, 4, 8, 8, 4, 5, 41, 8, 6, 4, 5, 5, 6, 9, 6, 6, 6, 10, 7, 12, 15, 4, 5, 8, 6, 5, 7, 8, 4, 6, 6, 8, 5, 8, 7, 6, 8, 8, 5, 6, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [7, 9, 10, 9, 9, 4, 3, 9, 8, 9, 9, 4, 356, 9, 10, 7, 9, 8, 12, 6, 10, 5, 9, 10, 7, 10, 7, 5, 9, 10, 10, 9, 11, 10, 8, 4, 10, 8, 10, 4, 39, 11, 6, 224, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 6, 8, 10, 8, 8, 6, 10, 7, 7, 5, 7, 8, 10, 8, 5, 13, 8, 8, 5, 8, 10, 11, 41, 8, 7, 9, 7, 7, 4, 9, 10, 6, 8, 12, 10, 5, 13, 9, 8, 7, 12, 11, 18, 130, 9, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 6, 12, 9, 5, 3, 8, 4, 5, 7, 3, 9, 45, 4, 4, 22, 12, 10, 343, 4, 7, 6, 9, 7, 87, 11, 6, 9, 8, 6, 8, 4, 8, 8, 6, 4, 5, 9, 11, 10, 14, 8, 5, 9, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 7, 6, 5, 9, 4, 7, 8, 7, 5, 8, 338, 13, 6, 9, 7, 6, 10, 424, 8, 8, 4, 4, 7, 12, 11, 5, 15, 12, 9, 6, 11, 7, 8, 10, 9, 10, 8, 9, 5, 7, 8, 6, 10, 8, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [5, 11, 11, 9, 9, 10, 13, 10, 10, 79, 10, 10, 10, 10, 9, 9, 9, 9, 21, 10, 11, 5, 10, 10, 9, 12, 9, 11, 9, 9, 14, 10, 10, 10, 8, 11, 14, 10, 4, 9, 8, 9, 8, 141, 10, 16, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [13, 8, 10, 10, 5, 5, 4, 5, 11, 10, 6, 9, 7, 4, 10, 7, 7, 11, 11, 10, 11, 5, 9, 3, 6, 8, 3, 6, 9, 10, 4, 9, 5, 7, 12, 8, 13, 10, 4, 10, 5, 6, 9, 6, 8, 9, 3, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [12, 7, 3, 6, 5, 5, 5, 4, 9, 6, 11, 11, 8, 7, 6, 4, 6, 8, 11, 4, 10, 6, 25, 4, 168, 7, 5, 7, 9, 6, 14, 7, 7, 9, 10, 4, 8, 5, 6, 8, 7, 6, 11, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [10, 10, 14, 11, 11, 10, 13, 7, 8, 7, 17, 11, 12, 7, 8, 11, 7, 10, 14, 9, 8, 11, 7, 4, 90, 10, 13, 8, 13, 8, 11, 9, 7, 7, 10, 9, 10, 11, 13, 7, 9, 13, 10, 58]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [18, 5, 8, 9, 13, 8, 7, 9, 9, 10, 10, 8, 7, 7, 9, 4, 9, 10, 10, 10, 10, 9, 10, 8, 9, 8, 9, 23, 9, 7, 10, 10, 8, 7, 6, 7, 101, 8, 8, 10, 9, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [6, 10, 6, 3, 7, 10, 8, 8, 9, 4, 9, 10, 43, 10, 72, 7, 11, 9, 8, 10, 10, 7, 7, 8, 6, 7, 130, 10, 6, 7, 9, 6, 8, 6, 6, 423, 12, 7, 3, 10, 5, 5, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [8, 16, 8, 6, 9, 10, 9, 8, 8, 11, 8, 16, 7, 8, 9, 13, 9, 8, 11, 9, 11, 8, 17, 9, 14, 14, 6, 6, 10, 10, 11, 4, 5, 14, 6, 8, 7, 23, 6, 6, 8, 12, 9, 8, 8, 34, 12, 8, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [8, 5, 11, 4, 12, 7, 7, 11, 9, 10, 6, 320, 8, 7, 9, 4, 8, 8, 10, 10, 7, 8, 6, 9, 316, 26, 9, 10, 9, 7, 4, 10, 9, 8, 7, 10, 12, 6, 9, 10, 10, 172, 11, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [21, 7, 2, 7, 11, 6, 112, 12, 7, 8, 8, 15, 9, 13, 11, 9, 13, 4, 11, 11, 133, 9, 10, 7, 6, 11, 6, 6, 12, 8, 9, 147, 10, 9, 5, 8, 8, 8, 11, 11, 11, 8, 10, 16, 6, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [3, 13, 4, 12, 5, 15, 12, 14, 4, 11, 3, 14, 13, 4, 14, 3, 12, 2, 15, 13, 3, 15, 5, 12, 14, 2, 24, 15, 82, 14, 7, 14, 15, 17, 14, 20, 4, 16, 15, 3, 4, 10, 13, 15, 13, 9, 4, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 15, 12, 11, 13, 4, 14, 13, 12, 14, 11, 12, 4, 4, 22, 5, 11, 11, 11, 14, 4, 12, 40, 4, 12, 4, 5, 12, 14, 4, 3, 13, 4, 38, 12, 76, 13, 4, 14, 4, 15, 14, 13, 14, 12, 16]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [3, 11, 12, 7, 11, 17, 12, 20, 13, 13, 14, 11, 11, 12, 5, 12, 11, 3, 12, 2, 16, 13, 29, 13, 14, 13, 11, 16, 15, 11, 13, 3, 13, 13, 11, 45, 12, 4, 46, 13, 13, 17, 15, 12, 12, 12, 12, 64, 14]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [2, 11, 13, 13, 12, 13, 17, 11, 12, 12, 11, 13, 7, 13, 11, 20, 11, 12, 11, 13, 9, 12, 11, 12, 12, 3, 13, 12, 13, 14, 14, 12, 12, 21, 12, 12, 12, 11, 13, 16, 14, 14, 7, 13, 17, 11, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [17, 11, 23, 6, 11, 20, 10, 11, 4, 11, 6, 9, 11, 5, 6, 6, 4, 3, 13, 21, 33, 12, 12, 5, 11, 40, 4, 22, 24, 21, 12, 19, 6, 22, 64, 12, 3, 65, 70, 24, 21, 3, 18, 185, 52, 3, 14]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [6, 8, 11, 6, 8, 10, 9, 9, 8, 14, 9, 13, 11, 11, 14, 7, 10, 8, 10, 8, 8, 10, 7, 9, 11, 11, 10, 11, 9, 14, 9, 9, 11, 8, 10, 22, 8, 9, 18, 40, 10, 6, 8, 16, 10, 9, 10, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [16, 9, 9, 11, 7, 8, 4, 7, 7, 8, 7, 9, 13, 10, 19, 5, 7, 8, 10, 8, 10, 5, 11, 11, 5, 8, 16, 6, 7, 11, 7, 13, 8, 4, 8, 12, 9, 8, 6, 8, 7, 6, 493, 19, 8, 10, 34, 452]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 5, 9, 11, 6, 11, 5, 9, 8, 10, 9, 5, 321, 9, 9, 6, 7, 7, 14, 8, 17, 8, 6, 10, 8, 8, 8, 8, 5, 7, 6, 11, 13, 7, 8, 8, 4, 5, 9, 159, 12, 10, 112]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 9, 12, 11, 8, 9, 92, 7, 9, 12, 9, 5, 94, 8, 11, 11, 4, 4, 10, 8, 19, 3, 5, 4, 5, 8, 8, 9, 9, 5, 10, 4, 7, 10, 5, 12, 12, 13, 9, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [4, 16, 3, 10, 12, 4, 11, 13, 8, 9, 10, 6, 8, 2, 10, 17, 10, 13, 8, 5, 5, 17, 8, 10, 11, 10, 32, 10, 12, 4, 15, 8, 16, 233, 10, 10, 9, 11, 15, 11, 9, 10, 5, 12, 14]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [4, 7, 10, 7, 11, 10, 5, 9, 5, 5, 6, 9, 10, 5, 4, 56, 14, 7, 9, 9, 10, 7, 11, 9, 7, 10, 9, 10, 5, 4, 7, 7, 6, 13, 9, 8, 5, 8, 6, 8, 11, 4, 9, 11, 11, 64, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 7, 5, 8, 6, 7, 13, 22, 5, 7, 10, 5, 7, 5, 5, 6, 8, 8, 8, 9, 177, 23, 14, 16, 7, 10, 7, 5, 7, 7, 6, 5, 11, 103, 9, 10, 5, 9, 11, 12, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 5, 8, 4, 4, 6, 9, 8, 3, 4, 10, 10, 7, 8, 4, 6, 6, 13, 11, 15, 6, 6, 6, 4, 12, 6, 11, 8, 6, 7, 9, 14, 8, 8, 6, 6, 4, 9, 5, 7, 8, 7, 29, 20, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [15, 9, 4, 7, 10, 8, 12, 4, 8, 10, 8, 9, 4, 11, 147, 14, 9, 10, 10, 4, 10, 58, 7, 9, 10, 10, 6, 11, 11, 8, 12, 12, 7, 7, 7, 7, 6, 10, 6, 13, 5, 4, 7, 10, 10, 12, 5, 10, 13, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 4, 18, 5, 8, 6, 10, 8, 10, 5, 8, 13, 5, 4, 5, 5, 10, 11, 180, 5, 8, 3, 9, 5, 8, 5, 10, 9, 8, 5, 13, 3, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 12, 12, 5, 5, 4, 11, 4, 11, 12, 4, 12, 13, 8, 11, 13, 14, 10, 3, 2, 4, 3, 6, 11, 9, 11, 10, 12, 4, 4, 3, 14, 12, 20, 11, 8, 13, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [4, 12, 12, 12, 11, 10, 12, 10, 11, 3, 9, 10, 12, 10, 7, 12, 10, 6, 11, 6, 9, 12, 8, 10, 9, 8, 11, 3, 96, 9, 10, 13, 8, 13, 9, 7, 14, 8, 6, 14, 6, 5, 10, 15, 7, 6, 65, 10, 8, 5, 47, 10, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [6, 10, 12, 11, 12, 11, 9, 12, 4, 11, 3, 11, 5, 14, 12, 12, 359, 12, 11, 10, 13, 12, 4, 10, 14, 10, 2, 11, 11, 10, 11, 10, 13, 14, 25, 12, 10, 10, 12, 404, 11, 12, 10, 13, 2, 12, 12]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 7, 4, 7, 4, 7, 6, 6, 8, 6, 4, 4, 7, 3, 5, 6, 55, 5, 7, 7, 4, 6, 6, 6, 6, 5, 271, 9, 38, 5, 4, 8, 2]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 11, 16, 13, 12, 9, 6, 11, 14, 14, 7, 8, 3, 3, 3, 3, 7, 5, 14, 12, 18, 3, 14, 4, 11, 7, 11, 13, 14, 9, 7, 7, 13, 11, 192, 7, 153, 10, 9, 12, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 8, 6, 8, 7, 6, 9, 4, 7, 6, 7, 9, 9, 9, 4, 9, 6, 7, 6, 8, 235, 62, 4, 6, 8, 11, 8, 10, 9, 9, 7, 7, 6, 7, 6, 9, 175, 8, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [6, 5, 10, 7, 13, 10, 8, 10, 14, 8, 14, 7, 10, 4, 12, 10, 4, 4, 9, 11, 6, 7, 10, 10, 4, 11, 11, 6, 14, 15, 14, 11, 3, 10, 12, 7, 15, 7, 11, 16, 13, 19, 6]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 10, 14, 10, 4, 11, 8, 12, 13, 5, 115, 9, 9, 8, 9, 3, 8, 11, 11, 10, 12, 11, 8, 20, 11, 9, 10, 10, 9, 12, 8, 11, 5, 8, 14, 13, 7, 10, 4, 10, 10, 11, 9, 9, 20, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 8, 8, 8, 11, 7, 6, 3, 17, 10, 6, 8, 8, 9, 3, 5, 4, 6, 66, 6, 6, 5, 4, 8, 5, 5, 3, 6, 10, 7, 9, 9, 5, 12, 3, 24]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 9, 10, 4, 4, 9, 3, 10, 12, 10, 4, 10, 8, 13, 4, 10, 6, 7, 10, 9, 11, 11, 11, 5, 6, 10, 6, 3, 48, 14, 8, 9, 10, 11, 5, 9, 8, 13, 10, 99, 12]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [4, 11, 12, 7, 5, 11, 9, 9, 15, 10, 3, 8, 4, 4, 11, 7, 5, 10, 95, 12, 4, 301, 4, 8, 9, 9, 9, 4, 8, 5, 3, 326, 13, 10, 12, 4, 12, 5, 8, 14, 5, 10, 5, 12]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 14, 15, 7, 3, 15, 11, 4, 4, 8, 5, 4, 4, 7, 8, 6, 4, 7, 15, 5, 5, 8, 16, 7, 6, 7, 7, 13, 13, 8, 10, 14, 4, 7, 7, 6, 7, 12, 4, 5, 4, 16]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 5, 4, 6, 5, 5, 10, 4, 6, 4, 5, 4, 6, 8, 5, 4, 18, 5, 6, 4, 8, 5, 4, 8, 94, 7, 8, 5, 6, 4, 5, 6, 6, 5, 5, 14, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [17, 4, 4, 5, 10, 10, 9, 10, 4, 14, 13, 11, 235, 12, 5, 17, 10, 11, 9, 9, 11, 11, 11, 5, 12, 10, 4, 15, 4, 12, 9, 11, 9, 5, 10, 7, 13, 6, 9, 11, 14]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [16, 14, 12, 4, 6, 6, 8, 5, 9, 12, 4, 6, 10, 9, 9, 5, 8, 9, 5, 11, 6, 482, 10, 4, 12, 8, 9, 8, 4, 9, 9, 4, 4, 14, 14, 516, 9, 14, 6, 9, 2, 9, 9, 11, 34]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [12, 4, 8, 10, 14, 10, 12, 4, 8, 6, 12, 8, 7, 18, 17, 8, 6, 8, 11, 9, 13, 4, 11, 6, 9, 5, 6, 4, 14, 10, 11, 45, 10, 10, 13, 11, 5, 3, 12, 8, 22]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [25, 4, 7, 9, 6, 5, 6, 7, 11, 9, 7, 7, 117, 7, 8, 10, 8, 14, 6, 7, 8, 9, 6, 7, 244, 6, 14, 12, 7, 7, 5, 9, 10, 14, 10, 9, 7, 7, 6, 14, 10, 9, 6, 12, 12, 4, 12, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [7, 14, 4, 9, 7, 6, 4, 7, 6, 5, 9, 6, 9, 5, 59, 8, 14, 4, 136, 6, 7, 4, 7, 4, 6, 7, 8, 8, 4, 16, 6, 6, 9, 11, 8, 6, 201, 27, 6, 8, 7, 5, 6, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 5, 11, 4, 4, 11, 7, 6, 9, 4, 10, 9, 5, 13, 9, 8, 10, 4, 11, 9, 8, 124, 33, 8, 9, 6, 24, 9, 10, 57, 10, 11, 9, 6, 10, 8, 7, 4, 4, 11, 11, 7, 5, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 8, 4, 4, 5, 6, 3, 6, 9, 11, 8, 10, 4, 8, 5, 4, 4, 6, 9, 9, 7, 429, 10, 6, 122, 13, 9, 9, 6, 7, 11, 4, 6, 10, 7, 10, 6, 8, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [10, 9, 9, 12, 6, 11, 10, 7, 7, 6, 6, 6, 6, 8, 7, 5, 11, 5, 4, 11, 10, 12, 159, 15, 56, 10, 5, 11, 12, 9, 4, 6, 4, 10, 3, 8, 11, 14, 5, 5, 11, 6, 11, 12, 4, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [11, 4, 9, 6, 6, 6, 5, 9, 8, 6, 6, 4, 7, 47, 5, 7, 9, 6, 3, 8, 9, 17, 204, 8, 10, 6, 8, 6, 6, 6, 7, 11, 15, 8, 8, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 7, 7, 7, 7, 4, 7, 7, 7, 5, 5, 6, 5, 7, 9, 5, 12, 5, 8, 6, 5, 7, 7, 4, 4, 32, 7, 5, 8, 6, 14, 7, 5, 5, 5, 10, 7, 10, 44, 8, 6, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [6, 8, 10, 6, 6, 11, 10, 4, 6, 5, 7, 8, 16, 7, 7, 6, 8, 5, 9, 6, 6, 425, 13, 7, 7, 6, 12, 14, 7, 5, 9, 238, 6, 3, 173, 4, 8, 7, 9, 5, 4, 7, 12, 559]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 10, 4, 8, 6, 4, 12, 9, 8, 7, 11, 30, 7, 9, 6, 6, 11, 11, 4, 4, 12, 205, 9, 10, 8, 10, 5, 4, 288, 6, 8, 18, 169, 8, 4, 6, 10, 13, 189]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [14, 13, 6, 5, 7, 5, 6, 7, 4, 6, 7, 4, 6, 190, 6, 7, 23, 10, 18, 8, 10, 8, 10, 6, 15, 12, 11, 6, 7, 6, 7, 16, 8, 10, 6, 7, 5, 6, 7, 7, 13, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 7, 10, 7, 7, 8, 7, 5, 11, 8, 9, 6, 6, 12, 19, 58, 11, 6, 9, 15, 9, 8, 4, 8, 7, 11, 7, 7, 11, 5, 6, 7, 7, 6, 11, 13, 63, 6, 7, 300, 6, 6, 16, 11, 12, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [3, 4, 9, 12, 9, 9, 11, 12, 11, 9, 6, 11, 15, 7, 23, 11, 6, 25, 4, 16, 37, 8, 10, 8, 11, 17, 9, 11, 10, 11, 5, 7, 10, 13, 8, 11, 6, 8, 12, 14, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [3, 16, 8, 15, 15, 17, 3, 5, 16, 8, 15, 5, 11, 11, 10, 6, 17, 13, 13, 13, 13, 13, 17, 17, 15, 8, 6, 24, 16, 17, 17, 14, 7, 9, 15, 11, 3, 11, 12, 12, 13, 14, 8, 19, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [2, 5, 10, 9, 10, 10, 9, 12, 6, 8, 13, 9, 9, 9, 8, 8, 9, 9, 10, 19, 13, 9, 7, 8, 11, 15, 9, 10, 9, 13, 8, 12, 5, 8, 11, 15, 10, 8, 10, 12, 11, 10, 10, 7, 10, 11, 9, 11, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [12, 15, 16, 11, 10, 12, 9, 14, 11, 17, 14, 8, 14, 8, 17, 16, 15, 18, 11, 9, 14, 15, 14, 15, 15, 16, 14, 8, 16, 16, 6, 15, 9, 14, 10, 6, 6, 15, 14, 6, 146, 14, 14, 20, 6, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [4, 6, 13, 9, 10, 7, 11, 7, 8, 6, 11, 10, 8, 4, 14, 7, 12, 9, 9, 14, 13, 4, 11, 9, 45, 10, 9, 12, 8, 15, 12, 10, 10, 7, 10, 12, 12, 10, 22, 13, 11, 9, 11, 9, 21, 13]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [3, 9, 14, 8, 6, 4, 7, 8, 34, 5, 25, 8, 16, 8, 5, 9, 115, 14, 517, 9, 9, 9, 5, 3, 7, 6, 5, 8, 7, 8, 11, 6, 3, 5, 13, 12, 5, 7, 7, 11, 13, 18, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [19, 5, 13, 6, 3, 8, 5, 4, 7, 12, 34, 18, 6, 6, 13, 37, 7, 4, 3, 17, 13, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 6, 13, 12, 5, 4, 3, 4, 20, 10, 6, 21, 6, 7, 11, 6, 6, 7, 6, 5, 12, 4, 3, 9, 5, 12, 143, 8, 3, 6, 6, 138, 18, 8, 19]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 11, 10, 10, 7, 9, 9, 4, 12, 7, 15, 5, 12, 9, 4, 43, 4, 9, 12, 7, 11, 5, 4, 8, 7, 10, 7, 8, 4, 5, 11, 5, 7, 5, 3, 6, 12, 8, 8, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [9, 7, 9, 10, 5, 7, 4, 11, 6, 9, 7, 4, 8, 8, 9, 6, 6, 10, 10, 5, 14, 7, 9, 9, 10, 8, 9, 6, 11, 11, 6, 8, 7, 7, 13, 11, 8, 9, 11, 6, 7, 10, 8, 9, 10, 8, 6, 9, 11, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [12, 7, 7, 4, 10, 7, 15, 7, 51, 13, 8, 9, 7, 6, 9, 12, 9, 10, 7, 11, 6, 8, 11, 9, 7, 8, 7, 8, 7, 7, 5, 7, 9, 7, 12, 8, 12, 11, 12, 7, 7, 12, 12, 10, 10, 43, 146, 38, 11, 15]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 11, 6, 11, 11, 6, 8, 11, 17, 4, 13, 20, 7, 12, 8, 5, 6, 7, 5, 7, 5, 11, 10, 11, 6, 13, 10, 8, 5, 6, 155, 6, 12, 11, 11, 15, 20, 11, 11, 7]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 9, 7, 7, 10, 12, 10, 10, 8, 4, 8, 9, 8, 6, 11, 11, 238, 10, 10, 10, 9, 12, 11, 10, 9, 9, 11, 6, 4, 11, 8, 8, 4, 8, 11, 10, 9, 8, 11, 5, 11, 7, 10, 8, 11, 10, 9, 10, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 6, 8, 5, 4, 11, 4, 9, 3, 4, 20, 4, 7, 4, 6, 11, 12, 4, 7, 4, 5, 3, 4, 11, 6, 10, 4, 7, 6, 6, 4, 4, 5, 9, 5, 5, 10, 5, 5, 5, 10, 4, 13, 4, 14]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [10, 9, 13, 11, 7, 9, 8, 6, 6, 9, 11, 13, 7, 8, 8, 11, 7, 9, 7, 10, 6, 149, 11, 9, 9, 11, 9, 12, 74, 12, 6, 10, 9, 8, 16, 7, 8, 10, 10, 10, 7, 10, 8, 22, 6, 12, 12, 12, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 8, 7, 12, 13, 9, 7, 14, 13, 13, 213, 7, 15, 114, 7, 5, 8, 5, 11, 7, 8, 8, 12, 10, 14, 6, 75, 8, 12, 7, 8, 18, 6, 16, 8, 8, 12, 5, 13, 21, 13, 13]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 6, 9, 10, 8, 10, 9, 44, 9, 11, 10, 10, 8, 5, 6, 11, 8, 8, 13, 10, 11, 10, 8, 10, 8, 6, 7, 9, 15, 108, 9, 10, 10, 10, 10, 128, 11, 371, 8, 20, 9, 10, 12, 15, 7, 8, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 6, 4, 7, 7, 7, 5, 4, 7, 12, 7, 7, 8, 7, 3, 7, 12, 10, 8, 5, 6, 7, 6, 8, 12, 7, 9, 6, 7, 148, 9, 12, 14, 4, 350, 6, 8, 7, 5, 5, 8, 13, 5, 6, 11, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [16, 9, 9, 6, 11, 7, 11, 14, 6, 4, 11, 6, 13, 9, 12, 9, 12, 11, 9, 9, 8, 7, 9, 11, 4, 11, 9, 11, 12, 9, 11, 6, 10, 7, 8, 8, 12, 11, 11, 4, 7, 11, 12, 14, 14, 16]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [6, 8, 17, 8, 14, 13, 14, 12, 9, 10, 13, 13, 8, 9, 16, 6, 15, 9, 8, 13, 14, 11, 10, 12, 6, 13, 9, 19, 15, 9, 9, 8, 14, 14, 13, 12, 12, 12, 18, 8, 14, 14, 7, 10, 7, 14, 15]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 6, 6, 6, 86, 8, 6, 7, 11, 10, 8, 5, 8, 10, 9, 5, 7, 6, 10, 13, 10, 6, 14, 9, 7, 7, 8, 8, 11, 3, 4, 26, 332, 6, 8, 7, 6, 13, 8, 8, 9, 9, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [16, 8, 12, 11, 11, 6, 8, 5, 6, 11, 6, 6, 35, 12, 6, 6, 7, 7, 8, 6, 7, 8, 7, 9, 9, 7, 5, 6, 6, 4, 8, 7, 4, 7, 7, 4, 7, 5, 10, 5, 6, 11, 8, 14, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 10, 7, 7, 8, 9, 8, 8, 5, 4, 8, 10, 335, 10, 8, 7, 7, 6, 4, 6, 8, 126, 7, 5, 9, 8, 10, 7, 9, 6, 8, 8, 10, 6, 6, 8, 59, 6, 10, 7, 9, 8, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 6, 14, 5, 4, 5, 5, 5, 5, 8, 13, 7, 8, 9, 14, 10, 78, 7, 5, 12, 5, 14, 9, 4, 4, 5, 5, 11, 4, 11, 5, 7, 79, 5, 9, 4, 13, 35, 10, 14, 6, 5, 5, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [6, 10, 3, 14, 6, 5, 8, 4, 7, 11, 13, 6, 5, 6, 7, 7, 10, 5, 5, 6, 10, 11, 7, 9, 3, 11, 4, 8, 5, 7, 12, 8, 6, 8, 11, 5, 5, 13, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [15, 14, 10, 15, 4, 4, 17, 14, 3, 4, 13, 4, 14, 13, 4, 7, 7, 16, 18, 9, 14, 14, 17, 15, 14, 12, 22, 16, 13, 6, 8, 16, 16, 5, 8, 6, 15, 6, 8, 14, 6, 8, 15, 6, 26]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [6, 4, 16, 11, 15, 13, 15, 19, 6, 9, 13, 5, 14, 18, 367, 14, 19, 12, 16, 16, 39, 17, 4, 10, 9, 6, 8, 18, 14, 14, 17, 6, 13, 12, 17, 19, 6, 13, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [14, 14, 14, 14, 13, 12, 16, 15, 14, 14, 16, 15, 13, 17, 15, 15, 13, 16, 13, 12, 14, 16, 15, 13, 16, 13, 15, 13, 16, 13, 15, 14, 13, 12, 17, 13, 16, 14, 14, 16, 3, 15, 12, 14, 13, 305, 16, 85, 13]
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [14, 14, 14, 14, 12, 14, 14, 14, 15, 19, 14, 13, 14, 16, 15, 12, 13, 4, 13, 114, 12, 13, 14, 14, 12, 14, 15, 15, 14, 13, 14, 13, 12, 18, 14, 14, 12, 14, 14, 14, 15, 15, 14, 13, 14, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [13, 19, 18, 12, 15, 16, 13, 15, 14, 3, 14, 13, 4, 22, 18, 13, 12, 17, 19, 16, 15, 19, 16, 18, 3, 17, 17, 13, 12, 10, 3, 14, 15, 19, 17, 13, 16, 15, 17, 17, 13, 18, 13, 18, 17, 18, 14, 14, 3, 13]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [4, 8, 16, 6, 6, 7, 10, 5, 6, 7, 15, 8, 10, 6, 5, 9, 16, 4, 9, 17, 16, 101, 7, 7, 6, 7, 16, 7, 4, 10, 4, 8, 14, 13, 13, 6, 5, 18, 5, 13]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [16, 10, 9, 11, 12, 12, 8, 12, 10, 7, 5, 10, 8, 11, 9, 10, 9, 13, 14, 9, 10, 11, 9, 10, 10, 9, 9, 9, 11, 10, 9, 11, 12, 7, 9, 9, 11, 9, 11, 10, 9, 10, 12, 5, 13]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [13, 8, 8, 10, 8, 10, 7, 9, 10, 9, 11, 9, 10, 40, 404, 504, 9, 10, 7, 9, 9, 9, 10, 23, 137, 4, 12, 11, 9, 9, 10, 11, 6, 11, 11, 116, 8, 8, 21, 11, 9, 8, 42, 9, 9, 9, 13, 10, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [10, 9, 9, 9, 4, 7, 7, 4, 8, 4, 10, 11, 8, 7, 4, 4, 7, 8, 12, 6, 3, 8, 4, 4, 4, 9, 4, 4, 6, 9, 5, 6, 12, 5, 24, 4, 8, 4, 8, 9, 9, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [7, 12, 12, 8, 17, 8, 6, 9, 8, 8, 14, 6, 10, 12, 5, 8, 10, 10, 9, 11, 12, 9, 71, 9, 12, 8, 11, 4, 9, 9, 8, 16, 10, 15, 11, 53, 4, 12, 11, 14, 61, 9, 10, 8, 8, 9, 10, 6, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 6, 7, 10, 5, 5, 11, 7, 8, 6, 7, 5, 261, 15, 11, 9, 11, 8, 10, 9, 8, 10, 14, 8, 5, 9, 7, 20, 9, 10, 9, 7, 8, 6, 5, 9, 6, 18, 8, 5, 9, 10, 6, 11, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [9, 5, 13, 15, 10, 9, 8, 11, 9, 13, 13, 8, 14, 12, 11, 16, 10, 8, 11, 10, 9, 10, 10, 226, 10, 9, 14, 10, 9, 11, 10, 10, 13, 13, 9, 13, 14, 8, 13, 9, 10, 9, 12, 13, 12, 377, 9, 8, 11, 15, 74]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 9, 8, 8, 4, 10, 11, 10, 9, 9, 4, 9, 9, 16, 9, 10, 8, 7, 9, 9, 10, 12, 10, 7, 10, 10, 11, 9, 10, 8, 9, 10, 9, 4, 9, 10, 11, 10, 8, 8, 12, 12, 8, 9, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [7, 11, 6, 6, 7, 14, 10, 6, 9, 6, 7, 11, 207, 3, 11, 77, 12, 7, 5, 7, 10, 6, 6, 23, 14, 12, 6, 9, 7, 14, 6, 11, 12, 8, 10, 9, 9, 6, 7, 419, 7, 7, 8, 6, 8, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [12, 10, 9, 8, 10, 12, 11, 11, 15, 5, 17, 15, 11, 9, 9, 10, 11, 4, 13, 13, 11, 11, 11, 11, 10, 13, 17, 10, 10, 16, 22, 29, 13, 11, 49, 15, 10, 10, 13, 13, 13, 34, 8, 11, 13, 10, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [5, 11, 10, 8, 13, 11, 144, 5, 11, 13, 10, 9, 7, 9, 9, 7, 41, 6, 9, 8, 4, 7, 8, 6, 12, 11, 2, 11, 23, 10, 10, 131, 12, 7, 8, 9, 10, 10, 9, 12, 13, 11, 13, 7, 10]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [13, 14, 12, 13, 16, 8, 7, 8, 15, 9, 7, 9, 19, 12, 11, 8, 5, 9, 12, 114, 3, 9, 19, 8, 9, 10, 15, 11, 8, 7, 8, 16, 8, 14, 9, 11, 10, 17, 15, 12, 11, 9, 14, 8, 28, 23, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [11, 11, 13, 12, 7, 11, 9, 9, 12, 6, 4, 12, 9, 12, 12, 12, 14, 7, 13, 6, 11, 12, 4, 47, 8, 9, 9, 4, 8, 8, 11, 11, 10, 9, 10, 7, 11, 8, 8, 9, 11, 12, 9, 53, 10, 14, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [6, 10, 11, 13, 10, 12, 12, 8, 10, 10, 11, 10, 10, 11, 376, 7, 11, 10, 12, 13, 11, 101, 11, 12, 8, 7, 13, 9, 13, 11, 11, 6, 10, 10, 13, 12, 21, 10, 12, 11, 11, 12, 7, 11, 8, 125, 11, 16, 11, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [8, 13, 9, 9, 10, 7, 10, 7, 6, 11, 10, 9, 8, 6, 10, 6, 10, 12, 9, 8, 12, 10, 9, 10, 12, 10, 10, 8, 11, 16, 9, 24, 10, 13, 11, 14, 8, 9, 9, 9, 10, 14, 9, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [14, 11, 9, 11, 11, 11, 10, 12, 12, 8, 14, 8, 12, 14, 342, 13, 13, 9, 9, 12, 11, 11, 10, 5, 187, 10, 9, 12, 18, 9, 10, 8, 11, 5, 9, 11, 11, 10, 10, 8, 12, 8, 8, 9, 7, 9, 9]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [10, 7, 6, 6, 5, 10, 10, 12, 8, 9, 10, 22, 10, 82, 11, 10, 7, 7, 12, 51, 8, 9, 12, 11, 15, 6, 19, 9, 11, 15, 7, 10, 9, 11, 8, 12, 6, 12, 11, 12, 12, 10, 8, 11, 6, 12, 6, 11, 11, 9, 11, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [14, 9, 5, 8, 10, 9, 10, 10, 11, 5, 9, 12, 9, 9, 10, 10, 4, 10, 14, 10, 10, 11, 11, 10, 12, 9, 9, 7, 13, 9, 12, 8, 9, 9, 4, 5, 12, 8, 13, 6, 11, 13, 9, 12, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 9, 8, 10, 10, 8, 8, 13, 10, 13, 6, 10, 8, 6, 12, 12, 24, 8, 12, 9, 8, 10, 11, 10, 11, 10, 7, 9, 6, 9, 11, 11, 11, 10, 9, 7, 6, 14, 12, 12, 10, 5, 11, 9, 264, 16]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [15, 10, 10, 8, 11, 8, 8, 10, 7, 11, 7, 4, 4, 8, 9, 7, 10, 8, 10, 6, 18, 8, 11, 6, 6, 7, 9, 8, 9, 5, 7, 9, 10, 8, 7, 172, 8, 9, 7, 10, 6, 8, 8, 10, 6, 7, 9, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 8, 7, 9, 9, 9, 7, 9, 11, 11, 6, 7, 8, 10, 6, 10, 11, 9, 6, 10, 8, 9, 7, 9, 8, 10, 6, 6, 11, 7, 7, 13, 6, 7, 10, 9, 8, 11, 10, 11, 8, 6, 12, 9, 9, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [7, 11, 9, 11, 11, 8, 8, 9, 6, 9, 8, 9, 11, 13, 11, 8, 14, 11, 4, 7, 11, 6, 6, 8, 10, 4, 7, 9, 10, 13, 8, 8, 7, 6, 11, 11, 8, 30, 8, 10, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 8, 8, 5, 7, 4, 9, 10, 9, 5, 8, 22, 9, 7, 8, 11, 11, 8, 5, 7, 10, 8, 8, 6, 10, 13, 7, 10, 9, 4, 6, 8, 9, 11, 9, 9, 10, 159]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [7, 10, 6, 8, 6, 10, 8, 9, 11, 9, 12, 9, 59, 7, 11, 23, 10, 5, 9, 10, 12, 9, 8, 8, 12, 11, 7, 9, 7, 11, 7, 8, 10, 10, 9, 9, 10, 169, 8, 9, 9, 6, 10, 8, 9, 8, 8, 7, 9, 11, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 7, 7, 8, 8, 6, 8, 9, 8, 7, 5, 5, 6, 13, 5, 9, 4, 5, 12, 5, 6, 571, 6, 7, 8, 5, 9, 5, 3, 215, 7, 7, 5, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [11, 11, 4, 10, 13, 12, 6, 10, 5, 19, 6, 8, 6, 7, 18, 9, 6, 5, 6, 21, 6, 7, 5, 10, 5, 12, 7, 8, 35, 7, 7, 9, 11, 12, 119, 8, 6, 12, 16, 10, 8, 4, 4, 9, 7, 10, 6, 40, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 7, 7, 9, 9, 6, 9, 8, 10, 7, 4, 14, 6, 4, 6, 8, 241, 10, 8, 7, 8, 6, 5, 7, 6, 9, 5, 10, 5, 4, 7, 8, 99, 7, 7, 13, 342, 9, 13, 8, 378]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [8, 12, 13, 4, 8, 7, 10, 8, 10, 10, 7, 7, 6, 7, 8, 13, 11, 6, 9, 7, 12, 6, 9, 13, 11, 11, 6, 9, 12, 9, 9, 15, 11, 8, 9, 12, 6, 12, 9, 12, 13, 7, 6, 5, 10, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 5, 7, 9, 5, 6, 10, 10, 9, 7, 11, 9, 6, 6, 7, 5, 9, 5, 15, 10, 5, 8, 17, 10, 8, 7, 11, 6, 9, 8, 12, 115, 81, 6, 10, 9, 7, 8, 5, 7, 16]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 4, 7, 6, 9, 8, 10, 9, 9, 9, 8, 11, 9, 8, 7, 7, 11, 8, 7, 6, 9, 4, 9, 10, 7, 6, 7, 7, 7, 7, 13, 72, 22, 7, 5, 6, 8, 70, 43, 6, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [19, 9, 8, 4, 5, 11, 10, 4, 8, 7, 6, 4, 9, 11, 5, 8, 8, 9, 9, 12, 11, 125, 12, 9, 112, 7, 12, 10, 8, 12, 7, 8, 9, 7, 20, 10]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [19, 9, 9, 9, 6, 9, 5, 3, 6, 4, 6, 9, 4, 7, 6, 9, 9, 7, 9, 17, 6, 38, 3, 9, 7, 12, 6, 8, 7, 8, 10, 10, 13, 10, 3, 8, 6, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 9, 19, 8, 6, 6, 7, 7, 7, 16, 22, 3, 293, 7, 7, 10, 4, 4, 5, 6, 5, 4, 3, 7, 6, 9, 7, 4, 3, 11, 6, 19, 5, 5, 2, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [28, 8, 10, 8, 3, 9, 6, 5, 7, 8, 9, 9, 13, 11, 11, 6, 4, 9, 11, 5, 4, 4, 7, 5, 5, 9, 8, 9, 4, 25, 7, 6, 6, 8, 23, 6, 7, 20, 2, 9, 5, 4, 16]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [22, 10, 5, 7, 10, 6, 10, 9, 6, 10, 10, 17, 6, 12, 10, 19, 4, 8, 8, 10, 6, 13, 18, 9, 8, 6, 8, 8, 19, 11, 6, 11, 16]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [7, 10, 7, 7, 9, 10, 10, 10, 9, 12, 10, 10, 6, 5, 7, 10, 9, 8, 11, 20, 7, 11, 10, 11, 8, 30, 11, 9, 10, 11, 10, 322, 7, 41, 5, 12, 12, 171, 12, 9, 12, 10]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [12, 8, 4, 8, 9, 8, 6, 9, 7, 10, 6, 5, 12, 7, 8, 6, 10, 11, 7, 3, 10, 10, 12, 11, 7, 7, 20, 8, 8, 7, 4, 9, 8, 8, 44, 6, 11, 8, 6, 266, 7, 11, 8, 9, 9, 6, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 10, 8, 9, 12, 10, 10, 4, 8, 8, 12, 10, 8, 9, 6, 10, 7, 11, 8, 8, 8, 17, 12, 10, 7, 7, 9, 4, 9, 101, 8, 8, 8, 9, 7, 7, 10, 6, 10, 11, 13, 9, 7, 9, 15, 10, 20, 9, 11, 9, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 7, 9, 7, 10, 10, 9, 8, 7, 6, 268, 5, 8, 12, 5, 10, 11, 4, 11, 565, 10, 7, 9, 10, 10, 9, 14, 10, 9, 7, 24, 5, 11, 10, 10, 10, 3, 10, 10, 14, 7, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 3, 7, 6, 5, 4, 3, 9, 4, 10, 4, 4, 7, 4, 6, 5, 6, 9, 6, 6, 15, 9, 12, 9, 5, 10, 6, 10, 13, 142]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [15, 15, 5, 10, 10, 11, 5, 6, 8, 12, 7, 6, 12, 10, 11, 8, 8, 6, 8, 8, 6, 6, 12, 8, 7, 13, 10, 8, 10, 12, 12, 8, 9, 28, 9, 7, 11, 7, 9, 10, 8, 8, 9, 6, 13, 8, 11, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 7, 8, 9, 7, 8, 4, 5, 9, 8, 4, 7, 3, 9, 5, 14, 11, 9, 7, 8, 4, 9, 8, 7, 9, 8, 4, 4, 9, 4, 8, 8, 8, 55, 8, 7, 9, 8, 8, 8, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 5, 8, 9, 9, 9, 5, 9, 4, 6, 8, 5, 8, 6, 7, 5, 8, 193, 4, 3, 9, 5, 5, 4, 7, 7, 6, 5, 85, 11, 2, 7, 6, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [7, 12, 10, 11, 4, 13, 4, 10, 13, 13, 13, 13, 14, 15, 10, 13, 12, 275, 14, 13, 12, 11, 6, 12, 4, 12, 8, 11, 15, 13, 14, 13, 11, 11, 12, 15, 13, 15, 8, 3, 11, 12, 12]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 15, 13, 13, 13, 12, 11, 10, 6, 10, 26, 10, 14, 14, 11, 9, 7, 14, 9, 10, 5, 10, 5, 12, 5, 6, 7, 8, 6, 10, 6, 14, 11, 10, 71, 8, 12, 9, 6, 9, 6, 10, 9, 15]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
