┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSFV_1184
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSFV_1184
----------------------------------
number of metabolites : 1917
number of reactions : 2621
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2621 flux variables and 4851 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 5, 2, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 46, 13, 13, 2, 14, 13, 14, 13, 13, 13, 14, 13, 16]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 7, 11, 11, 11, 12, 14, 11, 16, 16, 17, 19, 17, 11, 16, 16, 13, 13, 2, 14, 17, 14, 13, 13, 13, 13, 15, 13, 14, 13, 3, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 13, 11, 16, 16, 17, 17, 17, 11, 16, 16, 13, 13, 2, 2, 9, 14, 13, 14, 13, 13, 13, 14, 2, 14, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 2, 14, 13, 14, 13, 13, 13, 13, 14, 22, 2, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 2, 12, 11, 11, 11, 11, 11, 17, 18, 17, 16, 17, 11, 16, 16, 13, 13, 157, 16, 14, 85, 15, 13, 13, 15, 13, 14, 14, 6, 15, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 11, 11, 15, 11, 11, 11, 16, 16, 17, 16, 17, 11, 73, 16, 13, 13, 5, 14, 13, 14, 13, 79, 13, 16, 15, 14, 13, 5, 13, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 11, 11, 11, 11, 13, 15, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 2, 2, 14, 13, 14, 13, 13, 13, 13, 15, 13, 13, 4, 14, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 12, 11, 12, 12, 12, 11, 17, 17, 18, 17, 18, 11, 17, 17, 14, 14, 4, 15, 14, 15, 14, 14, 15, 14, 4, 14, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 11, 11, 12, 27, 15, 11, 17, 16, 26, 16, 17, 11, 16, 16, 13, 13, 7, 14, 13, 15, 19, 13, 13, 13, 16, 14, 13, 6, 16, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 2, 14, 13, 14, 13, 13, 13, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 11, 6, 11, 11, 14, 11, 11, 11, 16, 17, 17, 16, 18, 11, 16, 16, 13, 13, 9, 14, 13, 14, 13, 13, 13, 14, 13, 7, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [9, 3, 11, 11, 11, 11, 11, 11, 16, 16, 18, 16, 17, 11, 16, 16, 13, 13, 3, 14, 13, 14, 13, 13, 13, 14, 14, 3, 20, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 4, 8, 7, 11, 11, 11, 11, 11, 11, 17, 16, 17, 18, 17, 11, 16, 16, 13, 13, 2, 14, 13, 14, 13, 13, 13, 15, 14, 128, 165, 16, 6, 58, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 11, 11, 11, 11, 11, 16, 16, 17, 17, 17, 12, 16, 16, 13, 55, 3, 14, 13, 14, 16, 13, 13, 13, 14, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 4, 8, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 14, 17, 16, 13, 13, 3, 14, 13, 14, 13, 13, 14, 14, 16, 13, 4, 19, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 15, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 15, 16, 24, 13, 13, 9, 6, 14, 13, 14, 13, 13, 13, 13, 14, 13, 7, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 18, 11, 16, 18, 16, 13, 2, 14, 13, 14, 13, 15, 13, 17, 14, 14, 8, 14, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 7, 12, 11, 18, 11, 11, 11, 16, 17, 17, 16, 17, 11, 16, 16, 13, 13, 6, 18, 13, 14, 15, 13, 15, 13, 14, 13, 13, 7, 20, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 11, 11, 11, 11, 11, 11, 11, 16, 16, 20, 16, 17, 11, 16, 16, 30, 13, 16, 13, 14, 14, 17, 13, 14, 13, 13, 13, 17]
AssertionError("!(isempty(C_list_filtered))")
