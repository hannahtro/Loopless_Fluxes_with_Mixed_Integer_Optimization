┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYS1720
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYS1720
----------------------------------
number of metabolites : 2436
number of reactions : 3357
number of genes : 1707

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 101
max_cuts = 67
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3357 flux variables and 6229 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 11, 2, 2, 3, 2, 8, 2, 2, 2, 8, 4, 40, 40, 41, 41, 4, 16, 9, 9, 9, 14, 16, 16, 9, 9, 9, 3, 2, 4, 6, 3, 8, 270, 39, 16, 15, 11, 14, 42, 43, 9, 2, 3, 2, 2, 6, 6, 8, 228, 13, 18, 4, 8]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 4, 2, 21, 4, 2, 3, 7, 2, 2, 4, 8, 142, 3, 9, 7, 3, 4, 6, 10, 5, 2, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 7, 3, 4, 3, 4, 6, 4, 4, 5, 6, 11, 4, 17, 160, 39, 10, 21, 17, 5, 6, 605, 18, 4, 4, 10, 4, 7, 5, 14, 5, 6, 11, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 9, 5, 2, 2, 4, 17, 10]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 4, 4, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 3, 6, 6, 30, 9, 12, 6, 4, 208, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 4, 17, 241, 4, 5, 3, 4, 7, 28, 24, 5, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 5, 4, 9, 4, 4, 5, 4, 9, 5, 87, 6, 5, 5, 5, 4, 8, 5, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 5, 13, 4, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 30, 7, 5, 3, 3, 3, 5, 10, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 9, 3, 3, 3, 3, 105]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 3, 6, 7, 7, 4, 9, 4, 24, 51, 4, 5, 6, 8, 36, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4, 47, 15, 5, 22, 22, 7, 4, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 211, 5, 4, 61]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 5, 28, 6, 4, 58, 6, 4, 6, 17, 10, 8, 46, 18, 7, 5, 21, 16, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 30, 32, 4, 57, 4, 5, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 207, 4, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 74, 14, 7, 7, 28, 7, 6, 69, 6, 10, 5, 4, 205]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 4, 131, 6, 6, 58, 8, 6, 9, 18, 9, 11, 6, 8, 5, 5, 53, 22, 9, 8, 7, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 7, 5, 85, 211, 5, 7, 9, 5, 59, 5, 8, 6, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 20
termination = MathOptInterface.OPTIMAL
objective_value = 0.4884681293137116
thermo_feasible = true
