┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 45
max_cuts = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6, 34, 248, 82, 24, 4, 35, 3, 3, 52, 165, 32, 3, 19]
length(C_list) = 22
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 4, 3, 4, 4, 11, 4, 75, 122, 3, 4, 11, 10, 551, 4, 4, 4, 59, 11, 4, 424, 93, 300, 147, 10, 4, 13, 18, 4, 3, 4, 4, 3, 263, 7, 4, 22, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 41, 4, 37, 6, 4, 8, 38, 4, 32, 4, 67, 4, 8, 4, 4, 4, 6, 20, 9, 4, 8, 5, 10, 4, 10, 4, 4, 4, 775, 4, 3, 36, 4, 4, 4, 4, 4, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 48, 4, 104, 8, 4, 91, 3, 4, 30, 4, 4, 4, 6, 5, 4, 4, 21, 58, 4, 7, 4, 10, 6, 10, 9, 72, 71, 76, 4, 3, 4, 4, 4, 4, 4, 381]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 16, 4, 6, 4, 6, 3, 4, 4, 4, 4, 41, 4, 4, 4, 4, 25, 8, 4, 6, 156, 67, 10, 3, 13, 3, 11, 64, 4, 3, 4, 4, 4, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 300, 4, 100, 41, 5, 5, 3, 4, 4, 4, 82, 79, 164, 77, 92, 5, 4, 21, 8, 4, 4, 25, 10, 4, 88, 3, 126, 115, 82, 4, 182, 3, 4, 79, 4, 102, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 11, 37, 4, 3, 4, 4, 52, 4, 4, 8, 4, 4, 4, 4, 4, 5, 4, 4, 10, 8, 4, 4, 4, 4, 4, 4, 4, 6, 4, 21, 4, 7, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 69, 4, 247, 6, 237, 11, 9, 225, 224, 84, 4, 11, 4, 133, 4, 225, 50, 12, 150, 54, 150, 10, 4, 8, 225, 51, 11, 3, 51, 24, 4, 108, 4, 4, 126, 86, 224, 105, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 63, 12, 6, 4, 7, 37, 4, 5, 4, 4, 4, 51, 4, 4, 5, 4, 4, 4, 4, 31, 8, 15, 4, 8, 4, 4, 36, 36, 4, 4, 37, 4, 4, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 4, 4, 6, 4, 7, 4, 4, 44, 4, 9, 4, 11, 4, 4, 4, 3, 4, 29, 7, 29, 4, 46, 7, 8, 4, 25, 7, 4, 26, 4, 4, 103, 4, 4, 137, 3, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 4, 4, 73, 4, 7, 53, 4, 37, 4, 5, 4, 236, 4, 4, 10, 4, 30, 22, 3, 6, 12, 10, 8, 4, 4, 4, 5, 3, 6, 7, 4, 5, 66, 4, 4, 4, 47]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 14, 11, 18, 4, 237, 45, 8, 6, 3, 10, 43, 8, 14, 64, 6, 4, 7, 11, 22, 52, 8, 52, 4, 12, 4, 24, 3, 24, 5, 6, 25, 36, 9, 4, 4, 4, 4, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 14, 10, 19, 4, 3, 9, 4, 65, 762, 4, 25, 11, 4, 4, 5, 10, 9, 3, 13, 14, 3, 10, 4, 5, 89, 11, 10, 5, 23, 4, 3, 13, 3, 3, 11, 4, 4, 11, 28, 275]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 13, 3, 31, 6, 4, 7, 6, 5, 22, 10, 11, 10, 8, 4, 5, 4, 4, 5, 7, 8, 3, 32, 3, 12, 4, 9, 4, 9, 4, 28, 3, 5, 19, 4, 4, 4, 4, 4, 3, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 52, 4, 4, 62, 3, 6, 48, 4, 5, 6, 21, 4, 8, 42, 4, 70, 5, 50, 4, 4, 7, 3, 12, 9, 16, 5, 26, 25, 473, 4, 4, 48, 4, 3, 5, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 3, 5, 4, 233, 4, 6, 4, 3, 4, 4, 5, 3, 4, 3, 4, 4, 5, 4, 3, 7, 12, 4, 8, 4, 4, 4, 5, 3, 6, 4, 4, 4, 4, 4, 4, 32]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 22, 4, 4, 147, 5, 5, 3, 9, 3, 4, 5, 3, 7, 3, 5, 41, 3, 4, 4, 4, 3, 4, 8, 4, 4, 4, 3, 4, 157, 4, 4, 4, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [8, 13, 8, 70, 3, 9, 7, 4, 6, 17, 4, 16, 3, 4, 4, 473, 4, 11, 4, 3, 29, 7, 4, 8, 7, 18, 33, 179, 4, 30, 32, 30, 32, 3, 3, 3, 6, 3, 5, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 3, 3, 3, 57, 4, 5, 59, 49, 7, 4, 5, 8, 4, 4, 72, 7, 36, 10, 3, 10, 98, 12, 4, 8, 4, 24, 24, 59, 26, 35, 4, 3, 5, 4, 3, 88, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 3, 10, 4, 39, 4, 6, 8, 18, 3, 8, 4, 58, 6, 4, 3, 5, 4, 4, 4, 4, 92, 3, 12, 9, 4, 3, 3, 5, 4, 8, 4, 11, 238, 20, 8, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [42, 11, 4, 36, 8, 5, 29, 3, 686, 5, 4, 3, 4, 9, 5, 4, 4, 22, 106, 9, 4, 6, 12, 5, 10, 3, 25, 26, 27, 8, 83, 27, 9, 11, 9, 3, 8, 179, 27]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4, 4, 3, 4, 3, 5, 3, 4, 19, 4, 3, 4, 5, 3, 3, 5, 4, 23, 4, 7, 4, 5, 8, 3, 4, 3, 4, 3, 3, 293, 3, 4, 4, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 47, 4, 3, 3, 3, 5, 24, 8, 24, 6, 8, 5, 9, 6, 13, 11, 7, 6, 4, 9, 4, 4, 8, 5, 22, 24, 4, 4, 8, 5, 6, 4, 3, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 20, 4, 3, 4, 27, 4, 5, 23, 6, 25, 4, 4, 4, 5, 4, 4, 4, 3, 21, 4, 4, 3, 4, 22, 4, 8, 3, 23, 24, 23, 4, 4, 4, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 18, 4, 3, 4, 8, 5, 20, 4, 23, 3, 3, 3, 123, 4, 3, 9, 37, 21, 4, 5, 10, 4, 10, 4, 33, 4, 20, 4, 5, 4, 42, 87, 4, 5, 4, 8, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 13, 4, 4, 3, 29, 4, 6, 28, 10, 34, 4, 4, 4, 5, 3, 4, 3, 26, 23, 11, 4, 18, 13, 9, 10, 4, 3, 3, 4, 45, 5, 6, 4, 34, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 4, 13, 18, 6, 4, 3, 4, 6, 20, 4, 78, 3, 113, 4, 5, 27, 13, 49, 60, 4, 11, 12, 3, 10, 8, 27, 136, 19, 70, 43, 7, 3, 6, 3, 3, 6, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 9, 3, 4, 7, 9, 5, 4, 47, 38, 3, 4, 3, 104, 11, 11, 3, 4, 7, 8, 7, 31, 170, 12, 8, 5, 43, 4, 57, 4, 3, 4, 12, 8, 3, 4, 8, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 4, 37, 5, 5, 5, 3, 4, 3, 4, 4, 5, 3, 4, 4, 3, 4, 4, 4, 4, 34, 4, 10, 4, 22, 4, 755, 382, 4, 3, 24, 4, 4, 6, 3, 3, 36]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 20, 3, 4, 20, 13, 5, 16, 6, 3, 4, 9, 5, 4, 5, 7, 29, 68, 3, 10, 12, 8, 4, 4, 3, 3, 4, 50, 6, 3, 4, 4, 11, 10, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 657, 3, 3, 3, 4, 306, 4, 5, 3, 3, 4, 10, 5, 9, 3, 6, 4, 3, 4, 6, 3, 13, 7, 4, 8, 6, 238, 3, 3, 24, 3, 3, 3, 4, 3, 5, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 4, 4, 4, 199, 3, 5, 34, 31, 14, 3, 3, 4, 492, 4, 3, 3, 3, 4, 4, 111, 3, 87, 62, 5, 10, 4, 12, 4, 5, 5, 141, 4, 5, 3, 4, 3, 4, 3, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 5, 4, 4, 4, 6, 22, 5, 43, 4, 4, 3, 52, 4, 5, 3, 4, 4, 3, 4, 147, 5, 8, 4, 6, 23, 4, 47, 4, 4, 36, 4, 3, 4, 171]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 4, 3, 3, 203, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 3, 4, 3, 4, 4, 10, 4, 4, 291, 4, 148, 4, 3, 3, 4, 3, 22, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 11, 4, 3, 10, 5, 22, 4, 4, 8, 3, 9, 5, 4, 4, 3, 22, 4, 11, 3, 3, 12, 10, 8, 3, 7, 3, 5, 4, 3, 3, 5, 3, 15, 5, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [8, 13, 3, 8, 4, 5, 3, 29, 40, 5, 153, 4, 6, 3, 11, 6, 3, 3, 11, 35, 28, 4, 4, 12, 11, 8, 9, 6, 3, 4, 10, 4, 4, 6, 5, 4, 4, 55]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 19, 3, 8, 72, 3, 5, 22, 3, 24, 3, 4, 7, 5, 7, 4, 3, 4, 22, 3, 3, 3, 4, 12, 9, 3, 23, 23, 4, 25, 465, 5, 24, 4, 13, 4, 5, 11]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 4, 4, 11, 3, 3, 3, 3, 3, 9, 5, 3, 3, 3, 6, 8, 3, 5, 7, 210, 4, 3, 4, 44, 5, 128, 4, 4, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 3, 21, 20, 3, 5, 39, 4, 9, 16, 3, 3, 3, 4, 5, 9, 4, 3, 5, 3, 31, 3, 5, 15, 5, 12, 8, 4, 31, 17, 35, 36, 4, 3, 31, 3, 3, 5, 3, 4, 4, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 52, 19, 3, 4, 3, 6, 25, 3, 3, 59, 3, 7, 6, 20, 3, 4, 20, 3, 3, 3, 3, 12, 8, 3, 24, 657, 40, 3, 3, 8, 4, 3, 5, 6, 3, 178]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [5, 16, 4, 6, 3, 3, 4, 15, 5, 26, 4, 29, 6, 4, 11, 6, 11, 6, 6, 6, 22, 6, 6, 5, 103, 3, 24, 9, 22, 23, 22, 5, 4, 5, 26, 6, 7, 425, 4, 3, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 30, 58, 7, 4, 3, 4, 3, 3, 5, 44, 3, 4, 3, 21, 24, 4, 4, 13, 5, 8, 40, 3, 7, 4, 4, 24, 3, 4, 4, 3, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 16, 5, 19, 6, 3, 192, 7, 6, 30, 4, 5, 4, 3, 9, 6, 10, 4, 6, 4, 21, 36, 4, 4, 12, 10, 12, 36, 39, 38, 25, 14, 12, 24, 3, 6, 6, 14, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 3, 4, 5, 6, 4, 5, 11, 4, 42, 5, 4, 5, 6, 4, 4, 3, 4, 6, 4, 3, 11, 3, 8, 4, 4, 10, 3, 3, 82, 4, 4, 3, 4, 3, 11, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 3, 3, 3, 368, 5, 4, 133, 4, 4, 3, 4, 5, 3, 3, 13, 5, 4, 3, 3, 3, 7, 8, 3, 4, 4, 3, 4, 4, 89, 15, 3, 7, 6, 8, 13, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 28, 4, 5, 3, 3, 4, 3, 3, 5, 3, 4, 4, 3, 3, 3, 3, 5, 3, 4, 9, 3, 3, 3, 24, 24, 3, 4, 5, 4, 3, 3, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 6, 3, 14, 4, 9, 4, 6, 3, 13, 6, 13, 6, 4, 3, 3, 3, 3, 6, 4, 6, 8, 6, 6, 6, 3, 3, 11, 3, 10, 3, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 24, 4, 6, 6, 223, 26, 3, 29, 3, 19, 3, 10, 3, 4, 4, 6, 4, 18, 10, 19, 6, 25, 8, 10, 20, 27, 25, 83, 3, 4, 3, 3, 4, 3, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 6, 6, 5, 4, 4, 5, 3, 3, 4, 4, 3, 12, 92, 12, 3, 3, 31, 35, 6, 3, 6, 3, 16, 6, 8, 37, 7, 3, 5, 3, 3, 5, 4, 100, 3, 4, 108, 101]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 6, 11, 3, 54, 18, 85, 24, 3, 6, 3, 3, 4, 5, 4, 4, 4, 3, 52, 6, 3, 3, 12, 4, 10, 4, 23, 24, 23, 4, 4, 106, 4, 4, 3, 4, 3, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [53, 4, 5, 18, 4, 3, 4, 6, 5, 26, 5, 15, 4, 4, 4, 6, 4, 4, 28, 37, 4, 3, 12, 9, 4, 23, 25, 36, 4, 6, 6, 4, 5, 4, 3, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [6, 3, 15, 4, 3, 3, 3, 3, 5, 8, 9, 29, 4, 5, 3, 538, 3, 11, 3, 21, 3, 4, 5, 13, 10, 8, 13, 17, 11, 4, 3, 10, 4, 4, 9, 3, 8, 9, 99, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 4, 3, 3, 6, 4, 4, 27, 4, 5, 5, 40, 4, 3, 6, 4, 19, 3, 4, 4, 4, 34, 131, 3, 4, 3, 4, 15, 3, 4, 4, 3, 51]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 46, 3, 8, 4, 561, 3, 22, 4, 28, 4, 4, 6, 382, 4, 4, 4, 3, 22, 6, 4, 26, 4, 13, 3, 10, 14, 33, 37, 48, 36, 3, 3, 5, 50, 4, 4, 5, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [7, 23, 476, 10, 12, 4, 3, 4, 6, 71, 13, 33, 11, 6, 5, 6, 12, 10, 32, 3, 54, 27, 5, 10, 10, 19, 10, 8, 19, 82, 73, 74, 73, 71, 4, 4, 10, 5, 5, 4, 345]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [10, 3, 3, 17, 9, 14, 6, 14, 5, 4, 8, 27, 6, 3, 4, 266, 5, 4, 6, 30, 6, 6, 19, 6, 10, 26, 22, 24, 23, 24, 329, 7, 23, 8, 8, 3, 4, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [24, 4, 10, 4, 4, 4, 47, 4, 7, 43, 4, 3, 3, 4, 7, 4, 3, 3, 36, 3, 4, 6, 4, 13, 4, 8, 4, 7, 3, 3, 4, 3, 4, 3, 4, 3, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 19, 4, 4, 47, 4, 7, 24, 3, 47, 4, 4, 3, 7, 5, 4, 4, 4, 24, 7, 3, 4, 12, 3, 8, 4, 30, 25, 25, 30, 4, 4, 4, 3, 4, 4, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 19, 3, 5, 48, 4, 5, 23, 41, 4, 3, 6, 5, 4, 4, 22, 6, 4, 3, 14, 3, 11, 4, 23, 93, 24, 3, 4, 3, 3, 4, 4, 55, 3, 5, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 32, 4, 4, 6, 5, 5, 4, 3, 6, 4, 5, 4, 5, 118, 3, 3, 3, 3, 3, 3, 4, 19, 4, 8, 3, 581, 4, 4, 11, 43, 4, 3, 12, 3, 3, 3, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 8, 3, 4, 4, 6, 10, 4, 27, 9, 3, 3, 6, 4, 5, 4, 37, 4, 4, 4, 4, 13, 3, 10, 4, 24, 4, 26, 4, 11, 27, 5, 4, 13, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 74, 3, 5, 6, 4, 5, 4, 3, 4, 4, 4, 3, 6, 3, 4, 9, 4, 45, 66, 4, 4, 14, 4, 20, 4, 74, 74, 3, 48, 46, 4, 4, 5, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 18, 3, 3, 6, 4, 5, 84, 3, 9, 3, 4, 4, 5, 282, 4, 4, 4, 20, 6, 4, 42, 4, 14, 5, 11, 3, 46, 4, 3, 11, 3, 4, 3, 51, 4, 4, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 4, 4, 3, 3, 6, 4, 25, 6, 4, 4, 4, 5, 4, 3, 4, 4, 4, 4, 4, 31, 8, 4, 3, 8, 4, 3, 33, 5, 3, 4, 4, 3, 3, 3, 4, 167, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 18, 83, 3, 4, 3, 5, 55, 3, 31, 4, 3, 161, 5, 4, 4, 3, 50, 4, 4, 4, 4, 11, 39, 10, 3, 13, 55, 54, 4, 4, 54, 4, 4, 5, 7, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 56, 4, 6, 46, 15, 5, 44, 4, 27, 5, 3, 3, 244, 4, 4, 4, 5, 33, 46, 4, 46, 10, 14, 93, 8, 4, 28, 44, 49, 30, 4, 5, 87, 4, 3, 4, 4, 12, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 34, 4, 5, 29, 5, 5, 24, 4, 27, 3, 4, 3, 5, 3, 4, 36, 3, 4, 4, 4, 4, 8, 23, 24, 23, 40, 3, 3, 25, 3, 4, 4, 4, 3, 67]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 4, 4, 117, 5, 3, 4, 4, 3, 3, 4, 5, 5, 4, 4, 4, 5, 15, 3, 4, 5, 3, 10, 3, 4, 3, 4, 4, 5, 26, 3, 4, 3, 4, 3, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [12, 3, 3, 3, 5, 5, 3, 5, 5, 4, 5, 4, 4, 4, 5, 4, 3, 3, 3, 4, 130, 4, 4, 3, 20, 4, 8, 4, 71, 4, 142, 4, 4, 5, 4, 4, 4, 86, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 23, 3, 3, 4, 199, 269, 19, 6, 18, 3, 10, 3, 5, 3, 4, 32, 15, 3, 8, 3, 12, 3, 9, 3, 23, 20, 31, 25, 22, 3, 33, 9, 4, 3, 4, 3, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [23, 3, 3, 9, 5, 3, 3, 6, 10, 13, 6, 19, 6, 12, 9, 11, 10, 3, 6, 6, 60, 6, 6, 3, 4, 554, 5, 8, 4, 37, 7, 23, 20, 4, 15, 13, 4, 19, 81, 3, 11]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 4, 4, 3, 4, 5, 59, 4, 59, 4, 4, 4, 5, 4, 4, 4, 3, 22, 4, 4, 11, 11, 10, 3, 31, 57, 58, 4, 4, 4, 4, 4, 3, 3, 225]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 8, 3, 3, 4, 5, 3, 3, 3, 3, 4, 5, 4, 5, 4, 4, 11, 6, 3, 4, 6, 8, 4, 13, 5, 6, 13, 4, 4, 5, 3, 3, 4, 8, 150, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 4, 3, 3, 23, 5, 5, 7, 3, 32, 3, 4, 5, 5, 4, 4, 4, 52, 6, 27, 5, 14, 9, 7, 5, 5, 4, 3, 76, 4, 4, 6, 4, 5, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 210, 6, 4, 4, 3, 119, 14, 4, 4, 4, 6, 3, 5, 3, 3, 5, 4, 9, 4, 4, 19, 3, 11, 3, 5, 4, 3, 4, 4, 4, 4, 4, 4, 4, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 4, 13, 18, 6, 3, 3, 4, 5, 23, 3, 25, 4, 4, 3, 6, 3, 3, 13, 4, 21, 3, 4, 3, 8, 12, 3, 58, 4, 13, 24, 23, 11, 3, 3, 7, 6, 3, 3, 4, 15]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 5, 3, 56, 3, 93, 57, 3, 160, 4, 4, 3, 5, 9, 4, 5, 3, 19, 3, 3, 3, 4, 6, 4, 8, 3, 22, 66, 22, 24, 59, 3, 23, 4, 4, 81, 3, 4, 4, 433]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 17, 4, 3, 6, 4, 52, 37, 4, 5, 4, 4, 5, 5, 6, 4, 3, 3, 33, 5, 4, 3, 4, 12, 4, 10, 4, 37, 37, 36, 37, 8, 6, 36, 22, 3, 4, 3, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [6, 18, 6, 8, 3, 10, 6, 6, 5, 9, 3, 22, 3, 21, 7, 107, 4, 6, 3, 6, 3, 3, 6, 19, 4, 10, 6, 14, 10, 6, 4, 4, 4, 3, 4, 6, 3, 15]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 31, 4, 6, 4, 4, 5, 26, 3, 34, 3, 3, 3, 429, 4, 3, 3, 22, 6, 4, 34, 8, 19, 3, 8, 7, 22, 23, 22, 24, 6, 4, 24, 3, 5, 4, 4, 4, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 36, 3, 6, 3, 3, 84, 22, 3, 21, 3, 5, 3, 5, 3, 4, 4, 8, 20, 5, 7, 3, 3, 10, 4, 3, 3, 5, 29, 5, 4, 6, 4, 8, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 7, 3, 3, 47, 11, 6, 48, 6, 47, 3, 3, 3, 6, 4, 3, 10, 6, 21, 63, 7, 500, 7, 19, 5, 52, 5, 3, 10, 4, 373, 64, 6, 6, 4, 3, 3, 14, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 18, 6, 3, 5, 6, 31, 22, 6, 24, 6, 4, 3, 7, 6, 3, 6, 257, 3, 3, 408, 8, 13, 4, 62, 4, 13, 23, 23, 11, 63, 4, 3, 3, 11, 29, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [6, 20, 13, 6, 8, 6, 30, 4, 367, 26, 8, 24, 12, 3, 5, 10, 4, 6, 4, 22, 6, 4, 66, 12, 10, 23, 24, 3, 125, 10, 26, 53, 4, 6, 6, 6, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 38, 4, 3, 30, 3, 5, 30, 3, 24, 3, 7, 9, 5, 5, 3, 3, 22, 5, 3, 4, 3, 12, 9, 5, 25, 23, 26, 3, 3, 43, 4, 4, 8, 6, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 48, 3, 3, 25, 4, 7, 43, 4, 4, 8, 4, 5, 3, 4, 4, 6, 3, 4, 3, 4, 4, 31, 57, 8, 4, 43, 42, 42, 43, 4, 3, 41, 8, 3, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 10, 4, 3, 34, 4, 327, 30, 3, 6, 6, 4, 4, 5, 4, 3, 3, 5, 37, 34, 4, 34, 4, 15, 4, 8, 9, 61, 30, 46, 85, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 3, 3, 4, 3, 9, 20, 12, 5, 3, 4, 3, 6, 4, 4, 3, 4, 3, 3, 5, 37, 19, 9, 3, 31, 21, 19, 9, 63, 8, 20, 11, 3, 3, 8, 6, 6, 120]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 8, 4, 4, 8, 4, 317, 4, 3, 15, 4, 6, 3, 5, 7, 8, 6, 4, 4, 6, 3, 20, 3, 6, 13, 4, 4, 8, 5, 51, 3, 4, 4, 3, 4, 6, 6, 3, 104]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 3, 4, 5, 4, 4, 23, 4, 3, 141, 3, 3, 3, 7, 3, 3, 7, 4, 12, 10, 6, 3, 4, 4, 15, 3, 3, 4, 3, 3, 4, 10, 4, 292]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 18, 4, 6, 3, 6, 6, 234, 6, 24, 3, 4, 9, 5, 3, 6, 3, 21, 24, 6, 6, 19, 6, 10, 6, 138, 24, 19, 40, 39, 3, 4, 4, 6, 3, 6, 3, 17]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 32, 6, 11, 6, 6, 6, 154, 5, 20, 8, 8, 9, 6, 9, 6, 7, 33, 8, 6, 6, 6, 12, 6, 12, 8, 23, 24, 23, 9, 3, 14, 6, 6, 3, 8, 5, 17, 14]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 6, 4, 3, 5, 3, 64, 135, 6, 62, 3, 6, 7, 6, 3, 4, 6, 11, 24, 7, 6, 217, 11, 4, 32, 4, 6, 37, 69, 6, 5, 3, 101, 3, 3, 19, 12]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 4, 35, 3, 6, 31, 3, 42, 4, 9, 6, 3, 4, 4, 4, 20, 7, 7, 124, 3, 12, 3, 8, 4, 33, 100, 3, 3, 34, 45, 4, 3, 4, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [7, 14, 3, 3, 6, 4, 5, 4, 6, 4, 4, 4, 3, 11, 3, 439, 3, 3, 3, 4, 4, 6, 4, 323, 8, 21, 10, 4, 6, 4, 4, 5, 5, 132, 124, 4, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 8, 3, 8, 32, 3, 6, 25, 13, 5, 3, 3, 6, 50, 8, 8, 3, 9, 26, 341, 59, 15, 6, 4, 15, 3, 6, 26, 179, 6, 6, 3, 3, 4, 6, 3, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 32, 8, 3, 82, 5, 6, 26, 3, 51, 4, 3, 4, 37, 4, 3, 4, 4, 23, 42, 3, 34, 4, 14, 4, 8, 4, 23, 24, 26, 36, 33, 26, 4, 4, 8, 3, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 22, 3, 4, 4, 3, 5, 21, 3, 3, 3, 5, 3, 5, 4, 3, 3, 4, 4, 4, 5, 7, 3, 163, 4, 9, 3, 3, 4, 4, 4, 4, 35, 3, 4, 4, 4, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [6, 25, 4, 18, 6, 3, 68, 5, 7, 74, 5, 36, 3, 3, 8, 92, 4, 3, 3, 60, 8, 5, 17, 3, 131, 9, 85, 3, 87, 75, 20, 85, 62, 3, 84, 3, 4, 3, 4, 9, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 543, 3, 3, 35, 3, 9, 31, 4, 29, 4, 4, 43, 5, 3, 3, 4, 3, 22, 4, 35, 13, 8, 4, 65, 32, 65, 4, 59, 28, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 7, 4, 4, 3, 6, 8, 4, 3, 3, 5, 4, 6, 3, 4, 8, 3, 6, 12, 3, 12, 6, 11, 6, 8, 4, 6, 4, 6, 519, 436, 4, 4, 6, 5, 3, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 37, 4, 3, 30, 6, 15, 26, 5, 44, 3, 3, 3, 15, 7, 4, 3, 4, 22, 16, 5, 32, 47, 13, 7, 13, 4, 37, 26, 33, 25, 68, 3, 24, 4, 5, 4, 4, 3, 3, 15]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [8, 6, 10, 8, 4, 5, 3, 5, 9, 3, 3, 6, 6, 49, 14, 12, 4, 5, 51, 7, 3, 67, 19, 11, 5, 14, 4, 19, 3, 4, 21, 8, 15, 7, 8, 6, 31]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 54, 7, 3, 41, 3, 7, 633, 3, 4, 7, 7, 3, 3, 10, 41, 8, 8, 4, 8, 19, 3, 8, 6, 41, 38, 38, 18, 4, 8, 4, 7, 3, 9, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 5, 3, 3, 31, 6, 5, 27, 3, 43, 3, 7, 6, 20, 7, 8, 4, 3, 22, 160, 3, 42, 6, 19, 3, 10, 3, 26, 27, 27, 24, 6, 24, 3, 3, 13, 8, 90]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 8, 3, 7, 5, 6, 11, 27, 3, 40, 3, 3, 85, 3, 6, 6, 96, 23, 3, 3, 3, 10, 13, 4, 8, 29, 29, 27, 36, 5, 19, 24, 5, 5, 4, 4, 25]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 4, 3, 4, 36, 3, 123, 49, 4, 107, 4, 4, 4, 5, 12, 4, 3, 46, 15, 4, 274, 4, 14, 4, 8, 3, 26, 50, 66, 64, 76, 49, 42, 4, 3, 4, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 129, 3, 3, 4, 5, 74, 3, 3, 21, 4, 3, 3, 118, 3, 3, 3, 3, 28, 4, 24, 3, 307, 5, 9, 3, 3, 3, 3, 3, 4, 29, 5, 3, 8, 4, 3, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 20, 3, 4, 38, 3, 6, 16, 4, 4, 4, 5, 5, 4, 3, 3, 3, 29, 3, 3, 4, 4, 19, 10, 6, 22, 17, 34, 31, 3, 32, 3, 7, 4, 4, 3, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 24, 4, 3, 4, 3, 5, 92, 6, 4, 3, 3, 3, 5, 6, 3, 3, 3, 5, 6, 5, 3, 6, 5, 3, 9, 3, 4, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 3, 3, 65, 5, 58, 19, 3, 14, 4, 4, 4, 6, 3, 4, 4, 4, 45, 78, 3, 10, 12, 4, 67, 4, 37, 20, 19, 37, 67, 54, 66, 7, 4, 3, 3, 3, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 18, 4, 5, 19, 4, 157, 15, 4, 3, 3, 4, 3, 6, 5, 3, 3, 4, 39, 3, 4, 4, 7, 13, 4, 8, 5, 44, 16, 45, 48, 3, 45, 3, 7, 4, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
termination = MathOptInterface.INFEASIBLE
objective_value = 0.3596067077757291
