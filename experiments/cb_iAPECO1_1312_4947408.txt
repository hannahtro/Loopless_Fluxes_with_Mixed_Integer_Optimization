┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAPECO1_1312
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAPECO1_1312
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1313

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 11, 13, 11, 11, 11, 11, 11, 14, 14, 13, 16, 2, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 14, 6, 16, 16, 23, 13, 39, 14]
length(C_list) = 1
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 2, 11, 11, 12, 11, 11, 11, 11, 14, 15, 14, 15, 14, 14, 14, 14, 19, 14, 17, 18, 17, 18, 17, 17, 15, 14, 40, 15, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 11, 12, 11, 11, 14, 11, 11, 2, 16, 17, 16, 17, 16, 2, 16, 16, 16, 19, 16, 19, 20, 19, 20, 21, 19, 53, 17, 16, 42, 17, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 11, 13, 11, 11, 11, 11, 11, 16, 18, 16, 17, 16, 2, 16, 16, 16, 19, 16, 19, 20, 19, 20, 17, 18, 19, 20, 18, 62, 16, 43, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 2, 2, 12, 11, 11, 12, 13, 11, 11, 18, 14, 13, 14, 13, 13, 14, 15, 24, 13, 16, 17, 25, 17, 13, 16, 16, 23, 13, 13, 14, 18, 39, 14, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 11, 11, 11, 13, 11, 11, 15, 16, 17, 16, 17, 17, 3, 16, 16, 17, 20, 16, 19, 20, 19, 20, 17, 16, 19, 24, 17, 16, 17, 16, 42, 17]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 11, 11, 157, 25, 12, 11, 13, 14, 84, 14, 13, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 20, 16, 101, 13, 39, 22, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 15, 6, 11, 11, 13, 48, 11, 11, 35, 13, 22, 373, 15, 13, 3, 13, 13, 15, 16, 13, 16, 17, 16, 18, 14, 13, 14, 14, 16, 24, 13, 14, 13, 39, 7, 17, 46]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 12, 12, 12, 3, 65, 12, 4, 42, 9, 4, 4, 5, 10, 24, 4, 10, 16, 18, 16, 4, 10, 3, 2, 11, 9, 11, 28, 10, 4, 41, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 12, 12, 152, 12, 12, 12, 12, 14, 15, 14, 15, 14, 14, 14, 14, 17, 14, 17, 18, 17, 18, 17, 17, 15, 14, 40, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 9, 29, 12, 12, 16, 12, 12, 12, 14, 15, 14, 15, 14, 14, 14, 14, 29, 14, 18, 18, 17, 18, 17, 18, 15, 14, 41, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 7, 2, 12, 13, 12, 12, 13, 12, 12, 14, 15, 14, 15, 14, 2, 14, 14, 14, 17, 14, 17, 21, 17, 20, 17, 17, 15, 15, 15, 40, 15, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 13, 11, 11, 11, 11, 11, 11, 13, 14, 13, 14, 13, 6, 13, 13, 13, 16, 13, 16, 17, 16, 17, 16, 16, 14, 13, 39, 14]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 4, 3, 4, 4, 2, 2, 4, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 4, 3, 7, 9, 4, 119, 2, 9, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 7, 6, 4, 3, 9, 4, 11, 20, 210]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 3, 4, 4, 4, 152, 3, 3, 4, 3, 5, 3, 32]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 4, 13, 14, 17, 13, 13, 14, 13, 15, 16, 15, 16, 15, 4, 15, 21, 16, 18, 15, 18, 19, 18, 19, 24, 16, 15, 31, 20, 18, 15, 15, 15, 15, 16, 15, 42, 17, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 10, 16, 10, 10, 10, 10, 10, 12, 13, 12, 13, 12, 5, 12, 12, 12, 15, 12, 15, 16, 15, 16, 15, 17, 15, 13, 12, 37, 13, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 31, 3, 4, 4, 3, 4, 70, 3, 5, 5, 4, 7, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 7, 94]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 12, 15, 13, 12, 12, 12, 12, 14, 15, 26, 15, 14, 14, 14, 25, 18, 14, 17, 18, 17, 18, 14, 63, 14, 17, 17, 15, 14, 15, 31, 15, 14, 40, 16, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 18, 3, 89, 3, 4, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 5, 6, 3, 4, 4, 5, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 3, 4, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 28
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419019463
thermo_feasible = true
