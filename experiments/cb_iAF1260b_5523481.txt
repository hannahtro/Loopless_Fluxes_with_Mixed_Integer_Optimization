┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260b
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260b
----------------------------------
number of metabolites : 1668
number of reactions : 2388
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 48
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2388 flux variables and 4472 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 16, 15, 15, 2, 2, 11, 14, 10, 11, 11, 11, 11, 11, 16, 3, 38, 39, 38, 2, 2]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 14, 14, 14, 3, 8, 11, 3, 11, 7, 11, 2, 14, 11, 25, 11, 3, 16, 4, 2, 3, 8, 146, 39, 38, 33, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 15, 15, 15, 11, 6, 11, 11, 7, 11, 6, 11, 11, 11, 11, 16, 6, 7, 4, 199, 203, 39, 40, 39, 7, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 14, 14, 14, 7, 10, 3, 11, 11, 7, 11, 11, 11, 11, 11, 10, 16, 2, 6, 3, 80, 79, 81, 71, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [7, 19, 21, 15, 3, 3, 11, 12, 12, 7, 11, 11, 11, 11, 11, 16, 6, 6, 3, 38, 39, 38, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 15, 14, 15, 8, 5, 11, 8, 11, 7, 11, 11, 11, 11, 11, 16, 6, 7, 7, 38, 38, 39, 7, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 15, 15, 27, 7, 7, 7, 12, 6, 11, 8, 12, 7, 13, 13, 13, 13, 158, 8, 7, 16, 37, 37, 38, 10, 10]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 2, 3, 6, 113, 4, 4, 3, 4, 4, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5, 5, 4, 4, 133, 4, 4, 69, 4, 4, 5, 94]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 4, 3, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 4, 5, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 97]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 13, 12, 12, 3, 4, 2, 9, 9, 5, 9, 9, 9, 9, 9, 14, 5, 5, 37, 36, 37, 36, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 11, 3, 4, 3, 3, 4, 5, 4, 4, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 21, 6, 115, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 23, 4, 5, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.736701038420403
thermo_feasible = true
