┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
max_cuts = 19
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 19
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 4, 4, 2, 4, 4, 3, 6, 218, 4, 4, 4, 4, 6, 2, 3, 4, 5, 17, 6, 2, 401, 5, 9, 6, 2, 187, 2]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 5, 296, 423, 4, 6, 2, 4, 4, 4, 2, 4, 7, 3, 4, 4, 2, 6, 10, 4, 207, 120, 2, 7, 4, 4, 3, 2, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 329, 5, 7, 3, 6, 8, 4, 4, 8, 3, 2, 4, 9, 20, 5, 5, 7, 7, 6, 3, 8, 354, 8, 5, 8, 3, 4, 6, 6, 2, 2, 3, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 6, 7, 7, 3, 6, 9, 4, 8, 15, 4, 6, 2, 19, 7, 4, 4, 7, 4, 6, 4, 207, 6, 4, 6, 8, 9, 6, 3, 5, 8, 10, 3, 6, 4, 4, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [13, 9, 125, 5, 3, 4, 3, 4, 50, 3, 5, 5, 8, 4, 5, 5, 9, 5, 4, 4, 3, 5, 5, 4, 6, 8, 7, 12, 6, 4, 4, 4, 5, 4, 2, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 4, 7, 9, 9, 4, 9, 3, 4, 4, 5, 5, 3, 4, 6, 4, 4, 5, 4, 5, 9, 308, 5, 5, 9, 5, 2, 5, 4, 6, 4, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 4, 3, 5, 7, 5, 7, 7, 5, 4, 4, 8, 4, 6, 4, 5, 5, 6, 8, 7, 2, 4, 7, 2, 4, 6, 5, 6, 5, 4, 5, 7, 8, 6, 5, 3, 3, 5, 5, 19, 5, 8, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 7, 9, 8, 2, 3, 3, 7, 4, 6, 4, 5, 6, 6, 5, 6, 2, 7, 3, 4, 4, 3, 6, 6, 6, 211, 4, 5, 3, 6, 4, 8, 6, 4, 9, 6, 8, 5, 5, 4, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 5, 3, 3, 4, 5, 31, 5, 4, 7, 4, 7, 5, 4, 3, 3, 10, 3, 5, 7, 6, 8, 7, 3, 2, 5, 127, 4, 6, 4, 2, 4, 5, 5, 4, 5, 7, 9, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 3, 4, 4, 3, 5, 5, 3, 3, 6, 54, 5, 4, 3, 5, 3, 7, 10, 8, 6, 4, 6, 6, 4, 6, 8, 6, 7, 7, 4, 5, 6, 5, 5, 6, 3, 8, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 5, 4, 4, 12, 4, 3, 5, 3, 3, 2, 52, 148, 10, 4, 3, 4, 3, 5, 10, 4, 4, 5, 4, 7, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 7, 8, 6, 4, 4, 3, 5, 9, 5, 6, 4, 5, 5, 4, 2, 6, 3, 2, 9, 7, 3, 4, 6, 6, 5, 10, 3, 7, 7, 7, 4, 4, 6, 10, 9, 4, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 5, 6, 6, 3, 6, 4, 5, 8, 6, 4, 6, 15, 8, 6, 4, 6, 6, 4, 6, 3, 6, 5, 5, 8, 5, 7, 10, 6, 4, 4, 3, 69, 5, 8, 5, 4, 4, 9, 27]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 8, 4, 3, 6, 10, 7, 6, 6, 6, 7, 4, 8, 4, 3, 6, 9, 4, 11, 6, 4, 4, 5, 6, 4, 8, 143, 4, 5, 6, 5, 4, 8, 9, 6, 4, 5, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 5, 8, 3, 6, 7, 6, 6, 9, 7, 7, 3, 4, 13, 5, 5, 7, 5, 4, 5, 10, 4, 10, 9, 452, 10, 4, 8, 4, 3, 10, 7, 8, 5, 10, 5, 7, 6, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 5, 3, 5, 5, 9, 2, 6, 8, 5, 9, 3, 13, 5, 6, 4, 7, 3, 5, 4, 8, 5, 4, 134, 6, 4, 7, 4, 5, 5, 5, 4, 7, 165, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 5, 6, 6, 9, 8, 6, 2, 6, 6, 8, 9, 5, 6, 7, 10, 4, 4, 5, 4, 5, 39, 19, 8, 5, 9, 9, 4, 6, 5, 4, 4, 3, 10, 6, 5, 13, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 10, 10, 5, 3, 7, 7, 3, 5, 9, 6, 4, 8, 33, 12, 6, 5, 9, 5, 3, 3, 7, 9, 82, 190, 6, 6, 8, 6, 8, 5, 5, 7, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 8, 8, 6, 3, 10, 5, 4, 7, 4, 4, 7, 8, 6, 5, 6, 7, 6, 6, 7, 6, 8, 4, 4, 4, 4, 5, 4, 4, 54, 4, 5, 8, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 3, 5, 4, 6, 5, 9, 4, 6, 8, 12, 6, 3, 8, 4, 4, 149, 7, 2, 5, 6, 3, 3, 10, 9, 8, 4, 4, 7, 8, 5, 6, 14, 39, 5, 7, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 4, 4, 5, 5, 4, 5, 5, 9, 13, 4, 7, 5, 5, 5, 6, 6, 5, 7, 3, 8, 7, 9, 7, 19, 5, 3, 7, 8, 13, 6, 19, 6, 6, 4, 8, 109, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 4, 8, 11, 5, 3, 4, 9, 8, 7, 5, 4, 5, 4, 7, 2, 5, 5, 5, 3, 12, 6, 5, 4, 5, 7, 5, 7, 16, 3, 5, 7, 5, 4, 8, 5, 8, 8, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 3, 13, 5, 5, 6, 7, 5, 6, 5, 6, 4, 6, 10, 9, 5, 4, 5, 12, 3, 5, 5, 8, 4, 5, 7, 6, 8, 4, 6, 7, 7, 6, 7, 6, 5, 9, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 5, 3, 3, 7, 10, 6, 5, 3, 7, 9, 12, 6, 5, 8, 3, 6, 6, 8, 3, 8, 5, 5, 6, 5, 3, 6, 10, 3, 4, 4, 8, 88, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 4, 22, 7, 6, 10, 8, 4, 7, 12, 6, 6, 5, 4, 4, 8, 7, 6, 3, 5, 6, 3, 6, 7, 3, 6, 8, 19, 6, 9, 5, 5, 6, 6, 5, 7, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 7, 5, 3, 2, 3, 5, 4, 2, 4, 23, 97, 4, 8, 4, 126, 4, 3, 9, 8, 4, 3, 5, 4, 9, 4, 89, 6, 6, 173, 4, 4, 4, 5, 5, 15, 9, 7, 4, 2]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 7, 4, 6, 7, 8, 4, 10, 7, 6, 4, 4, 4, 7, 4, 4, 5, 356, 5, 3, 4, 6, 4, 4, 7, 8, 6, 5, 3, 4, 5, 8, 5, 3, 7, 4, 3, 4, 9, 4, 3, 5, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 4, 14, 4, 6, 4, 3, 4, 4, 3, 8, 9, 7, 8, 344, 4, 3, 7, 6, 9, 5, 5, 5, 4, 12, 4, 6, 9, 7, 11, 9, 83, 9, 4, 4, 5, 10, 5, 5, 4, 6, 6, 3, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 9, 5, 4, 4, 3, 4, 6, 4, 3, 8, 3, 8, 7, 5, 3, 10, 7, 6, 2, 11, 9, 4, 6, 3, 5, 8, 9, 8, 10, 11, 5, 4, 6, 8, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 4, 5, 6, 6, 6, 4, 6, 10, 5, 163, 10, 8, 4, 7, 6, 9, 6, 4, 11, 11, 563, 3, 6, 5, 10, 7, 5, 10, 7, 7, 27, 5, 6, 5, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 5, 10, 13, 3, 9, 4, 173, 7, 5, 3, 4, 3, 4, 8, 9, 4, 8, 8, 7, 7, 329, 5, 4, 6, 243, 4, 196, 64, 9, 7, 4, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 4, 178, 5, 7, 3, 4, 3, 4, 3, 3, 3, 7, 7, 9, 2, 5, 5, 5, 6, 6, 7, 4, 23, 5, 6, 6, 5, 7, 3, 5, 7, 4, 5, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 4, 4, 5, 5, 2, 4, 4, 6, 5, 4, 4, 4, 4, 8, 4, 5, 3, 5, 5, 4, 8, 7, 6, 7, 5, 8, 4, 5, 5, 5, 7, 3, 3, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 7, 8, 6, 9, 4, 12, 6, 5, 7, 5, 9, 11, 8, 6, 12, 5, 7, 10, 6, 7, 9, 8, 119, 4, 9, 66, 7, 9, 16, 4, 8, 7, 8, 138, 8, 6, 5, 7, 5, 9, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 129, 8, 4, 5, 9, 8, 7, 5, 4, 3, 8, 7, 8, 7, 3, 3, 8, 3, 9, 11, 6, 6, 7, 8, 5, 20, 4, 7, 11, 6, 6, 7, 5, 7, 4, 9, 14, 4, 6, 8, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 6, 5, 4, 3, 8, 4, 6, 8, 7, 3, 6, 5, 8, 7, 14, 8, 4, 9, 8, 61, 8, 5, 10, 5, 4, 7, 4, 8, 5, 9, 14, 5, 5, 3, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 10, 3, 3, 6, 8, 5, 4, 6, 6, 4, 3, 11, 6, 9, 8, 5, 5, 3, 4, 5, 6, 6, 3, 4, 4, 3, 7, 6, 8, 6, 3, 4, 4, 8, 6, 4, 8, 8, 7, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 3, 3, 4, 10, 6, 6, 90, 5, 6, 7, 3, 3, 4, 5, 8, 3, 3, 3, 6, 8, 6, 6, 4, 6, 80, 8, 7, 4, 4, 6, 7, 5, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 5, 4, 3, 6, 7, 5, 4, 3, 3, 3, 5, 4, 314, 4, 64, 4, 3, 6, 3, 5, 11, 7, 6, 4, 3, 36, 5, 4, 4, 3, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 3, 4, 95, 5, 3, 4, 4, 11, 9, 3, 3, 4, 5, 8, 3, 6, 3, 6, 5, 4, 5, 4, 233, 4, 4, 3, 4, 3, 4, 6, 4, 4, 5, 8, 6, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 7, 10, 6, 7, 8, 3, 4, 5, 7, 5, 3, 4, 6, 5, 3, 4, 4, 5, 4, 5, 4, 8, 3, 4, 4, 3, 6, 8, 5, 3, 4, 10, 4, 4, 5, 4, 3, 8, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 3, 350, 8, 4, 6, 3, 4, 3, 4, 3, 6, 17, 4, 4, 5, 7, 6, 7, 4, 25, 5, 12, 6, 571, 4, 9, 6, 13, 4, 5, 4, 10, 8, 5, 6, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [8, 20, 6, 7, 5, 5, 5, 6, 4, 4, 3, 90, 3, 4, 5, 4, 9, 7, 20, 6, 6, 4, 5, 7, 5, 4, 4, 6, 7, 4, 5, 4, 4, 3, 9, 7, 4, 3, 19, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 7, 4, 4, 5, 8, 4, 4, 6, 6, 9, 4, 9, 5, 6, 4, 6, 13, 5, 5, 7, 4, 5, 5, 11, 7, 5, 4, 10, 4, 5, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [2, 7, 424, 8, 4, 6, 5, 6, 6, 7, 6, 7, 54, 15, 6, 5, 4, 5, 5, 8, 4, 4, 6, 4, 6, 5, 6, 4, 5, 6, 8, 7, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 5, 68, 6, 6, 5, 7, 4, 4, 9, 5, 7, 9, 7, 4, 8, 5, 5, 7, 8, 11, 7, 5, 6, 6, 6, 9, 7, 6, 5, 5, 7, 19, 4, 7, 5, 11, 14, 7, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 9, 9, 3, 7, 6, 7, 7, 6, 6, 6, 6, 12, 4, 5, 5, 5, 7, 7, 5, 7, 106, 9, 8, 5, 5, 10, 9, 4, 5, 9, 11, 11, 6, 5, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 4, 3, 6, 4, 6, 7, 6, 8, 6, 5, 6, 4, 7, 14, 8, 4, 4, 8, 6, 3, 6, 10, 3, 7, 7, 5, 8, 5, 5, 5, 4, 8, 4, 5, 5, 6, 8, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 8, 6, 3, 8, 7, 4, 4, 4, 7, 4, 9, 8, 4, 8, 5, 5, 4, 4, 3, 5, 6, 6, 22, 10, 9, 6, 36, 6, 6, 7, 8, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 13, 5, 4, 5, 9, 14, 6, 15, 5, 4, 9, 4, 5, 4, 5, 7, 5, 4, 3, 11, 8, 4, 8, 5, 7, 6, 4, 6, 4, 10, 7, 8, 7, 6, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 10, 10, 3, 4, 9, 6, 6, 9, 5, 10, 4, 4, 7, 4, 73, 5, 5, 3, 6, 3, 5, 3, 4, 10, 5, 5, 4, 5, 4, 6, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 3, 3, 6, 8, 5, 6, 4, 4, 6, 4, 6, 219, 6, 8, 5, 5, 7, 4, 6, 4, 6, 6, 5, 5, 4, 299, 5, 4, 8, 4, 4, 4, 4, 204, 43, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 4, 10, 8, 8, 3, 6, 8, 7, 4, 8, 13, 9, 9, 8, 6, 6, 8, 484, 5, 5, 7, 11, 6, 4, 6, 4, 7, 9, 5, 8, 6, 11, 7, 7, 11, 4, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [9, 7, 8, 33, 9, 8, 8, 11, 6, 4, 5, 5, 9, 6, 7, 8, 4, 16, 4, 4, 10, 8, 20, 169, 7, 7, 4, 3, 12, 4, 24, 7, 5, 11, 7, 4, 7, 13]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 8, 5, 6, 7, 5, 8, 4, 7, 4, 4, 8, 6, 5, 5, 4, 4, 5, 6, 5, 5, 10, 6, 3, 6, 7, 5, 7, 3, 4, 5, 6, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 6, 249, 7, 4, 11, 5, 5, 3, 7, 4, 4, 8, 5, 5, 6, 4, 6, 7, 5, 8, 6, 4, 6, 4, 3, 9, 5, 28, 5, 113, 10, 7, 5, 6, 5, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 4, 7, 4, 7, 6, 6, 6, 8, 7, 7, 6, 12, 8, 3, 6, 10, 12, 14, 7, 4, 8, 6, 4, 3, 5, 8, 13, 6, 8, 6, 8, 7, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [9, 6, 10, 7, 7, 8, 6, 5, 6, 6, 56, 8, 7, 6, 7, 5, 3, 8, 4, 6, 5, 3, 7, 8, 5, 10, 11, 8, 11, 7, 3, 9, 6, 10, 5, 10, 4, 6, 22, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [6, 15, 6, 3, 5, 4, 4, 8, 4, 5, 3, 6, 4, 4, 4, 7, 8, 83, 5, 9, 6, 11, 10, 6, 5, 11, 7, 11, 4, 7, 4, 4, 4, 4, 7, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 4, 6, 8, 6, 5, 6, 4, 11, 6, 7, 5, 5, 4, 7, 6, 5, 5, 7, 13, 6, 5, 7, 537, 9, 5, 4, 6, 5, 6, 5, 7, 33, 14]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [5, 13, 4, 4, 228, 3, 10, 5, 4, 7, 8, 9, 5, 3, 4, 8, 41, 11, 4, 6, 17, 6, 8, 5, 394, 5, 7, 4, 5, 3, 10, 7, 4, 5, 5, 7, 4, 5, 10, 3, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 4, 5, 6, 4, 4, 6, 7, 7, 7, 7, 293, 8, 5, 8, 5, 7, 3, 165, 8, 9, 5, 4, 12, 8, 6, 7, 4, 7, 4, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 8, 6, 3, 6, 7, 4, 6, 4, 4, 5, 6, 4, 3, 3, 9, 5, 14, 5, 6, 10, 4, 6, 7, 7, 3, 7, 6, 9, 6, 6, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 7, 4, 7, 9, 9, 6, 9, 5, 5, 8, 4, 7, 6, 7, 10, 9, 40, 41, 7, 19, 4, 6, 8, 7, 7, 7, 5, 9, 10, 14, 9, 34]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [3, 5, 44, 5, 6, 9, 11, 8, 7, 11, 8, 6, 7, 9, 10, 8, 9, 6, 7, 8, 9, 9, 8, 9, 8, 9, 5, 5, 13, 9, 9, 8, 9, 6, 4, 163]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 9, 7, 7, 6, 6, 6, 7, 6, 4, 8, 9, 6, 15, 7, 7, 4, 6, 3, 7, 7, 4, 6, 4, 4, 10, 10, 9, 151, 139, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [13, 4, 14, 5, 7, 9, 10, 6, 11, 8, 5, 13, 5, 7, 6, 6, 5, 7, 7, 4, 6, 5, 6, 5, 5, 11, 5, 9, 11, 7, 28, 9, 282, 6, 12, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 4, 5, 6, 6, 5, 6, 4, 3, 5, 4, 5, 6, 7, 7, 5, 4, 6, 8, 4, 4, 7, 6, 16, 5, 5, 4, 5, 8, 6, 5, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 6, 4, 23, 6, 6, 7, 5, 4, 4, 6, 7, 6, 5, 5, 4, 4, 9, 5, 4, 8, 3, 5, 11, 3, 4, 4, 4, 4, 5, 4, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [5, 8, 51, 4, 8, 5, 6, 10, 4, 7, 33, 4, 13, 128, 5, 6, 12, 6, 4, 5, 10, 6, 4, 4, 5, 6, 5, 4, 8, 6, 4, 11, 7, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 7, 9, 9, 8, 11, 6, 10, 8, 5, 9, 8, 8, 6, 7, 18, 10, 5, 6, 8, 7, 8, 6, 7, 126, 8, 8, 7, 8, 7, 12, 10, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 7, 7, 4, 5, 3, 6, 3, 4, 4, 3, 7, 6, 4, 4, 5, 6, 4, 5, 7, 4, 5, 5, 6, 8, 7, 6, 5, 6, 7, 5, 5, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5, 6, 5, 4, 7, 6, 6, 4, 7, 7, 7, 6, 5, 5, 5, 6, 6, 6, 5, 4, 6, 6, 7, 8, 6, 6, 30, 4, 5, 5, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 9, 8, 8, 4, 12, 4, 7, 7, 6, 4, 4, 4, 174, 9, 7, 8, 8, 6, 6, 8, 7, 4, 5, 5, 7, 4, 6, 7, 4, 7, 11, 7, 3, 6, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 7, 7, 10, 7, 7, 4, 5, 7, 6, 5, 4, 6, 8, 6, 7, 6, 6, 5, 264, 5, 3, 4, 124, 4, 7, 4, 4, 5, 4, 34, 6, 6, 5, 8, 6, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [3, 17, 8, 4, 11, 8, 7, 5, 6, 5, 5, 6, 4, 4, 6, 10, 8, 11, 10, 122, 6, 7, 10, 6, 9, 4, 4, 4, 7, 4, 3, 3, 3, 9, 6, 8, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 7, 161, 3, 9, 4, 7, 4, 54, 193, 5, 7, 7, 5, 5, 5, 7, 13, 6, 5, 4, 5, 10, 4, 3, 159, 6, 4, 7, 8, 11, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 4, 6, 7, 10, 4, 4, 9, 346, 9, 5, 5, 9, 12, 4, 8, 11, 4, 6, 6, 7, 7, 6, 4, 98, 5, 4, 5, 7, 5, 6, 5, 6, 8, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 19, 5, 9, 7, 6, 8, 10, 10, 5, 7, 5, 4, 9, 10, 8, 9, 551, 6, 7, 8, 6, 18, 7, 4, 4, 9, 6, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 8, 7, 6, 6, 8, 5, 5, 9, 9, 8, 7, 5, 7, 6, 7, 5, 7, 6, 7, 6, 9, 9, 11, 9, 5, 9, 4, 8, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 5, 4, 6, 5, 6, 6, 5, 6, 7, 5, 6, 3, 5, 4, 10, 6, 8, 4, 5, 3, 6, 7, 6, 9, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4, 3, 5, 4, 5, 5, 5, 4, 6, 5, 5, 4, 9, 4, 8, 7, 5, 6, 5, 4, 4, 5, 7, 4, 5, 6, 10, 11]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 5, 373, 7, 4, 4, 8, 4, 4, 30, 3, 3, 4, 5, 4, 4, 5, 5, 7, 4, 380, 57, 6, 5, 4, 4, 5, 6, 4, 5, 11, 52]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 9, 10, 5, 7, 5, 9, 10, 281, 8, 5, 9, 7, 7, 9, 5, 9, 6, 9, 6, 7, 5, 8, 6, 6, 8, 8, 8, 8, 7, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [5, 8, 4, 8, 11, 6, 9, 9, 8, 7, 8, 9, 58, 4, 4, 5, 4, 10, 6, 11, 5, 7, 9, 8, 5, 5, 13, 8, 7, 9, 5, 4, 5, 4, 15, 4, 4, 11, 6, 9, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [6, 6, 55, 5, 8, 10, 5, 10, 6, 5, 5, 9, 5, 7, 5, 5, 5, 4, 19, 7, 8, 13, 7, 6, 6, 5, 6, 10, 3, 7, 4, 10, 8, 9, 3, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 4, 3, 4, 7, 4, 7, 5, 6, 6, 5, 3, 7, 6, 6, 7, 7, 7, 4, 25, 10, 11, 5, 7, 5, 3, 8, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 7, 6, 5, 6, 14, 3, 6, 4, 7, 5, 4, 8, 5, 6, 4, 8, 7, 14, 10, 137, 6, 5, 4, 6, 5, 7, 5, 6, 183]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 3, 5, 5, 4, 4, 4, 4, 3, 4, 4, 5, 6, 5, 6, 5, 7, 5, 5, 4, 49, 5, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 5, 7, 6, 6, 4, 6, 4, 5, 3, 7, 7, 5, 4, 6, 5, 4, 5, 5, 8, 5, 5, 5, 8, 13, 5, 6, 6, 5, 7, 5, 6, 8, 4, 4, 3, 6, 9, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 7, 6, 3, 5, 5, 5, 6, 4, 6, 5, 7, 7, 5, 9, 8, 7, 38, 6, 3, 8, 5, 9, 7, 8, 3, 5, 4, 3, 15, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 5, 4, 5, 4, 5, 5, 5, 4, 5, 4, 5, 4, 4, 5, 6, 4, 5, 4, 4, 5, 4, 8, 4, 4, 4, 4, 5, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 3, 3, 7, 7, 4, 4, 5, 4, 5, 7, 7, 7, 7, 8, 4, 4, 4, 102, 4, 7, 12]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [8, 10, 7, 4, 10, 10, 4, 6, 7, 12, 9, 88, 8, 8, 5, 6, 3, 9, 4, 8, 9, 9, 4, 8, 7, 6, 10, 11, 10, 8, 23, 11, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 8, 7, 6, 8, 7, 8, 4, 4, 4, 15, 6, 5, 6, 3, 4, 4, 5, 9, 8, 47, 4, 8, 4, 8, 3, 104, 9, 14, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 6, 6, 4, 4, 7, 4, 5, 184, 7, 5, 6, 5, 6, 5, 6, 9, 7, 90, 10, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 7, 8, 7, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 8, 4, 4, 4, 5, 7, 4, 3, 4, 4, 4, 15, 5, 5, 5, 5, 4, 4, 4, 6, 4, 4, 4, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 6, 3, 6, 5, 5, 4, 5, 7, 8, 7, 8, 3, 4, 11, 4, 5, 5, 5, 4, 7, 6, 4, 8, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 11, 9, 6, 6, 6, 5, 4, 6, 3, 7, 6, 7, 7, 9, 7, 4, 7, 7, 8, 11, 9, 13, 7, 6, 7, 7, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [12, 9, 5, 148, 4, 4, 4, 5, 4, 4, 10, 5, 109, 9, 4, 8, 3, 11, 7, 12, 9, 7, 9, 6, 10, 9, 9, 3, 12, 4, 7, 10, 9, 5, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 5, 5, 6, 11, 15]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [9, 5, 5, 127, 7, 12, 7, 68, 7, 7, 13, 16, 7, 7, 8, 6, 11, 3, 8, 7, 9, 7, 8, 229, 6, 7, 15, 6, 13, 9, 7, 5, 7, 7, 4, 7, 8, 7, 7, 8, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 4, 10, 9, 9, 5, 9, 8, 10, 8, 9, 6, 10, 10, 9, 9, 3, 8, 4, 12, 8, 9, 9, 8, 11, 8, 10, 10, 8, 9, 13, 9, 8, 5, 10, 6, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 7, 6, 6, 7, 4, 6, 8, 5, 6, 5, 8, 8, 5, 7, 6, 6, 9, 7, 7, 7, 5, 5, 7, 6, 5, 4, 6, 8, 12, 4, 4, 12, 5, 8, 6, 6, 5, 5, 5, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 3, 8, 7, 7, 10, 7, 8, 7, 8, 7, 7, 8, 200, 6, 4, 6, 6, 7, 10, 6, 9, 9, 5, 9, 10, 8, 10, 7, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 11, 8, 7, 8, 14, 8, 6, 7, 8, 7, 8, 7, 11, 6, 7, 8, 6, 9, 8, 82, 11, 7, 9, 9, 8, 239, 7, 7, 9, 6, 7, 7, 7, 7, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 15, 5, 5, 7, 6, 5, 5, 5, 5, 7, 7, 8, 6, 5, 49, 4, 5, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 5, 7, 4, 6, 6, 4, 7, 4, 4, 5, 4, 6, 8, 6, 6, 7, 3, 6, 5, 8, 7, 6, 5, 6, 5, 7, 7, 6, 6, 7, 7, 9, 427, 13, 10, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [5, 6, 308, 5, 5, 7, 5, 8, 6, 8, 5, 8, 7, 5, 6, 8, 7, 4, 7, 7, 5, 5, 292, 5, 5, 6, 54, 7, 8, 8, 7, 6, 7, 10, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 6, 6, 5, 7, 6, 4, 12, 5, 5, 181, 8, 7, 7, 7, 7, 6, 7, 4, 6, 4, 9, 4, 10, 6, 156, 5, 8, 7, 6, 7, 6, 6, 7, 6, 9, 6, 54, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 7, 4, 4, 4, 3, 4, 4, 4, 4, 6, 4, 4, 4, 5, 4, 6, 6, 5, 5, 4, 16, 8, 5, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [8, 19, 56, 4, 4, 5, 5, 8, 43, 4, 7, 9, 4, 36, 9, 6, 8, 6, 4, 8, 5, 7, 5, 5, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 5, 4, 4, 4, 7, 7, 4, 7, 3, 4, 6, 7, 6, 4, 4, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [9, 3, 7, 2, 4, 2, 2, 9, 4, 6, 2, 5, 3, 31, 4, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 8, 3, 4, 5, 3, 4, 4, 5, 4, 4, 5, 7, 6, 5, 5, 3, 3, 4, 12, 214, 4, 5, 6, 5, 5, 4, 6, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 3, 4, 7, 4, 5, 4, 5, 5, 5, 505, 5, 13, 12, 5, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 4, 6, 5, 4, 4, 4, 4, 4, 4, 5, 6, 4, 4, 3, 6, 5, 4, 5, 6, 4, 12, 4, 7, 4, 3, 5, 3, 9, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [3, 6, 10, 4, 7, 8, 9, 9, 10, 6, 5, 8, 5, 8, 12, 4, 7, 5, 6, 7, 6, 6, 33, 5, 331, 4, 9, 10, 4, 6, 5, 8, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [5, 21, 8, 5, 6, 7, 9, 8, 8, 3, 7, 5, 7, 8, 6, 6, 6, 3, 10, 6, 9, 10, 74, 10, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 5, 7, 7, 13, 6, 8, 15]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 6, 4, 27, 7, 4, 30, 3, 4, 14, 276]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 4, 7, 58, 7, 6, 8, 5, 448]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 7, 7, 4, 9, 8, 8, 6, 5, 7, 7, 5, 4, 10, 16, 4, 9, 4, 11, 6, 18, 4, 6, 6, 4, 11, 5, 9, 9, 7, 7, 9, 41, 10, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 4, 4, 7, 5, 7, 8, 146, 4, 6, 6, 5, 5, 7, 5, 7, 4, 5, 5, 5, 3, 11, 9, 4, 4, 8, 6, 4, 4, 12, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 8, 9, 8, 7, 8, 8, 11, 9, 4, 8, 7, 7, 4, 8, 7, 6, 9, 6, 8, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5, 6, 4, 4, 8, 4, 6, 4, 9, 8, 13, 9, 3, 147, 13, 8, 8, 5, 8, 6, 4, 5, 5, 3, 5, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 6, 3, 3, 3, 4, 16, 6, 3, 5, 5, 5, 4, 8, 7, 4, 8, 9, 5, 4, 10, 5, 5, 5, 6, 3, 4, 7, 6, 7, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 39, 6, 3, 3, 4, 6, 4, 5, 6, 9, 4, 4, 7, 100, 5, 7, 3, 5, 5, 9, 4, 5, 8, 16, 4, 3, 7, 8, 5, 4, 3, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [7, 3, 8, 7, 5, 9, 4, 5, 8, 6, 144, 105, 192, 170, 4, 5, 10, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 6, 7, 13, 5, 5, 9, 3, 12, 5, 4, 10, 7, 6, 8, 6, 9, 5, 8, 9, 5, 10, 7, 11, 44, 4, 8, 6, 4, 277, 9, 6, 6, 7, 9, 7, 7, 4, 7, 5, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 13, 16, 6, 73]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 4, 3, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 55, 10, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 7, 6, 33, 5, 6, 6, 12, 38]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [3, 14, 9, 4, 13, 20, 68, 362]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 4, 7, 8, 5, 8, 7, 33, 156, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [2, 9, 3, 8, 7, 6, 8, 7, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 139
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
