WARNING: Dual bound -0.736701 is larger than the objective of the primal solution -0.736703. The solution might not be optimal.
WARNING: Dual bound 0.736701 is smaller than the objective of the primal solution 0.736703. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260
----------------------------------
number of metabolites : 1668
number of reactions : 2382
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 48
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2382 flux variables and 4460 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 67, 18, 18, 3, 18, 18, 4, 20, 2, 2, 15, 2, 3, 12, 14, 2, 11, 15, 12, 11, 7, 2, 3, 40, 40, 41, 11, 11]
length(C_list) = 10
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 18, 18, 18, 16, 18, 2, 18, 18, 4, 8, 15, 3, 6, 6, 11, 11, 2, 11, 15, 11, 11, 3, 6, 6, 40, 40, 41, 12, 11, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 17, 17, 17, 7, 17, 12, 17, 22, 17, 7, 6, 14, 6, 8, 6, 131, 12, 10, 11, 14, 11, 16, 6, 6, 6, 9, 2, 40, 39, 40, 24, 12]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 19, 112, 18, 3, 7, 7, 18, 7, 18, 7, 15, 72, 7, 6, 17, 11, 3, 14, 15, 11, 11, 6, 15, 6, 13, 40, 40, 41, 11, 11, 12]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [11, 20, 8, 20, 6, 20, 5, 20, 20, 3, 9, 46, 6, 8, 11, 11, 11, 17, 31, 11, 12, 6, 6, 6, 42, 42, 45, 11, 11, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 7, 7, 10, 6, 6, 8, 4, 6, 9, 7, 10, 11, 11, 11, 5, 11, 11, 6, 5, 4, 6, 4, 11, 17]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [7, 4, 21, 17, 17, 6, 19, 17, 45, 8, 16, 8, 3, 11, 13, 11, 3, 11, 11, 7, 6, 7, 7, 38, 38, 39, 11, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 17, 17, 208, 17, 8, 24, 9, 17, 8, 6, 15, 12, 7, 11, 12, 28, 11, 73, 11, 181, 7, 9, 29, 7, 9, 39, 39, 40, 11, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 6, 17, 19, 19, 7, 17, 6, 17, 3, 8, 13, 7, 14, 8, 6, 11, 11, 8, 11, 14, 11, 24, 3, 13, 6, 7, 7, 39, 39, 40, 11, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 9, 18, 18, 18, 4, 18, 5, 21, 9, 18, 8, 10, 15, 5, 10, 4, 13, 12, 4, 12, 15, 12, 12, 3, 11, 10, 9, 7, 39, 39, 40, 12, 12, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 4, 4, 3, 5, 4, 7, 5, 6, 10, 4, 6, 11, 7, 4, 4, 3, 3, 6, 6, 7, 3, 11]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 9, 18, 18, 8, 7, 6, 6, 18, 8, 9, 10, 8, 15, 6, 7, 12, 12, 12, 34, 12, 15, 12, 12, 31, 6, 11, 7, 4, 8, 4, 11, 12, 12]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 7, 17, 17, 17, 6, 105, 7, 56, 6, 17, 16, 15, 150, 8, 8, 6, 44, 11, 8, 11, 14, 13, 11, 12, 8, 7, 6, 40, 38, 39, 11, 13, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 6, 6, 7, 12, 7, 8, 9, 171, 15, 7, 8, 7, 8, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 12, 6, 6, 8, 7, 7, 10]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 58, 4, 4, 5, 5, 5, 6, 9, 4, 7, 12, 9, 5, 9, 9, 42, 12, 4, 6, 5, 11, 4, 9, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 8, 7, 7, 133, 6, 6, 11, 6, 8, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 8, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 6, 16, 23]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 60, 4, 4, 4, 8, 25, 5, 7, 53]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 4, 4, 5, 14, 7, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 43, 6, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367010384204149
thermo_feasible = true
