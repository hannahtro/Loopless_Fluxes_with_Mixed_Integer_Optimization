┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSF_1195
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSF_1195
----------------------------------
number of metabolites : 1917
number of reactions : 2630
number of genes : 1195

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 53
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2630 flux variables and 4868 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [4, 5, 16, 16, 17, 17, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 2, 7, 15, 14, 13, 13, 14, 13, 13, 14, 13, 13, 13, 14, 13, 2, 14]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 26, 16, 18, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 3, 2, 13, 14, 13, 13, 14, 13, 13, 13, 18, 13, 2, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 16, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 2, 13, 14, 13, 13, 13, 13, 14, 13, 13, 14, 13, 3, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 2, 16, 16, 17, 16, 17, 16, 40, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 4, 13, 14, 13, 13, 13, 14, 14, 15, 13, 13, 14, 13, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 16, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 13, 11, 11, 2, 14, 15, 14, 13, 13, 18, 13, 15, 13, 18, 15, 13, 14, 14, 2, 15]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 17, 17, 18, 17, 18, 17, 17, 14, 11, 14, 15, 11, 11, 11, 11, 11, 11, 3, 14, 15, 14, 14, 14, 14, 14, 15, 14, 14, 14, 14, 15, 14, 6, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 16, 16, 17, 26, 17, 16, 16, 13, 11, 13, 31, 11, 12, 11, 11, 11, 11, 3, 13, 14, 13, 17, 13, 14, 13, 14, 13, 13, 13, 14, 14, 13, 3, 16]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 16, 16, 17, 16, 18, 17, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 4, 13, 14, 13, 13, 13, 14, 13, 13, 13, 14, 13, 3, 37]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 47, 16, 16, 92, 17, 25, 59, 18, 13, 11, 13, 14, 13, 11, 11, 13, 12, 11, 2, 13, 14, 13, 13, 13, 90, 13, 13, 13, 13, 13, 14, 13, 8, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 17, 16, 17, 16, 16, 13, 11, 14, 14, 11, 11, 11, 11, 19, 11, 4, 13, 14, 13, 13, 13, 14, 13, 13, 13, 14, 13, 7, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 16, 18, 18, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 16, 11, 6, 14, 15, 13, 13, 13, 13, 13, 14, 13, 13, 13, 14, 16, 3, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 3, 16, 16, 17, 16, 17, 16, 16, 13, 180, 15, 14, 11, 12, 11, 11, 11, 11, 14, 14, 15, 13, 14, 13, 14, 13, 14, 14, 13, 14, 18, 7, 19]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 16, 16, 17, 16, 17, 16, 16, 13, 11, 112, 15, 11, 11, 11, 11, 11, 11, 6, 13, 17, 13, 13, 13, 14, 13, 14, 13, 13, 13, 14, 13, 3, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 16, 16, 17, 16, 85, 16, 16, 13, 11, 13, 14, 12, 11, 11, 11, 11, 14, 4, 13, 14, 13, 13, 13, 13, 13, 13, 13, 13, 14, 13, 3, 15]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 6, 16, 16, 17, 16, 17, 16, 17, 13, 11, 13, 14, 11, 11, 126, 11, 11, 11, 3, 13, 14, 13, 16, 13, 13, 14, 13, 13, 13, 13, 14, 13, 7, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 16, 20, 17, 16, 17, 16, 16, 13, 11, 15, 14, 11, 21, 15, 11, 30, 11, 13, 15, 13, 13, 13, 98, 14, 14, 13, 14, 13, 14, 14, 13, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 16, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 13, 11, 11, 11, 12, 13, 14, 16, 13, 13, 15, 13, 13, 13, 13, 18, 13, 7, 157]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 6, 17, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 13, 11, 13, 11, 11, 13, 14, 14, 13, 13, 13, 14, 13, 107, 13, 13, 14, 14, 6, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 17, 16, 18, 20, 17, 16, 16, 13, 11, 15, 14, 21, 11, 11, 11, 11, 11, 13, 14, 13, 13, 13, 13, 17, 13, 13, 13, 13, 13, 14, 16, 6, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [11, 4, 17, 17, 18, 17, 18, 17, 17, 14, 12, 14, 15, 12, 12, 12, 12, 12, 12, 11, 14, 15, 14, 14, 16, 14, 14, 14, 15, 14, 5, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 9, 16, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 6, 13, 14, 13, 13, 13, 14, 13, 13, 13, 16, 13, 6, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 8, 5, 16, 16, 19, 16, 17, 16, 18, 13, 11, 13, 14, 17, 11, 11, 11, 11, 11, 8, 3, 17, 14, 15, 13, 17, 13, 13, 14, 13, 13, 13, 18, 14, 7, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 16, 16, 17, 16, 17, 17, 16, 13, 11, 13, 18, 11, 11, 11, 11, 11, 12, 6, 15, 14, 13, 13, 14, 19, 14, 14, 15, 22, 13, 13, 14, 13, 7, 149]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 7, 16, 16, 18, 16, 17, 25, 16, 15, 11, 13, 14, 11, 11, 11, 11, 11, 11, 7, 6, 13, 14, 13, 13, 13, 19, 13, 13, 13, 14, 13, 6, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [14, 6, 6, 16, 20, 17, 16, 17, 16, 16, 13, 11, 22, 23, 17, 12, 12, 11, 11, 11, 13, 14, 13, 14, 14, 14, 13, 13, 13, 15, 14, 18, 7, 14]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 4, 108, 5, 3, 4, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 10, 23, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 27
termination = MathOptInterface.OPTIMAL
objective_value = 0.9145919240802136
thermo_feasible = true
