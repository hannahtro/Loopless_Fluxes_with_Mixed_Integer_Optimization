┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN1463
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN1463
----------------------------------
number of metabolites : 2153
number of reactions : 2927
number of genes : 1462

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 59
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2927 flux variables and 5473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 2, 4, 6, 5, 3, 3, 3, 132, 2, 5, 6, 4, 314, 6, 4, 8, 5, 6, 213, 6, 8, 5, 10, 3, 6]
length(C_list) = 25
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 5, 8, 199, 30, 5, 3, 3, 2, 6, 5, 5, 4, 3, 3, 9, 3, 61, 5, 3, 25, 12, 4, 20, 16]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 2, 3, 199, 3, 5, 3, 6, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 5, 2, 2, 2, 3, 2, 3, 6, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 27, 9, 6, 246, 7, 31, 39, 10, 31, 7, 52, 35, 12, 41, 7, 63, 40, 11, 7, 7, 10, 76, 9, 7, 16, 9, 23]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [7, 3, 2, 4, 2, 4, 5, 3, 8, 2, 72]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 7, 7, 7, 6, 6, 6, 6, 6, 8, 6, 7, 6, 7, 7, 4, 3, 55, 6, 9, 9, 6, 6, 42, 14, 6, 7, 6, 11, 6, 7, 8, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 4, 7, 6, 2, 3, 8, 3, 9, 13, 7, 5, 5, 7, 7, 31, 7, 4, 7, 5, 7, 12, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 8, 8, 5, 6, 6, 9, 6, 6, 10, 6, 8, 6, 2, 6, 9, 6, 13, 6, 6, 8, 7, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 2, 4, 4, 4, 4, 5, 3, 6, 8, 4, 6, 4, 4, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 3, 8, 9, 6, 4, 3, 3, 3, 4, 4, 9, 2, 6, 4, 4, 3, 11, 5, 4, 4, 4, 8, 4, 5, 4, 8, 4, 9, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 7, 7, 7, 6, 20, 44, 11, 7, 6, 9, 6, 5, 8, 9, 9, 8, 5, 9, 6, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 13, 5, 4, 5, 10, 6, 6, 6, 6, 6, 6, 7, 7, 7, 3, 8, 23, 2, 7, 16, 5, 4, 6, 6, 46, 7, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 154, 5, 3, 3, 3, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 10, 6, 6, 6, 6, 8, 75, 6, 80, 13, 7, 6, 7, 7, 6, 6, 6, 156, 6, 6, 3, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 6, 8, 6, 7, 7, 8, 158, 79, 7, 8, 7, 9, 14, 9]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 5, 5, 6, 4, 10, 5, 4, 6, 7, 7, 20, 5, 6, 5, 12, 6, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 15, 26, 5, 4, 3, 6, 6, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 107, 10, 7, 17, 5, 5, 6, 76, 4, 7, 4, 8, 7, 10, 7, 5, 5, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 3, 4, 5, 5, 5, 5, 5, 5, 16, 5, 13, 7, 6, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 4, 14, 9, 14, 7, 16, 9, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 4, 4, 7, 5, 7, 6, 11, 4, 4, 4, 4, 5, 6, 6, 5, 4, 4, 6, 6, 4, 3, 4, 4, 6, 6, 13, 4, 13, 4, 10, 7, 7, 7, 4, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 8, 6, 8, 6, 4, 7, 4, 4, 7, 6, 7, 8, 7, 5, 6, 5, 7, 9, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 6, 72, 6, 9, 4, 6, 8, 112, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 8, 3, 4, 85, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 4, 125, 4, 4, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 7, 25, 6, 17, 6, 8, 8, 9, 60, 11, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 27
termination = MathOptInterface.OPTIMAL
objective_value = 0.5861183008932307
thermo_feasible = true
