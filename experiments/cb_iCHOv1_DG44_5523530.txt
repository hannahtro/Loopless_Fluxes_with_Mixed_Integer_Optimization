┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8]
length(C_list) = 36
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 3, 10, 3, 2, 2, 4, 8, 6, 5, 8, 12, 3, 3, 17, 4, 5, 10, 11, 10, 3, 9, 11, 211, 9, 5, 6, 7, 110, 5, 6, 6, 6, 4, 5, 3, 15, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 3, 3, 36, 4, 5, 4, 3, 4, 3, 226, 6, 5, 4, 5, 5, 76, 336, 8, 3, 8, 4, 5, 6, 7, 4, 5, 7, 6, 9, 4, 6, 5, 9, 5, 26, 63, 9, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 3, 4, 6, 38, 5, 6, 6, 4, 3, 95, 9, 5, 5, 4, 7, 4, 6, 4, 4, 18, 4, 5, 6, 5, 6, 8, 8, 7, 4, 5, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 46, 5, 4, 8, 6, 4, 201, 4, 5, 4, 4, 6, 5, 4, 4, 5, 5, 3, 8, 38, 8, 279, 5, 4, 10, 3, 10, 8, 3, 6, 20, 6, 6, 60, 4, 3, 3, 10, 3, 5, 4, 6, 5, 4, 7, 5, 6, 6, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 5, 3, 21, 4, 3, 6, 4, 5, 4, 7, 4, 5, 4, 181, 4, 4, 5, 3, 6, 3, 105, 6, 4, 4, 6, 6, 6, 14, 8, 5, 4, 4, 11, 11, 11, 4, 5, 5, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 221, 3, 4, 3, 4, 4, 4, 4, 4, 4, 13, 3, 5, 7, 4, 4, 4, 9, 59, 7, 5, 26, 5, 9, 24, 151, 11, 7, 5, 6, 8, 7, 7, 155, 5, 8, 4, 6, 4, 4, 5, 10, 10, 64, 73, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 3, 4, 6, 5, 3, 4, 7, 7, 8, 5, 8, 5, 255, 23, 5, 3, 14, 5, 223, 4, 7, 8, 14, 5, 4, 3, 4, 7, 5, 5, 3, 4, 5, 8, 5, 5, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 5, 6, 3, 3, 5, 14, 5, 5, 6, 4, 5, 36, 4, 5, 3, 6, 4, 7, 4, 5, 4, 4, 12, 4, 12, 259, 4, 5, 6, 5, 57, 8, 3, 4, 4, 4, 9, 5, 6, 5, 5, 4, 23, 8, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 211, 3, 24, 7, 5, 6, 9, 4, 6, 5, 7, 54, 8, 4, 7, 19, 6, 4, 4, 3, 74, 5, 8, 4, 7, 3, 10, 4, 4, 4, 5, 5, 5, 8, 4, 208, 4, 360, 16, 5, 10, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 4, 4, 5, 3, 5, 9, 13, 4, 8, 4, 6, 9, 3, 5, 114, 4, 6, 5, 4, 6, 10, 4, 47, 4, 7, 60, 8, 5, 8, 6, 6, 363, 4, 7, 7, 9, 40, 69, 3, 4, 8, 30, 6, 8, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 11, 25, 9, 10, 5, 4, 3, 8, 4, 8, 8, 11, 4, 4, 174, 4, 10, 10, 91, 4, 3, 11, 22, 10, 4, 8, 10, 10, 261, 23, 11, 13, 3, 4, 10, 9, 4, 4, 4, 135, 39, 8, 3, 8, 46, 6, 5, 8, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 10, 6, 5, 8, 4, 8, 6, 4, 6, 4, 8, 7, 3, 46, 4, 4, 7, 8, 4, 12, 6, 4, 287, 4, 5, 4, 5, 11, 4, 7, 5, 4, 6, 16, 4, 5, 5, 5, 3, 278, 3, 39, 3, 9, 6, 5, 8, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 4, 3, 4, 14, 4, 4, 5, 4, 12, 4, 4, 4, 5, 5, 4, 4, 8, 6, 4, 231, 5, 6, 10, 5, 5, 4, 4, 5, 6, 6, 104, 7, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 5, 4, 3, 3, 5, 4, 4, 4, 4, 4, 51, 4, 7, 5, 10, 6, 7, 4, 4, 4, 4, 6, 4, 9, 4, 10, 10, 8, 5, 8, 5, 6, 5, 11, 5, 3, 5, 30, 13, 7, 6, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [8, 5, 8, 4, 4, 4, 5, 12, 5, 4, 4, 4, 4, 4, 8, 125, 4, 6, 6, 8, 28, 4, 6, 5, 9, 14, 9, 84, 8, 8, 12, 85, 4, 11, 4, 4, 4, 13, 4, 6, 5, 5, 8, 7, 6, 6, 158]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 4, 7, 4, 3, 4, 7, 8, 137, 59, 5, 4, 3, 3, 126, 158, 6, 4, 5, 16, 8, 8, 9, 4, 8, 5, 5, 7, 7, 8, 12, 60, 216, 11, 5, 4, 6, 6, 5, 7, 8, 62, 49, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 13, 5, 4, 6, 10, 6, 4, 8, 15, 4, 3, 9, 541, 279, 352, 7, 5, 3, 7, 5, 6, 7, 6, 6, 10, 8, 30, 7, 8, 5, 6, 5, 5, 6, 5, 4, 9, 4, 119, 4, 12, 4, 8, 162, 7, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 3, 9, 3, 5, 5, 17, 323, 5, 4, 4, 6, 6, 4, 4, 4, 4, 3, 5, 4, 6, 40, 4, 5, 9, 9, 7, 5, 7, 4, 9, 6, 4, 170, 14, 4, 58, 104, 128, 7, 10, 10, 5, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 17, 10, 6, 4, 6, 3, 6, 8, 5, 4, 4, 246, 8, 9, 438, 8, 4, 5, 8, 4, 7, 10, 4, 11, 4, 6, 5, 4, 11, 5, 4, 6, 4, 5, 7, 5, 9, 5, 7, 13, 5, 8, 4, 7, 7, 9, 8, 7, 5, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [8, 6, 83, 15, 8, 6, 4, 7, 6, 6, 6, 5, 16, 8, 4, 68, 4, 4, 12, 9, 6, 26, 7, 9, 6, 6, 204, 5, 9, 5, 7, 325, 4, 6, 6, 4, 45, 6, 9, 4, 4, 5, 6, 333, 4, 10, 16, 6, 8, 50, 8, 127]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [9, 5, 278, 7, 6, 6, 13, 9, 380, 18, 4, 4, 4, 4, 15, 9, 137, 5, 4, 7, 4, 27, 4, 8, 5, 7, 8, 9, 140, 12, 6, 5, 5, 7, 10, 7, 3, 6, 5, 10, 25, 4, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 92, 5, 4, 7, 5, 5, 8, 3, 7, 7, 4, 7, 4, 4, 7, 5, 10, 8, 8, 6, 4, 4, 12, 7, 6, 9, 8, 6, 35, 8, 6, 14, 5, 5, 6, 9, 4, 10, 4, 5, 5, 4, 12, 5, 4, 8, 9, 4, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 14, 3, 6, 10, 8, 5, 6, 5, 6, 6, 9, 10, 9, 4, 9, 3, 4, 192, 4, 7, 4, 314, 8, 4, 8, 10, 5, 10, 7, 6, 6, 6, 5, 4, 9, 5, 9, 8, 6, 4, 8, 7, 5, 3, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 18, 6, 4, 7, 8, 11, 8, 4, 6, 4, 4, 13, 9, 5, 5, 5, 4, 225, 6, 4, 4, 4, 4, 7, 9, 5, 7, 8, 6, 5, 11, 5, 7, 4, 5, 34, 4, 4, 11, 7, 16, 10, 4, 8, 559, 9, 8, 5, 6, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 4, 8, 4, 3, 12, 10, 5, 3, 7, 6, 16, 5, 4, 6, 16, 5, 4, 6, 4, 9, 7, 4, 5, 16, 3, 13, 6, 5, 12, 3, 4, 7, 4, 5, 4, 7, 4, 4, 5, 6, 5, 8, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 9, 4, 8, 6, 162, 12, 9, 5, 6, 6, 7, 4, 7, 4, 5, 4, 275, 4, 8, 3, 7, 382, 6, 8, 185, 6, 13, 12, 22, 10, 9, 6, 60, 14, 6, 24, 5, 7, 45, 4, 6, 7, 8, 7, 6, 4, 7, 8, 7, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 6, 7, 4, 4, 6, 4, 6, 6, 5, 22, 5, 7, 6, 4, 6, 4, 46, 6, 8, 4, 51, 7, 6, 22, 10, 24, 5, 5, 4, 11, 8, 5, 4, 5, 6, 5, 183, 5, 5, 5, 124, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 4, 6, 5, 9, 5, 286, 12, 10, 6, 5, 9, 4, 5, 7, 7, 4, 103, 7, 6, 4, 4, 4, 5, 8, 7, 5, 4, 4, 5, 20, 6, 219, 11, 6, 4, 170, 242, 4, 4, 8, 8, 4, 5, 8, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
termination = MathOptInterface.INFEASIBLE
objective_value = 0.01068997308482666
