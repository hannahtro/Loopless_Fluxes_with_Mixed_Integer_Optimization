┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECSF_1327
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECSF_1327
----------------------------------
number of metabolites : 1951
number of reactions : 2742
number of genes : 1327

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2742 flux variables and 5093 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 7, 67, 11, 81, 11, 16, 11, 11, 21, 19, 18, 17, 18, 17, 17, 14, 15, 15, 14, 19, 14, 14, 14, 15, 15, 14, 15, 14, 15, 14, 14, 14, 16, 23, 2, 17, 2, 2, 3, 6, 2, 12, 2, 2, 2, 40, 7, 2, 2, 4, 7, 42, 41, 2, 41, 2, 4]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 3, 4, 4, 3, 3, 2, 3, 3, 4, 3, 3, 4, 4, 3, 3, 4, 3, 4, 5, 5, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 5, 4, 5, 2, 2, 2, 4, 4, 5, 2, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 5, 3, 7, 2, 4, 4, 8, 6, 8, 9, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 7, 2, 2, 2, 5, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 9, 6, 3, 8, 7, 4, 8, 4, 33]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 10, 38, 2, 5, 5, 3, 4, 3, 4, 4, 2, 14, 4, 4, 5, 5, 29]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 5, 3, 4, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 20, 4, 2, 4, 25, 4, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 2, 8, 10, 101, 19, 4, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 13, 6, 7, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 8, 5, 4, 11, 4, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 3, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 4, 9, 9, 9, 4, 9, 5, 4, 5, 8, 8, 5, 8, 3, 4, 6, 6, 3, 8, 3, 5, 8, 4, 6, 6, 12, 6, 5, 8, 4, 3, 3, 4, 5, 3, 7, 5, 5, 4, 4, 5, 7, 3, 5, 5, 4, 4, 5, 4, 65, 11, 6, 6, 3, 4, 9, 6, 3, 197, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785113096771
thermo_feasible = true
