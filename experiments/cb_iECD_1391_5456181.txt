WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975606 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975538 is smaller than the objective of the primal solution 0.975599. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECD_1391
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECD_1391
----------------------------------
number of metabolites : 1943
number of reactions : 2741
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 2, 2, 3, 2, 4, 2, 2, 3, 3, 2, 2, 2, 7, 180, 3, 3, 3, 4, 61, 3, 4, 4, 3, 6, 3, 3, 62, 3, 4, 4, 35, 5, 3, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 3, 2, 3, 4, 3, 3, 3, 2, 4, 3, 4, 4, 3, 3, 3, 4, 4, 4, 4, 5, 4, 26, 3, 4, 2, 3, 9, 4, 4, 4, 32, 2, 4, 3, 3, 4, 4, 3, 5, 4, 4, 127]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 6, 4, 4, 4, 4, 5, 3, 5, 6, 2, 6, 5, 4, 5, 5, 4, 4, 4, 9, 5, 4, 6, 3, 4, 4, 5, 6, 4, 4, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 4, 4, 6, 6, 5, 5, 4, 10, 17, 11, 5, 7, 6, 4, 6, 5, 2, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 4, 8, 2, 6, 5, 5, 2, 2, 34, 5, 4, 6, 7, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 6, 150, 6, 6, 4, 3, 4, 4, 6, 5, 5, 7, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 7, 4, 7, 6, 10, 3, 17, 36, 13]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 78, 148, 4, 4, 324, 2, 3, 4, 4, 15, 5, 7, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 212, 6, 4, 9, 5, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 3, 5, 4, 43, 5, 4, 11, 4, 4, 6, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 10, 4, 3, 4, 4, 3, 11, 4, 3, 3, 3, 3, 4, 4, 3, 4, 144, 3, 3, 4, 10, 4, 23, 18, 3, 83, 3, 4, 8, 47, 4, 4, 14, 20, 3, 3, 7, 4, 178, 115, 4, 8, 40, 243, 12, 7, 5, 4, 37, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 4, 5, 5, 4, 6, 4, 3, 5, 5, 5, 3, 7, 5, 5, 4, 5, 4, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 8, 5, 4, 5, 5, 5, 191, 4, 5, 6, 5, 3, 3, 12, 8, 6, 184, 4, 5, 95, 7, 5, 6, 5, 8, 4, 5, 4, 5, 5, 39, 6, 5, 36, 10, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 5, 8, 6, 7, 8, 6, 5, 6, 8, 7, 9, 7, 7, 6, 5, 6, 8, 7, 5, 6, 5, 7, 7, 5, 7, 5, 5, 6, 7, 7, 7, 5, 39, 8, 13, 6, 9, 6, 12, 5, 6, 15, 10, 10, 5, 11, 5, 7, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 5, 7, 4, 8, 7, 5, 8, 5, 7, 7, 6, 6, 5, 6, 8, 8, 7, 7, 6, 8, 8, 9, 7, 6, 6, 7, 6, 7, 8, 10, 9, 7, 7, 9, 5, 5, 7, 5, 8, 9, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 4, 3, 4, 5, 5, 4, 4, 3, 4, 4, 6, 3, 4, 4, 4, 4, 6, 8, 4, 6, 8, 3, 3, 6, 7, 8, 6, 6, 106, 5, 102, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 4, 8, 3, 7, 8, 7, 7, 7, 8, 11, 7, 7, 5, 41, 53, 10, 8, 7, 6, 6, 6, 9, 8, 4, 7, 9, 9, 4, 20, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 3, 3, 12, 13, 15, 15, 15, 91, 11, 10, 11, 10, 11, 10, 10, 11, 13, 10, 10, 11, 10, 11, 10, 10, 9, 9, 9, 9, 9, 9, 9, 10, 7, 4, 9, 5, 22, 17, 3, 32, 5, 11, 5, 3, 9, 33, 13, 14, 13, 12, 14, 8, 8, 8, 4, 5, 17, 4, 4, 18, 4, 22, 12, 3, 10, 11, 5, 6, 8, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 5, 4, 5, 13, 13, 14, 12, 14, 13, 13, 10, 10, 11, 10, 11, 10, 11, 11, 10, 11, 11, 11, 10, 10, 10, 11, 11, 24, 11, 10, 27, 9, 10, 10, 11, 9, 9, 9, 9, 9, 9, 10, 11, 10, 10, 6, 8, 4, 7, 4, 12, 5, 17, 5, 4, 2, 8, 14, 13, 17, 6, 6, 13, 6, 4, 9, 4, 4, 5, 5, 9, 4, 5, 2, 6, 5, 4, 4, 4, 7, 14, 4, 5, 5, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 5, 3, 8, 20, 119, 40, 19, 26, 26, 20, 17, 17, 18, 17, 18, 17, 17, 19, 17, 18, 17, 18, 17, 19, 17, 18, 6, 19, 16, 16, 16, 16, 16, 16, 17, 5, 4, 4, 17, 6, 4, 7, 7, 4, 5, 4, 25, 25, 31, 24, 33, 3, 24, 4, 15, 4, 4, 6, 4, 4, 12, 9, 6, 4, 8, 9, 4, 7, 6, 9, 6, 4, 6, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 7, 5, 6, 12, 17, 14, 16, 15, 14, 4, 13, 11, 11, 11, 10, 11, 10, 10, 10, 10, 10, 11, 10, 11, 10, 64, 69, 14, 5, 12, 14, 9, 102, 9, 9, 173, 12, 4, 5, 4, 4, 5, 5, 5, 5, 6, 5, 5, 7, 5, 12, 13, 14, 13, 6, 13, 5, 4, 4, 6, 4, 4, 4, 5, 5, 5, 6, 6, 5, 5, 70, 5, 4, 4, 13, 17, 31, 5, 6, 4, 4, 4, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 3, 8, 4, 24, 13, 16, 35, 15, 13, 14, 10, 10, 11, 10, 11, 10, 10, 10, 11, 10, 11, 10, 10, 9, 5, 9, 9, 9, 9, 9, 9, 5, 4, 4, 4, 5, 5, 4, 12, 8, 4, 6, 4, 5, 17, 13, 14, 13, 13, 6, 15, 12, 8, 4, 4, 7, 5, 4, 6, 9, 5, 4, 4, 4, 4, 4, 5, 4, 5, 7, 5, 5, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 5, 5, 4, 5, 5, 11, 14, 38, 16, 17, 17, 12, 14, 14, 15, 14, 15, 19, 27, 15, 20, 14, 14, 14, 14, 15, 14, 15, 14, 14, 9, 9, 9, 9, 22, 9, 9, 11, 5, 5, 5, 4, 6, 5, 6, 4, 3, 11, 6, 5, 17, 7, 18, 4, 16, 5, 5, 16, 7, 75, 7, 6, 8, 8, 5, 5, 15, 4, 6, 5, 6, 5, 5, 5, 4, 4, 7, 5, 102, 6, 6, 5, 6, 4, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 11, 4, 13, 21, 6, 13, 14, 6, 13, 10, 10, 11, 10, 11, 10, 10, 10, 11, 10, 11, 10, 10, 9, 34, 63, 8, 9, 9, 9, 9, 6, 4, 5, 5, 4, 6, 4, 7, 8, 5, 4, 5, 4, 5, 9, 12, 13, 13, 5, 6, 12, 12, 12, 4, 7, 4, 4, 5, 49, 6, 5, 7, 5, 6, 6, 4, 6, 6, 4, 8, 7, 5, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 7, 12, 14, 14, 11, 15, 6, 12, 10, 201, 11, 10, 11, 12, 10, 11, 12, 46, 10, 10, 11, 10, 11, 10, 10, 9, 4, 16, 13, 58, 10, 8, 9, 9, 5, 28, 106, 6, 13, 5, 7, 5, 4, 5, 4, 13, 12, 13, 13, 7, 4, 12, 12, 4, 4, 4, 4, 5, 4, 4, 4, 6, 6, 42, 6, 7, 10, 4, 4, 11, 7, 4, 4, 4, 20, 10, 5, 8, 3, 5, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 3, 13, 14, 16, 13, 16, 16, 14, 8, 8, 27, 8, 9, 8, 83, 9, 8, 8, 8, 9, 8, 10, 8, 8, 10, 9, 10, 10, 10, 10, 10, 10, 11, 9, 3, 6, 7, 4, 4, 4, 5, 4, 5, 5, 7, 5, 6, 19, 14, 16, 14, 15, 4, 14, 10, 6, 4, 3, 4, 9, 4, 120, 4, 4, 4, 5, 7, 5, 4, 14, 4, 4, 4, 7, 4, 3, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 10, 4, 13, 23, 15, 13, 15, 140, 14, 8, 8, 9, 8, 9, 8, 8, 11, 8, 9, 9, 9, 29, 8, 16, 3, 11, 9, 7, 10, 116, 8, 10, 8, 8, 6, 5, 3, 5, 4, 3, 6, 4, 23, 2, 5, 3, 6, 3, 10, 13, 14, 11, 13, 4, 13, 60, 10, 7, 27, 3, 7, 4, 5, 7, 6, 6, 5, 4, 6, 6, 6, 6, 4, 6, 14, 5, 4, 3, 6, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 8, 5, 14, 13, 16, 13, 16, 15, 14, 10, 11, 12, 10, 11, 10, 17, 10, 11, 11, 10, 11, 10, 10, 10, 10, 11, 205, 11, 13, 10, 98, 10, 14, 10, 11, 10, 10, 10, 10, 10, 11, 10, 10, 6, 6, 5, 5, 7, 5, 6, 7, 3, 4, 4, 4, 4, 16, 15, 18, 18, 7, 5, 15, 5, 7, 3, 6, 8, 4, 6, 5, 4, 4, 6, 4, 6, 3, 5, 4, 4, 3, 7, 6, 3, 9, 3, 4, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 4, 4, 3, 14, 14, 17, 15, 16, 15, 14, 10, 10, 11, 10, 11, 10, 10, 25, 81, 10, 10, 11, 10, 77, 188, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 3, 6, 4, 4, 23, 6, 31, 6, 6, 5, 5, 3, 16, 15, 16, 15, 7, 5, 5, 15, 3, 4, 6, 4, 4, 6, 4, 6, 7, 4, 5, 5, 6, 5, 4, 4, 4, 5, 4, 5, 6, 5, 5, 4, 17, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 4, 7, 4, 4, 4, 16, 13, 18, 15, 17, 15, 13, 10, 10, 11, 11, 11, 10, 10, 10, 10, 10, 11, 10, 10, 11, 12, 146, 10, 10, 9, 12, 10, 111, 10, 9, 10, 12, 11, 9, 10, 12, 10, 10, 5, 4, 4, 9, 4, 6, 6, 5, 5, 11, 4, 7, 4, 7, 9, 19, 15, 19, 16, 7, 10, 6, 73, 62, 4, 9, 8, 5, 5, 3, 4, 6, 4, 84, 5, 4, 7, 5, 6, 14, 3, 4, 4, 7, 8, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 6, 6, 5, 8, 13, 13, 16, 14, 17, 17, 14, 10, 10, 11, 254, 11, 10, 10, 11, 12, 40, 10, 10, 11, 10, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 3, 7, 4, 7, 4, 6, 5, 6, 92, 5, 8, 6, 5, 16, 15, 16, 15, 15, 4, 15, 7, 11, 8, 12, 9, 4, 6, 3, 8, 5, 5, 8, 4, 4, 5, 6, 6, 6, 6, 6, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [12, 5, 5, 6, 9, 11, 14, 18, 13, 18, 12, 14, 13, 13, 14, 13, 14, 13, 13, 13, 14, 14, 13, 14, 13, 13, 8, 14, 13, 8, 8, 8, 8, 8, 8, 3, 7, 4, 4, 6, 4, 3, 7, 11, 4, 4, 5, 22, 17, 16, 19, 16, 16, 8, 18, 7, 6, 6, 5, 4, 11, 4, 6, 8, 6, 12, 4, 7, 6, 6, 11, 8, 6, 4, 7, 4, 8, 4, 4, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [12, 5, 4, 6, 14, 17, 14, 16, 17, 16, 14, 14, 9, 11, 15, 9, 11, 9, 9, 10, 9, 11, 9, 10, 9, 9, 9, 9, 10, 9, 10, 12, 9, 9, 9, 20, 10, 10, 10, 57, 10, 10, 12, 10, 10, 10, 4, 12, 3, 10, 5, 8, 5, 4, 8, 6, 4, 11, 11, 14, 15, 9, 21, 8, 25, 182, 13, 11, 6, 5, 4, 12, 6, 5, 4, 6, 4, 4, 121, 4, 8, 5, 177, 326, 5, 3, 14, 9, 7, 6, 5, 11, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 3, 6, 7, 13, 15, 20, 14, 20, 18, 96, 14, 13, 21, 142, 14, 13, 13, 13, 14, 13, 13, 4, 24, 13, 16, 13, 13, 8, 5, 14, 14, 7, 8, 8, 8, 8, 14, 6, 5, 4, 6, 6, 10, 4, 4, 8, 8, 3, 9, 19, 19, 19, 18, 12, 5, 18, 15, 9, 6, 7, 6, 4, 4, 10, 4, 8, 3, 4, 3, 4, 5, 7, 4, 8, 5, 4, 4, 5, 9, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 5, 7, 5, 6, 17, 13, 17, 16, 17, 12, 16, 14, 14, 15, 14, 15, 14, 14, 15, 104, 15, 14, 15, 14, 14, 8, 14, 5, 16, 8, 8, 126, 8, 8, 8, 5, 3, 4, 9, 7, 9, 6, 7, 12, 4, 5, 16, 20, 7, 23, 8, 16, 5, 200, 4, 4, 4, 5, 4, 3, 7, 5, 5, 5, 5, 4, 6, 5, 13, 6, 6, 3, 4, 5, 6, 6, 4, 4, 7, 12, 4, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 4, 4, 17, 14, 16, 13, 15, 15, 15, 9, 9, 10, 9, 12, 9, 9, 10, 9, 11, 10, 10, 9, 9, 10, 6, 10, 10, 10, 10, 10, 10, 10, 9, 9, 5, 2, 6, 5, 17, 3, 4, 8, 7, 7, 5, 12, 11, 14, 18, 66, 14, 6, 14, 4, 11, 14, 6, 5, 8, 6, 4, 4, 30, 4, 7, 6, 4, 9, 7, 12, 5, 7, 7, 7, 11, 6, 5, 6, 16, 8, 30, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 6, 4, 4, 7, 6, 34, 11, 15, 11, 16, 12, 12, 11, 11, 14, 11, 12, 11, 11, 12, 11, 5, 105, 11, 12, 11, 11, 8, 5, 12, 8, 9, 9, 9, 9, 8, 10, 7, 5, 7, 2, 4, 6, 4, 10, 18, 12, 5, 4, 15, 14, 15, 14, 14, 5, 14, 7, 7, 7, 6, 7, 4, 4, 4, 6, 5, 10, 6, 8, 6, 8, 6, 7, 8, 5, 6, 5, 5, 6, 24, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [8, 4, 14, 14, 9, 4, 7, 17, 12, 17, 13, 18, 9, 13, 12, 12, 11, 10, 13, 10, 10, 10, 10, 216, 11, 10, 11, 10, 11, 110, 10, 9, 4, 9, 11, 11, 11, 12, 9, 10, 3, 9, 6, 6, 7, 10, 10, 5, 8, 4, 17, 16, 17, 20, 8, 10, 117, 7, 6, 9, 8, 7, 7, 7, 4, 8, 7, 12, 6, 7, 4, 7, 16, 10, 9, 11, 4, 13, 7, 9, 8, 8, 9, 8, 14, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 6, 14, 18, 15, 13, 16, 14, 14, 9, 9, 10, 9, 10, 9, 9, 11, 9, 10, 9, 10, 9, 9, 10, 12, 11, 10, 10, 11, 10, 10, 109, 4, 4, 4, 5, 5, 6, 3, 4, 8, 6, 12, 10, 4, 4, 4, 11, 14, 15, 14, 14, 3, 14, 11, 14, 5, 4, 8, 6, 13, 12, 4, 6, 7, 4, 6, 3, 9, 4, 4, 4, 4, 12, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 4, 4, 5, 14, 14, 19, 14, 19, 15, 16, 19, 137, 14, 13, 117, 216, 13, 13, 13, 14, 13, 13, 14, 13, 14, 16, 13, 10, 8, 10, 10, 11, 10, 10, 10, 13, 7, 26, 5, 7, 5, 7, 4, 4, 5, 4, 7, 5, 19, 18, 19, 19, 18, 4, 18, 4, 7, 6, 4, 5, 8, 6, 12, 6, 5, 7, 5, 6, 5, 5, 9, 4, 3, 8, 4, 5, 6, 4, 9, 7, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [14, 6, 6, 5, 6, 25, 5, 14, 14, 16, 14, 16, 14, 14, 10, 10, 12, 10, 12, 10, 13, 209, 10, 11, 11, 12, 10, 12, 10, 10, 10, 11, 3, 12, 10, 10, 20, 10, 13, 10, 12, 4, 4, 3, 26, 7, 8, 5, 9, 5, 4, 9, 22, 17, 16, 17, 16, 16, 16, 7, 5, 4, 5, 9, 5, 5, 4, 7, 4, 5, 28, 8, 11, 6, 8, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 3, 6, 6, 4, 11, 12, 13, 11, 14, 13, 13, 10, 10, 11, 10, 11, 10, 10, 12, 12, 10, 10, 11, 11, 11, 10, 10, 8, 12, 36, 8, 8, 12, 8, 8, 10, 13, 7, 12, 5, 6, 6, 14, 10, 4, 5, 6, 4, 8, 13, 14, 13, 12, 12, 7, 12, 12, 16, 8, 9, 12, 5, 4, 5, 6, 5, 5, 7, 9, 5, 6, 7, 7, 6, 10, 6, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 5, 14, 15, 20, 14, 20, 18, 14, 13, 13, 14, 13, 14, 13, 13, 13, 6, 14, 13, 14, 13, 13, 10, 5, 10, 10, 10, 10, 10, 10, 8, 9, 4, 5, 4, 25, 6, 3, 4, 5, 6, 5, 19, 19, 19, 18, 8, 8, 18, 7, 8, 8, 22, 4, 4, 6, 5, 6, 10, 7, 10, 21, 6, 8, 4, 26, 31, 13, 8, 4, 3, 4, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [12, 6, 5, 4, 5, 4, 11, 12, 13, 11, 13, 12, 7, 10, 10, 11, 10, 11, 10, 10, 11, 13, 12, 10, 11, 11, 10, 11, 10, 10, 9, 11, 10, 111, 8, 8, 9, 8, 8, 5, 59, 4, 5, 7, 11, 19, 7, 9, 5, 7, 18, 12, 12, 13, 4, 12, 4, 13, 6, 7, 6, 10, 12, 9, 5, 9, 6, 4, 7, 5, 5, 5, 9, 6, 5, 6, 5, 5, 5, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 14, 14, 15, 14, 17, 15, 14, 10, 10, 10, 9, 10, 9, 9, 10, 9, 11, 3, 10, 9, 10, 13, 10, 10, 9, 5, 10, 10, 10, 10, 27, 10, 9, 9, 12, 3, 4, 6, 5, 9, 3, 8, 5, 9, 3, 4, 4, 15, 14, 15, 14, 14, 14, 11, 7, 5, 4, 5, 4, 4, 7, 6, 3, 5, 9, 5, 7, 5, 5, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [26, 3, 12, 17, 18, 17, 17, 18, 17, 17, 10, 10, 12, 10, 13, 10, 10, 12, 10, 10, 12, 10, 12, 10, 11, 14, 14, 14, 14, 14, 14, 14, 10, 4, 3, 18, 10, 16, 7, 7, 5, 4, 10, 12, 18, 17, 18, 17, 17, 6, 17, 11, 13, 5, 14, 5, 11, 7, 10, 7, 10, 12, 4, 10, 18, 6, 12, 15, 8, 9, 7, 6, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [11, 5, 4, 4, 7, 4, 14, 13, 17, 15, 17, 15, 16, 12, 25, 12, 10, 11, 10, 10, 10, 10, 11, 10, 11, 10, 14, 11, 10, 11, 10, 12, 10, 11, 4, 11, 94, 10, 10, 10, 10, 12, 79, 11, 12, 10, 5, 4, 6, 6, 6, 4, 134, 79, 3, 7, 4, 16, 4, 16, 5, 5, 15, 5, 4, 4, 206, 4, 9, 3, 6, 10, 8, 4, 3, 4, 7, 7, 5, 4, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 5, 9, 13, 14, 15, 14, 16, 15, 15, 9, 9, 10, 19, 10, 9, 9, 9, 9, 10, 10, 10, 9, 9, 9, 11, 8, 8, 8, 8, 8, 8, 9, 6, 11, 7, 6, 12, 8, 10, 9, 4, 4, 6, 82, 14, 11, 15, 15, 15, 14, 16, 14, 11, 11, 5, 12, 5, 7, 6, 4, 13, 3, 6, 4, 9, 133, 21, 111, 13, 5, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 6, 15, 82, 4, 8, 9, 3, 4, 4, 5, 8, 4, 5, 6, 9, 6, 4, 4, 5, 7, 4, 6, 8, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 6, 16, 16, 18, 16, 18, 16, 16, 11, 11, 13, 11, 241, 11, 11, 113, 13, 14, 11, 11, 13, 12, 16, 11, 11, 14, 114, 14, 14, 23, 14, 15, 14, 11, 13, 27, 13, 4, 136, 254, 4, 6, 4, 8, 5, 66, 10, 18, 14, 18, 14, 5, 5, 10, 3, 11, 6, 13, 8, 259, 4, 4, 7, 12, 7, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [14, 11, 3, 10, 19, 18, 22, 18, 7, 24, 20, 10, 9, 10, 9, 249, 9, 9, 9, 4, 10, 60, 9, 9, 10, 9, 11, 9, 8, 12, 13, 8, 8, 11, 8, 8, 9, 26, 10, 10, 11, 4, 5, 3, 8, 3, 19, 7, 19, 12, 3, 13, 12, 10, 13, 12, 4, 4, 5, 24, 11, 5, 10, 9, 64, 6, 9, 4, 9, 4, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [11, 5, 13, 6, 13, 13, 17, 14, 16, 15, 14, 10, 10, 11, 14, 11, 10, 10, 10, 22, 10, 3, 11, 10, 11, 10, 10, 8, 7, 8, 8, 8, 8, 8, 8, 11, 62, 8, 7, 4, 34, 30, 5, 6, 7, 4, 8, 6, 7, 16, 13, 4, 13, 5, 14, 6, 4, 39, 8, 9, 5, 4, 68, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 6, 12, 4, 6, 5, 13, 14, 15, 13, 5, 14, 14, 9, 9, 11, 12, 7, 9, 9, 10, 9, 4, 12, 9, 9, 36, 9, 4, 9, 14, 107, 10, 10, 10, 10, 10, 10, 10, 5, 44, 11, 9, 3, 11, 10, 4, 11, 8, 3, 5, 6, 9, 9, 15, 14, 5, 19, 14, 13, 14, 8, 14, 6, 4, 10, 12, 6, 103, 9, 4, 11, 5, 5, 5, 7, 16, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [12, 7, 8, 6, 3, 14, 13, 17, 14, 17, 14, 14, 10, 10, 11, 10, 11, 11, 10, 10, 10, 10, 11, 10, 13, 10, 10, 16, 13, 8, 8, 8, 8, 8, 11, 11, 3, 10, 88, 13, 4, 4, 7, 11, 22, 5, 15, 16, 13, 16, 13, 15, 3, 15, 7, 6, 8, 44, 121, 5, 6, 5, 5, 7, 4, 8, 8, 4, 4, 11, 10, 5, 6, 8, 8, 5, 8, 4, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [8, 6, 10, 4, 6, 4, 13, 15, 16, 205, 18, 16, 14, 10, 10, 11, 10, 11, 10, 11, 11, 13, 12, 24, 10, 13, 10, 14, 10, 10, 9, 10, 11, 8, 8, 8, 8, 8, 8, 11, 11, 4, 14, 4, 4, 25, 5, 4, 5, 11, 5, 16, 20, 16, 15, 7, 15, 6, 6, 3, 7, 4, 4, 4, 7, 6, 11, 12, 4, 7, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [7, 4, 12, 4, 4, 13, 60, 16, 15, 16, 14, 9, 9, 9, 11, 9, 10, 9, 9, 10, 9, 9, 9, 9, 10, 9, 10, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 9, 7, 4, 8, 6, 5, 6, 5, 10, 4, 6, 5, 9, 7, 11, 15, 15, 8, 14, 5, 14, 22, 12, 3, 7, 9, 10, 4, 9, 9, 5, 7, 15, 5, 4, 12, 8, 4, 6, 6, 10, 5, 8, 12, 4, 11, 11, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [2, 132, 6, 12, 15, 15, 18, 15, 18, 17, 16, 14, 11, 12, 11, 12, 11, 11, 11, 15, 11, 12, 11, 12, 11, 12, 12, 4, 12, 14, 12, 12, 12, 13, 11, 3, 8, 12, 3, 9, 11, 7, 17, 14, 16, 18, 16, 16, 13, 16, 15, 13, 9, 8, 22, 5, 8, 8, 8, 14, 13, 6, 9, 15, 11, 17, 11, 16, 4, 12, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 9, 19, 148, 5, 9, 24, 21, 25, 18, 23, 20, 10, 9, 16, 9, 6, 9, 9, 9, 10, 11, 9, 8, 11, 17, 18, 9, 9, 8, 10, 15, 8, 8, 9, 28, 8, 8, 11, 12, 117, 31, 32, 21, 12, 8, 7, 10, 22, 22, 13, 13, 12, 16, 12, 22, 12, 14, 10, 15, 10, 12, 13, 13, 7, 18, 15, 13, 19, 17, 9, 19, 8, 7, 10, 9, 23, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [23, 5, 5, 4, 7, 6, 6, 8, 12, 130, 11, 5, 12, 138, 10, 10, 12, 13, 5, 10, 11, 13, 11, 10, 5, 11, 11, 10, 11, 10, 10, 10, 10, 9, 10, 14, 13, 16, 9, 8, 5, 8, 9, 5, 5, 16, 12, 6, 4, 5, 6, 5, 8, 4, 6, 5, 14, 12, 6, 12, 12, 12, 5, 12, 33, 5, 4, 9, 5, 7, 6, 4, 5, 6, 5, 5, 6, 5, 11, 12, 12, 21, 6, 12, 4, 5, 5, 4, 8, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [6, 23, 4, 4, 14, 9, 11, 22, 18, 23, 14, 12, 20, 15, 9, 10, 10, 9, 9, 9, 11, 9, 11, 22, 9, 10, 13, 12, 9, 9, 3, 15, 10, 10, 9, 10, 20, 32, 4, 18, 6, 14, 18, 17, 7, 12, 20, 18, 17, 14, 17, 9, 18, 11, 9, 24, 11, 9, 18, 9, 7, 15, 13, 28, 119, 9, 16, 16, 12, 18, 21, 9, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 8, 6, 5, 4, 4, 4, 4, 6, 4, 8, 6, 5, 5, 5, 5, 7, 11, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [8, 7, 15, 4, 8, 6, 4, 25, 14, 15, 14, 10, 15, 22, 11, 10, 4, 7, 6, 7, 14, 9, 11, 10, 11, 9, 7, 9, 9, 9, 10, 10, 10, 10, 19, 10, 5, 8, 5, 11, 6, 7, 24, 7, 13, 14, 20, 15, 15, 22, 11, 21, 10, 7, 9, 14, 11, 59, 178, 11, 10, 68, 182, 4, 8, 11, 56, 7, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 4, 5, 7, 6, 11, 7, 16, 16, 8, 28, 17, 5, 12, 77, 31, 19, 19, 5, 8, 11, 11, 18, 5, 8, 9, 9, 7, 11, 7, 7, 8, 8, 4, 7, 14, 14, 48, 6, 7, 4, 14, 8, 11, 8, 7, 6, 6, 7, 9, 6, 27, 12, 5, 7, 6, 4, 10, 14, 7, 8, 15, 21, 7, 6, 6, 6, 6, 19, 5, 90]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [14, 3, 6, 7, 6, 5, 6, 25, 16, 14, 16, 15, 6, 14, 11, 11, 14, 11, 5, 8, 3, 11, 12, 12, 9, 10, 11, 95, 10, 11, 11, 12, 11, 11, 5, 33, 11, 4, 5, 11, 11, 10, 4, 6, 4, 7, 13, 8, 9, 12, 10, 5, 5, 4, 6, 15, 6, 9, 7, 4, 6, 7, 6, 5, 3, 6, 5, 4, 6, 11, 6, 6, 8, 7, 10, 7, 6, 6, 5, 9, 4, 5, 4, 7, 56]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 4, 14, 3, 14, 14, 16, 14, 9, 17, 16, 6, 14, 13, 6, 6, 12, 4, 12, 13, 8, 6, 7, 12, 13, 13, 12, 6, 12, 12, 12, 7, 10, 4, 10, 10, 6, 6, 12, 6, 12, 7, 9, 6, 7, 8, 6, 6, 4, 7, 5, 7, 7, 16, 8, 15, 4, 15, 15, 6, 15, 5, 4, 9, 7, 7, 12, 6, 5, 7, 8, 6, 6, 11, 6, 4, 5, 5, 6, 6, 10, 4, 7, 5, 5, 6, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 13, 5, 5, 5, 5, 19, 5, 5, 14, 22, 17, 17, 5, 46, 11, 4, 18, 4, 7, 5, 5, 11, 5, 5, 10, 5, 11, 10, 11, 11, 11, 4, 5, 150, 10, 5, 31, 71, 5, 5, 135, 5, 38, 5, 5, 7, 4, 19, 15, 16, 16, 16, 4, 5, 26, 6, 6, 4, 5, 10, 4, 4, 4, 5, 5, 5, 11, 5, 5, 7, 5, 7, 4, 18, 5, 5, 7, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 9, 8, 7, 10, 5, 8, 5, 7, 10, 49, 10, 10, 6, 8, 9, 10, 8, 161, 27, 5, 10, 10, 6, 10, 11, 41, 9, 10, 6, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 8, 4, 3, 14, 14, 6, 233, 17, 144, 19, 8, 11, 4, 12, 11, 7, 16, 12, 7, 11, 8, 6, 10, 10, 12, 11, 11, 12, 10, 11, 10, 10, 10, 10, 10, 5, 11, 5, 13, 6, 6, 5, 6, 9, 4, 4, 21, 15, 6, 6, 6, 16, 20, 5, 7, 6, 15, 6, 5, 7, 4, 8, 25, 7, 28, 6, 7, 6, 6, 7, 9, 5, 7, 7, 4, 6, 6, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [13, 8, 5, 7, 6, 7, 4, 14, 14, 13, 5, 15, 6, 14, 9, 11, 10, 5, 8, 8, 11, 11, 71, 20, 5, 8, 14, 14, 6, 5, 217, 10, 14, 10, 10, 11, 13, 52, 8, 8, 9, 4, 5, 6, 50, 13, 5, 23, 8, 4, 4, 55, 10, 14, 6, 4, 14, 9, 8, 5, 5, 7, 4, 16, 6, 7, 11, 6, 14, 9, 13, 4, 13, 9, 3, 19, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [10, 22, 5, 15, 5, 14, 8, 13, 16, 20, 20, 25, 17, 10, 38, 8, 35, 24, 11, 15, 21, 13, 23, 222, 9, 10, 29, 9, 21, 16, 10, 10, 8, 10, 36, 38, 6, 38, 13, 25, 12, 26, 23, 14, 10, 22, 32, 15, 15, 22, 5, 31, 24, 24, 5, 16, 22, 5, 28, 4, 17, 194, 5, 22, 22, 56, 13, 31, 24, 12, 28, 23, 4, 32, 29, 8, 20, 21, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [12, 20, 4, 4, 3, 18, 8, 13, 16, 4, 18, 14, 20, 10, 5, 10, 8, 3, 4, 11, 4, 11, 10, 9, 7, 10, 59, 14, 21, 5, 13, 15, 10, 24, 14, 9, 10, 257, 4, 5, 7, 4, 4, 15, 33, 15, 15, 11, 18, 83, 11, 4, 11, 10, 11, 25, 14, 11, 43, 10, 5, 6, 12, 10, 11, 17, 44, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [8, 5, 13, 7, 6, 94, 14, 16, 8, 7, 8, 12, 10, 9, 11, 4, 13, 151, 8, 13, 10, 20, 14, 6, 10, 9, 11, 12, 91, 10, 7, 11, 17, 4, 8, 10, 13, 10, 18, 22, 4, 4, 14, 12, 9, 16, 14, 12, 4, 11, 14, 16, 17, 60, 17, 9, 13, 7, 10, 7, 6, 15, 4, 6, 7, 6, 9, 6, 10, 7, 13, 13, 12, 16, 11, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [26, 10, 13, 10, 8, 14, 14, 20, 8, 10, 25, 6, 11, 11, 10, 5, 6, 8, 19, 12, 6, 21, 19, 10, 9, 4, 7, 10, 5, 4, 10, 10, 4, 7, 7, 13, 8, 4, 17, 5, 10, 10, 8, 16, 6, 12, 9, 6, 22, 6, 18, 33, 13, 6, 5, 4, 5, 30, 6, 5, 9, 6, 21, 7, 5, 11, 5, 11, 10, 8, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [16, 8, 7, 13, 4, 8, 6, 11, 17, 15, 25, 18, 15, 17, 15, 6, 11, 13, 6, 8, 7, 11, 6, 13, 22, 11, 17, 12, 10, 5, 10, 11, 13, 10, 18, 11, 10, 13, 4, 9, 9, 8, 8, 8, 9, 11, 4, 6, 17, 7, 17, 10, 9, 17, 7, 18, 8, 64, 7, 7, 44, 6, 8, 10, 8, 5, 10, 16, 7, 102]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [13, 10, 8, 8, 105, 22, 22, 30, 18, 18, 28, 12, 34, 12, 20, 30, 8, 43, 15, 12, 13, 13, 20, 18, 16, 19, 20, 25, 20, 60, 29, 32, 28, 15, 24, 13, 10, 29, 22, 18, 12, 18, 12, 30, 10, 17, 12, 24, 32, 20, 35, 30, 4, 18, 10, 18, 13, 26, 10, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [21, 4, 10, 11, 15, 23, 19, 21, 19, 21, 20, 10, 12, 11, 19, 12, 27, 3, 161, 13, 28, 21, 10, 12, 11, 97, 19, 13, 9, 12, 16, 14, 17, 23, 23, 22, 22, 22, 14, 5, 22, 6, 19, 18, 14, 7, 14, 6, 6, 8, 18, 99, 10, 16, 18, 8, 10, 13, 190, 19, 13, 21, 18, 19, 19, 17, 19, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 17, 7, 4, 4, 16, 89, 7, 8, 35, 5, 14, 15, 44, 5, 91, 9, 12, 10, 7, 14, 5, 13, 14, 17, 17, 8, 201, 13, 17, 11, 21, 6, 6, 15, 10, 11, 18, 22, 16, 5, 7, 5, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 16, 19, 27, 29, 32, 16, 17, 33, 23, 8, 22, 22, 10, 27, 7, 22, 10, 23, 35, 9, 20, 25, 10, 23, 21, 29, 8, 21, 10, 8, 14, 18, 16, 23, 30, 135, 26, 28, 10, 26, 30, 18, 7, 5, 27, 21, 29, 25, 36, 19, 29, 24, 25, 18, 30, 12, 9, 6, 19, 27, 23, 5, 3, 25, 9, 6, 35, 29, 22, 32, 32, 24, 20, 26, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [12, 75, 15, 20, 25, 3, 26, 29, 29, 23, 26, 23, 30, 136, 22, 12, 30, 30, 24, 30, 31, 4, 29, 30, 31, 19, 12, 31, 30, 32, 40, 33, 32, 32, 34, 32, 32, 32, 12, 12, 31, 25, 4, 18, 19, 21, 23, 19, 6, 22, 18, 17, 25, 32, 34, 17, 26, 20, 19, 6, 28, 21, 20, 27, 22, 28, 5, 6, 24, 19, 20, 4, 24, 23, 4, 8, 30, 29, 26, 33, 28, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [21, 26, 23, 18, 34, 30, 21, 29, 23, 17, 34, 24, 33, 29, 22, 34, 21, 22, 23, 23, 29, 24, 20, 16, 22, 22, 34, 22, 33, 27, 21, 23, 22, 19, 27, 17, 20, 20, 20, 22, 17, 34, 11, 22, 24, 27, 40, 17, 21, 8, 44, 22, 18, 17, 26, 24, 24, 27, 25, 22, 11, 26, 25, 20, 26, 23, 27, 6, 17, 32, 38, 17, 21, 18, 18, 42, 18, 22, 29, 7, 16, 20, 24, 30, 31, 17, 20, 27, 24, 22, 26, 38, 20, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [20, 13, 10, 9, 4, 21, 24, 4, 16, 11, 21, 23, 23, 14, 5, 38, 18, 12, 5, 11, 13, 39, 21, 5, 16, 14, 5, 39, 19, 15, 12, 11, 12, 8, 12, 12, 12, 12, 25, 25, 11, 15, 17, 10, 17, 4, 6, 9, 34, 4, 4, 3, 32, 13, 35, 20, 14, 6, 6, 7, 9, 17, 6, 6, 6, 3, 6, 4, 10, 4, 13, 4, 6, 5, 27, 4, 5, 14, 16, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [11, 9, 30, 6, 16, 24, 21, 21, 24, 11, 40, 11, 11, 10, 30, 23, 23, 15, 21, 19, 36, 25, 23, 23, 11, 36, 23, 23, 15, 34, 36, 10, 24, 50, 24, 23, 9, 9, 9, 18, 29, 28, 25, 11, 3, 23, 13, 36, 26, 12, 23, 11, 62, 36, 31, 46, 21, 36, 37, 33, 12, 17, 30, 95, 11, 24, 22, 29, 40, 21, 14, 11, 9, 18, 22, 10, 12, 33, 10, 18, 25, 26, 32, 12, 33, 40, 12, 22, 37, 30, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [31, 13, 12, 42, 15, 40, 21, 33, 13, 29, 27, 12, 20, 21, 27, 21, 25, 28, 31, 33, 23, 28, 14, 29, 14, 14, 4, 25, 28, 29, 22, 38, 26, 22, 34, 29, 30, 13, 12, 12, 13, 11, 13, 26, 37, 28, 25, 15, 44, 14, 14, 14, 9, 18, 15, 14, 15, 41, 21, 18, 3, 24, 14, 20, 6, 5, 18, 20, 5, 38, 33, 21, 14, 20, 14, 13, 40, 58, 21, 15, 24, 32, 10, 13, 14, 112, 13, 21, 33, 20, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [12, 7, 27, 30, 30, 14, 14, 18, 37, 37, 28, 27, 12, 15, 13, 27, 27, 27, 24, 6, 27, 27, 12, 7, 24, 27, 27, 28, 18, 18, 19, 19, 18, 18, 4, 16, 8, 14, 7, 53, 13, 20, 11, 21, 30, 12, 14, 9, 20, 13, 9, 22, 14, 14, 31, 13, 13, 13, 31, 13, 17, 26, 12, 14, 8, 8, 15, 11, 11, 13, 16, 13, 13, 15, 30, 14, 13, 13, 18, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [29, 15, 19, 5, 30, 17, 22, 31, 18, 9, 11, 22, 25, 24, 29, 18, 18, 18, 24, 24, 28, 20, 22, 19, 24, 28, 23, 24, 27, 25, 24, 16, 29, 24, 21, 16, 56, 19, 16, 16, 24, 24, 27, 24, 36, 21, 21, 18, 25, 17, 15, 21, 4, 24, 12, 15, 12, 20, 356, 23, 19, 23, 11, 24, 16, 18, 18, 16, 17, 21, 24, 18, 14, 23, 16, 25, 15, 20, 15, 18, 70, 13, 21, 24, 16, 27, 16, 15, 34]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [63, 14, 19, 22, 24, 20, 33, 19, 18, 47, 28, 29, 17, 77, 34, 24, 22, 20, 19, 18, 19, 33, 18, 24, 19, 20, 21, 34, 19, 24, 20, 121, 12, 17, 29, 33, 15, 15, 15, 16, 15, 14, 19, 19, 20, 203, 15, 3, 30, 21, 21, 16, 23, 21, 21, 85, 6, 16, 24, 7, 7, 18, 10, 7, 18, 22, 18, 18, 16, 20, 19, 20, 16, 16, 20, 20, 17, 17, 9, 18, 17, 21, 17, 8, 19, 25, 16, 17, 17, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [65, 24, 21, 20, 19, 14, 29, 173, 18, 16, 30, 30, 21, 21, 28, 36, 19, 21, 21, 23, 29, 27, 20, 21, 20, 23, 21, 28, 23, 17, 21, 20, 18, 21, 28, 17, 18, 18, 19, 18, 18, 25, 22, 21, 22, 20, 22, 25, 43, 28, 18, 26, 24, 38, 24, 21, 19, 18, 22, 22, 26, 21, 21, 22, 17, 47, 21, 19, 24, 19, 18, 20, 20, 21, 22, 23, 19, 19, 20, 26, 18, 19, 23, 18, 22, 18, 19, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [5, 11, 3, 8, 11, 6, 7, 9, 10, 9, 9, 8, 5, 9, 8, 9, 12, 11, 10, 11, 9, 15, 5, 7, 9, 9, 12, 22, 6, 8, 28, 12, 17, 8, 7, 4, 9, 10, 10, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [24, 16, 7, 15, 24, 28, 15, 6, 16, 31, 19, 23, 8, 10, 38, 28, 28, 29, 29, 14, 28, 30, 28, 28, 32, 5, 16, 28, 28, 28, 28, 29, 29, 18, 28, 28, 21, 29, 21, 21, 21, 21, 21, 22, 28, 7, 28, 15, 22, 4, 19, 15, 15, 9, 9, 8, 23, 8, 9, 20, 19, 22, 8, 16, 16, 24, 9, 20, 9, 7, 24, 8, 18, 7, 9, 54, 16, 19, 9, 20, 24, 7, 5, 22, 24, 20, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 12, 8, 5, 9, 12, 6, 6, 10, 4, 5, 4, 11, 3, 6, 11, 9, 13, 6, 10, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975607 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975606 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975608 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
[18, 9, 26, 4, 4, 5, 7, 24, 4, 28, 32, 9, 22, 26, 5, 19, 22, 22, 18, 22, 22, 26, 24, 23, 22, 30, 5, 6, 22, 22, 22, 18, 22, 22, 18, 18, 18, 18, 19, 21, 21, 7, 24, 18, 19, 27, 20, 7, 3, 19, 9, 5, 28, 6, 6, 7, 21, 7, 19, 23, 20, 8, 192, 42, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [27, 26, 19, 24, 7, 28, 21, 24, 21, 24, 29, 24, 25, 30, 8, 24, 24, 25, 24, 31, 26, 24, 24, 24, 24, 31, 22, 24, 24, 19, 24, 26, 31, 19, 19, 17, 19, 19, 19, 23, 24, 19, 20, 25, 25, 21, 24, 18, 37, 22, 26, 68, 34, 28, 28, 25, 22, 18, 27, 19, 26, 22, 26, 26, 23, 19, 24, 25, 28, 29, 25, 26, 19, 22, 27, 22, 131]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [57, 4, 6, 4, 5, 29, 12, 16, 11, 11, 6, 22, 29, 21, 7, 8, 20, 20, 20, 6, 8, 22, 20, 28, 22, 22, 49, 20, 20, 14, 20, 29, 21, 14, 16, 15, 14, 10, 14, 11, 6, 19, 5, 17, 17, 8, 6, 6, 6, 5, 10, 5, 6, 25, 7, 5, 7, 5, 4, 7, 8, 6, 9, 10, 11, 5, 7, 17, 14, 6, 7, 6, 6, 12, 7, 7, 10, 6, 6, 7, 6, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [52, 11, 10, 6, 3, 8, 4, 5, 31, 31, 26, 23, 30, 30, 6, 11, 30, 24, 24, 30, 30, 23, 8, 30, 24, 23, 8, 68, 8, 8, 23, 26, 31, 25, 18, 16, 269, 4, 12, 7, 15, 15, 16, 15, 13, 13, 11, 15, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [61, 7, 23, 4, 13, 14, 15, 25, 8, 45, 43, 60, 41, 29, 45, 44, 44, 45, 59, 25, 44, 45, 45, 43, 59, 122, 24, 43, 43, 20, 43, 44, 60, 19, 19, 18, 18, 19, 18, 44, 11, 43, 45, 38, 24, 27, 12, 68, 27, 54, 19, 27, 21, 23, 27, 20, 58, 9, 5, 11, 26, 20, 12, 15, 56, 66, 26, 17, 4, 14, 66, 13, 23, 65, 72, 23, 18, 69]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 8, 11, 11, 9, 13, 18, 10, 11, 10, 7, 11, 6, 7, 4, 10, 11, 7, 14, 7, 13, 10, 14, 15, 7, 6, 4, 19, 8, 12, 13, 7, 13, 11, 40, 8, 17, 14, 12, 11, 7, 8, 7, 7, 24, 12, 6, 8, 22, 17, 15, 26, 11, 60, 16, 15, 13, 12, 14, 17, 10, 13, 5, 5, 13, 10, 8, 14, 8, 11, 10, 13, 11, 68]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [5, 7, 18, 7, 4, 6, 13, 12, 18, 15, 10, 20, 8, 13, 6, 108, 13, 12, 13, 19, 9, 6, 10, 7, 13, 13, 9, 13, 10, 7, 11, 10, 5, 11, 8, 12, 9, 10, 31, 8, 6, 6, 10, 19, 23, 9, 66, 34, 9, 14, 8, 11, 8, 15, 19, 12, 20, 10, 13, 15, 10, 17, 12, 8, 7, 13, 10, 18, 10, 14, 140, 11, 18, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [41, 4, 4, 4, 9, 6, 31, 6, 13, 183, 181, 14, 14, 4, 20, 26, 14, 13, 39, 37, 9, 18, 14, 14, 10, 22, 12, 16, 27, 38, 27, 21, 21, 38, 29, 11, 38, 3, 12, 19, 23, 13, 25, 5, 23, 4, 43, 25, 30, 5, 17, 27, 6, 25, 29, 10, 8, 13, 6, 29, 27, 5, 6, 28, 11, 27, 21, 15, 27, 11, 13, 11, 234, 28, 10, 7, 13, 11, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 3, 4, 4, 6, 4, 3, 25]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [14, 29, 28, 29, 42, 17, 27, 21, 18, 37, 35, 35, 25, 46, 46, 29, 44, 48, 47, 47, 53, 19, 47, 25, 46, 47, 25, 19, 48, 47, 36, 28, 46, 36, 44, 37, 20, 36, 36, 58, 27, 47, 43, 37, 17, 28, 10, 41, 19, 11, 17, 17, 8, 46, 26, 9, 8, 32, 9, 9, 40, 37, 30, 20, 62, 14, 22, 33, 22, 17, 46, 38, 25, 44, 28, 19, 62, 26, 71, 29, 28, 31, 36, 15, 36]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 16, 17, 22, 14, 15, 18, 15, 16, 16, 21, 17, 19, 18, 14, 19, 11, 13, 18, 16, 16, 16, 21, 16, 19, 17, 19, 17, 18, 17, 12, 16, 14, 17, 18, 19, 18, 15, 17, 16, 18, 17, 14, 18, 19, 19, 20, 17, 18, 15, 16, 17, 15, 16, 17, 24, 17, 22, 23, 19, 20, 17, 18, 16, 19, 15, 19, 19, 84, 17, 22, 23, 20, 19, 19, 16, 20, 20, 115, 16, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [61, 44, 27, 29, 29, 53, 28, 31, 26, 30, 31, 27, 24, 24, 25, 27, 28, 24, 24, 23, 23, 25, 30, 30, 32, 24, 28, 190, 85, 23, 24, 21, 26, 24, 24, 21, 21, 21, 21, 21, 24, 29, 24, 23, 26, 25, 33, 26, 29, 27, 27, 26, 27, 25, 31, 22, 28, 33, 32, 30, 29, 28, 28, 32, 26, 26, 21, 29, 25, 27, 30, 31, 27, 23, 27, 28, 34, 26, 34, 27, 27, 9, 33, 25, 29]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [33, 31, 25, 19, 20, 26, 21, 26, 31, 34, 27, 18, 43, 43, 80, 26, 27, 44, 20, 44, 45, 44, 24, 30, 19, 46, 20, 44, 23, 28, 43, 19, 56, 43, 47, 44, 28, 54, 58, 56, 27, 19, 31, 44, 19, 20, 24, 25, 21, 14, 21, 32, 31, 32, 28, 30, 30, 27, 18, 25, 26, 31, 98, 27, 25, 20, 47, 27, 27, 23, 21, 23, 29, 40, 35, 31, 11, 35, 24, 34, 23, 21, 64, 30, 34, 20, 24, 33, 24, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [66, 8, 34, 17, 6, 16, 24, 9, 44, 13, 20, 13, 16, 18, 18, 6, 16, 14, 17, 16, 19, 15, 16, 13, 16, 17, 18, 21, 19, 16, 14, 17, 16, 16, 18, 17, 16, 26, 19, 30, 19, 20, 15, 31, 15, 13, 7, 28, 16, 15, 93, 18, 14, 14, 20, 34, 15, 19, 22, 16, 39, 20, 7, 36, 37, 18, 18, 19, 7, 14, 13, 17, 10, 31, 16, 16, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 8, 11, 9, 23, 4, 7, 8, 8, 52, 46, 47, 48, 7, 46, 46, 48, 4, 47, 46, 46, 46, 48, 7, 6, 46, 46, 5, 46, 47, 49, 35, 6, 10, 9, 8, 12, 46, 46, 9, 4, 7, 5, 7, 10, 13, 8, 8, 5, 6, 5, 7, 6, 5, 13, 22, 6, 11, 6, 9, 12, 18, 11, 13, 10, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [13, 12, 8, 9, 7, 201, 20, 5, 14, 18, 8, 7, 6, 7, 7, 58, 52, 52, 10, 11, 13, 53, 54, 53, 52, 6, 16, 12, 52, 52, 52, 52, 7, 53, 5, 52, 52, 12, 53, 52, 5, 23, 12, 7, 11, 52, 14, 58, 53, 14, 13, 8, 25, 8, 13, 6, 7, 21, 6, 10, 7, 5, 19, 5, 11, 58, 8, 15, 10, 10, 10, 10, 5, 7, 10, 7, 17, 8, 10, 89, 10, 12, 7, 17, 7, 30, 8, 11, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [14, 4, 12, 3, 18, 10, 15, 17, 12, 15, 15, 17, 18, 3, 18, 23, 16, 20, 19, 17, 12, 6, 19, 14, 20, 17, 14, 20, 20, 20, 13, 22, 17, 23, 16, 14, 19, 14, 4, 16, 15, 19, 15, 20, 15, 16, 13, 5, 4, 13, 13, 13, 25, 11, 11, 9, 10, 15, 72, 14, 12, 16, 5, 20, 14, 11, 13, 5, 13, 22, 26, 16, 16, 13, 12, 17, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [14, 4, 8, 4, 15, 19, 4, 18, 6, 21, 34, 31, 10, 17, 16, 23, 23, 22, 17, 16, 16, 23, 19, 38, 4, 22, 6, 22, 22, 17, 11, 22, 39, 8, 23, 8, 8, 5, 7, 4, 10, 24, 28, 17, 16, 7, 26, 16, 12, 25, 9, 31, 7, 23, 8, 8, 8, 8, 12, 8, 8, 16, 32, 10, 7, 5, 6, 16, 15, 10, 10, 20, 16, 18, 22, 25, 6, 17, 10, 26, 29, 20, 16, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [28, 11, 15, 23, 14, 15, 9, 10, 14, 20, 16, 18, 30, 8, 11, 16, 17, 17, 16, 19, 20, 19, 16, 16, 16, 20, 16, 7, 16, 53, 9, 17, 18, 21, 171, 28, 29, 17, 16, 16, 16, 10, 11, 9, 11, 7, 16, 8, 8, 13, 13, 12, 11, 25, 11, 10, 11, 13, 10, 117, 11, 43, 29, 21, 15, 8, 16, 14, 84, 13, 14, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [61, 4, 10, 6, 24, 5, 9, 12, 5, 22, 53, 42, 40, 57, 12, 6, 22, 74, 41, 41, 55, 18, 6, 22, 40, 40, 40, 55, 58, 23, 40, 53, 40, 42, 56, 17, 55, 167, 53, 51, 54, 59, 7, 22, 41, 4, 18, 24, 9, 25, 9, 6, 27, 7, 5, 56, 12, 9, 12, 12, 11, 11, 6, 11, 24, 5, 8, 4, 7, 8, 6, 8, 7, 38, 6, 11, 7, 5, 9, 7, 19, 9, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [62, 21, 17, 44, 27, 22, 22, 25, 20, 34, 34, 40, 18, 18, 33, 35, 37, 42, 17, 17, 34, 35, 34, 41, 23, 20, 33, 34, 33, 48, 40, 34, 34, 40, 33, 15, 34, 23, 15, 21, 29, 27, 15, 17, 18, 19, 17, 80, 23, 28, 20, 40, 27, 14, 12, 28, 18, 20, 13, 22, 28, 20, 20, 31, 18, 17, 18, 19, 33, 19, 19, 72, 15, 14, 20, 19, 19, 17, 14, 20, 20, 28, 18, 20, 26, 27, 23, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [60, 8, 20, 22, 39, 14, 13, 62, 23, 25, 29, 29, 38, 24, 99, 29, 30, 29, 38, 22, 9, 29, 29, 29, 29, 38, 29, 24, 29, 29, 21, 31, 31, 38, 22, 21, 21, 21, 21, 21, 29, 10, 29, 29, 46, 18, 16, 19, 10, 23, 18, 9, 11, 8, 22, 26, 8, 21, 15, 8, 8, 14, 20, 7, 7, 17, 20, 23, 17, 34, 68, 9, 15, 8, 26, 23, 9, 15, 17, 18, 15, 13, 17, 17, 68, 19, 14, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [5, 6, 23, 9, 4, 19, 9, 8, 11, 8, 10, 35, 20, 15, 15, 22, 6, 15, 16, 16, 15, 20, 24, 18, 16, 15, 21, 104, 21, 49, 7, 16, 17, 25, 16, 15, 21, 31, 20, 26, 25, 28, 26, 18, 15, 15, 9, 10, 21, 17, 20, 6, 9, 8, 9, 9, 8, 8, 5, 9, 9, 22, 16, 8, 10, 28, 56, 8, 17, 20, 6, 10, 7, 23, 8, 18, 20, 9, 20, 16, 17, 21, 28, 6, 9, 10, 12, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [16, 7, 3, 19, 21, 21, 33, 6, 20, 17, 22, 20, 24, 24, 26, 8, 24, 24, 27, 8, 24, 24, 26, 24, 24, 237, 20, 28, 20, 20, 20, 20, 20, 20, 24, 15, 22, 7, 6, 15, 20, 7, 8, 32, 18, 15, 9, 20, 16, 16, 21, 73, 9, 15, 15, 4, 10, 26, 18, 10, 27, 19, 22, 16, 14, 8, 9, 21, 10, 19, 20, 13, 26, 21, 10, 4, 116, 23, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [36, 4, 14, 13, 6, 18, 21, 13, 6, 8, 22, 22, 11, 17, 18, 23, 27, 8, 15, 23, 15, 24, 13, 4, 17, 24, 23, 24, 16, 18, 23, 23, 4, 83, 18, 21, 14, 21, 25, 27, 24, 7, 23, 22, 14, 17, 13, 15, 19, 7, 14, 24, 24, 15, 9, 19, 14, 31, 23, 14, 14, 14, 20, 14, 14, 15, 6, 5, 18, 15, 13, 13, 6, 14, 4, 6, 6, 13, 14, 7, 23, 7, 11, 6, 14, 7, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 8, 14, 9, 8, 12, 11, 8, 19, 10, 10, 24, 20, 12, 21, 10, 7, 12, 8, 21, 16, 13, 21, 15, 12, 15, 12, 18, 8, 8, 9, 8, 13, 16, 11, 17, 135, 12, 9, 14, 12, 13, 8, 14, 15, 9, 55, 7, 15, 16, 9, 9, 13, 9, 9, 10, 14, 10, 7, 10, 9, 16, 16, 9, 14, 13, 9, 10, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [33, 22, 24, 15, 6, 14, 17, 28, 18, 13, 3, 17, 14, 19, 26, 15, 20, 27, 17, 12, 22, 26, 13, 14, 25, 18, 13, 32, 17, 12, 24, 14, 10, 13, 14, 35, 17, 13, 57, 12, 13, 14, 26, 14, 25, 14, 12, 29, 12, 21, 12, 11, 14, 22, 19, 26, 17, 13, 17, 16, 18, 33, 19, 29, 14, 28, 19, 8, 16, 16, 20, 14, 33, 16, 17, 12, 19, 23, 17, 18, 17, 15, 9, 15, 15, 14, 17, 20, 13, 24, 19, 12, 17, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [10, 18, 17, 38, 15, 10, 11, 31, 14, 18, 11, 57, 51, 51, 49, 10, 12, 50, 75, 52, 49, 20, 10, 51, 51, 50, 48, 34, 20, 50, 51, 10, 49, 29, 9, 9, 9, 9, 10, 40, 30, 29, 14, 22, 12, 36, 10, 13, 10, 11, 31, 13, 36, 10, 27, 32, 35, 17, 14, 36, 38, 20, 25, 12, 9, 23, 19, 10, 19, 10, 10, 23, 29, 13, 30, 19, 10, 37, 11, 12, 18, 66, 10, 7, 23, 15, 11, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [14, 11, 17, 14, 11, 11, 11, 10, 14, 13, 10, 19, 21, 23, 13, 22, 6, 11, 21, 11, 13, 18, 11, 22, 14, 21, 66, 21, 28, 11, 10, 13, 12, 19, 11, 10, 21, 7, 13, 12, 18, 10, 11, 21, 19, 17, 4, 14, 12, 17, 11, 22, 12, 40, 14, 21, 19, 10, 12, 16, 15, 21, 18, 18, 11, 4, 16, 17, 15, 14, 14, 12, 4, 61, 17, 12, 13, 14, 17, 21, 15, 7, 18, 10, 19, 17, 11, 26, 12, 12, 11, 10, 14, 10, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [19, 17, 7, 38, 25, 44, 39, 29, 23, 23, 35, 26, 31, 32, 26, 26, 26, 29, 25, 27, 26, 26, 29, 26, 34, 26, 26, 21, 29, 21, 64, 21, 21, 21, 21, 23, 23, 9, 22, 31, 24, 30, 24, 23, 25, 16, 19, 33, 17, 18, 25, 16, 16, 27, 27, 136, 19, 32, 27, 61, 18, 33, 24, 33, 20, 10, 26, 19, 32, 24, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [12, 10, 9, 14, 22, 23, 17, 10, 11, 30, 14, 29, 16, 10, 10, 12, 14, 10, 10, 13, 11, 13, 10, 12, 18, 184, 10, 15, 12, 15, 11, 13, 21, 18, 19, 22, 21, 18, 15, 13, 16, 17, 13, 6, 24, 34, 24, 16, 18, 14, 11, 11, 23, 21, 12, 11, 25, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [20, 23, 7, 14, 9, 17, 5, 7, 12, 28, 16, 22, 26, 21, 16, 18, 24, 22, 8, 20, 20, 12, 20, 24, 20, 14, 28, 21, 30, 23, 34, 8, 18, 18, 10, 18, 4, 9, 29, 20, 13, 6, 15, 6, 7, 13, 8, 23, 19, 11, 11, 258, 25, 7, 14, 6, 16, 7, 7, 4, 17, 13, 11, 13, 13, 10, 10, 14, 4, 18, 43, 10, 6, 11, 14, 12, 6, 20, 7, 15, 53, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 7, 12, 13, 12, 11, 6, 46, 51, 41, 41, 47, 13, 44, 41, 42, 43, 48, 9, 15, 43, 42, 41, 43, 49, 7, 49, 43, 46, 45, 42, 49, 14, 18, 17, 19, 13, 12, 10, 50, 43, 41, 7, 11, 15, 8, 11, 14, 10, 17, 10, 7, 53, 46, 7, 12, 12, 10, 52, 14, 12, 15, 6, 12, 60, 25, 11, 7, 11, 12, 13, 14, 4, 7, 5, 13, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [24, 13, 7, 25, 13, 8, 3, 9, 9, 16, 13, 21, 12, 19, 20, 19, 10, 13, 19, 12, 19, 19, 8, 10, 19, 19, 19, 17, 27, 19, 22, 19, 19, 51, 19, 21, 20, 20, 21, 20, 27, 11, 25, 8, 11, 38, 14, 23, 8, 27, 16, 12, 21, 11, 8, 13, 25, 21, 28, 18, 8, 11, 7, 4, 12, 9, 21, 27, 24, 10, 25, 10, 87, 6, 26, 21, 26, 28, 23, 10, 24, 4, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [21, 17, 14, 18, 15, 3, 23, 18, 15, 17, 147, 15, 18, 28, 18, 18, 20, 18, 18, 18, 17, 17, 4, 18, 20, 18, 17, 19, 19, 19, 15, 29, 18, 18, 29, 31, 39, 36, 18, 29, 19, 19, 14, 19, 15, 25, 17, 20, 15, 15, 17, 19, 18, 19, 15, 3, 123, 18, 18, 18, 16, 18, 14, 18, 52, 18, 18, 98, 15, 18, 18, 27, 18, 18, 19, 25, 23, 18, 18, 17, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 6, 4, 5, 4, 5, 6, 4, 4, 15, 4, 5, 5, 4, 5, 6, 6, 5, 5, 242, 9, 4, 5, 7, 10, 7, 9, 5, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [70, 23, 19, 23, 22, 16, 17, 24, 27, 18, 21, 16, 18, 12, 22, 25, 25, 28, 164, 18, 195, 21, 22, 13, 18, 12, 21, 35, 28, 14, 19, 17, 23, 17, 17, 17, 17, 131, 17, 12, 12, 27, 20, 16, 19, 21, 26, 25, 19, 20, 14, 30, 19, 19, 16, 35, 20, 23, 25, 34, 14, 18, 22, 20, 19, 18, 18, 38, 18, 24, 30, 15, 22, 27, 28, 30, 19, 25, 24, 18, 26, 14, 16, 36, 28, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 6, 5, 6, 5, 6, 4, 4, 6, 5, 5, 3, 3, 5, 6, 4, 12, 5, 4, 4, 7, 5, 5, 120, 6, 5, 6, 5, 5, 5, 4, 5, 8, 43, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 12, 8, 10, 11, 7, 8, 8, 9, 8, 17, 9, 11, 7, 176, 12, 12, 15, 4, 22, 10, 8, 21, 8, 8, 9, 12, 13, 10, 12, 10, 12, 7, 14, 9, 9, 11, 16, 9, 9, 15, 9, 13, 8, 6, 12, 10, 9, 9, 8, 7, 6, 12, 8, 8, 11, 10, 10, 81, 13, 4, 9, 11, 11, 4, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 7, 7, 6, 6, 5, 5, 6, 7, 6, 7, 7, 7, 7, 11, 7, 7, 8, 6, 8, 6, 8, 9, 10, 9, 7, 7, 13, 8, 10, 6, 7, 22, 9, 7, 13, 10, 7, 7, 13, 117, 5, 5, 5, 13, 7, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 8, 14, 10, 21, 5, 10, 16, 21, 7, 6, 22, 6, 6, 23, 7, 9, 6, 22, 7, 7, 19, 21, 23, 50, 8, 7, 9, 14, 6, 7, 9, 21, 7, 20, 6, 46, 22, 14, 23, 7, 21, 16, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 17, 20, 30, 19, 17, 30, 13, 16, 19, 11, 20, 21, 17, 18, 18, 22, 12, 17, 17, 19, 20, 16, 17, 19, 17, 20, 18, 18, 27, 18, 300, 19, 33, 18, 18, 18, 18, 19, 18, 19, 19, 18, 25, 18, 18, 18, 22, 65, 22, 25, 15, 30, 23, 41, 22, 57, 29, 19, 25, 7, 20, 40, 9, 18, 13, 19, 19, 7, 13, 27, 17, 14, 26, 41, 24, 20, 13, 7, 22, 9, 13, 24, 13, 17, 42, 12, 21, 10, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 6, 9, 13, 8, 17, 10, 5, 14, 4, 7, 8, 7, 4, 7, 10, 14, 8, 9, 11, 4, 4, 4, 5, 7, 14, 4, 7, 18, 78, 18, 8, 8, 9, 7, 7, 10, 8, 7, 4, 7, 10, 4, 5, 7, 8, 14, 9, 8, 4, 4, 14, 9, 8, 12, 10, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [20, 7, 46, 32, 16, 26, 32, 37, 34, 31, 31, 24, 27, 28, 24, 24, 7, 34, 13, 4, 27, 18, 24, 24, 30, 11, 17, 24, 195, 33, 152, 29, 33, 33, 27, 35, 33, 43, 12, 31, 38, 34, 55, 45, 31, 35, 18, 27, 29, 15, 31, 31, 32, 24, 41, 8, 29, 31, 14, 30, 33, 21, 51, 45, 33, 34, 26, 29, 37, 30, 24, 29, 18, 33, 13, 33, 28, 25, 29, 19, 9, 24, 20, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 19, 18, 7, 9, 10, 23, 5, 19, 12, 11, 19, 12, 4, 35, 268, 19, 11, 14, 13, 23, 15, 7, 14, 15, 10, 16, 7, 24, 11, 11, 11, 11, 13, 7, 5, 7, 16, 72, 6, 14, 18, 21, 5, 5, 11, 23, 22, 21, 7, 17, 12, 6, 8, 19, 29, 75, 4, 11, 124, 7, 9, 14, 34, 9, 24, 19, 14, 7, 22, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 18, 12, 6, 10, 10, 6, 7, 16, 14, 72, 8, 9, 9, 8, 7, 20, 10, 10, 6, 6, 17, 14, 7, 5, 13, 5, 9, 7, 6, 7, 15, 9, 12, 10, 12, 125, 11, 8, 10, 19, 10, 6, 9, 5, 8, 8, 14, 7, 10, 6, 13, 7, 14, 10, 8, 11, 11, 12, 17, 13, 9, 16, 25, 7, 8, 20, 8, 19, 10, 9, 14, 10, 14, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [33, 28, 20, 39, 27, 9, 42, 17, 28, 29, 14, 28, 10, 11, 23, 13, 16, 14, 45, 12, 17, 11, 27, 33, 25, 27, 28, 22, 32, 22, 14, 31, 40, 27, 11, 24, 18, 20, 17, 17, 14, 34, 182, 18, 21, 28, 30, 19, 12, 18, 29, 20, 25, 6, 48, 44, 31, 29, 24, 25, 26, 14, 32, 24, 12, 13, 51, 13, 46, 13, 26, 16, 38, 27, 26, 20, 28, 26, 14, 43, 17, 11, 38, 25, 28, 21, 13, 28, 20, 24, 29, 18, 25, 13, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [13, 16, 17, 16, 13, 14, 18, 18, 28, 12, 93, 17, 38, 15, 21, 41, 40, 41, 7, 9, 10, 18, 38, 38, 20, 24, 15, 38, 38, 25, 13, 25, 25, 18, 38, 18, 38, 39, 16, 18, 18, 6, 40, 17, 25, 25, 17, 37, 7, 17, 23, 26, 12, 24, 18, 12, 11, 14, 18, 12, 17, 8, 22, 18, 38, 18, 8, 8, 8, 14, 10, 8, 21, 11, 21, 13, 60, 20, 15, 9, 18, 23, 10, 8, 12, 9, 33, 25, 8, 8, 8, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [22, 6, 9, 9, 19, 4, 6, 11, 8, 5, 8, 6, 11, 28, 27, 22, 8, 3, 8, 27, 27, 22, 8, 9, 9, 16, 22, 17, 17, 7, 27, 20, 45, 15, 20, 20, 20, 20, 20, 13, 8, 159, 9, 8, 26, 5, 29, 6, 7, 9, 15, 10, 12, 24, 8, 25, 16, 15, 10, 8, 6, 7, 7, 9, 8, 12, 4, 8, 9, 9, 8, 8, 7, 18, 28, 9, 84, 9, 14, 9, 31, 29, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [5, 5, 18, 19, 29, 77, 21, 4, 18, 6, 21, 18, 14, 32, 22, 20, 20, 78, 13, 12, 12, 6, 14, 12, 14, 12, 12, 20, 20, 27, 117, 12, 21, 34, 21, 20, 16, 16, 16, 20, 21, 95, 26, 29, 16, 26, 6, 4, 11, 13, 19, 21, 26, 18, 25, 6, 23, 22, 33, 16, 26, 6, 24, 21, 24, 19, 24, 30, 26, 20, 27, 20, 10, 20, 25, 20, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [18, 47, 3, 39, 7, 24, 14, 38, 32, 32, 33, 28, 11, 10, 11, 4, 11, 7, 28, 18, 11, 53, 10, 46, 31, 11, 10, 20, 26, 10, 12, 10, 35, 12, 13, 28, 18, 18, 14, 11, 33, 26, 4, 26, 19, 9, 22, 14, 18, 14, 4, 24, 19, 34, 20, 4, 20, 42, 26, 19, 29, 32, 101, 54, 29, 27, 37, 29, 23, 10, 37, 11, 25, 20, 11, 7, 25, 101]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 4, 6, 18, 8, 19, 19, 6, 18, 5, 7, 10, 10, 4, 22, 6, 8, 28, 8, 18, 26, 30, 21, 23, 26, 24, 17, 13, 31, 9, 13, 27, 7, 19, 6, 18, 5, 5, 31, 16, 15, 28, 23, 29, 18, 5, 33, 8, 10, 25, 5, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [10, 23, 13, 43, 13, 19, 14, 22, 24, 9, 12, 11, 34, 10, 12, 16, 14, 12, 39, 21, 11, 14, 21, 22, 14, 8, 28, 122, 15, 25, 92, 12, 15, 157, 42, 4, 23, 156, 20, 20, 10, 27, 15, 15, 14, 19, 15, 19, 28, 24, 23, 13, 8, 12, 11, 22, 10, 11, 30, 17, 11, 16, 16, 12, 14, 16, 23, 14, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 14, 25, 17, 25, 16, 23, 37, 32, 18, 12, 16, 12, 5, 12, 25, 14, 13, 18, 30, 27, 12, 21, 12, 12, 12, 4, 28, 22, 13, 14, 14, 4, 16, 155, 21, 5, 5, 33, 16, 15, 16, 12, 19, 19, 13, 14, 16, 10, 5, 14, 23, 26, 5, 42, 10, 9, 112, 12, 17, 12, 24, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [14, 3, 5, 23, 18, 5, 5, 21, 4, 10, 28, 22, 21, 14, 13, 23, 16, 35, 4, 10, 14, 18, 15, 14, 5, 238, 18, 27, 4, 34, 23, 36, 4, 75, 23, 32, 21, 19, 26, 23, 33, 36, 37, 14, 17, 27, 19, 102, 14, 14, 3, 34, 5, 33, 17, 8, 32, 25, 21, 18, 35, 4, 6, 30, 37, 18, 16, 21, 6, 21, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 15, 17, 5, 12, 12, 4, 13, 9, 8, 19, 6, 4, 9, 17, 15, 11, 20, 68, 15, 21, 10, 7, 10, 9, 18, 7, 13, 8, 7, 5, 18, 15, 8, 12, 14, 6, 14, 12, 12, 9, 70, 13, 13, 10, 31, 8, 12, 17, 5, 164, 8, 16, 19, 82, 11, 7, 15, 7, 6, 12, 13, 14, 19, 14, 12, 8, 8, 13, 11, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [24, 13, 8, 27, 8, 26, 6, 21, 14, 21, 26, 23, 31, 22, 8, 20, 22, 21, 26, 22, 12, 21, 22, 24, 22, 22, 22, 30, 21, 22, 17, 21, 21, 19, 20, 17, 18, 17, 20, 30, 25, 16, 22, 22, 26, 76, 23, 24, 24, 12, 20, 186, 20, 23, 24, 25, 24, 106, 23, 8, 22, 13, 19, 9, 20, 9, 11, 22, 17, 25, 11, 12, 18, 12, 12, 9, 10, 19, 32, 49, 14, 9, 23, 11, 51, 10, 20, 10, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [47, 28, 26, 34, 25, 19, 4, 12, 10, 25, 16, 24, 30, 12, 22, 24, 37, 15, 28, 20, 37, 38, 10, 33, 37, 16, 21, 15, 20, 11, 37, 37, 11, 24, 37, 16, 9, 10, 59, 20, 9, 9, 37, 9, 29, 11, 14, 13, 10, 23, 12, 10, 32, 9, 23, 28, 30, 37, 22, 19, 26, 32, 26, 24, 24, 31, 16, 13, 27, 29, 21, 13, 71, 16, 14, 23, 25, 10, 26, 25, 22, 8, 12, 14, 12, 12, 17, 27, 27, 9, 25, 14, 20, 28, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [10, 30, 15, 31, 152, 12, 24, 14, 19, 23, 17, 30, 26, 23, 20, 20, 15, 129, 20, 22, 20, 20, 27, 22, 26, 21, 30, 20, 19, 27, 125, 20, 19, 18, 22, 19, 13, 146, 14, 16, 41, 13, 29, 28, 22, 20, 28, 11, 30, 27, 21, 16, 14, 21, 17, 22, 17, 25, 31, 20, 22, 22, 28, 16, 14, 35, 30, 22, 15, 15, 12, 12, 30, 18, 29, 30, 19, 89, 29, 308, 266, 31, 16, 17, 26, 15, 14, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [45, 13, 20, 11, 21, 20, 10, 28, 26, 4, 20, 21, 11, 7, 17, 8, 14, 15, 12, 29, 17, 15, 27, 14, 13, 7, 61, 9, 19, 14, 14, 4, 18, 18, 14, 14, 15, 5, 14, 17, 21, 19, 14, 18, 7, 14, 10, 12, 8, 23, 16, 7, 24, 16, 21, 9, 21, 19, 23, 20, 21, 7, 6, 10, 19, 5, 21, 19, 16, 30, 29, 25, 17, 8, 4, 14, 6, 15, 19, 40, 22, 18, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [28, 17, 16, 4, 15, 12, 11, 25, 32, 17, 41, 35, 21, 21, 16, 36, 38, 23, 37, 35, 193, 23, 57, 36, 37, 23, 21, 21, 32, 6, 24, 14, 44, 55, 5, 24, 22, 17, 23, 4, 8, 29, 14, 31, 30, 5, 7, 18, 32, 16, 21, 37, 18, 15, 6, 16, 24, 12, 16, 11, 20, 7, 29, 6, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 8, 8, 21, 32, 10, 26, 150, 30, 28, 20, 10, 19, 18, 29, 20, 15, 18, 19, 27, 19, 26, 31, 18, 18, 28, 20, 11, 65, 8, 95, 30, 27, 19, 31, 12, 10, 10, 26, 12, 10, 12, 11, 17, 74, 11, 10, 16, 6, 8, 8, 5, 6, 5, 5, 9, 11, 10, 138, 6, 138]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [20, 21, 23, 23, 20, 25, 11, 114, 21, 20, 10, 15, 20, 20, 17, 17, 18, 24, 23, 17, 16, 45, 16, 18, 25, 20, 18, 16, 16, 16, 18, 77, 15, 16, 16, 19, 17, 16, 19, 18, 21, 19, 22, 18, 18, 15, 27, 25, 17, 22, 6, 26, 9, 21, 22, 4, 22, 22, 21, 22, 24, 26, 23, 21, 20, 19, 20, 47, 20, 17, 5, 18, 24, 12, 10, 26, 21, 21, 28, 19, 24, 20, 23, 23, 22, 25, 69, 17, 20, 15, 29, 18, 33]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [8, 9, 5, 11, 10, 13, 8, 11, 12, 8, 8, 12, 10, 8, 8, 11, 11, 7, 8, 21, 11, 7, 20, 9, 12, 7, 11, 10, 10, 6, 29, 8, 6, 18, 15, 10, 9, 41, 17, 17, 16, 17, 25, 20, 7, 26, 9, 14, 6, 6, 11, 11, 8, 48, 7, 9, 11, 6, 10, 9, 7, 10, 9, 18, 10, 15, 7, 10, 8, 14, 10, 6, 8, 20, 7, 13, 8, 16, 14, 10, 6, 7, 9, 16, 6, 7, 9, 8, 9, 10, 11, 9, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [6, 4, 13, 18, 15, 5, 29, 5, 12, 14, 46, 45, 51, 43, 9, 19, 41, 41, 43, 42, 11, 10, 43, 41, 47, 43, 5, 51, 44, 45, 52, 48, 42, 58, 15, 17, 51, 41, 41, 5, 18, 48, 16, 31, 8, 16, 8, 21, 30, 45, 47, 12, 9, 109, 9, 5, 21, 13, 4, 4, 19, 5, 5, 43, 10, 13, 45, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [36, 4, 24, 35, 6, 23, 23, 25, 24, 21, 35, 24, 27, 25, 25, 25, 24, 23, 24, 25, 5, 24, 23, 24, 23, 25, 24, 31, 28, 25, 26, 23, 26, 8, 23, 26, 27, 24, 25, 33, 25, 24, 26, 24, 26, 24, 8, 24, 33, 24, 26, 19, 27, 22, 22, 37, 27, 5, 23, 28, 28, 21, 24, 37, 23, 23, 24, 30, 21, 15, 89, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [26, 9, 8, 26, 20, 39, 16, 4, 18, 43, 40, 19, 43, 42, 43, 43, 43, 42, 87, 11, 29, 42, 7, 22, 43, 43, 4, 25, 43, 42, 12, 19, 5, 20, 8, 25, 21, 41, 5, 13, 30, 30, 7, 20, 12, 5, 12, 8, 22, 13, 13, 24, 12, 20, 32, 35, 36, 25, 30, 16, 22, 28, 20, 7, 18, 26, 36, 5, 20, 16, 7, 31, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 18, 6, 6, 21, 47, 25, 17, 50, 12, 16, 56, 48, 50, 44, 42, 56, 22, 19, 42, 42, 42, 42, 52, 27, 6, 43, 42, 43, 53, 13, 63, 42, 42, 40, 42, 54, 41, 42, 43, 42, 41, 43, 8, 63, 44, 42, 10, 20, 21, 18, 10, 26, 13, 11, 8, 12, 17, 19, 7, 6, 13, 26, 57, 10, 10, 23, 15, 9, 11, 23, 11, 7, 11, 9, 15, 32, 20, 7, 17, 7, 11, 21, 22, 13, 45, 11, 20, 21, 21, 23, 15, 5, 21, 22, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [7, 12, 14, 14, 21, 23, 46, 6, 11, 38, 8, 4, 9, 30, 5, 13, 14, 8, 4, 12, 4, 26, 36, 27, 4, 18, 12, 31, 5, 25, 28, 37, 9, 23, 6, 9, 12, 5, 12, 6, 4, 8, 10, 11, 4, 10, 8, 35, 37, 9, 9, 13, 16, 13, 20, 6, 7, 13, 13, 11, 18, 32, 8, 11, 5, 6, 11, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [35, 4, 4, 21, 60, 162, 60, 25, 49, 47, 6, 5, 22, 43, 46, 43, 24, 45, 48, 45, 59, 81, 23, 45, 29, 5, 43, 27, 107, 86, 24, 23, 25, 21, 23, 19, 125, 40, 20, 10, 21, 48, 23, 5, 22, 7, 7, 24, 25, 20, 4, 25, 7, 24, 20, 7, 21, 20, 22, 34]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [6, 8, 11, 5, 27, 32, 4, 25, 24, 22, 23, 22, 8, 14, 22, 22, 22, 21, 22, 7, 8, 23, 24, 24, 33, 25, 22, 25, 22, 21, 16, 24, 24, 25, 16, 19, 36, 17, 16, 16, 21, 32, 22, 22, 73, 13, 73, 7, 8, 14, 10, 8, 27, 5, 10, 12, 34, 13, 13, 12, 12, 16, 14, 73, 12, 15, 13, 99, 9, 15, 10, 46, 20, 16, 15, 9, 15, 6, 8, 10, 8, 15, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [30, 27, 17, 20, 20, 23, 28, 17, 23, 42, 30, 30, 22, 22, 20, 96, 110, 22, 18, 39, 28, 22, 22, 22, 23, 23, 20, 31, 22, 22, 18, 23, 23, 38, 18, 17, 19, 34, 18, 18, 19, 33, 24, 17, 26, 17, 27, 19, 20, 23, 23, 18, 11, 17, 11, 16, 29, 30, 19, 27, 24, 18, 25, 19, 22, 13, 23, 34, 33, 57, 20, 21, 11, 22, 9, 28, 8, 125, 19, 21, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [21, 17, 23, 17, 15, 9, 16, 11, 15, 19, 15, 15, 11, 17, 15, 17, 18, 23, 19, 12, 18, 16, 15, 15, 12, 20, 21, 23, 62, 15, 13, 15, 12, 16, 13, 13, 15, 13, 24, 20, 14, 21, 15, 19, 14, 10, 13, 20, 15, 25, 14, 14, 15, 17, 17, 15, 16, 22, 142, 13, 20, 15, 20, 21, 22, 21, 13, 17, 17, 14, 14, 17, 18, 16, 17, 19, 21, 63, 18, 17, 49, 15, 15, 26, 17, 16, 23, 10, 31, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 6, 23, 10, 16, 116, 4, 20, 15, 15, 4, 12, 12, 12, 5, 4, 8, 11, 14, 8, 4, 12, 46, 13, 12, 23, 12, 15, 10, 21, 10, 12, 11, 10, 17, 10, 19, 16, 4, 45, 25, 4, 14, 8, 8, 17, 21, 15, 9, 16, 8, 8, 8, 24, 5, 8, 7, 7, 5, 15, 8, 14, 5, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 53, 22, 15, 26, 32, 13, 11, 7, 45, 26, 55, 46, 47, 43, 41, 53, 12, 41, 44, 41, 41, 51, 6, 41, 42, 41, 41, 53, 58, 61, 41, 41, 25, 43, 52, 7, 54, 17, 20, 27, 10, 13, 63, 42, 43, 24, 18, 7, 23, 14, 25, 26, 9, 13, 22, 47, 10, 13, 34, 4, 17, 5, 16, 62, 18, 33, 19, 21, 26, 24, 15, 8, 29, 9, 20, 14, 25, 19, 57]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [19, 15, 9, 40, 24, 40, 33, 21, 27, 20, 29, 22, 11, 31, 24, 32, 5, 21, 8, 33, 11, 42, 28, 24, 33, 16, 14, 18, 25, 9, 21, 6, 8, 15, 23, 20, 21, 21, 8, 15, 18, 18, 27, 18, 24, 138, 119, 34, 8, 9, 32, 6, 25, 9, 31, 9, 10, 17, 22, 38, 25, 23, 8, 26, 20, 31, 12, 65, 10, 138, 3, 22, 6, 30, 60, 31, 240, 39, 23, 13, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 12, 6, 7, 8, 8, 8, 6, 6, 4, 6, 9, 9, 8, 8, 5, 9, 20, 14, 8, 6, 8, 6, 8, 12, 10, 8, 8, 8, 5, 6, 6, 6, 6, 10, 8, 7, 8, 6, 7, 7, 5, 5, 21, 4, 11, 7, 10, 8, 5, 7, 321, 5, 5, 6, 13, 8, 6, 46, 9, 36, 6, 7, 70]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 6, 10, 9, 9, 13, 6, 6, 24, 107, 79, 8, 8, 7, 11, 7, 9, 6, 11, 7, 6, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [2, 8, 11, 5, 5, 8, 9, 7, 5, 10, 6, 4, 10, 7, 8, 6, 4, 21, 11, 14, 7, 6, 7, 7, 6, 9, 9, 5, 23, 11, 10, 12, 41, 8, 104, 4, 5, 8, 10, 12, 21, 8, 7, 9, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [13, 19, 21, 23, 10, 11, 9, 16, 17, 20, 21, 9, 19, 9, 21, 20, 27, 13, 17, 19, 17, 11, 93, 27, 19, 10, 17, 17, 21, 12, 12, 13, 19, 20, 11, 257, 18, 27, 17, 11, 10, 10, 26, 38, 18, 12, 10, 8, 12, 21, 10, 11, 18, 17, 11, 20, 11, 15, 21, 24, 13, 14, 10, 14, 11, 18, 10, 12, 13, 9, 18, 22, 11, 16, 11, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [25, 8, 4, 4, 4, 19, 8, 8, 10, 15, 15, 12, 21, 23, 6, 14, 12, 21, 5, 14, 12, 20, 26, 20, 12, 12, 16, 21, 21, 14, 6, 27, 13, 13, 5, 26, 14, 5, 7, 13, 6, 6, 6, 6, 9, 7, 17, 17, 9, 9, 7, 20, 13, 6, 19, 17, 27, 104, 10, 6, 10, 6, 7, 16, 6, 7, 20, 6, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[10, 10, 7, 13, 6, 7, 8, 10, 7, 10, 8, 11, 9, 6, 10, 11, 7, 11, 12, 9, 6, 4, 12, 42, 10, 10, 5, 167, 8, 9, 10, 4, 10, 7, 9, 11, 8, 10, 10, 5, 7, 4, 9, 12, 5, 13, 9, 4, 9, 12, 24, 11, 4, 8, 9, 6, 7, 6, 9, 5, 9, 23, 9, 17, 8, 7, 8, 9, 9, 7, 6, 7, 11, 8, 6, 11, 10, 5, 12, 7, 12, 5, 8, 11, 8, 8, 14, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [11, 11, 20, 14, 13, 19, 10, 22, 20, 7, 19, 11, 13, 17, 18, 11, 11, 13, 18, 11, 11, 11, 11, 11, 13, 15, 23, 12, 11, 11, 93, 13, 20, 11, 11, 13, 12, 11, 35, 7, 7, 8, 17, 21, 25, 19, 11, 11, 22, 9, 14, 6, 21, 6, 20, 11, 10, 7, 12, 6, 20, 7, 8, 15, 15, 17, 8, 19, 6, 9, 17, 10, 12, 17, 8, 7, 20, 21, 19, 17, 19, 9, 29, 11, 30, 21, 61, 9, 16, 13, 18, 5, 8, 8, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [45, 6, 6, 8, 6, 6, 9, 7, 17, 20, 20, 18, 17, 15, 11, 30, 13, 8, 14, 18, 14, 23, 12, 11, 16, 14, 14, 31, 16, 18, 15, 14, 6, 14, 6, 23, 6, 16, 22, 22, 7, 18, 19, 14, 14, 7, 5, 5, 6, 8, 14, 6, 11, 5, 5, 11, 7, 13, 19, 19, 30, 54, 8, 7, 7, 5, 7, 8, 22, 8, 7, 12, 12, 7, 8, 9, 7, 7, 12, 8, 9, 9, 8, 9, 7, 20, 6, 24, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [6, 84, 11, 7, 11, 11, 15, 5, 5, 16, 3, 7, 6, 4, 12, 68, 7, 11, 121, 10, 9, 6, 4, 7, 6, 7, 48, 10, 18, 7, 12, 11, 9, 6, 9, 8, 11, 14, 11, 10, 7, 8, 8, 7, 183, 7, 11, 91, 13, 13, 9, 9, 10, 11, 9, 11, 7, 7, 8, 11, 13, 7, 25, 8, 14, 9, 8, 5, 7, 22, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 20, 20, 5, 27, 14, 20, 21, 10, 10, 18, 10, 18, 21, 10, 19, 22, 8, 13, 19, 10, 18, 5, 30, 14, 18, 11, 13, 24, 17, 14, 5, 13, 118, 16, 10, 9, 13, 11, 10, 7, 9, 9, 17, 16, 15, 9, 9, 17, 22, 27, 12, 12, 16, 70, 30, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [17, 11, 16, 13, 24, 25, 7, 15, 24, 25, 17, 14, 23, 9, 20, 18, 14, 14, 15, 23, 32, 21, 14, 14, 14, 14, 22, 15, 23, 17, 14, 15, 14, 23, 15, 14, 15, 15, 16, 15, 15, 22, 15, 14, 30, 5, 22, 7, 13, 10, 14, 13, 18, 23, 26, 24, 12, 23, 37, 23, 10, 11, 20, 13, 28, 9, 15, 13, 265, 31, 13, 14, 15, 22, 29, 24, 13, 13, 13, 8, 32, 95, 21, 9, 17, 10, 15, 14, 11, 8, 21, 21, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [13, 19, 4, 12, 7, 18, 20, 20, 15, 18, 6, 9, 6, 8, 12, 17, 11, 18, 5, 42, 11, 10, 11, 23, 78, 17, 14, 17, 18, 22, 5, 19, 21, 13, 51, 10, 26, 14, 14, 38, 11, 7, 32, 6, 21, 6, 13, 22, 14, 11, 12, 49, 16, 6, 12, 22, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [7, 7, 17, 13, 13, 11, 11, 9, 8, 9, 65, 12, 11, 10, 10, 10, 97, 8, 8, 11, 11, 11, 13, 15, 12, 10, 9, 10, 12, 7, 8, 18, 11, 16, 8, 12, 8, 13, 9, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [10, 10, 152, 10, 11, 11, 2, 8, 11, 9, 9, 24, 9, 10, 9, 9, 13, 10, 10, 10, 10, 11, 11, 20, 9, 10, 9, 9, 9, 10, 9, 10, 11, 14, 9, 39, 13, 57, 11, 89, 11, 11, 9, 9, 14, 14, 9, 12, 9, 12, 9, 9, 9, 12, 9, 11, 10, 10, 10, 35, 9, 14, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [3, 6, 20, 11, 14, 6, 6, 5, 19, 9, 6, 12, 28, 6, 123, 7, 5, 9, 13, 29, 15, 7, 29, 32, 8, 14, 13, 34, 13, 10, 9, 17, 12, 11, 23, 13, 12, 10, 14, 8, 7, 12, 12, 11, 6, 14, 38, 26, 12, 12, 19, 4, 6, 4, 9, 11, 26, 8, 10, 11, 18, 14, 32, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [3, 9, 18, 17, 11, 10, 28, 49, 19, 29, 47, 47, 17, 45, 45, 17, 11, 44, 43, 10, 20, 19, 44, 19, 49, 46, 44, 31, 44, 44, 17, 18, 45, 45, 18, 17, 18, 18, 18, 18, 43, 28, 199, 21, 10, 21, 37, 20, 9, 18, 9, 9, 10, 10, 24, 10, 20, 32, 36, 36, 17, 26, 18, 17, 17, 10, 23, 22, 21, 20, 10, 19, 7, 24, 9, 17, 21, 10, 8, 21, 10, 10, 18, 20, 20, 24, 16, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [59, 13, 13, 23, 13, 63, 60, 54, 23, 52, 57, 232, 62, 47, 53, 59, 47, 47, 62, 54, 19, 23, 47, 48, 61, 50, 54, 49, 57, 49, 55, 64, 64, 47, 52, 59, 57, 25, 48, 55, 48, 48, 61, 62, 69, 57, 64, 63, 61, 62, 18, 51, 54, 63, 19, 18, 65, 62, 19, 17, 64, 60, 18, 17, 61, 63, 63, 62, 59, 19, 63]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [22, 33, 32, 48, 39, 30, 34, 33, 31, 28, 46, 32, 19, 29, 33, 31, 37, 27, 33, 17, 34, 31, 33, 38, 33, 31, 17, 31, 31, 31, 39, 15, 34, 271, 31, 27, 34, 36, 38, 27, 27, 27, 28, 25, 27, 26, 26, 19, 31, 33, 22, 206, 21, 32, 28, 23, 40, 28, 16, 31, 29, 21, 33, 28, 28, 22, 20, 24, 16, 75, 40, 39, 15, 23, 31, 32, 34, 28, 37, 18, 9, 35, 29, 32, 29, 32, 31, 32, 30, 31, 29, 43, 23, 74]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [11, 8, 13, 9, 12, 8, 7, 10, 7, 9, 67, 14, 12, 164, 6, 12, 12, 13, 12, 13, 10, 68, 8, 8, 11, 12, 8, 16, 15, 14, 8, 14, 71, 64, 8, 66, 13, 11, 14, 68, 17, 12, 8, 14, 14, 8, 14, 12, 13, 66, 54, 65, 16, 55, 55, 19, 75, 54, 56, 57, 62, 68, 15, 7, 15, 9, 70, 9, 7, 20, 9, 15, 14, 12, 16, 81, 10, 14, 13, 20, 14, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 3, 7, 4, 3, 4, 8, 6, 12, 4, 4, 9, 5, 5, 5, 6, 8, 4, 7, 5, 6, 6, 6, 6, 7, 5, 5, 5, 6, 3, 5, 5, 6, 5, 6, 6, 7, 5, 4, 5, 4, 5, 6, 5, 8, 6, 44, 6, 6, 6, 7, 5, 6, 46, 9, 5, 5, 7, 6, 29, 5, 5, 4, 9, 7, 4, 6, 7, 7, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [15, 9, 20, 15, 13, 14, 14, 14, 12, 16, 14, 10, 22, 9, 15, 20, 21, 16, 13, 12, 17, 13, 41, 13, 14, 10, 13, 7, 13, 15, 14, 9, 11, 15, 15, 9, 17, 11, 7, 14, 15, 13, 14, 14, 14, 14, 104, 24, 22, 13, 12, 13, 14, 13, 19, 15, 16, 28, 8, 15, 13, 32, 13, 12, 8, 14, 14, 14, 51, 14, 15, 16, 14, 12, 13, 11, 16, 13, 13, 210, 13, 11, 16, 13, 31, 9, 14, 13, 13, 12, 12, 14, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [12, 12, 8, 53, 8, 21, 9, 9, 15, 18, 9, 23, 18, 18, 12, 12, 20, 10, 7, 12, 13, 19, 12, 16, 29, 20, 12, 178, 15, 9, 17, 30, 19, 12, 23, 4, 15, 23, 12, 25, 13, 14, 16, 15, 14, 17, 71, 17, 12, 16, 9, 15, 195, 32, 16, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [49, 53, 7, 8, 50, 8, 109, 50, 45, 55, 9, 52, 45, 61, 43, 42, 6, 12, 42, 42, 44, 42, 43, 8, 53, 44, 44, 43, 44, 42, 14, 41, 43, 52, 42, 41, 43, 52, 7, 12, 5, 42, 42, 20, 49, 51, 7, 7, 50, 8, 18, 58, 64, 42, 13, 50, 46, 46, 9, 51, 42, 40, 40, 49, 52, 7, 54, 75, 7, 18, 11, 9, 80, 57, 52, 53, 50]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [18, 20, 12, 6, 64, 20, 19, 9, 23, 8, 13, 17, 9, 7, 21, 6, 12, 22, 22, 16, 14, 19, 15, 17, 14, 14, 10, 17, 22, 19, 20, 11, 10, 23, 17, 19, 10, 15, 6, 18, 9, 17, 7, 11, 11, 20, 21, 18, 17, 16, 21, 17, 21, 18, 18, 13, 17, 16, 15, 11, 20, 21, 10, 9, 15, 13, 23, 7, 24, 13, 6, 6, 8, 204, 23, 9, 6, 9, 17, 20, 68]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [16, 12, 8, 34, 8, 26, 18, 22, 12, 22, 17, 169, 81, 14, 13, 42, 13, 7, 14, 26, 51, 22, 14, 28, 27, 24, 28, 36, 16, 17, 13, 18, 27, 23, 25, 28, 27, 27, 220, 44, 51, 14, 18, 65, 9, 8, 10, 23, 48, 28, 6, 32, 26, 24, 10, 18, 24, 20, 28, 18, 16, 21, 57, 28, 18, 34, 41, 16, 9, 21, 24, 8, 30, 8, 26, 20, 21, 8, 35, 35, 22, 8, 29, 19, 24, 14, 23, 34, 27, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [37, 15, 16, 24, 36, 14, 21, 16, 34, 80, 38, 11, 32, 18, 52, 17, 17, 11, 35, 46, 4, 17, 23, 27, 15, 34, 41, 35, 29, 13, 17, 22, 29, 14, 17, 14, 13, 6, 17, 4, 39, 14, 29, 21, 34, 37, 17, 17, 26, 18, 8, 37, 32, 14, 8, 7, 39, 42, 15, 42, 15, 15, 26, 21, 41, 38, 39, 5, 11, 20, 39, 14, 40, 18, 82, 16, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [24, 4, 21, 4, 4, 4, 4, 13, 24, 18, 35, 40, 4, 4, 13, 13, 13, 13, 18, 5, 8, 13, 4, 25, 14, 18, 49, 12, 4, 13, 4, 21, 31, 49, 25, 30, 43, 4, 18, 20, 31, 18, 27, 8, 19, 18, 50, 15, 26, 7, 20, 31, 5, 31, 15, 29, 29]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [8, 14, 36, 9, 82, 8, 15, 13, 22, 18, 14, 17, 9, 16, 4, 18, 16, 12, 4, 77, 5, 77, 18, 347, 34, 31, 18, 12, 196, 18, 16, 15, 15, 14, 14, 46, 53, 21, 20, 13, 19, 61, 15, 26, 33, 17, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [14, 25, 14, 18, 12, 12, 15, 24, 16, 13, 20, 16, 13, 12, 13, 13, 12, 15, 21, 13, 16, 15, 17, 16, 16, 20, 16, 12, 12, 10, 23, 16, 12, 13, 12, 15, 12, 12, 16, 24, 27, 21, 18, 15, 22, 22, 24, 23, 22, 26, 20, 20, 16, 10, 21, 16, 24, 18, 23, 105, 16, 16, 27, 16, 22, 21, 16, 17, 17, 15, 10, 10, 22, 11, 24, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [19, 6, 7, 51, 18, 15, 17, 17, 24, 13, 27, 24, 24, 12, 24, 22, 12, 8, 13, 12, 6, 22, 17, 16, 13, 14, 12, 12, 8, 18, 20, 12, 12, 13, 13, 12, 25, 21, 24, 12, 26, 16, 9, 20, 13, 21, 12, 22, 23, 7, 13, 16, 16, 7, 24, 9, 16, 17, 7, 22, 12, 8, 8, 19, 13, 7, 7, 7, 15, 12, 7, 15, 40, 22, 7, 244, 12, 13, 79, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [23, 16, 7, 3, 23, 15, 18, 15, 15, 19, 27, 18, 14, 11, 4, 11, 15, 3, 19, 15, 24, 22, 15, 8, 14, 24, 15, 15, 20, 19, 11, 22, 10, 22, 10, 65, 11, 11, 18, 22, 22, 23, 18, 24, 12, 4, 8, 15, 18, 16, 15, 4, 15, 9, 35, 21, 4, 21, 34, 20, 35, 22, 8, 110, 24, 16, 25, 5, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [18, 33, 33, 27, 34, 35, 28, 29, 23, 34, 31, 16, 21, 16, 21, 30, 40, 37, 15, 56, 24, 34, 47, 22, 45, 45, 28, 36, 43, 14, 34, 37, 15, 38, 67, 40, 41, 40, 25, 14, 22, 13, 31, 25, 56, 8, 18, 25, 37, 13, 21, 15, 106, 23, 24, 16, 20, 7, 35, 36, 25, 37, 43, 18, 38, 23, 24, 32, 24, 22, 31, 25, 16, 16, 37, 38, 35, 25, 36, 26, 38, 36, 25, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [7, 40, 14, 26, 47, 18, 31, 42, 35, 15, 23, 11, 29, 26, 19, 27, 39, 12, 3, 23, 37, 42, 28, 50, 12, 15, 48, 16, 25, 21, 4, 35, 19, 50, 19, 41, 32, 29, 13, 26, 21, 21, 17, 167, 20, 14, 17, 20, 16, 22, 13, 61, 14, 32, 16, 52, 26, 17, 13, 25, 13, 14, 19, 22, 34, 28, 5, 12, 16, 22, 16, 16, 37, 17, 17, 20, 16, 25, 20, 19, 40, 13, 30, 15, 10, 17, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [5, 17, 7, 34, 4, 5, 29, 10, 4, 5, 17, 17, 13, 10, 6, 22, 48, 7, 7, 4, 6, 12, 4, 11, 11, 5, 10, 27, 8, 5, 12, 19, 14, 6, 4, 7, 22, 15, 12, 12, 4, 18, 14, 163, 5, 7, 16, 7, 6, 21, 16, 13, 9, 17, 5, 11, 6, 5, 14, 12, 19, 10, 21, 15, 18, 15, 146, 91, 9, 16, 14, 9, 11, 7, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [12, 16, 14, 34, 34, 18, 25, 14, 8, 14, 19, 34, 90, 12, 35, 38, 18, 9, 23, 8, 14, 46, 14, 31, 40, 14, 36, 45, 39, 42, 47, 32, 37, 31, 15, 25, 41, 35, 29, 9, 15, 14, 16, 30, 16, 15, 51, 29, 17, 15, 15, 8, 45, 31, 19, 22, 18, 12, 21, 41, 44, 19, 14, 15, 40, 24, 9, 15, 43, 33, 39, 17, 16, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [16, 8, 10, 16, 9, 15, 10, 33, 15, 19, 22, 23, 55, 10, 24, 12, 17, 12, 42, 23, 29, 17, 59, 22, 21, 19, 12, 31, 13, 17, 8, 16, 12, 12, 12, 19, 12, 19, 12, 12, 134, 13, 28, 23, 19, 17, 11, 45, 9, 12, 19, 12, 29, 17, 7, 25, 110, 22, 22, 25, 36, 35, 18, 58, 17, 43, 59, 48, 61, 38, 27, 13, 18, 14, 8, 17, 35, 27, 11, 19, 24, 45, 34, 50, 16, 81, 11, 15, 19, 27, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [22, 25, 3, 17, 4, 3, 4, 5, 3, 15, 29, 19, 4, 14, 30, 23, 21, 20, 56, 16, 22, 21, 16, 17, 16, 16, 17, 20, 29, 17, 167, 33, 18, 17, 54, 21, 21, 23, 17, 26, 25, 8, 18, 22, 4, 23, 10, 23, 18, 17, 22, 7, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [15, 48, 37, 5, 24, 24, 35, 36, 8, 31, 31, 11, 6, 11, 13, 45, 18, 24, 33, 24, 8, 19, 12, 22, 11, 14, 34, 22, 52, 20, 8, 32, 10, 14, 32, 47, 134, 29, 19, 37, 38, 28, 24, 24, 30, 29, 27, 30, 26, 31, 7, 49, 26, 34, 11, 47, 11, 50, 41, 38, 15, 24, 24, 29, 33, 41, 41, 29, 16, 44, 34, 24, 20, 29, 23, 43, 20, 48, 23, 31, 27, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 10, 12, 21, 12, 8, 9, 26, 40, 100, 23, 23, 16, 17, 20, 12, 15, 7, 10, 14, 37, 23, 22, 26, 7, 10, 39, 12, 24, 20, 33, 112, 8, 17, 27, 8, 27, 24, 15, 12, 9, 20, 28, 22, 10, 22, 25, 13, 15, 17, 16, 10, 15, 19, 43, 9, 8, 17, 13, 15, 12, 15, 17, 10, 10, 8, 11, 21, 25, 19, 7, 12, 31, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [14, 4, 5, 10, 3, 15, 22, 101, 99, 99, 18, 11, 95, 98, 98, 7, 98, 17, 17, 97, 97, 97, 99, 97, 14, 97, 6, 97, 96, 97, 4, 13, 6, 6, 18, 7, 32, 96, 90, 94, 29, 14, 3, 7, 15, 5, 137, 7, 21, 28, 19, 6, 11, 17, 8, 9, 15, 15, 49, 8, 6, 22, 8, 7, 7, 8, 19, 6, 7, 378]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [19, 15, 19, 4, 23, 21, 23, 11, 20, 18, 14, 26, 31, 34, 13, 26, 15, 16, 25, 16, 24, 12, 29, 14, 15, 26, 24, 12, 4, 16, 12, 12, 11, 11, 21, 25, 11, 24, 12, 26, 13, 18, 5, 13, 4, 25, 13, 13, 16, 4, 19, 19, 16, 13, 16, 21, 11, 24, 43, 10, 13, 4, 15, 16, 13, 17, 15, 19, 6, 15, 15, 16, 19, 61, 13, 12, 13, 12, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [12, 5, 12, 6, 4, 4, 32, 64, 39, 39, 34, 33, 35, 34, 34, 7, 38, 31, 37, 7, 35, 34, 35, 34, 33, 37, 35, 36, 36, 31, 34, 34, 5, 31, 36, 4, 7, 6, 30, 5, 4, 9, 25, 24, 31, 26, 25, 34, 56, 55, 10, 60, 36, 7, 6, 10, 6, 7, 8, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [7, 6, 7, 4, 3, 9, 94, 8, 88, 90, 86, 87, 86, 11, 84, 92, 97, 84, 85, 5, 85, 84, 6, 5, 85, 5, 84, 6, 9, 4, 85, 6, 4, 6, 10, 42, 7, 18, 84, 8, 9, 9, 5, 6, 4, 5, 50, 5, 6, 51, 51, 11, 58, 50, 52, 7, 9, 6, 4, 22, 7, 11, 13, 10, 7, 9, 7, 9, 43, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 5, 6, 89, 6, 4, 91, 90, 12, 87, 88, 10, 91, 128, 5, 88, 88, 13, 6, 90, 88, 34, 5, 88, 96, 87, 89, 5, 12, 4, 4, 10, 5, 5, 5, 4, 14, 93, 21, 88, 93, 13, 4, 11, 11, 12, 12, 5, 146, 12, 12, 17, 13, 4, 6, 12, 12, 55, 10, 5, 5, 5, 16, 10, 10, 4, 18, 11, 11, 6, 20, 5, 5, 16, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [4, 13, 24, 23, 30, 12, 60, 8, 66, 55, 47, 8, 9, 54, 55, 26, 224, 46, 39, 52, 51, 22, 47, 52, 29, 52, 30, 8, 24, 15, 46, 24, 9, 8, 46, 10, 22, 54, 30, 51, 27, 5, 6, 24, 13, 13, 6, 15, 12, 17, 10, 48, 8, 12, 12, 7, 14, 16, 71, 59, 8, 16, 10, 24, 7, 71, 25, 25, 46, 8, 14, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [8, 14, 13, 12, 10, 10, 27, 7, 19, 21, 9, 11, 13, 10, 10, 18, 8, 14, 14, 15, 11, 22, 16, 15, 20, 28, 15, 29, 14, 12, 12, 19, 13, 23, 12, 10, 24, 14, 16, 8, 20, 17, 7, 15, 14, 10, 9, 24, 23, 14, 7, 27, 14, 21, 19, 21, 9, 14, 16, 16, 13, 16, 10, 20, 15, 21, 8, 16, 6, 15, 8, 10, 55, 15, 24, 25, 11, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [19, 10, 11, 12, 9, 14, 12, 11, 9, 16, 12, 15, 20, 12, 13, 13, 12, 12, 19, 12, 12, 12, 10, 10, 12, 12, 16, 12, 28, 12, 19, 12, 12, 14, 12, 6, 15, 12, 12, 27, 12, 24, 12, 17, 28, 12, 14, 14, 13, 13, 11, 6, 12, 35, 23, 18, 24, 19, 39, 10, 18, 14, 13, 22, 19, 15, 19, 10, 11, 7, 11, 12, 12, 14, 23, 14, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 8, 8, 10, 7, 7, 9, 8, 8, 10, 7, 13, 7, 7, 8, 6, 10, 8, 9, 8, 8, 92, 9, 7, 23, 5, 7, 8, 10, 8, 242, 61, 7, 12, 9, 77, 50, 9, 9, 8, 8, 9, 10, 50, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 10, 6, 7, 6, 10, 7, 6, 14, 6, 8, 13, 9, 11, 6, 7, 10, 12, 13, 7, 7, 9, 5, 136, 14, 8, 8, 4, 9, 12, 8, 9, 11, 12, 8, 168, 8, 8, 14, 6, 7, 12, 9, 6, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 214
termination = MathOptInterface.OPTIMAL
objective_value = 0.9756150657663496
thermo_feasible = true
