┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 17
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [10, 3, 7, 18, 3, 3, 53, 3, 8, 266, 4, 164, 3, 3, 30, 8, 3, 4, 4, 3, 21, 171, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 4, 4, 121, 3, 10, 3, 3, 9, 4, 3, 4, 10, 6, 5, 3, 20, 11, 42]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 3, 35, 3, 7, 3, 4, 6, 7, 3, 4, 7, 4, 4, 4, 40, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 3, 4, 4, 4, 4, 7, 3, 4, 5, 12, 3, 3, 132, 4, 4, 4, 4, 21, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 25, 4, 4, 6, 4, 10, 3, 13, 427, 4, 13, 3, 10, 34, 4, 10, 4, 33, 50, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 94, 6, 4, 24, 3, 4, 43, 4, 3, 4, 7, 230, 100, 4, 4, 64, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 3, 4, 3, 5, 93, 4, 42, 8, 4, 4, 6, 3, 4, 4, 37, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [39, 3, 4, 19, 4, 5, 67, 4, 5, 3, 4, 4, 5, 3, 4, 5, 4, 4, 4, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 114, 3, 6, 66, 4, 4, 4, 5, 4, 3, 17, 4, 4, 56, 5, 56, 4, 25, 4, 4, 20, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 5, 4, 4, 4, 5, 4, 6, 4, 4, 4, 3, 5, 150, 4, 4, 4, 32, 9, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 5, 4, 4, 5, 5, 4, 4, 4, 4, 3, 5, 88, 4, 5, 4, 24, 6, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5, 3, 4, 3, 4, 5, 4, 4, 3, 5, 3, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 4, 3, 7, 4, 5, 52, 4, 52, 4, 3, 3, 5, 4, 4, 4, 4, 252, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 5, 4, 4, 4, 3, 5, 3, 3, 4, 4, 4, 4, 5, 4, 4, 9, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [8, 15, 3, 35, 3, 3, 4, 4, 150, 43, 4, 43, 4, 4, 4, 263, 4, 3, 4, 34, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 8, 4, 11, 4, 6, 5, 4, 7, 32, 3, 3, 6, 5, 5, 7, 4, 3, 11, 63, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 16, 6, 20, 3, 8, 3, 4, 7, 4, 10, 136, 6, 3, 4, 5, 18, 15, 3, 32, 116, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 4, 11, 3, 6, 4, 5, 7, 54, 3, 6, 13, 4, 3, 6, 3, 52, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 17, 4, 3, 44, 4, 5, 46, 6, 45, 4, 4, 30, 5, 30, 3, 43, 4, 54, 4, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 3, 3, 3, 6, 3, 8, 8, 8, 16, 75, 3, 9, 5, 3, 3, 11, 3, 37, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 3, 9, 3, 408, 4, 5, 24, 4, 34, 5, 5, 4, 6, 3, 3, 33, 6, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 18, 3, 3, 63, 5, 5, 70, 5, 13, 7, 4, 3, 5, 4, 4, 3, 4, 53, 4, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 6, 3, 3, 3, 5, 4, 3, 30, 4, 4, 173, 5, 116, 4, 4, 4, 4, 3, 65]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 19, 6, 35, 3, 4, 6, 3, 4, 18, 6, 3, 4, 5, 3, 4, 3, 56, 10, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 8, 7, 4, 3, 54, 3, 3, 3, 5, 4, 3, 3, 4, 47, 15, 13]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 4, 23, 3, 5, 6, 6, 6, 4, 11, 5, 11, 3, 6, 5, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 6, 4, 6, 47, 3, 6, 55, 3, 6, 3, 3, 3, 202, 9, 6, 6, 21, 62, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 32, 8, 10, 4, 3, 5, 4, 3, 4, 3, 271, 55, 32, 3, 4, 33, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 12, 3, 4, 4, 6, 4, 4, 5, 4, 3, 4, 7, 4, 4, 3, 3, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 17, 3, 4, 4, 4, 5, 4, 4, 3, 4, 4, 4, 5, 554, 4, 4, 3, 48, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 20, 4, 6, 58, 5, 32, 3, 6, 3, 21, 72, 5, 4, 3, 6, 8, 51, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 18, 3, 4, 63, 3, 5, 45, 3, 69, 14, 4, 43, 5, 4, 4, 5, 4, 42, 70, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 32, 4, 3, 443, 4, 5, 27, 5, 339, 4, 4, 4, 5, 6, 4, 5, 65, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 49, 4, 4, 32, 3, 5, 64, 3, 66, 4, 4, 29, 5, 29, 3, 5, 36, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 18, 4, 3, 62, 3, 5, 19, 3, 33, 6, 3, 7, 5, 3, 3, 3, 54, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 33, 4, 4, 4, 3, 242, 82, 4, 361, 4, 4, 31, 149, 31, 3, 3, 3, 41, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 6, 4, 20, 3, 5, 4, 15, 6, 10, 4, 5, 9, 4, 4, 4, 34, 3, 298]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 8, 3, 46, 3, 38, 4, 4, 4, 4, 3, 3, 5, 3, 4, 4, 3, 4, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 21, 6, 4, 33, 4, 5, 9, 4, 7, 11, 8, 4, 6, 5, 3, 3, 56, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 5, 3, 45, 18, 5, 35, 4, 74, 3, 9, 55, 5, 57, 3, 4, 56, 7, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 4, 4, 3, 7, 3, 3, 29, 4, 4, 4, 6, 5, 4, 5, 41, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 15, 16, 4, 55, 77, 4, 28, 4, 4, 4, 93, 4, 3, 3, 4, 46, 15, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 10, 495, 3, 28, 4, 47, 5, 5, 4, 4, 4, 5, 3, 7, 3, 4, 3, 10, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 3, 4, 3, 4, 168, 52, 3, 79, 4, 4, 8, 7, 4, 8, 4, 3, 44, 8, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [6, 8, 3, 3, 3, 5, 77, 4, 400, 5, 3, 6, 3, 9, 6, 163, 5, 31, 9, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 3, 3, 4, 5, 3, 28, 4, 3, 4, 5, 3, 7, 3, 3, 171, 7, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 58, 7, 3, 51, 3, 107, 51, 3, 24, 6, 8, 6, 225, 8, 4, 3, 43, 5, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [3, 10, 3, 8, 3, 3, 24, 4, 467, 25, 4, 3, 6, 4, 9, 3, 6, 3, 10, 4, 10]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 14, 3, 4, 47, 26, 35, 5, 33, 4, 3, 6, 7, 4, 3, 5, 3, 17, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 3, 3, 57, 6, 20, 3, 3, 57, 6, 8, 773, 6, 4, 4, 3, 3, 36, 41, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 3, 5, 3, 6, 6, 3, 3, 3, 4, 4, 6, 8, 8, 4, 4, 3, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 47, 3, 7, 36, 4, 32, 8, 5, 3, 6, 3, 8, 112, 24, 21, 58]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 20, 3, 13, 5, 4, 7, 40, 4, 44, 4, 5, 4, 677, 3, 7, 5, 3, 26, 8, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 13, 3, 57, 5, 5, 49, 4, 71, 4, 3, 4, 5, 3, 5, 11, 4, 63, 5, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 5, 5, 4, 25, 6, 6, 48, 6, 16, 6, 19, 9, 6, 9, 3, 6, 38, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [5, 13, 3, 4, 14, 5, 4, 4, 5, 9, 3, 11, 21, 3, 4, 9, 4, 23, 4, 3, 4, 6, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 19, 6, 6, 6, 3, 10, 6, 6, 54, 3, 69, 3, 4, 16, 7, 16, 8, 12, 46, 57, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 6, 3, 16, 3, 3, 6, 25, 3, 31, 4, 4, 13, 6, 13, 8, 10, 6, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [3, 34, 4, 6, 4, 3, 3, 4, 236, 4, 3, 4, 7, 3, 3, 6, 3, 7, 3, 26, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 33, 3, 4, 3, 6, 312, 25, 3, 26, 4, 3, 4, 6, 8, 4, 21, 13, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 3, 4, 4, 7, 3, 5, 3, 3, 4, 16, 3, 4, 5, 13, 3, 7, 17, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 3, 3, 53, 3, 5, 5, 3, 3, 3, 4, 136, 5, 10, 3, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 17, 3, 3, 67, 4, 5, 33, 4, 30, 4, 3, 4, 6, 4, 4, 3, 23, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 36, 4, 3, 4, 4, 10, 77, 9, 4, 6, 5, 6, 4, 8, 3, 4, 11, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 3, 5, 62, 4, 26, 6, 3, 24, 3, 8, 3, 28, 6, 3, 6, 3, 65, 69, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 19, 5, 5, 52, 4, 6, 5, 3, 8, 3, 3, 40, 5, 40, 5, 28, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 4, 64, 6, 4, 3, 5, 4, 4, 7, 3, 4, 3, 7, 7, 3, 3, 4, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 3, 3, 101, 33, 4, 6, 32, 11, 31, 6, 8, 4, 6, 3, 8, 4, 9, 23, 24, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 3, 33, 6, 6, 7, 3, 3, 3, 3, 15, 7, 15, 8, 4, 6, 23, 10, 33]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 14, 3, 3, 43, 3, 554, 16, 3, 301, 6, 5, 4, 6, 3, 4, 3, 40, 11, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 3, 6, 4, 4, 4, 7, 26, 3, 45, 3, 3, 3, 7, 4, 3, 3, 49, 8, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 8, 4, 3, 6, 6, 28, 263, 39, 5, 10, 3, 7, 6, 8, 6, 3, 33, 19, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 33, 4, 5, 52, 3, 7, 30, 3, 83, 3, 3, 4, 11, 4, 4, 5, 4, 52, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 8, 3, 3, 57, 32, 420, 37, 3, 57, 3, 4, 80, 41, 73, 3, 5, 54, 18, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 67, 3, 4, 16, 7, 4, 3, 6, 62, 3, 69, 4, 4, 15, 6, 3, 8, 3, 5, 75, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 7, 3, 3, 3, 162, 3, 3, 12, 4, 3, 6, 3, 5, 4, 3, 54, 6, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 7, 6, 3, 4, 7, 23, 3, 4, 8, 3, 8, 6, 4, 3, 3, 20, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 3, 4, 6, 36, 3, 36, 4, 6, 4, 6, 4, 4, 4, 43, 5, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 3, 5, 6, 3, 4, 6, 6, 3, 32, 8, 320, 97, 9, 13, 8, 3, 8, 8, 37, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 4, 16, 11, 3, 84, 4, 8, 17, 6, 6, 4, 3, 3, 6, 3, 16, 6, 27, 12]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 16, 3, 5, 3, 27, 44, 3, 6, 37, 3, 35, 54, 3, 114, 198, 12, 8, 6, 6, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 241, 4, 91, 127, 241, 4, 27, 242, 28, 242, 97, 42, 23, 42, 133, 3, 241, 23, 10, 241]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [5, 6, 12, 3, 6, 4, 3, 6, 49, 13, 7, 4, 4, 7, 8, 3, 4, 45, 4, 15]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 80, 4, 27, 139, 249, 15, 23, 249, 4, 249, 99, 6, 6, 6, 137, 249, 70, 12, 249]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5, 4, 3, 58, 4, 7, 4, 7, 3, 4, 84, 6, 83, 8, 202, 3, 65, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 3, 3, 3, 3, 3, 5, 3, 48, 3, 3, 18, 3, 259, 155, 5, 6, 3, 4, 3, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 5, 3, 3, 4, 17, 3, 7, 44, 4, 4, 3, 7, 3, 6, 64, 11, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 30, 3, 12, 41, 64, 7, 28, 3, 39, 4, 4, 4, 7, 4, 9, 3, 37, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 6, 6, 55, 3, 6, 60, 6, 65, 3, 4, 4, 535, 6, 8, 4, 3, 20, 52, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 3, 5, 4, 53, 4, 6, 39, 4, 39, 7, 4, 27, 6, 34, 4, 4, 3, 46, 7, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 4, 8, 6, 97, 5, 6, 3, 10, 104, 8, 91, 4, 6, 14, 8, 4, 27, 8, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 4, 3, 5, 4, 11, 3, 3, 3, 42, 6, 4, 4, 3, 6, 48, 26, 7]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 3, 6, 6, 3, 3, 6, 3, 3, 23, 7, 3, 7, 6, 3, 4, 3, 34, 22, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 4, 3, 4, 5, 4, 6, 7, 3, 3, 4, 151, 3, 3, 3, 3, 26, 24, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 6, 3, 8, 3, 3, 17, 17, 4, 16, 10, 3, 45, 6, 44, 9, 12, 3, 36, 322, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 54, 6, 4, 4, 5, 48, 3, 49, 4, 4, 3, 3, 4, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 5, 4, 307, 4, 4, 3, 3, 4, 4, 5, 3, 4, 3, 4, 14, 4, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 247, 4, 102, 15, 247, 5, 101, 250, 127, 252, 91, 4, 76, 236, 7, 252, 116, 11, 258]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 3, 90, 66, 4, 6, 16, 4, 4, 5, 4, 74, 355, 74, 3, 3, 61, 43, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 24, 4, 38, 4, 4, 43, 8, 237, 35, 6, 4, 4, 3, 4, 6, 96, 3, 3, 130, 17, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 3, 4, 3, 4, 4, 6, 3, 4, 3, 4, 5, 13, 5, 3, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 3, 3, 3, 49, 4, 6, 5, 4, 3, 4, 3, 5, 4, 3, 51, 58, 19, 42]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 3, 3, 17, 3, 27, 3, 3, 6, 4, 4, 4, 6, 3, 5, 4, 5, 4, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 12, 4, 165, 45, 11, 6, 170, 4, 189, 6, 86, 4, 7, 88, 3, 38, 18, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 3, 6, 90, 4, 8, 31, 4, 6, 4, 4, 8, 3, 21, 7, 4, 4, 9, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 151, 4, 201, 3, 4, 5, 102, 120, 4, 137, 105, 525, 5, 4, 8, 4, 4, 143, 4, 120]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 14, 4, 3, 4, 3, 236, 4, 4, 4, 3, 3, 4, 7, 3, 4, 177, 4, 5, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 5, 37, 5, 77, 13, 3, 12, 5, 3, 42, 426, 43, 8, 3, 250, 30, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 46, 4, 32, 62, 4, 67, 40, 175, 30, 171, 71, 4, 83, 4, 95, 171, 59, 16, 153]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 4, 3, 3, 6, 76, 3, 18, 4, 8, 3, 6, 189, 3, 3, 31, 99, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 3, 28, 4, 48, 6, 7, 36, 4, 39, 6, 39, 3, 3, 4, 23, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 9, 3, 4, 4, 3, 83, 3, 4, 30, 4, 16, 5, 25, 4, 5, 3, 4, 31, 7, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 3, 21, 49, 3, 37, 28, 4, 7, 65, 147, 79, 158, 75, 22, 7, 22, 106, 5, 157, 246, 12, 140]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 14, 3, 3, 3, 3, 8, 80, 17, 4, 4, 11, 10, 3, 13, 3, 4, 30, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [3, 4, 14, 4, 4, 3, 60, 4, 5, 4, 7, 56, 6, 4, 74, 5, 74, 4, 3, 72, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 4, 3, 3, 263, 28, 3, 38, 7, 3, 282, 7, 5, 4, 3, 43, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 3, 10, 56, 3, 5, 4, 4, 5, 3, 66, 6, 66, 5, 3, 3, 65, 40, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 3, 6, 8, 3, 72, 34, 255, 33, 6, 8, 6, 6, 6, 4, 3, 8, 3, 19]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [3, 5, 349, 16, 4, 3, 3, 8, 6, 14, 3, 3, 3, 4, 3, 206, 7, 4, 6, 59, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 4, 4, 45, 4, 534, 56, 4, 3, 326, 5, 3, 9, 6, 4, 4, 4, 52, 3, 11]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 37, 4, 5, 8, 3, 5, 35, 3, 34, 3, 3, 11, 3, 5, 3, 3, 19, 21, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777572107
