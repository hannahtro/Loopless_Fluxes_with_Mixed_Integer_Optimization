┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 158
max_cuts = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8, 8, 6, 4, 4, 8, 11, 3, 127, 13, 19, 13, 7, 3, 6, 5, 4, 4, 8, 7, 2, 3, 8, 9, 4, 5, 4, 9, 82, 5, 5, 4, 385, 4, 4, 4, 6, 5, 3, 4, 5, 3, 4, 5, 5, 3, 3, 4, 4, 8, 40, 9, 28, 4, 3, 4]
length(C_list) = 79
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 3, 2, 4, 3, 7, 12, 5, 5, 3, 5, 5, 4, 126, 4, 3, 115, 46, 207, 5, 4, 6, 10, 4, 5, 5, 5, 8, 5, 4, 588, 7, 6, 286, 5, 6, 3, 7, 9, 4, 5, 12, 6, 571, 5, 4, 279, 13, 4, 6, 9, 5, 6, 7, 4, 5, 66, 8, 5, 6, 5, 4, 5, 4, 4, 5, 9, 70, 4, 4, 7, 6, 7, 5, 4, 111, 5, 4, 6, 4, 6, 6, 9, 3, 4, 5, 27, 4, 4, 16, 4, 6, 4, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 10, 3, 6, 6, 41, 4, 4, 5, 5, 7, 4, 9, 4, 4, 35, 7, 5, 29, 3, 7, 7, 82, 13, 6, 6, 3, 9, 8, 8, 4, 31, 3, 7, 8, 8, 5, 5, 5, 10, 5, 12, 8, 3, 4, 7, 10, 5, 23, 47, 4, 6, 3, 4, 8, 3, 6, 8, 8, 8, 4, 10, 11, 4, 6, 6, 7, 7, 7, 8, 7, 5, 7, 7, 7, 8, 64, 7, 72, 85, 5, 6, 8, 4, 12, 6, 6, 7, 9, 3, 7, 7, 13, 5, 8, 5, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 3, 8, 5, 3, 5, 5, 5, 5, 5, 6, 3, 4, 6, 9, 11, 3, 5, 4, 4, 6, 5, 7, 6, 19, 5, 10, 4, 4, 13, 4, 5, 4, 4, 4, 52, 4, 6, 4, 5, 4, 3, 5, 4, 41, 69, 5, 7, 7, 4, 4, 4, 6, 7, 4, 6, 7, 4, 4, 90, 22, 10, 8, 8, 4, 4, 7, 8, 6, 4, 4, 5, 4, 4, 5, 4, 7, 4, 16, 8, 6, 5, 5, 5, 4, 4, 9, 4, 9, 11, 3, 5, 4, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [13, 8, 5, 12, 5, 7, 13, 7, 9, 5, 33, 51, 5, 5, 10, 8, 3, 4, 3, 122, 6, 7, 5, 5, 20, 11, 5, 8, 7, 11, 5, 5, 88, 7, 6, 4, 5, 4, 4, 4, 4, 3, 10, 4, 3, 5, 5, 7, 5, 5, 3, 10, 5, 4, 11, 209, 4, 4, 4, 6, 6, 23, 7, 6, 7, 5, 4, 11, 7, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 15, 110, 6, 3, 6, 5, 3, 4, 5, 4, 10, 7, 4, 6, 4, 7, 4, 4, 6, 35, 5, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 163, 8, 11, 6, 3, 8, 4, 6, 6, 7, 4, 3, 7, 5, 19, 11, 8, 4, 6, 6, 5, 5, 237, 4, 5, 9, 3, 4, 9, 11, 4, 4, 11, 118, 5, 5, 6, 3, 5, 4, 6, 4, 10, 4, 4, 5, 223, 5, 5, 7, 17, 9, 7, 4, 4, 10, 5, 44, 6, 5, 4, 7, 6, 10, 7, 6, 4, 6, 6, 6, 4, 4, 4, 6, 5, 5, 166, 4, 289, 4, 4, 134, 30, 169, 17, 6, 10, 5, 3, 4, 7, 8, 193, 5, 9, 13, 4, 9, 5, 5, 4, 7, 8, 4, 10]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 3, 7, 3, 5, 4, 8, 4, 6, 5, 5, 6, 4, 181, 4, 4, 9, 4, 178, 6, 5, 11, 4, 7, 3, 6, 34, 3, 4, 4, 7, 4, 4, 5, 3, 19, 7, 7, 5, 8, 5, 5, 4, 140, 4, 9, 5, 4, 4, 9, 6, 10, 10, 5, 4, 8, 4, 6, 7, 4, 5, 4, 4, 6, 6, 4, 5, 12, 4, 4, 5, 4, 8, 5, 7, 341, 5, 4, 7, 4, 9, 5, 13, 4, 17, 316, 4, 4, 7, 4, 9, 9, 5, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 5, 4, 5, 10, 35, 7, 5, 4, 4, 5, 4, 4, 6, 6, 8, 3, 18, 12, 6, 7, 6, 350, 6, 6, 3, 5, 5, 44, 5, 5, 15, 5, 6, 4, 4, 4, 6, 6, 4, 4, 7, 8, 8, 14, 3, 5, 6, 4, 6, 5, 5, 3, 4, 70, 4, 7, 6, 8, 4, 31, 6, 6, 4, 5, 4, 57, 4, 6, 39, 10, 7, 3]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 257, 4, 4, 5, 5, 5, 4, 4, 4, 14, 3, 6, 3, 7, 8, 4, 3, 5, 220, 6, 4, 9, 6, 11, 273, 26, 150, 3, 4, 7, 88, 7, 6, 7, 5, 3, 9, 5, 29, 4, 4, 7, 7, 9, 4, 4, 5, 13, 4, 4, 6, 56, 6, 4, 8, 189, 5, 6, 4, 15, 5, 7, 19, 5, 9, 5, 5, 69, 6, 6, 110, 20, 24, 5, 283, 9, 3, 57, 6, 7, 232, 8, 23, 210, 42, 5, 5, 65, 10]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 4, 11, 11, 4, 14, 13, 3, 7, 4, 17, 10, 4, 12, 13, 7, 4, 4, 4, 6, 8, 4, 31, 4, 6, 12, 8, 7, 12, 13, 8, 9, 9, 17, 13, 10, 14, 8, 140, 16, 10, 5, 6, 4, 6, 14, 4, 4, 9, 9, 9, 7, 4, 4, 6, 8, 8, 4, 94, 6, 198, 14, 4, 9, 12, 7, 5, 30, 9, 8, 10, 9, 9, 10, 6, 4, 6, 6, 6, 5, 9, 6, 9, 16, 11, 9, 6, 4, 10, 8, 6, 4, 5, 6, 7, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 7, 3, 6, 7, 4, 6, 5, 8, 6, 4, 216, 14, 5, 4, 5, 5, 4, 4, 4, 5, 4, 13, 4, 4, 6, 68, 4, 6, 6, 4, 8, 3, 8, 4, 4, 5, 6, 89, 7, 6, 297, 8, 4, 6, 5, 9, 39, 4, 22, 6, 5, 4, 5, 7, 6, 9, 5, 4, 7, 6, 4, 6, 3, 5, 4, 16, 3, 5, 4, 3, 14, 5, 5, 5, 7, 215, 4, 342, 12, 4, 4, 115, 3, 4, 6, 6, 4, 224, 6, 5, 257, 9, 13, 7, 9]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 5, 7, 9, 5, 7, 6, 6, 4, 3, 8, 6, 8, 5, 6, 9, 4, 290, 6, 8, 9, 4, 5, 7, 4, 176, 5, 6, 9, 5, 11, 6, 6, 4, 6, 5, 310, 4, 9, 6, 6, 7, 4, 4, 6, 15, 5, 6, 15, 9, 6, 4, 7, 7, 4, 7, 4, 4, 11, 8, 10, 8, 4, 7, 3, 5, 7, 4, 4, 6, 6, 5, 9, 4, 8, 8, 13, 6, 10, 5, 10, 4, 5, 4, 52, 4, 9, 11, 8, 45, 6, 4, 10, 5, 316, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 10, 4, 17, 5, 4, 6, 12, 8, 6, 9, 6, 11, 5, 4, 8, 5, 3, 166, 7, 8, 6, 4, 4, 7, 5, 7, 5, 7, 165, 11, 5, 9, 9, 12, 18, 6, 4, 5, 124, 7, 5, 7, 6, 11, 4, 12, 9, 4, 3, 4, 6, 5, 5, 5, 4, 6, 12, 8, 6, 20, 8, 11, 7, 5, 4, 5, 4, 10, 212, 7, 9, 6, 8, 3, 4, 10, 4, 10, 4, 6, 3, 6, 9, 4, 8, 6, 3, 5, 5, 7, 8, 8, 5, 3]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 10, 11, 4, 3, 7, 7, 5, 6, 4, 246, 5, 4, 183, 9, 8, 3, 3, 73, 4, 4, 5, 6, 6, 150, 6, 7, 4, 6, 40, 24, 111, 6, 10, 245, 266, 4, 10, 3, 266, 7, 8, 9, 8, 31, 4, 8, 4, 4, 8, 6, 4, 4, 5, 8, 6, 5, 4, 5, 7, 7, 7, 6, 4, 4, 5, 6, 5, 5, 5, 4, 120, 5, 6, 57, 4, 6, 4, 11, 6, 4, 7, 4, 5, 6, 5, 7, 7, 203, 5, 7, 7, 7, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 6, 5, 4, 4, 10, 5, 5, 180, 4, 3, 6, 6, 4, 53, 3, 4, 132, 7, 191, 276, 4, 79, 4, 5, 7, 11, 10, 274, 5, 7, 7, 6, 12, 55, 4, 4, 7, 22, 8, 8, 7, 6, 4, 9, 7, 4, 4, 6, 15, 202, 11, 4, 4, 10, 4, 316, 3, 4, 5, 17, 8, 7, 4, 6, 9, 154, 8, 7, 6, 6, 6, 6, 5, 26, 29, 18, 96, 11, 12, 7, 199, 8, 5, 6, 4, 14, 56, 5, 4, 4, 4, 12, 6, 4, 9, 4, 6, 10, 8, 9, 11, 187, 8, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 177, 5, 4, 4, 11, 7, 5, 9, 5, 13, 7, 5, 8, 5, 6, 6, 4, 121, 82, 8, 4, 4, 9, 6, 7, 346, 5, 4, 7, 4, 4, 12, 7, 4, 8, 4, 5, 7, 4, 6, 147, 4, 364, 5, 27, 5, 7, 8, 10, 7, 6, 6, 11, 4, 5, 293, 4, 5, 6, 4, 5, 6, 7, 9, 31, 6, 4, 5, 7, 5, 6, 8, 7, 121, 5, 19, 5, 4, 4, 4, 4, 4, 14, 70, 267, 5, 90, 3, 7, 4, 4, 15, 11, 4, 357, 6, 6, 11, 5, 9, 6, 37, 6, 12, 3]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 6, 4, 4, 4, 3, 5, 6, 2, 8, 8, 5, 4, 5, 7, 3, 45, 5, 6, 14, 8, 8, 7, 4, 6, 7, 4, 6, 5, 10, 7, 402, 6, 5, 8, 4, 4, 8, 6, 6, 17, 4, 4, 4, 4, 6, 4, 6, 8, 4, 3, 3, 5, 239, 4, 5, 12, 7, 8, 153, 4, 6, 3, 9, 9, 6, 5, 4, 6, 4, 7, 3, 4, 9, 5, 3, 4, 4, 7, 24, 10, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 4, 3, 5, 22, 4, 6, 7, 5, 5, 4, 3, 6, 4, 8, 4, 6, 4, 11, 7, 6, 6, 388, 9, 9, 10, 8, 13, 9, 6, 10, 6, 4, 4, 6, 5, 4, 4, 166, 5, 5, 7, 4, 4, 10, 8, 4, 8, 202, 6, 4, 6, 8, 4, 5, 7, 4, 17, 192, 4, 6, 6, 5, 6, 7, 8, 5, 6, 4, 8, 4, 4, 4, 4, 168, 4, 4, 6, 8, 7, 11, 5, 10, 5, 6, 6, 7, 6, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 4, 4, 3, 9, 4, 6, 8, 4, 5, 4, 9, 12, 297, 5, 10, 6, 4, 4, 5, 4, 6, 7, 10, 7, 8, 5, 5, 69, 6, 170, 5, 4, 23, 6, 6, 8, 4, 8, 5, 44, 8, 5, 9, 6, 6, 6, 4, 5, 12, 52, 7, 21, 185, 4, 6, 4, 8, 322, 5, 23, 6, 10, 4, 5, 9, 10, 9, 19, 5, 5, 5, 6, 7, 9, 4, 4, 4, 8, 5, 7, 4, 9, 4, 9, 4, 10, 132, 8, 14, 168, 8, 33, 6, 8]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 59, 4, 7, 8, 5, 8, 6, 280, 10, 10, 338, 281, 8, 8, 3, 8, 125, 4, 6, 6, 5, 33, 5, 5, 5, 7, 8, 4, 5, 10, 6, 6, 13, 218, 14, 6, 6, 60, 4, 374, 12, 94, 4, 4, 6, 169, 8, 12, 14, 3, 4, 8, 9, 6, 6, 4, 11, 4, 4, 12, 4, 4, 7, 5, 6, 10, 9, 4, 7, 6, 12, 10, 12, 12, 4, 4, 7, 7, 5, 6, 6, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 6, 5, 146, 7, 4, 316, 18, 6, 4, 4, 8, 8, 11, 14, 6, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 5, 4, 5, 8, 6, 5, 352, 6, 5, 75, 4, 6, 5, 15, 4, 4, 92, 4, 6, 4, 4, 39, 5, 7, 13, 7, 9, 6, 13, 8, 9, 4, 11, 5, 4, 5, 3, 4, 6, 9, 8, 8, 4, 7, 122, 6, 5, 5, 7, 5, 6, 12, 8, 11, 5, 4, 6, 9, 5, 6, 291, 4, 7, 13, 15, 13, 12, 137, 5, 5, 47, 5, 5, 12, 13, 8, 6, 10, 4, 5, 10, 7, 12, 4, 13, 7, 5, 5, 6, 14, 10, 13, 7, 9]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 4, 14, 4, 11, 4, 4, 10, 87, 4, 4, 4, 4, 9, 14, 6, 380, 82, 4, 8, 4, 30, 5, 5, 9, 4, 4, 8, 5, 8, 10, 4, 5, 4, 4, 4, 6, 5, 4, 9, 9, 4, 4, 108, 4, 5, 7, 68, 8, 179, 8, 7, 249, 4, 4, 102, 5, 218, 6, 13, 5, 4, 4, 5, 5, 19, 6, 6, 4, 6, 7, 12, 6, 4, 6, 4, 4, 5, 5, 4, 4, 121, 5, 487, 372, 6, 5, 5, 9, 4, 3, 8, 4, 4, 9, 7, 268, 10, 62, 8, 7, 9, 7, 11, 5, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 7, 9, 10, 6, 14, 12, 463, 4, 9, 8, 8, 7, 8, 5, 3, 8, 4, 358, 5, 4, 8, 8, 4, 5, 6, 7, 9, 6, 8, 10, 5, 11, 4, 5, 10, 6, 6, 19, 4, 4, 7, 9, 4, 7, 6, 4, 4, 7, 8, 7, 4, 4, 8, 4, 4, 4, 8, 6, 6, 9, 5, 9, 4, 8, 8, 10, 6, 10, 8, 4, 6, 4, 4, 151, 4, 9, 8, 4, 9, 4, 8, 168, 4, 4, 4, 4, 10, 4, 12, 427, 210, 9, 4, 4, 10, 4, 8, 9, 7, 6, 7, 4, 5, 11, 5, 10, 4, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 3, 8, 5, 12, 8, 4, 5, 5, 60, 7, 7, 4, 4, 8, 25, 12, 6, 6, 5, 3, 10, 189, 7, 9, 7, 8, 8, 97, 6, 8, 8, 6, 10, 6, 5, 120, 8, 9, 8, 4, 256, 5, 46, 9, 5, 10, 4, 6, 4, 38, 4, 8, 6, 7, 4, 14, 4, 4, 7, 4, 4, 11, 4, 5, 6, 4, 62, 7, 13, 8, 6, 5, 9, 4, 6, 7, 5, 5, 6, 5, 4, 5, 6, 4, 7, 7, 4, 5, 43, 7, 6, 10, 7, 5, 4, 83, 3, 4, 6, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 6, 8, 4, 5, 4, 4, 6, 7, 7, 8, 7, 6, 3, 12, 7, 6, 198, 9, 7, 6, 5, 6, 5, 4, 4, 6, 4, 11, 15, 173, 9, 6, 16, 5, 5, 6, 6, 224, 7, 5, 6, 12, 7, 6, 6, 10, 7, 7, 15, 4, 4, 8, 24, 16, 7, 5, 4, 6, 5, 5, 10, 4, 7, 13, 8, 10, 3, 6, 8, 4, 7, 5, 207, 10, 4, 6, 189, 176, 6, 7, 12, 51, 11, 6, 4, 6, 8, 8, 11, 10, 8, 7, 10, 9, 4, 6, 5, 8, 5, 343]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 12, 6, 4, 4, 4, 7, 6, 8, 5, 5, 9, 4, 6, 11, 7, 8, 7, 9, 8, 228, 4, 4, 10, 11, 5, 5, 11, 8, 5, 34, 7, 11, 3, 5, 4, 14, 4, 6, 5, 5, 4, 5, 6, 7, 8, 214, 5, 6, 4, 12, 4, 6, 13, 93, 6, 4, 4, 73, 12, 9, 11, 5, 7, 112, 200, 54, 6, 9, 425, 6, 16, 7, 5, 10, 6, 24, 3, 4, 9, 4, 6, 8, 46, 6, 4, 8, 5, 4, 5, 11, 7, 6, 79, 4, 4, 8, 4, 6, 6, 8, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 7, 7, 7, 8, 8, 6, 7, 3, 5, 8, 12, 6, 4, 9, 12, 4, 46, 4, 4, 7, 8, 7, 8, 3, 9, 117, 10, 9, 10, 8, 4, 6, 7, 4, 6, 4, 18, 4, 10, 8, 9, 9, 5, 8, 6, 9, 4, 8, 4, 104, 6, 17, 11, 14, 6, 4, 16, 8, 8, 5, 8, 6, 8, 6, 6, 10, 4, 3, 10, 6, 9, 10, 4, 9, 4, 4, 362, 6, 7, 5, 18, 8, 6, 6, 10, 8, 246, 8, 4, 16, 4, 10, 6, 6, 9, 17, 6, 12, 7, 6, 7, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
termination = MathOptInterface.INFEASIBLE
objective_value = 0.010689973084786392
