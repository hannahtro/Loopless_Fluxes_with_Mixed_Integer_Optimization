┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECED1_1282
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECED1_1282
----------------------------------
number of metabolites : 1929
number of reactions : 2706
number of genes : 1279

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 81
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2706 flux variables and 5021 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 2, 16, 17, 17, 16, 17, 16, 13, 16, 12, 11, 17, 11, 11, 11, 13, 13, 14, 13, 14, 13, 13, 4, 2, 14, 3, 8, 2, 2, 5, 2, 2, 2, 7, 4, 2, 64, 151, 2]
length(C_list) = 40
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 3, 4, 2, 3, 3, 2, 5, 4, 2, 4, 5, 3, 4, 3, 4, 2, 147, 5, 3, 19, 137]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 2, 4, 6, 5, 20, 5, 3, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 2, 3, 2, 4, 18, 5, 4, 2, 5, 46, 3, 5, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 4, 4, 4, 19, 3, 5, 18]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 2, 2, 6, 4, 4, 150]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 3, 4, 6, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 3, 3, 3, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 34, 3, 4, 4, 8, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 68]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [16, 10, 21, 21, 22, 21, 29, 21, 18, 21, 16, 16, 17, 16, 16, 16, 11, 14, 10, 20, 14, 21, 14, 12, 94, 14, 10, 16, 7, 3, 12, 16, 3, 35, 14, 12, 23, 4, 3, 2, 10, 41, 15, 40, 135, 15, 10]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 4, 4, 53, 4, 8, 4, 14, 5, 5, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 7, 4, 4, 6, 5, 4, 89, 4, 35, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 7, 3, 4, 5, 7, 4, 5, 10, 8, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824635474407863
thermo_feasible = true
