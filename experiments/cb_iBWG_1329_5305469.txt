┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iBWG_1329
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iBWG_1329
----------------------------------
number of metabolites : 1949
number of reactions : 2741
number of genes : 1329

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 11, 11, 11, 11, 11, 11, 11, 3, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 3, 16, 16, 55, 2, 2, 7, 3, 3, 71, 2, 21, 16, 17, 4, 2, 7, 3, 7, 49, 10, 3, 7, 10, 3, 75, 6, 2, 6, 12, 13, 12, 3, 2]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 4, 2, 4, 4, 4, 2, 3, 3, 3, 5, 2, 5, 5, 8, 3, 3, 3, 3, 13, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 3, 2, 4, 3, 5, 2, 4, 2, 2, 8, 2, 7, 7, 4, 69, 5, 17, 4, 85, 30, 5]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 6, 3, 3, 4, 5, 82, 3, 28, 4, 22, 4, 5, 4, 93, 4, 5, 2]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 2, 3, 2, 4, 6, 8, 4, 7, 4, 4, 4, 4, 4, 4, 3, 67, 43, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 3, 11, 53, 5, 10, 11, 3, 12, 4, 4, 7, 4, 8, 21, 34, 21]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 3, 2, 38]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 17, 5, 27]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 4, 10, 22, 5, 8, 4, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 3, 3, 5, 5, 17, 5, 4, 4, 5, 6, 158, 20, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 20, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 5, 4, 4, 5, 4, 8, 5, 4, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 3, 5, 10, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 11, 4, 4, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 60, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 4, 5, 4, 4, 6, 4, 4, 4, 6, 5, 4, 5, 4, 8, 5, 4, 4, 4, 4, 27, 4, 4, 4, 92, 5, 8, 5, 23, 5, 6, 6, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 51, 68, 8, 9, 9, 3, 11, 9, 9, 9, 11, 4, 10, 7, 11, 9, 9, 9, 9, 9, 4, 5, 5, 4, 8, 12]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [10, 7, 8, 12, 12, 12, 12, 13, 15, 12, 18, 25, 17, 18, 17, 19, 18, 17, 14, 15, 15, 14, 15, 14, 16, 9, 14, 14, 22, 9, 7, 8, 15, 15, 17, 15, 14, 14, 8, 12, 17, 29, 14, 10, 8, 15, 14, 15, 7, 7, 8, 8, 7, 68, 11, 39, 7, 9, 7, 70, 8, 7, 8, 10, 8, 9, 108, 8, 7, 16, 10, 140, 10, 10]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 20
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824798622780706
thermo_feasible = true
