ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEKO11_1354
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEKO11_1354
----------------------------------
number of metabolites : 1972
number of reactions : 2778
number of genes : 1354

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2778 flux variables and 5165 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 2, 3, 2, 2, 2, 2, 4, 2, 2, 3, 4, 3, 2, 53, 2, 4, 167, 3, 18, 3, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 3, 2, 3, 4, 4, 5, 5, 3, 2, 140, 5, 3, 3, 4, 2, 4, 4, 3, 3, 183, 3, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 4, 4, 6, 4, 3, 4, 4, 4, 4, 2, 3, 3, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 3, 3, 5, 4, 3, 3, 13, 2, 7, 47, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 3, 6, 3, 3, 4, 126, 191, 2, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 2, 2, 4, 5, 6, 4, 4, 4, 2, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 2, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 6, 370, 3, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660063
thermo_feasible = true
