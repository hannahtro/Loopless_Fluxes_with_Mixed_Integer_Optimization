┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1344_C
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1344_C
----------------------------------
number of metabolites : 1934
number of reactions : 2726
number of genes : 1344

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2726 flux variables and 5108 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 2, 2, 3, 6, 2, 3, 5, 4, 3, 2, 2, 4, 3, 206, 3, 12, 2, 3, 97, 4, 2, 3, 4, 11, 3, 3, 4, 3, 4, 4, 2, 2, 2, 2, 10, 3, 5, 3, 2, 2, 2, 31, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 2, 5, 3, 4, 4, 4, 5, 5, 2, 3, 5, 3, 2, 4, 3, 3, 4, 3, 3, 4, 4, 5, 4, 16, 5, 3, 240, 236, 2, 3, 44, 67, 67, 15, 6, 139, 2, 70]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 4, 34, 4, 4, 2, 5, 3, 3, 4, 4, 5, 9, 5, 5, 226, 12, 6, 5, 13, 4, 4, 5, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 5, 5, 3, 4, 3, 2, 188, 3, 3, 3, 2, 2, 5, 3, 25, 4, 4, 9, 5, 3, 6, 2, 2, 175, 2, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 2, 2, 2, 7, 7, 6, 153, 8, 6, 8, 8, 30, 9, 6, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 9, 6, 5, 9, 289, 9, 7, 12, 15, 9, 8, 19, 7, 4, 43, 68, 10, 3, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 5, 3, 4, 5, 4, 5, 4, 5, 4, 9, 4, 5, 5, 5, 5, 4, 5, 4, 80, 6, 4, 5, 12, 7, 5, 5, 4, 5, 4, 13, 4, 4, 5, 5, 6, 5, 6, 21, 51, 22, 10, 8, 5, 5, 5, 5, 4, 4, 11, 43, 8, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 4, 3, 4, 5, 77, 4, 4, 5, 9, 5, 6, 2, 45, 5, 250, 4, 5, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 16, 9, 3, 4, 4, 4, 64, 12, 12, 5, 5, 6, 4, 9, 13, 9, 9, 5, 7, 6, 5, 10, 78, 3, 12, 92, 94, 5, 4, 15, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 63, 10, 9, 6, 9, 9, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 5, 6, 6, 8, 43, 6, 5, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823963461343045
thermo_feasible = true
