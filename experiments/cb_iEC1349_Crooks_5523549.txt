┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1349_Crooks
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1349_Crooks
----------------------------------
number of metabolites : 1946
number of reactions : 2756
number of genes : 1349

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5168 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 11, 11, 11, 11, 11, 18, 17, 17, 2, 20, 20, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 249, 106, 14, 2]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 11, 11, 11, 11, 11, 11, 11, 17, 22, 17, 2, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 87, 14, 3, 133]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 2, 11, 11, 11, 11, 11, 11, 11, 17, 17, 17, 2, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 14, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 12, 11, 11, 17, 17, 17, 6, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 2, 3, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 11, 15, 11, 11, 11, 11, 11, 17, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 19, 14, 14, 14, 14, 14, 14, 15, 14, 16, 14, 2, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 23, 11, 11, 11, 11, 11, 18, 18, 18, 2, 18, 18, 18, 18, 15, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 2, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 11, 11, 11, 11, 11, 11, 20, 18, 18, 6, 18, 283, 18, 18, 15, 16, 15, 16, 15, 15, 15, 15, 15, 21, 15, 15, 15, 15, 15, 15, 15, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 11, 11, 11, 18, 17, 17, 2, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 15, 14, 14, 14, 14, 14, 14, 14, 14, 6, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 11, 13, 11, 11, 11, 11, 11, 3, 53, 6, 17, 4, 6, 20, 14, 11, 14, 6, 14, 14, 6, 14, 3, 7, 3, 8, 30, 15, 6, 6, 44, 14, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 11, 11, 11, 20, 20, 20, 3, 20, 20, 20, 20, 17, 17, 17, 17, 17, 20, 130, 17, 17, 17, 17, 17, 17, 17, 17, 17, 3, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 11, 11, 11, 11, 11, 11, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 14, 16, 14, 14, 8, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 8, 11, 11, 11, 11, 11, 11, 11, 20, 20, 20, 6, 20, 20, 20, 20, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 20, 17, 3, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 11, 11, 11, 11, 11, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 17, 15, 16, 15, 15, 15, 15, 3, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 11, 11, 16, 11, 11, 11, 11, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 15, 14, 15, 14, 14, 14, 14, 14, 15, 30, 15, 14, 14, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 12, 137, 11, 16, 11, 11, 12, 17, 17, 21, 7, 17, 17, 21, 17, 14, 14, 14, 14, 16, 14, 14, 14, 14, 14, 14, 14, 14, 20, 14, 15, 17, 14, 3, 6, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 13, 6, 17, 11, 12, 11, 11, 17, 11, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 50, 14, 14, 14, 15, 14, 15, 15, 14, 15, 129, 16, 14, 14, 14, 14, 14, 14, 7, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 11, 13, 11, 135, 11, 17, 17, 19, 17, 22, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 14, 6, 50]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 2, 2, 2, 2, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 21
termination = MathOptInterface.OPTIMAL
objective_value = 0.9865790399334345
thermo_feasible = true
