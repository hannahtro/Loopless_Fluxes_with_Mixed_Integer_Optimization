┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECDH1ME8569_1439
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECDH1ME8569_1439
----------------------------------
number of metabolites : 1950
number of reactions : 2755
number of genes : 1439

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2755 flux variables and 5119 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 38, 14, 13, 13, 3, 3, 3, 4]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 11, 15, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 38, 14, 13, 13, 3, 15, 2, 3, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [14, 11, 11, 11, 11, 11, 11, 11, 2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 77, 15, 14, 14, 2, 17, 3, 3, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 12, 11, 11, 11, 15, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 37, 14, 13, 14, 15, 3, 13, 8, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 34, 12, 11, 12, 11, 11, 16, 19, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 37, 14, 13, 13, 2, 14, 2, 2, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 11, 11, 12, 11, 11, 2, 17, 19, 19, 17, 18, 17, 17, 14, 14, 17, 14, 39, 15, 15, 14, 15, 2, 14, 3, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 57, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 37, 14, 13, 13, 6, 3, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 12, 11, 11, 11, 11, 11, 11, 11, 7, 19, 19, 21, 20, 20, 19, 19, 16, 16, 17, 16, 41, 17, 16, 16, 5, 3, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 11, 11, 11, 32, 11, 16, 11, 6, 19, 16, 17, 21, 17, 16, 16, 13, 16, 14, 13, 77, 14, 14, 13, 13, 7, 15, 13, 3, 5, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 12, 11, 11, 11, 11, 11, 7, 16, 16, 17, 17, 17, 16, 16, 13, 14, 14, 15, 37, 14, 13, 13, 13, 13, 4, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 11, 11, 14, 11, 13, 11, 15, 19, 19, 20, 19, 20, 21, 20, 16, 16, 17, 20, 40, 17, 16, 16, 11, 16, 36, 8, 6, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 37, 14, 13, 13, 6, 26, 10, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 6, 18, 11, 11, 11, 11, 11, 16, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 37, 14, 13, 13, 7, 15, 7, 6, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 2, 3, 3, 2, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 5, 8, 3, 3, 8, 3, 5, 3, 7, 137, 2, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 6, 5, 16, 3, 9, 5, 2, 6, 6, 4, 6, 5, 6, 6, 4, 4, 5, 5, 5, 6, 4, 9, 8, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 6, 6, 6, 4, 7, 10, 4, 3, 5, 4, 4, 6, 4, 4, 5, 5, 7, 10, 4, 18, 5, 2, 7, 4, 6, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 4, 3, 3, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 5, 2, 6, 5, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 5, 4, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 5, 3, 5, 4, 4, 4, 9, 7, 45]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 19, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 24
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785243762075
thermo_feasible = true
