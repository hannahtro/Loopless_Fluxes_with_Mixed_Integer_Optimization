┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcE24377_1341
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcE24377_1341
----------------------------------
number of metabolites : 1972
number of reactions : 2763
number of genes : 1341

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 111
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2763 flux variables and 5135 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 28, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 18, 16, 16, 17, 19, 17, 16, 16, 11, 11, 16, 11, 11, 11, 11, 12, 7, 4, 16, 2, 2, 7, 3, 2, 6, 2, 2, 3, 71, 3, 3, 3, 6, 2, 73, 6, 12, 12, 12, 12, 112, 2]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 4, 2, 4, 3, 4, 5, 3, 5, 3, 3, 3, 4, 5, 5, 11, 3, 2, 4, 3, 4, 76, 14, 4, 16, 3, 121]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 3, 4, 3, 7, 4, 2, 3, 3, 22, 2, 8, 10, 5, 12, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 5, 6, 5, 3, 4, 3, 36, 2, 4, 5, 5, 4, 5, 3, 9, 2, 5, 5, 62, 8, 5, 5, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 3, 3, 6, 4, 3, 3, 5, 7, 6, 3, 3, 2, 8, 2, 3, 9, 20, 4, 76, 4, 4, 7, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 4, 6, 3, 3, 4, 2, 4, 6, 4, 31, 3, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 2, 3, 18, 4, 3, 23, 2, 2, 7, 2, 4, 11, 4, 30, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 5, 4, 4, 3, 4, 4, 4, 4, 8, 6, 6, 4, 8, 4, 5, 8, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4, 3, 4, 5, 10, 7, 5, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 5, 8, 24, 9, 9, 6, 2, 7, 25, 7, 10, 10, 13, 9, 7, 9, 11, 9, 11, 8, 8, 8, 9, 9, 11, 3, 10, 12, 4, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 4, 3, 8, 5, 50, 8, 5, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824786962201494
thermo_feasible = true
