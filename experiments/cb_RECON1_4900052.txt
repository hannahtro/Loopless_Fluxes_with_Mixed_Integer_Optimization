ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 36
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 7, 134, 9, 6, 2, 7, 6, 10, 5, 2, 6, 5, 19, 2, 7, 10, 5, 10, 4, 5, 5, 6, 3, 4, 8, 3, 4, 7, 2, 5, 5, 3, 58, 2, 7, 4, 7, 4, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [15, 7, 8, 8, 6, 6, 5, 10, 11, 8, 7, 7, 106, 4, 5, 3, 9, 7, 6, 8, 6, 5, 2, 7, 3, 53, 9, 27, 5, 5, 3, 7, 5, 21, 4, 7, 4, 4, 7, 18, 7, 9, 15, 31, 7, 4, 7, 7, 22]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 4, 7, 6, 4, 4, 4, 5, 4, 8, 5, 8, 8, 6, 6, 14, 9, 5, 5, 259, 27, 5, 4, 4, 4, 5, 4, 5, 10, 9, 6, 5, 5, 4, 119, 4, 3, 4, 12, 9, 3, 5, 9, 5, 7, 4, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 6, 6, 3, 3, 4, 7, 8, 7, 6, 4, 8, 4, 7, 23, 23, 4, 9, 5, 413, 5, 7, 12, 4, 5, 7, 4, 3, 5, 5, 4, 127, 6, 5, 8, 10, 6, 15, 18, 5, 5, 135, 5, 7, 7, 9, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 5, 6, 4, 3, 7, 6, 9, 9, 4, 163, 8, 3, 4, 6, 7, 10, 6, 48, 16, 8, 7, 9, 48, 4, 5, 4, 10, 9, 4, 8, 4, 28, 6, 4, 5, 8, 8, 6, 6, 9, 587, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 5, 5, 10, 4, 4, 7, 4, 7, 4, 8, 8, 72, 6, 228, 4, 6, 7, 6, 8, 3, 24, 8, 10, 8, 4, 9, 4, 62, 5, 4, 8, 4, 419, 9, 4, 4, 89, 6, 3, 5, 103, 9, 4, 3, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 6, 6, 6, 6, 4, 7, 7, 6, 4, 4, 4, 4, 401, 5, 406, 4, 7, 5, 5, 7, 3, 4, 4, 5, 5, 4, 6, 492, 6, 4, 8, 6, 4, 8, 4, 4, 4, 6, 7, 4, 8, 5, 4, 7, 8, 6, 6, 7, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 2, 6, 2, 6, 2, 58, 5, 5, 35, 5, 3, 54, 4, 5, 6, 4, 7, 3, 6, 7, 6, 5, 5, 4, 4, 5, 2, 6, 6, 119, 4, 5, 7, 4, 7, 5, 7, 4, 7, 10, 7, 4, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [9, 6, 2, 7, 11, 7, 4, 8, 10, 4, 9, 10, 6, 5, 4, 5, 7, 3, 6, 5, 4, 6, 7, 3, 4, 5, 6, 5, 7, 11, 6, 5, 4, 8, 6, 318, 8, 7, 211, 6, 4, 6, 6, 9, 6, 7, 8, 7, 8, 4, 7, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 6, 4, 50, 8, 5, 5, 6, 4, 6, 4, 9, 5, 4, 4, 3, 7, 9, 5, 6, 3, 9, 397, 9, 240, 505, 35, 6, 7, 199, 4, 4, 3, 6, 7, 10, 8, 4, 9, 3, 5, 27, 7, 7, 15, 97, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 8, 6, 9, 6, 4, 9, 4, 4, 4, 8, 4, 10, 5, 3, 11, 9, 5, 4, 10, 44, 7, 7, 4, 5, 8, 5, 4, 4, 9, 6, 12, 7, 6, 9, 7, 6, 4, 4, 5, 12, 6, 5, 5, 43]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 10, 12, 4, 4, 5, 4, 8, 10, 8, 8, 5, 4, 6, 166, 5, 7, 238, 4, 455, 6, 6, 7, 9, 6, 6, 13, 14, 5, 7, 19, 5, 7, 19, 7, 6, 4, 4, 11, 5, 6, 16, 8, 4, 6, 6, 5, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 7, 4, 4, 5, 4, 9, 4, 7, 4, 5, 16, 5, 9, 113, 7, 9, 9, 7, 5, 15, 8, 122, 11, 4, 4, 6, 4, 6, 7, 6, 10, 10, 4, 9, 5, 5, 9, 6, 5, 7, 6, 5, 5, 9, 4, 10, 5, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 7, 11, 7, 5, 6, 4, 8, 4, 6, 6, 11, 10, 4, 13, 12, 11, 7, 14, 11, 14, 6, 9, 4, 4, 11, 5, 5, 6, 4, 7, 4, 7, 6, 3, 9, 8, 7, 6, 5, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 4, 7, 14, 6, 7, 6, 5, 4, 6, 4, 5, 4, 4, 5, 6, 7, 9, 8, 4, 10, 4, 11, 4, 12, 5, 4, 11, 3, 8, 5, 4, 6, 10, 5, 6, 5, 6, 6, 5, 4, 4, 4, 7, 6, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [10, 8, 5, 7, 4, 10, 8, 3, 4, 6, 4, 10, 9, 5, 7, 13, 5, 10, 4, 5, 8, 3, 5, 6, 6, 4, 9, 3, 4, 6, 6, 5, 8, 4, 3, 5, 6, 4, 3, 5, 8, 7, 4, 6, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 5, 11, 5, 2, 12, 4, 10, 12, 11, 3, 4, 5, 5, 10, 9, 5, 10, 3, 18, 9, 10, 6, 5, 9, 6, 372, 4, 7, 4, 5, 11, 10, 4, 11, 5, 20, 6, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 4, 6, 6, 5, 6, 10, 4, 4, 5, 8, 4, 18, 6, 3, 5, 6, 7, 4, 7, 6, 8, 6, 5, 222, 7, 7, 17, 5, 3, 7, 4, 4, 7, 4, 4, 6, 5, 4, 8, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 6, 6, 5, 6, 3, 4, 6, 6, 6, 7, 5, 6, 6, 6, 7, 6, 5, 6, 4, 6, 6, 4, 5, 4, 4, 5, 8, 6, 6, 6, 8, 5, 6, 7, 4, 5, 4, 5, 4, 7, 5, 4, 5, 6, 9, 5, 100, 9, 115, 5, 333]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 5, 7, 4, 7, 4, 4, 5, 6, 6, 3, 12, 7, 5, 7, 8, 5, 8, 8, 92, 8, 5, 4, 6, 5, 5, 6, 7, 6, 5, 8, 4, 7, 4, 4, 23, 5, 4, 39, 5, 7, 7, 6, 6, 4, 4, 7, 6, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 5, 6, 8, 7, 7, 10, 5, 10, 4, 6, 9, 5, 4, 4, 6, 5, 6, 5, 7, 6, 4, 10, 5, 11, 8, 4, 6, 4, 279, 9, 12, 7, 4, 11, 9, 10, 5, 3, 361, 7, 8, 9, 5, 5, 10, 7, 9, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 13, 7, 4, 4, 4, 4, 6, 6, 4, 4, 12, 4, 5, 8, 7, 4, 13, 6, 5, 5, 5, 7, 7, 4, 4, 3, 6, 6, 10, 6, 4, 585, 4, 49, 11, 3, 11, 7, 4, 4, 8, 6, 8, 8, 6, 9, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 13, 4, 4, 6, 7, 4, 4, 4, 5, 4, 42, 21, 8, 10, 134, 8, 8, 4, 11, 6, 52, 4, 9, 9, 6, 3, 7, 9, 8, 7, 3, 7, 15, 4, 5, 9, 5, 7, 5, 9, 10, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 4, 5, 4, 7, 6, 6, 4, 7, 8, 7, 7, 7, 3, 4, 6, 5, 10, 10, 6, 8, 4, 6, 5, 187, 4, 8, 52, 4, 13, 4, 8, 6, 268, 10, 4, 4, 23, 4, 7, 7, 9, 56, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [17, 6, 9, 9, 9, 3, 4, 11, 9, 4, 6, 6, 4, 159, 4, 10, 10, 6, 3, 4, 4, 3, 17, 8, 7, 89, 20, 9, 9, 4, 3, 9, 7, 25, 238, 8, 10, 19, 15, 4, 8, 6, 5, 10, 5, 36, 8, 4, 4, 4, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [15, 5, 6, 6, 5, 6, 6, 5, 4, 5, 5, 9, 12, 6, 43, 6, 32, 6, 49, 8, 6, 7, 90, 8, 11, 4, 8, 10, 8, 9, 449, 10, 4, 13, 10, 3, 211, 8, 7, 5, 6, 5, 4, 402]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 11, 12, 4, 7, 6, 5, 4, 7, 5, 8, 4, 5, 8, 5, 68, 5, 5, 4, 13, 50, 3, 9, 6, 4, 7, 10, 6, 14, 159, 8, 136, 8, 6, 5, 321, 9, 8, 8, 4, 5, 10, 6, 6, 9, 10, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [14, 4, 9, 4, 4, 12, 9, 12, 11, 8, 4, 4, 5, 9, 8, 8, 6, 9, 6, 4, 5, 8, 6, 16, 8, 11, 4, 6, 7, 10, 6, 6, 7, 4, 3, 5, 9, 3, 7, 9, 11, 4, 11, 10, 8, 5, 3, 7, 9, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 7, 10, 4, 8, 4, 6, 9, 7, 10, 6, 4, 7, 7, 10, 27, 5, 5, 9, 10, 10, 4, 11, 27, 6, 5, 9, 7, 7, 4, 10, 44, 5, 6, 9, 5, 10, 8, 5, 8, 10, 3, 4, 6, 4, 5, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 5, 3, 6, 6, 6, 4, 5, 7, 6, 5, 4, 4, 5, 25, 5, 37, 7, 11, 7, 10, 6, 9, 4, 13, 15, 9, 8, 7, 6, 9, 8, 3, 7, 16, 4, 5, 3, 3, 6, 8, 6, 170, 8, 4, 6, 6, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 3, 5, 6, 4, 6, 6, 5, 4, 3, 7, 5, 6, 7, 4, 6, 7, 4, 4, 7, 9, 9, 4, 5, 142, 5, 9, 4, 8, 6, 6, 261, 4, 5, 9, 8, 6, 5, 5, 9, 4, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 5, 3, 7, 7, 5, 5, 7, 4, 5, 5, 334, 37, 14, 4, 5, 5, 6, 6, 4, 4, 14, 4, 381, 4, 8, 4, 5, 7, 55, 6, 5, 7, 7, 4, 12, 5, 4, 6, 6, 4, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 6, 6, 13, 8, 8, 5, 4, 6, 10, 4, 6, 234, 7, 7, 6, 7, 4, 5, 5, 7, 4, 5, 3, 5, 7, 37, 12, 8, 9, 4, 6, 7, 10, 7, 6, 6, 11, 4, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 4, 15, 8, 4, 4, 9, 6, 8, 8, 11, 4, 7, 11, 5, 6, 6, 6, 5, 8, 4, 13, 6, 6, 9, 26, 5, 6, 8, 8, 52, 5, 5, 73, 4, 8, 6, 13, 6, 5, 9, 7, 8, 6, 10, 323, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 5, 4, 8, 3, 7, 4, 4, 8, 5, 53, 7, 308, 4, 4, 7, 4, 4, 6, 8, 5, 3, 8, 8, 8, 9, 5, 176, 7, 12, 12, 10, 14, 4, 5, 7, 8, 5, 6, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 7, 4, 10, 6, 9, 4, 5, 4, 70, 6, 6, 5, 7, 4, 4, 3, 4, 7, 7, 6, 9, 4, 6, 8, 5, 8, 3, 6, 4, 4, 3, 6, 3, 4, 7, 13, 5, 65, 6, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 4, 7, 4, 4, 4, 3, 13, 6, 9, 7, 9, 6, 8, 7, 3, 11, 4, 3, 7, 6, 7, 4, 6, 12, 4, 4, 4, 8, 9, 9, 7, 9, 7, 5, 8, 7, 6, 5, 4, 4, 6, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [7, 3, 8, 3, 5, 3, 6, 5, 6, 4, 75, 4, 5, 8, 7, 6, 6, 7, 10, 5, 4, 9, 6, 7, 8, 7, 10, 4, 4, 4, 6, 3, 9, 5, 167, 4, 4, 7, 134, 11, 5, 4, 16, 4, 6, 5, 13, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [12, 7, 8, 4, 4, 11, 5, 5, 5, 5, 12, 4, 5, 8, 6, 10, 11, 4, 4, 7, 9, 4, 11, 4, 12, 3, 4, 10, 12, 5, 7, 4, 4, 4, 5, 4, 107]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 4, 3, 3, 5, 4, 4, 13, 5, 6, 5, 6, 3, 5, 6, 5, 4, 10, 4, 3, 6, 6, 5, 7, 9, 6, 4, 8, 6, 4, 7, 18, 4, 5, 5, 6, 5, 10, 8, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [13, 12, 4, 4, 4, 5, 4, 4, 4, 394, 4, 8, 4, 4, 6, 6, 4, 4, 4, 11, 7, 4, 5, 7, 6, 8, 5, 5, 5, 21, 4, 8, 10, 4, 8, 6, 6, 6, 16, 7, 4, 39, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 5, 5, 8, 6, 4, 4, 7, 11, 8, 4, 4, 10, 5, 5, 6, 4, 3, 6, 6, 106, 5, 4, 14, 7, 5, 5, 5, 6, 4, 6, 4, 19, 5, 6, 6, 5, 70, 4, 8, 4, 7, 6, 6, 5, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 9, 5, 7, 5, 3, 5, 5, 4, 7, 7, 5, 6, 4, 4, 6, 7, 3, 5, 7, 4, 21, 3, 8, 29, 11, 6, 5, 5, 12, 4, 4, 4, 3, 3, 4, 3, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 4, 5, 4, 5, 7, 4, 4, 5, 4, 4, 5, 6, 10, 7, 8, 4, 8, 7, 5, 7, 6, 11, 5, 4, 4, 5, 5, 6, 8, 5, 5, 5, 15, 91, 4, 7, 6, 6, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [19, 5, 4, 4, 4, 7, 5, 4, 5, 4, 5, 9, 4, 15, 5, 3, 4, 3, 6, 5, 4, 55, 6, 8, 5, 5, 4, 7, 12, 6, 3, 6, 3, 4, 5, 5, 7, 8, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 5, 8, 8, 7, 7, 3, 8, 9, 7, 4, 372, 3, 4, 6, 10, 5, 7, 10, 6, 4, 9, 149, 11, 7, 7, 4, 6, 5, 4, 7, 7, 11, 9, 5, 4, 5, 7, 4, 7, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 4, 5, 3, 5, 4, 4, 5, 5, 5, 4, 4, 58, 6, 3, 163, 4, 5, 27, 6, 6, 5, 6, 4, 4, 33, 6, 10, 5, 263, 4, 6, 8, 5, 5, 7, 5, 4, 5, 7, 10, 299]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 4, 9, 4, 6, 5, 6, 4, 5, 8, 4, 4, 7, 8, 5, 6, 195, 5, 5, 6, 4, 4, 5, 12, 15, 8, 6, 18, 4, 6, 6, 7, 3, 5, 9, 8, 5, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 6, 4, 4, 7, 8, 5, 5, 4, 6, 6, 8, 5, 5, 5, 70, 6, 5, 4, 5, 6, 6, 437, 8, 9, 4, 3, 7, 6, 5, 14, 4, 12, 7, 6, 6, 5, 4, 7, 8, 7, 9, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 5, 4, 3, 4, 4, 4, 7, 4, 3, 10, 5, 4, 7, 5, 5, 5, 100, 4, 39, 4, 89, 7, 4, 114, 11, 6, 5, 5, 11, 3, 4, 8, 7, 10, 5, 4, 5, 4, 44, 3, 11, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 6, 3, 5, 4, 5, 7, 8, 7, 7, 6, 7, 52, 6, 14, 7, 7, 7, 6, 4, 6, 4, 11, 5, 7, 4, 36, 316, 9, 8, 6, 5, 4, 4, 9, 6, 3, 360, 7, 5, 33, 3, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 4, 6, 5, 8, 6, 5, 5, 7, 7, 101, 3, 5, 7, 426, 7, 5, 6, 8, 5, 7, 5, 8, 4, 9, 4, 5, 5, 6, 3, 10, 7, 4, 7, 7, 5, 12, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [16, 4, 6, 10, 12, 4, 7, 6, 8, 5, 4, 171, 6, 4, 5, 5, 3, 5, 5, 9, 4, 3, 7, 4, 5, 5, 7, 5, 265, 8, 5, 6, 8, 4, 6, 6, 8, 5, 5, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 4, 5, 7, 8, 9, 6, 7, 8, 11, 24, 14, 7, 5, 4, 6, 4, 5, 553, 5, 8, 4, 7, 89, 4, 6, 8, 8, 3, 8, 3, 7, 7, 6, 4, 3, 7, 57, 5, 4, 7, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 4, 5, 7, 4, 9, 9, 5, 8, 5, 8, 6, 5, 8, 11, 6, 4, 4, 4, 10, 8, 9, 10, 3, 4, 10, 152, 5, 5, 255, 8, 4, 6, 7, 4, 10, 452, 6, 5, 75, 6, 9, 6, 6, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 9, 4, 8, 5, 4, 5, 5, 7, 3, 6, 4, 6, 7, 3, 22, 4, 4, 10, 12, 5, 6, 4, 5, 5, 5, 7, 21, 5, 5, 3, 7, 8, 4, 4, 6, 5, 4, 28, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 8, 81, 5, 5, 9, 8, 3, 3, 9, 4, 3, 5, 9, 69, 4, 5, 4, 7, 6, 5, 5, 4, 4, 3, 4, 5, 3, 7, 4, 294, 4, 5, 7, 53, 6, 4, 4, 7, 5, 6, 46, 8, 11, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [3, 4, 18, 5, 5, 9, 5, 14, 12, 4, 6, 9, 4, 8, 13, 5, 12, 6, 6, 6, 7, 6, 8, 19, 16, 4, 13, 5, 4, 6, 374, 5, 10, 6, 6, 114, 12, 10]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 6, 10, 5, 4, 6, 5, 4, 4, 5, 9, 6, 27, 5, 9, 99, 14, 7, 11, 4, 4, 11, 41, 5, 3, 11, 37, 8, 13, 6, 5, 10, 10, 11, 5, 4, 446, 10, 11, 9, 13, 12]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [13, 7, 4, 4, 4, 4, 7, 5, 7, 4, 6, 10, 3, 8, 11, 6, 9, 26, 3, 8, 130, 6, 6, 5, 5, 4, 6, 5, 8, 7, 5, 5, 6, 5, 14, 4, 7, 3, 17, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 5, 5, 4, 7, 3, 5, 5, 5, 295, 7, 9, 8, 5, 7, 10, 9, 9, 4, 8, 9, 6, 5, 6, 7, 5, 13, 5, 7, 9, 6, 5, 254, 14, 4, 5, 3, 5, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 9, 9, 7, 4, 269, 10, 3, 9, 11, 8, 8, 11, 5, 15, 4, 5, 10, 12, 11, 16, 4, 8, 9, 4, 10, 10, 32, 7, 5, 9, 11, 8, 11, 13, 12, 8, 4, 6, 4, 9, 12, 11, 3, 23, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [14, 9, 9, 10, 8, 4, 24, 5, 9, 10, 4, 9, 7, 3, 9, 8, 12, 5, 5, 10, 4, 5, 6, 4, 7, 6, 6, 7, 6, 8, 4, 8, 10, 11, 4, 7, 9, 6, 7, 5, 10, 8, 9, 7, 7, 7, 8, 12, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [2, 7, 12, 6, 8, 5, 7, 5, 5, 9, 5, 13, 7, 11, 3, 8, 13, 8, 6, 9, 9, 7, 5, 11, 6, 11, 11, 10, 4, 4, 4, 11, 25, 5, 4, 9, 5, 9, 197, 276, 8, 11, 65, 10, 13, 103]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 6, 3, 7, 5, 10, 4, 7, 4, 10, 6, 8, 6, 8, 7, 5, 7, 11, 7, 10, 5, 13, 11, 6, 8, 6, 8, 8, 8, 7, 8, 14, 32, 7, 4, 4, 8, 7, 11, 9, 6, 10, 13, 9, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 10, 13, 10, 8, 4, 9, 8, 12, 4, 5, 9, 12, 8, 5, 7, 3, 9, 9, 8, 8, 13, 9, 4, 10, 5, 7, 14, 6, 12, 5, 18, 10, 9, 8, 4, 8, 6, 7, 10, 11, 9, 11, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 11, 6, 4, 12, 3, 5, 8, 7, 7, 5, 7, 4, 37, 7, 10, 36, 66, 7, 4, 3, 8, 10, 10, 14, 5, 15, 6, 4, 4, 13, 5, 4, 7, 285, 4, 7, 7, 11, 6, 4, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 6, 7, 7, 11, 5, 13, 4, 5, 5, 7, 4, 5, 8, 4, 6, 319, 110, 13, 5, 123, 12, 4, 7, 165, 18, 11, 10, 19, 8, 15, 12, 4, 47, 4, 10, 4, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [15, 6, 4, 5, 5, 4, 4, 4, 3, 3, 8, 8, 10, 16, 4, 4, 6, 8, 6, 7, 11, 6, 6, 4, 117, 3, 6, 5, 10, 9, 6, 3, 8, 16, 4, 4, 4, 4, 321, 4, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [8, 6, 12, 11, 10, 10, 5, 4, 82, 4, 3, 9, 9, 13, 4, 7, 12, 11, 7, 5, 4, 18, 4, 13, 6, 10, 6, 8, 4, 4, 5, 4, 4, 9, 3, 70, 21, 4, 214, 5, 172, 11, 9, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [24, 9, 6, 6, 8, 5, 4, 5, 14, 6, 8, 13, 9, 6, 8, 6, 9, 8, 9, 27, 12, 11, 7, 7, 9, 4, 7, 9, 5, 6, 4, 12, 12, 9, 144, 8, 6, 5, 5, 3, 8, 7, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 5, 8, 5, 11, 4, 8, 7, 4, 4, 6, 5, 8, 7, 6, 6, 10, 4, 6, 5, 8, 7, 4, 5, 7, 4, 9, 9, 5, 4, 7, 3, 8, 11, 201, 7, 6, 8, 3, 3, 3, 8, 4, 8, 8, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [9, 8, 5, 8, 3, 5, 12, 4, 9, 5, 8, 4, 3, 7, 4, 4, 9, 9, 6, 451, 5, 10, 8, 5, 12, 11, 4, 5, 5, 7, 10, 9, 6, 3, 7, 96, 5, 4, 3, 4, 4, 4, 9, 5, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 15, 10, 7, 8, 9, 7, 9, 11, 4, 8, 7, 6, 11, 10, 4, 4, 13, 4, 9, 10, 8, 107, 4, 7, 8, 8, 6, 153, 6, 10, 6, 7, 5, 6, 4, 9, 4, 6, 89, 11, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 5, 6, 5, 8, 14, 5, 6, 6, 7, 7, 3, 7, 10, 5, 148, 6, 8, 4, 7, 10, 6, 8, 6, 8, 4, 6, 25, 8, 9, 13, 8, 8, 7, 7, 8, 299, 7, 4, 6, 10, 9, 6, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [12, 5, 8, 4, 7, 7, 10, 7, 6, 10, 112, 8, 7, 5, 11, 8, 7, 3, 319, 4, 8, 9, 7, 9, 4, 255, 5, 76, 9, 8, 4, 4, 7, 5, 4, 8, 6, 9, 4, 8, 50, 7, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [14, 6, 9, 10, 9, 5, 7, 8, 8, 5, 9, 7, 6, 9, 4, 269, 525, 7, 6, 10, 6, 4, 7, 5, 9, 10, 583, 213, 4, 5, 10, 8, 4, 12, 4, 41, 8, 5, 12, 4, 117, 4, 5, 7, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [12, 10, 8, 8, 6, 10, 10, 7, 10, 13, 9, 11, 8, 5, 9, 4, 4, 7, 11, 9, 4, 243, 7, 8, 6, 21, 10, 112, 6, 3, 148, 13, 12, 5, 5, 33, 14, 5, 284, 7, 4, 14, 5, 7, 19, 164, 7, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [6, 6, 14, 6, 14, 4, 9, 8, 8, 8, 20, 11, 3, 7, 376, 7, 6, 13, 7, 4, 13, 9, 128, 3, 12, 4, 7, 3, 14, 13, 4, 4, 8, 328, 116, 8, 4, 4, 5, 310, 12, 4, 17, 9, 8, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 10, 5, 13, 3, 4, 5, 4, 13, 4, 8, 3, 66, 11, 5, 11, 4, 4, 19, 4, 4, 7, 5, 4, 76, 4, 5, 6, 357, 4, 7, 17, 5, 6, 4, 87, 7, 4, 9, 12, 7, 480]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [6, 5, 11, 3, 8, 7, 7, 9, 6, 4, 3, 10, 6, 15, 6, 12, 10, 13, 5, 6, 8, 6, 358, 138, 4, 11, 6, 4, 10, 6, 4, 9, 13, 4, 12, 10, 28, 9, 3, 6, 4, 8, 4, 4, 8, 6, 7, 8, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 6, 3, 9, 8, 18, 8, 8, 6, 193, 7, 4, 60, 5, 5, 5, 7, 9, 7, 418, 10, 28, 8, 7, 3, 7, 4, 4, 14, 35, 9, 14, 18, 8, 5, 4, 4, 10, 8, 11, 4, 8, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [8, 5, 10, 7, 6, 7, 6, 10, 8, 6, 6, 12, 5, 8, 9, 6, 7, 4, 526, 6, 7, 50, 16, 4, 7, 7, 4, 10, 4, 5, 10, 4, 55, 10, 388, 9, 8, 4, 4, 6, 5, 8, 9, 5, 11, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [22, 7, 4, 6, 9, 4, 10, 8, 10, 11, 7, 7, 17, 9, 4, 4, 124, 15, 92, 4, 7, 12, 16, 8, 4, 6, 260, 80, 9, 24, 10, 18, 10, 16, 9, 10, 4, 79, 4, 8, 8, 7, 7, 59, 13, 14]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 3, 4, 6, 5, 4, 15, 8, 5, 220, 8, 8, 4, 6, 4, 4, 79, 6, 5, 14, 5, 6, 4, 4, 12, 4, 619, 6, 10, 19, 122, 5, 6, 4, 7, 7, 8, 7, 4, 12]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [22, 3, 8, 10, 5, 9, 11, 133, 8, 5, 5, 4, 7, 9, 8, 8, 4, 7, 9, 3, 44, 6, 4, 9, 4, 11, 32, 8, 10, 8, 5, 3, 7, 7, 6, 7, 14, 8, 8, 41, 5, 6, 26, 8, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 7, 7, 5, 5, 4, 8, 27, 8, 9, 5, 10, 9, 14, 10, 4, 3, 6, 4, 4, 11, 18, 9, 4, 6, 11, 5, 33, 9, 7, 6, 7, 7, 7, 12, 6, 4, 16, 6, 5, 9, 6, 12, 10, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [7, 12, 16, 6, 9, 11, 11, 6, 4, 6, 6, 5, 7, 4, 6, 4, 5, 5, 67, 5, 4, 4, 9, 3, 8, 4, 8, 7, 5, 5, 11, 10, 5, 4, 4, 19, 8, 4, 8, 4, 8, 10, 5, 13, 4, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [6, 3, 12, 7, 18, 6, 9, 11, 4, 4, 11, 231, 159, 4, 11, 7, 10, 4, 9, 8, 9, 5, 4, 4, 4, 3, 9, 6, 4, 12, 124, 5, 4, 45, 4, 10, 5, 9, 7, 11, 4, 20, 10, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [13, 5, 6, 3, 6, 9, 5, 7, 7, 4, 10, 3, 4, 7, 5, 452, 4, 19, 11, 5, 311, 4, 10, 10, 11, 4, 4, 8, 6, 6, 147, 13, 19, 4, 17, 11, 4, 23, 46, 9, 7, 10, 5, 4, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [11, 7, 3, 6, 5, 8, 6, 4, 6, 5, 6, 10, 8, 4, 4, 9, 8, 5, 7, 7, 4, 73, 9, 6, 14, 7, 8, 6, 8, 11, 5, 16, 12, 15, 8, 9, 7, 6, 13, 6, 5, 6, 9, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [16, 8, 10, 10, 239, 10, 12, 7, 10, 9, 11, 11, 7, 85, 14, 9, 4, 8, 10, 11, 209, 4, 9, 14, 9, 11, 11, 8, 12, 9, 5, 10, 121, 12, 26, 5, 8, 12, 6, 11, 11, 8, 42, 27, 53]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 10, 11, 11, 36, 5, 11, 7, 7, 9, 9, 11, 4, 3, 7, 4, 10, 10, 12, 9, 9, 13, 8, 7, 43, 8, 3, 12, 9, 8, 10, 13, 12, 13, 10, 7, 84, 10, 8, 10, 14, 7, 10, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [9, 10, 18, 3, 11, 7, 221, 9, 4, 8, 10, 4, 9, 8, 8, 9, 10, 4, 6, 4, 11, 31, 7, 4, 11, 4, 55, 9, 8, 9, 23, 22, 6, 10, 10, 6, 6, 8, 6, 8, 13, 6, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 13, 7, 10, 7, 7, 4, 16, 6, 6, 9, 5, 6, 5, 9, 8, 8, 6, 7, 4, 7, 6, 9, 58, 8, 5, 7, 9, 6, 7, 8, 16, 6, 5, 5, 8, 7, 9, 9, 10, 12, 5, 14, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 8, 10, 4, 8, 4, 7, 9, 8, 4, 5, 6, 7, 15, 11, 5, 6, 8, 8, 12, 8, 432, 4, 9, 9, 7, 6, 7, 11, 5, 10, 10, 7, 4, 7, 9, 6, 7, 7, 7, 11, 7, 6, 5, 7, 7, 6, 7, 5, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 8, 11, 6, 7, 9, 8, 5, 7, 4, 10, 6, 5, 4, 6, 5, 4, 7, 4, 4, 7, 13, 367, 12, 4, 5, 17, 12, 3, 75, 11, 5, 8, 7, 11, 139, 9, 22, 8, 7, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [5, 11, 8, 7, 10, 6, 9, 7, 11, 8, 95, 6, 4, 7, 6, 4, 21, 7, 11, 11, 242, 11, 4, 4, 8, 5, 8, 6, 32, 7, 16, 6, 7, 63, 4, 6, 14, 4, 8, 6, 10, 9, 6, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 7, 6, 9, 5, 7, 8, 12, 7, 9, 7, 9, 5, 11, 10, 4, 13, 6, 13, 41, 11, 7, 10, 127, 15, 6, 8, 10, 6, 10, 13, 6, 10, 6, 202, 10, 15, 11, 10, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [2, 11, 10, 10, 10, 5, 11, 5, 5, 7, 10, 382, 7, 385, 12, 6, 8, 5, 5, 13, 9, 9, 13, 4, 9, 7, 21, 11, 6, 6, 12, 7, 6, 4, 8, 8, 23, 7, 6, 159, 498, 9, 116, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 5, 11, 11, 7, 9, 3, 4, 7, 15, 4, 215, 5, 11, 4, 4, 3, 7, 7, 322, 10, 15, 6, 6, 11, 8, 58, 5, 6, 10, 9, 9, 12, 12, 4, 10, 9, 12, 9, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [3, 9, 10, 6, 9, 7, 20, 8, 8, 27, 9, 6, 9, 3, 4, 6, 10, 8, 11, 6, 6, 8, 8, 11, 167, 12, 7, 7, 10, 4, 16, 243, 4, 9, 6, 13, 4, 13, 33, 12, 11, 14, 8, 15, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 4, 9, 7, 3, 10, 8, 4, 9, 6, 13, 7, 56, 4, 6, 8, 105, 4, 6, 11, 4, 7, 7, 5, 6, 12, 7, 4, 8, 10, 9, 4, 6, 7, 7, 5, 7, 7, 14, 11, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 10, 7, 9, 7, 6, 10, 10, 109, 4, 8, 4, 10, 5, 4, 5, 382, 4, 7, 12, 9, 241, 9, 4, 6, 5, 10, 6, 4, 10, 53, 4, 11, 4, 4, 6, 53, 8, 15, 8, 6, 215]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 8, 6, 6, 8, 4, 5, 10, 9, 7, 204, 9, 4, 4, 76, 115, 7, 5, 7, 132, 13, 7, 8, 12, 4, 5, 18, 9, 11, 11, 10, 6, 9, 97, 6, 11, 8, 11, 8, 26, 6, 35, 75]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [2, 10, 4, 6, 6, 9, 5, 8, 59, 19, 10, 21, 8, 325, 8, 9, 9, 7, 8, 4, 12, 7, 4, 10, 9, 103, 14, 10, 116, 5, 79, 10, 12, 10, 9, 6, 6, 9, 10, 10, 11, 167, 10, 7, 7, 57, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 6, 10, 8, 11, 7, 10, 4, 9, 16, 11, 12, 9, 9, 11, 33, 8, 9, 8, 10, 9, 10, 6, 9, 49, 9, 12, 75, 3, 9, 14, 6, 15, 9, 3, 11, 8, 5, 135, 32]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [6, 5, 11, 3, 4, 4, 4, 4, 3, 4, 6, 14, 7, 6, 8, 5, 6, 279, 16, 13, 4, 6, 4, 4, 9, 50, 4, 5, 11, 11, 5, 4, 296, 10, 13, 3, 6, 9, 4, 6, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [15, 10, 5, 10, 5, 6, 6, 3, 5, 8, 5, 9, 8, 8, 10, 7, 8, 4, 4, 6, 37, 11, 14, 5, 5, 3, 7, 14, 5, 5, 14, 6, 5, 6, 7, 5, 14, 8, 8, 5, 187, 11, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [2, 5, 11, 4, 7, 7, 7, 13, 5, 8, 9, 7, 11, 214, 7, 6, 10, 7, 4, 6, 7, 5, 4, 7, 4, 4, 642, 12, 4, 11, 6, 547, 12, 4, 8, 453, 74, 289, 7, 11, 6, 11, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 8, 12, 4, 10, 4, 9, 10, 4, 7, 11, 5, 12, 8, 7, 7, 14, 10, 11, 10, 4, 13, 215, 15, 11, 13, 10, 10, 244, 29, 40, 12, 10, 8, 6, 4, 12, 8, 4, 4, 53]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 7, 7, 5, 12, 4, 6, 7, 6, 13, 52, 548, 8, 9, 12, 8, 4, 5, 8, 8, 3, 3, 6, 4, 11, 11, 5, 4, 124, 4, 8, 4, 9, 3, 3, 6, 5, 11, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 4, 10, 4, 13, 8, 8, 12, 3, 8, 8, 12, 10, 4, 6, 7, 4, 7, 12, 5, 9, 10, 7, 7, 12, 11, 12, 6, 13, 10, 9, 9, 8, 13, 10, 10, 11, 9, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [8, 7, 9, 10, 10, 11, 11, 7, 11, 16, 13, 11, 10, 12, 7, 7, 9, 3, 9, 9, 12, 14, 4, 4, 8, 8, 8, 172, 9, 5, 27, 5, 9, 7, 11, 8, 10, 9, 11, 9, 21, 9, 168, 4, 11, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 163, 9, 9, 9, 12, 7, 9, 9, 9, 11, 171, 11, 8, 17, 6, 13, 13, 10, 14, 5, 8, 8, 229, 9, 7, 12, 7, 8, 22, 12, 5, 20, 4, 4, 7, 4, 18, 10, 6, 6, 11, 3]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 4, 6, 7, 10, 17, 9, 5, 9, 7, 4, 7, 9, 3, 9, 5, 6, 7, 5, 6, 6, 436, 8, 5, 6, 8, 5, 9, 4, 4, 12, 8, 6, 7, 8, 7, 9, 8, 6, 8, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 9, 13, 9, 9, 7, 84, 7, 3, 4, 7, 4, 6, 13, 10, 4, 8, 9, 9, 3, 6, 201, 6, 6, 5, 10, 11, 5, 4, 7, 9, 4, 7, 11, 5, 5, 7, 19, 12, 59, 5, 12, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 8, 6, 7, 6, 9, 8, 9, 10, 9, 7, 10, 11, 29, 11, 8, 11, 8, 8, 5, 4, 404, 14, 11, 10, 11, 461, 8, 11, 7, 15, 7, 4, 7, 11, 40, 4, 8, 106, 10, 159, 14, 13, 25, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 9, 5, 4, 4, 6, 7, 6, 10, 11, 4, 11, 12, 64, 29, 9, 9, 3, 8, 11, 9, 11, 8, 28, 7, 23, 5, 20, 9, 9, 10, 10, 4, 9, 4, 8, 8, 11, 4, 7, 20, 9, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 8, 8, 9, 7, 198, 4, 5, 7, 13, 10, 6, 11, 5, 10, 11, 4, 7, 5, 345, 8, 5, 5, 4, 10, 10, 615, 9, 4, 3, 9, 27, 9, 6, 8, 10, 4, 170, 4, 12, 9, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
[4, 11, 7, 4, 8, 7, 13, 5, 12, 5, 4, 7, 38, 12, 10, 9, 8, 9, 5, 7, 3, 6, 9, 9, 10, 9, 7, 5, 12, 4, 184, 11, 9, 3, 11, 3, 35, 4, 3, 37, 9, 32, 9, 19, 10, 12, 4, 18]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 8, 8, 7, 7, 9, 4, 10, 8, 3, 5, 134, 9, 7, 6, 7, 4, 3, 8, 12, 11, 3, 11, 7, 7, 4, 6, 6, 5, 3, 6, 8, 4, 4, 11, 3, 14, 7, 47, 6, 5, 7, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [5, 6, 9, 5, 9, 10, 6, 9, 7, 11, 9, 7, 11, 9, 7, 4, 6, 4, 5, 7, 7, 3, 7, 8, 9, 4, 8, 7, 5, 4, 8, 9, 11, 4, 26, 8, 3, 8, 4, 9, 3, 5, 6, 7, 10, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 6, 11, 6, 9, 4, 5, 6, 8, 8, 10, 9, 7, 8, 6, 4, 6, 4, 7, 7, 6, 3, 38, 4, 13, 5, 7, 11, 9, 49, 4, 6, 4, 6, 3, 8, 5, 8, 9, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 10, 8, 5, 6, 4, 12, 9, 9, 4, 6, 10, 4, 4, 4, 3, 6, 7, 7, 3, 12, 9, 5, 29, 6, 4, 4, 6, 4, 11, 4, 6, 5, 4, 6, 4, 4, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [11, 4, 11, 9, 3, 7, 4, 8, 13, 12, 3, 9, 8, 9, 8, 10, 4, 4, 8, 3, 5, 10, 9, 3, 25, 13, 3, 4, 3, 4, 20, 11, 10, 9, 4, 4, 10, 4, 4, 4, 10, 6, 10, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 5, 9, 5, 9, 4, 6, 12, 8, 4, 7, 8, 6, 156, 69, 5, 28, 3, 4, 7, 3, 6, 7, 4, 9, 7, 8, 16, 17, 53, 10, 4, 45, 4, 8, 6, 10, 4, 5, 4, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 5, 9, 10, 9, 7, 9, 10, 11, 5, 6, 16, 11, 13, 4, 7, 8, 13, 8, 215, 5, 9, 4, 7, 6, 7, 12, 7, 7, 11, 488, 11, 11, 17, 9, 6, 7, 4, 9, 8, 10, 18, 3, 332, 8, 9, 11, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [19, 5, 11, 9, 10, 12, 11, 10, 15, 11, 3, 12, 11, 10, 9, 5, 9, 4, 6, 20, 12, 4, 9, 8, 6, 9, 4, 13, 10, 7, 13, 8, 7, 55, 62, 10, 3, 106, 66, 25, 83, 14, 17, 16, 4, 7, 8, 13, 18, 7, 10]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 8, 4, 6, 7, 7, 7, 8, 4, 11, 10, 9, 11, 3, 16, 4, 7, 4, 12, 8, 18, 15, 14, 5, 5, 12, 10, 9, 7, 29, 5, 9, 32, 12, 7, 6, 6, 10, 6, 7, 9, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [2, 13, 12, 49, 12, 12, 12, 12, 10, 6, 3, 20, 11, 12, 9, 5, 11, 11, 9, 9, 13, 10, 8, 10, 10, 12, 9, 31, 363, 10, 10, 11, 19, 13, 10, 278, 6, 11, 9, 11, 14, 7, 9, 10, 9, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [6, 4, 9, 6, 7, 7, 9, 11, 4, 16, 3, 16, 4, 12, 11, 11, 20, 6, 6, 4, 9, 8, 4, 7, 4, 11, 4, 5, 417, 17, 10, 6, 7, 16, 9, 11, 12, 120, 14, 411, 12, 9, 14, 10, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 14, 17, 11, 7, 5, 3, 7, 17, 5, 11, 7, 7, 8, 6, 4, 7, 41, 8, 9, 11, 4, 9, 5, 12, 21, 9, 16, 10, 12, 7, 12, 17, 7, 12, 9, 23, 252, 7, 12, 610, 13, 10, 15, 12, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 9, 8, 7, 9, 9, 25, 12, 9, 9, 41, 6, 10, 7, 7, 7, 3, 8, 8, 9, 8, 6, 6, 4, 11, 6, 7, 9, 3, 8, 12, 9, 11, 7, 37, 12, 121, 4, 9, 3, 6, 5, 6, 7, 5, 4, 8, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 5, 10, 6, 4, 6, 9, 6, 6, 6, 5, 6, 13, 7, 5, 7, 6, 6, 10, 8, 11, 7, 5, 11, 11, 10, 7, 9, 9, 12, 6, 8, 3, 15, 13, 66, 9, 6, 7, 4, 5, 3, 11, 13, 10, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [10, 6, 137, 6, 4, 93, 6, 4, 6, 6, 6, 4, 4, 5, 12, 6, 6, 3, 6, 6, 6, 12, 10, 9, 11, 6, 6, 6, 12, 6, 6, 6, 10, 6, 8, 10, 11, 11, 9, 6, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 9, 8, 7, 6, 4, 5, 9, 7, 10, 7, 4, 8, 4, 7, 11, 4, 5, 6, 7, 9, 3, 7, 6, 7, 8, 23, 9, 8, 12, 6, 7, 6, 56, 3, 8, 4, 7, 4, 10, 6, 183]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 8, 8, 11, 8, 7, 6, 8, 6, 9, 7, 7, 7, 7, 11, 9, 9, 10, 6, 6, 5, 32, 7, 15, 9, 8, 10, 10, 12, 10, 9, 10, 10, 9, 11, 10, 9, 8, 6, 6, 6, 5, 6, 9, 6, 7, 17]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 8, 7, 9, 5, 6, 4, 11, 12, 11, 12, 366, 56, 11, 9, 9, 7, 10, 8, 4, 10, 9, 11, 4, 9, 12, 8, 10, 5, 22, 21, 9, 8, 10, 4, 11, 31, 7, 40, 8, 9, 9, 4, 6, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 10, 10, 9, 11, 4, 4, 5, 8, 10, 12, 12, 14, 378, 8, 9, 8, 7, 9, 4, 8, 8, 9, 11, 7, 12, 10, 7, 4, 11, 6, 8, 21, 11, 10, 6, 7, 11, 9, 13, 10, 9, 6, 5, 13, 4, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 4, 8, 4, 4, 9, 6, 4, 4, 6, 7, 236, 11, 4, 11, 7, 4, 6, 5, 5, 9, 6, 212, 15, 7, 6, 11, 7, 7, 6, 17, 9, 6, 66, 3, 12, 12, 7, 8, 8, 6, 11, 157]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [12, 9, 7, 12, 6, 7, 7, 9, 8, 11, 25, 10, 9, 11, 23, 10, 8, 6, 10, 6, 438, 5, 57, 8, 17, 8, 6, 12, 8, 7, 18, 7, 8, 40, 8, 3, 46, 10, 11, 3, 4, 9, 6, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [9, 9, 5, 7, 6, 4, 5, 12, 13, 5, 6, 10, 46, 8, 5, 5, 5, 6, 5, 17, 6, 5, 8, 5, 9, 4, 8, 6, 11, 9, 3, 50, 5, 5, 7, 4, 6, 6, 6, 10, 4, 7, 10, 7, 7, 10, 6, 7, 6, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [11, 5, 7, 9, 3, 13, 4, 5, 4, 12, 10, 12, 9, 11, 6, 11, 6, 18, 8, 14, 15, 364, 9, 21, 4, 11, 9, 216, 10, 8, 9, 14, 11, 4, 7, 8, 8, 8, 15, 14, 12, 10, 24, 7, 10, 5, 10, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [6, 10, 6, 6, 7, 3, 5, 10, 7, 4, 8, 13, 7, 4, 8, 4, 5, 8, 9, 9, 8, 7, 7, 6, 59, 7, 5, 6, 239, 336, 7, 9, 125, 4, 4, 6, 6, 10, 9, 24, 9, 6, 10, 4, 7, 9, 6, 6, 7, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [5, 8, 5, 8, 8, 11, 8, 5, 9, 13, 30, 9, 5, 4, 7, 7, 9, 4, 9, 10, 13, 8, 13, 6, 6, 3, 8, 9, 6, 148, 10, 8, 15, 11, 6, 6, 13, 16, 6, 12, 60, 16, 5, 7, 8, 50, 8, 4, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [14, 8, 5, 11, 7, 10, 4, 6, 9, 4, 7, 4, 9, 10, 7, 5, 7, 6, 13, 7, 13, 4, 5, 4, 4, 9, 7, 7, 7, 8, 7, 10, 6, 3, 7, 9, 6, 292, 6, 12, 5, 6, 9, 8, 6, 7, 250, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [8, 11, 9, 9, 8, 10, 11, 5, 5, 12, 8, 5, 4, 7, 10, 243, 5, 8, 16, 9, 8, 7, 7, 5, 24, 9, 6, 8, 9, 11, 521, 9, 9, 6, 12, 3, 14, 9, 10, 6, 9, 6, 8, 10, 7, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 7, 6, 6, 4, 7, 6, 6, 6, 11, 8, 6, 155, 6, 8, 9, 16, 15, 9, 13, 6, 10, 7, 7, 6, 7, 10, 7, 4, 6, 10, 8, 8, 9, 5, 5, 7, 18, 8, 8, 4, 7, 6, 31, 7, 9, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 6, 7, 7, 9, 4, 11, 11, 4, 8, 3, 8, 5, 9, 7, 17, 93, 6, 16, 10, 10, 3, 8, 6, 7, 10, 7, 12, 6, 7, 10, 8, 8, 9, 6, 9, 6, 13, 6, 6, 6, 8, 4, 9, 18, 12, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 10, 12, 7, 7, 8, 13, 6, 10, 31, 5, 10, 4, 5, 4, 6, 9, 6, 17, 6, 5, 16, 266, 4, 6, 9, 11, 29, 10, 522, 12, 9, 8, 8, 10, 20, 7, 10, 10, 156, 6, 16, 4, 58, 6, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [12, 4, 13, 5, 5, 14, 4, 9, 9, 4, 12, 16, 6, 10, 7, 4, 216, 19, 2, 11, 19, 16, 9, 84, 15, 8, 17, 2, 14, 9, 11, 19, 8, 25, 11, 5, 2, 6, 9, 4, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 9, 4, 4, 6, 5, 4, 13, 6, 6, 8, 5, 6, 8, 19, 14, 11, 6, 14, 5, 9, 5, 4, 6, 3, 7, 5, 9, 28, 13, 38, 11, 4, 152, 6, 7, 4, 12]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 6, 11, 11, 6, 9, 8, 10, 176, 6, 9, 9, 14, 11, 10, 48, 15, 10, 7, 10, 8, 10, 5, 10, 8, 6, 16, 323, 5, 4, 8, 8, 10, 6, 4, 11, 12, 12, 31, 5, 6, 10, 6, 6, 11, 10, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [9, 15, 9, 8, 10, 4, 5, 10, 12, 18, 10, 9, 9, 6, 6, 12, 10, 7, 9, 7, 8, 7, 10, 9, 15, 7, 22, 7, 11, 9, 5, 6, 14, 7, 50, 8, 9, 6, 7, 8, 13, 39, 10, 9, 6, 14, 8, 13, 9, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 7, 6, 7, 9, 10, 7, 13, 6, 7, 14, 9, 9, 7, 7, 8, 9, 68, 4, 24, 7, 9, 10, 8, 9, 10, 7, 9, 8, 7, 6, 9, 7, 10, 4, 6, 8, 6, 8, 8, 7, 11, 8, 9, 3]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [13, 7, 14, 9, 6, 8, 13, 11, 4, 11, 11, 11, 11, 9, 7, 9, 12, 9, 4, 10, 10, 10, 9, 4, 6, 11, 5, 6, 6, 5, 8, 10, 7, 11, 9, 6, 8, 6, 6, 8, 9, 8, 8, 9, 12, 9, 8, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [11, 7, 12, 9, 12, 5, 11, 10, 10, 10, 9, 12, 7, 11, 13, 4, 9, 3, 305, 6, 4, 5, 11, 4, 8, 9, 11, 6, 6, 5, 13, 6, 3, 7, 9, 11, 3, 9, 9, 8, 6, 10, 10, 13, 8, 9, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 7, 8, 7, 6, 4, 3, 10, 7, 11, 3, 7, 3, 8, 7, 8, 7, 213, 9, 43, 11, 8, 12, 9, 13, 8, 6, 9, 2, 10, 7, 404, 7, 7, 8, 7, 8, 9, 4, 3, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 4, 7, 15, 7, 8, 5, 9, 6, 11, 10, 7, 7, 4, 18, 8, 19, 7, 9, 7, 10, 12, 4, 9, 13, 8, 10, 12, 7, 5, 8, 5, 9, 3, 6, 13, 6, 5, 20, 6, 9, 7, 6, 9, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [14, 6, 4, 7, 4, 3, 12, 5, 9, 12, 11, 9, 11, 4, 117, 7, 9, 7, 5, 9, 4, 4, 4, 4, 12, 5, 4, 67, 10, 6, 7, 9, 9, 9, 8, 8, 9, 101, 9, 7, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [9, 9, 5, 11, 4, 9, 9, 14, 5, 6, 13, 6, 8, 12, 12, 11, 9, 6, 25, 4, 11, 4, 9, 46, 98, 11, 6, 9, 11, 13, 12, 4, 13, 9, 50, 9, 4, 5, 9, 6, 8, 9, 9, 8, 7, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 5, 8, 12, 4, 6, 8, 11, 10, 12, 10, 8, 7, 7, 10, 4, 5, 9, 10, 8, 482, 13, 12, 15, 5, 11, 7, 7, 13, 6, 5, 6, 6, 6, 9, 11, 10, 9, 8, 11, 10, 12, 8, 119]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [8, 7, 9, 10, 5, 8, 11, 5, 6, 17, 10, 8, 10, 4, 11, 10, 45, 4, 10, 9, 12, 9, 10, 8, 41, 175, 10, 8, 5, 12, 8, 6, 7, 8, 22, 281, 7, 6, 9, 8, 7, 8, 9, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [10, 9, 16, 9, 9, 7, 10, 9, 9, 4, 12, 7, 8, 8, 8, 4, 10, 11, 10, 6, 9, 8, 8, 9, 4, 10, 7, 7, 4, 5, 4, 11, 9, 8, 11, 8, 7, 14, 6, 7, 4, 9, 4, 11, 13, 270, 4, 7, 7, 8, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [21, 4, 5, 7, 6, 7, 6, 5, 6, 8, 10, 6, 6, 5, 9, 5, 4, 7, 5, 3, 7, 10, 18, 9, 5, 17, 11, 8, 6, 7, 8, 9, 5, 8, 6, 7, 5, 8, 10, 7, 6, 6, 5, 9, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [9, 7, 8, 6, 9, 7, 7, 8, 6, 13, 7, 244, 7, 10, 9, 6, 7, 9, 11, 6, 13, 10, 7, 10, 7, 9, 8, 9, 11, 5, 6, 7, 10, 4, 8, 8, 11, 4, 4, 6, 11, 9, 5, 8, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 9, 8, 4, 7, 5, 4, 10, 9, 5, 4, 4, 10, 8, 19, 6, 9, 7, 7, 11, 7, 9, 101, 7, 10, 9, 4, 6, 12, 45, 8, 7, 7, 11, 96, 7, 8, 2, 6, 5, 67, 5, 13, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [13, 9, 3, 6, 7, 7, 8, 9, 5, 5, 4, 8, 11, 3, 7, 12, 13, 6, 6, 13, 7, 9, 6, 6, 7, 8, 7, 5, 12, 8, 13, 8, 9, 7, 7, 8, 4, 5, 68, 17, 11, 8, 9, 11, 13, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 8, 4, 4, 8, 8, 10, 12, 11, 7, 9, 12, 14, 9, 8, 10, 8, 9, 4, 19, 10, 8, 5, 12, 6, 19, 6, 8, 10, 8, 4, 9, 12, 11, 16, 7, 10, 62, 10, 8, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 8, 13, 7, 7, 10, 7, 4, 11, 9, 5, 5, 5, 9, 8, 9, 9, 10, 10, 5, 10, 4, 6, 10, 6, 9, 3, 7, 10, 10, 6, 4, 10, 6, 7, 10, 7, 5, 18, 4, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 7, 5, 8, 8, 9, 4, 4, 7, 6, 5, 5, 5, 6, 13, 314, 9, 7, 7, 11, 8, 6, 6, 9, 12, 99, 8, 4, 9, 9, 9, 25, 7, 4, 6, 9, 9, 11, 33, 8, 9, 7, 94, 3, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 4, 11, 6, 8, 12, 4, 12, 6, 10, 4, 4, 8, 6, 11, 9, 17, 7, 8, 12, 9, 5, 8, 78, 9, 5, 4, 11, 10, 9, 6, 8, 11, 5, 8, 7, 8, 7, 9, 7, 9, 4, 8, 10, 8, 6, 7, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [8, 10, 7, 5, 7, 9, 9, 4, 6, 7, 13, 9, 8, 99, 5, 4, 13, 9, 4, 6, 6, 6, 8, 11, 10, 7, 6, 3, 12, 9, 119, 8, 10, 3, 9, 7, 280, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [5, 10, 9, 4, 6, 13, 13, 14, 11, 12, 6, 4, 9, 10, 3, 4, 8, 22, 10, 9, 6, 10, 10, 3, 10, 5, 12, 8, 4, 6, 10, 4, 4, 6, 7, 13, 4, 10, 8, 11, 10, 4, 6, 4, 10, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [12, 8, 4, 4, 12, 7, 6, 5, 7, 15, 6, 32, 14, 15, 10, 329, 4, 9, 6, 4, 14, 9, 7, 9, 10, 9, 10, 4, 5, 12, 7, 6, 10, 12, 4, 5, 14, 51, 4, 4, 4, 5, 6, 10, 4, 9, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [8, 6, 13, 8, 7, 8, 7, 10, 13, 11, 7, 8, 9, 4, 7, 436, 12, 6, 9, 16, 2, 6, 8, 6, 5, 8, 10, 281, 12, 4, 4, 11, 6, 7, 12, 7, 7, 8, 11, 3, 8, 4, 8, 9, 16, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 4, 10, 10, 4, 7, 10, 4, 4, 10, 3, 398, 13, 4, 10, 10, 9, 19, 17, 10, 6, 4, 4, 5, 9, 4, 15, 11, 5, 17]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 8, 4, 4, 4, 11, 6, 5, 27, 4, 369, 6, 7, 7, 8, 8, 4, 9, 7, 10, 8, 10, 2, 3, 10, 10, 7, 16, 10, 5, 9, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [7, 10, 8, 4, 4, 19, 4, 9, 6, 8, 10, 7, 9, 9, 6, 7, 9, 12, 7, 4, 5, 4, 9, 8, 101, 13, 8, 8, 11, 8, 7, 4, 6, 15, 9, 7, 5, 6, 7, 5, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 7, 7, 4, 9, 6, 3, 4, 10, 15, 185, 9, 6, 7, 105, 8, 8, 384, 11, 24, 8, 11, 9, 7, 3, 11, 5, 9, 6, 7, 8, 9, 9, 10, 8, 6, 8, 7, 9, 8, 8, 12, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 9, 6, 8, 7, 4, 6, 9, 12, 7, 8, 8, 6, 7, 10, 9, 6, 11, 6, 17, 7, 9, 6, 10, 10, 3, 5, 9, 10, 7, 44, 6, 9, 7, 11, 10, 10, 10, 12, 12, 8, 10, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [5, 10, 5, 4, 5, 4, 75, 6, 6, 12, 4, 231, 5, 6, 4, 14, 12, 5, 14, 10, 6, 10, 3, 5, 4, 7, 212, 6, 6, 14, 8, 3, 5, 9, 15, 13, 7, 8, 19, 12, 14]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 8, 7, 3, 16, 8, 8, 11, 8, 6, 5, 10, 7, 7, 6, 63, 182, 2, 6, 5, 10, 8, 4, 3, 5, 10, 10, 10, 4, 10, 12, 13, 7, 11, 11, 8, 10, 10, 20, 10, 7, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 5, 6, 10, 30, 6, 7, 11, 4, 7, 5, 9, 10, 6, 4, 3, 4, 9, 7, 9, 6, 4, 4, 6, 10, 6, 8, 9, 13, 8, 6, 8, 6, 7, 7, 6, 9, 10, 9, 5, 10, 7, 23, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [15, 6, 9, 9, 5, 7, 8, 10, 5, 9, 9, 9, 6, 10, 5, 9, 7, 7, 397, 12, 7, 8, 10, 7, 5, 10, 64, 390, 10, 7, 7, 8, 4, 11, 7, 7, 6, 9, 4, 7, 9, 6, 8, 10, 5, 8, 5, 6, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 7, 6, 10, 6, 7, 6, 5, 91, 8, 9, 8, 8, 8, 10, 30, 8, 5, 6, 6, 6, 5, 13, 6, 7, 6, 8, 11, 26, 9, 4, 9, 8, 4, 7, 10, 10, 8, 6, 7, 10, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 6, 7, 7, 8, 8, 9, 178, 5, 9, 7, 7, 259, 6, 6, 7, 9, 7, 9, 8, 8, 7, 7, 8, 9, 7, 7, 6, 7, 5, 7, 6, 5, 6, 6, 9, 7, 7, 7, 7, 7, 6, 7, 6, 3, 15]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [16, 6, 3, 4, 4, 5, 5, 5, 6, 5, 5, 4, 5, 5, 6, 4, 4, 4, 6, 4, 4, 3, 102, 6, 6, 11, 4, 5, 6, 12, 4, 5, 5, 23]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [10, 9, 11, 10, 5, 10, 11, 17, 10, 13, 10, 4, 5, 22, 5, 40, 7, 11, 11, 7, 11, 11, 6, 5, 7, 9, 7, 14, 6, 12, 5, 6, 11, 6, 9, 9, 148, 9, 4, 5, 8, 15, 11, 4, 257, 10, 7, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 7, 9, 6, 9, 5, 7, 6, 4, 9, 10, 5, 4, 11, 8, 12, 9, 11, 5, 6, 8, 11, 6, 4, 7, 6, 5, 16, 11, 13, 16, 6, 6, 5, 6, 5, 8, 7, 14, 6, 6, 7, 5, 8, 8, 5, 6, 8, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [9, 9, 6, 298, 13, 14, 151, 9, 13, 9, 7, 9, 8, 11, 8, 8, 447, 3, 14, 5, 16, 8, 10, 11, 9, 29, 8, 11, 9, 7, 11, 8, 11, 9, 9, 9, 7, 4, 12, 13, 10, 8, 5, 6, 12, 5, 8, 9, 10, 10, 10, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 8, 8, 7, 6, 6, 7, 6, 7, 7, 4, 6, 6, 8, 8, 7, 6, 7, 6, 6, 7, 8, 10, 7, 7, 6, 9, 7, 4, 4, 5, 7, 9, 13, 6, 6, 10, 8, 6, 8, 4, 9, 7, 10, 8, 5]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [5, 16, 10, 15, 10, 13, 10, 14, 11, 10, 8, 16, 9, 10, 11, 412, 17, 6, 9, 16, 4, 7, 4, 5, 10, 11, 10, 8, 11, 9, 5, 17, 15, 14, 8, 9, 8, 8, 5, 4, 18, 16, 11, 5, 9, 4, 11, 9, 9, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [18, 7, 10, 7, 10, 9, 7, 7, 3, 3, 10, 9, 7, 7, 9, 10, 8, 10, 12, 3, 10, 8, 226, 11, 4, 6, 9, 4, 7, 6, 80, 12, 11, 9, 5, 10, 9, 7, 5, 6, 6, 4, 6, 14, 3, 9, 5, 4, 6, 29]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [4, 8, 13, 6, 9, 10, 8, 14, 20, 8, 6, 6, 7, 6, 8, 10, 11, 4, 4, 8, 7, 5, 10, 7, 4, 14, 4, 9, 12, 7, 186, 10, 8, 4, 9, 4, 10, 151, 15, 12, 5, 12, 5, 5, 9, 8, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [4, 15, 16, 5, 3, 12, 10, 3, 15, 9, 12, 15, 5, 8, 4, 5, 4, 4, 4, 6, 5, 332, 10, 4, 8, 8, 5, 9, 12, 4, 10, 13, 10, 9, 12, 19, 10, 3, 6, 6, 11, 4, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 9, 11, 3, 3, 4, 10, 6, 9, 201, 4, 4, 9, 10, 6, 407, 11, 4, 6, 4, 6, 5, 4, 13, 10, 4, 9, 4, 4, 3, 4, 7, 6, 6, 4, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [12, 7, 8, 6, 9, 7, 4, 9, 6, 7, 9, 10, 9, 26, 6, 8, 26, 7, 11, 9, 37, 9, 69, 8, 4, 7, 12, 9, 8, 8, 8, 4, 8, 8, 7, 10, 5, 6, 7, 7, 7, 19, 7, 7, 4, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 7, 13, 7, 7, 10, 4, 7, 8, 3, 281, 10, 11, 8, 6, 11, 7, 7, 8, 8, 8, 9, 7, 8, 10, 6, 7, 9, 5, 5, 9, 9, 9, 13, 9, 7, 6, 10, 11, 10, 12, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 5, 3, 5, 6, 5, 10, 10, 8, 7, 7, 6, 7, 15, 6, 7, 8, 6, 7, 7, 8, 9, 6, 7, 8, 5, 5, 6, 7, 6, 10, 7, 5, 6, 5, 4, 10, 39, 6, 8, 5, 35, 7, 7, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 7, 4, 6, 5, 4, 5, 8, 8, 7, 6, 4, 6, 9, 6, 6, 9, 10, 7, 4, 11, 8, 4, 6, 6, 6, 4, 6, 10, 3, 9, 8, 2]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [17, 4, 8, 14, 9, 194, 15, 10, 10, 11, 17, 8, 11, 125, 3, 4, 11, 8, 12, 11, 12, 13, 2, 8, 36, 5, 7, 8, 5, 7, 8, 13, 11, 8, 12, 10, 14, 11, 8, 14, 11, 8, 9, 15, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [8, 10, 12, 11, 11, 6, 7, 6, 7, 6, 10, 10, 5, 2, 7, 10, 10, 6, 9, 11, 8, 11, 10, 7, 7, 5, 11, 11, 6, 8, 10, 9, 6, 8, 6, 6, 7, 7, 5, 52, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [14, 6, 8, 4, 7, 4, 9, 3, 8, 6, 6, 10, 9, 385, 8, 5, 4, 9, 9, 3, 9, 9, 9, 8, 9, 35, 3, 11, 6, 10, 8, 4, 6, 9, 11, 9, 4, 6, 10, 10, 17, 4, 3, 8, 8, 9, 3]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 7, 8, 15, 4, 6, 10, 7, 9, 4, 5, 5, 12, 7, 9, 5, 4, 4, 4, 4, 7, 9, 4, 8, 4, 7, 3, 8, 8, 10, 7, 8, 10, 9, 7, 199]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [6, 8, 9, 9, 4, 6, 9, 7, 11, 9, 10, 435, 11, 5, 9, 9, 10, 10, 8, 8, 6, 5, 7, 5, 6, 6, 5, 10, 5, 7, 7, 7, 8, 10, 10, 20, 10, 10, 5, 7, 7, 8, 6, 10, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 10, 11, 6, 10, 8, 7, 10, 7, 6, 6, 5, 4, 10, 4, 7, 7, 7, 6, 10, 8, 6, 5, 9, 8, 5, 8, 54, 4, 9, 7, 7, 8, 6, 30, 7, 5, 4, 6, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 9, 4, 6, 6, 4, 9, 10, 10, 9, 3, 4, 8, 7, 9, 12, 9, 4, 7, 9, 9, 9, 11, 9, 7, 11, 8, 7, 9, 13, 35, 10, 9, 8, 10, 9, 9, 12, 11, 5, 7, 9, 13, 10, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 6, 9, 9, 7, 8, 10, 6, 11, 10, 9, 8, 5, 9, 8, 12, 12, 6, 7, 8, 7, 6, 9, 10, 8, 6, 10, 8, 8, 7, 194, 5, 11, 7, 38, 13, 8, 8, 10, 6, 11, 10, 10, 8, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [16, 11, 6, 5, 4, 7, 5, 5, 12, 4, 7, 7, 6, 8, 10, 6, 5, 7, 13, 8, 18, 7, 8, 10, 3, 4, 303, 8, 9, 8, 6, 6, 7, 9, 6, 6, 9, 9, 4, 7, 3, 9, 7, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [3, 16, 14, 5, 14, 6, 6, 15, 15, 15, 284, 7, 14, 16, 16, 16, 496, 14, 17, 6, 16, 15, 15, 9, 19, 18, 8, 18, 14, 14, 21, 15, 17, 15, 13, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [8, 8, 3, 7, 5, 7, 7, 8, 8, 6, 7, 7, 6, 7, 7, 6, 9, 8, 5, 8, 9, 7, 6, 6, 6, 11, 7, 7, 7, 75, 8, 10, 8, 6, 6, 7, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [16, 7, 6, 9, 8, 7, 8, 7, 9, 9, 8, 10, 12, 7, 9, 12, 6, 21, 7, 7, 11, 7, 6, 22, 9, 6, 10, 8, 10, 9, 9, 6, 15, 7, 9, 10, 8, 8, 6, 6, 5, 10, 8, 8, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 9, 7, 4, 11, 7, 8, 11, 5, 4, 6, 11, 4, 5, 11, 10, 6, 10, 6, 4, 7, 6, 4, 5, 9, 5, 6, 6, 11, 4, 9, 7, 7, 9, 6, 7, 10, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 14, 17, 18, 6, 6, 5, 3, 9, 6, 15, 6, 5, 13, 5, 16, 7, 12, 13, 11, 9, 15, 8, 13, 6, 9, 12, 12, 134, 8, 9, 16, 6, 4, 13]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [10, 11, 4, 7, 3, 4, 6, 15, 10, 7, 4, 13, 4, 462, 4, 4, 7, 6, 4, 5, 16, 6, 7, 10, 3, 6, 4, 7, 7, 13, 7, 14, 6, 4, 6, 3, 10, 4, 2, 142, 14, 12]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 10, 5, 6, 3, 10, 8, 7, 4, 4, 5, 11, 18, 6, 7, 4, 3, 5, 5, 9, 119, 7, 8, 2, 7]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 18, 8, 4, 4, 11, 2, 9, 10, 14, 7, 11, 11, 5, 8, 18, 8, 5, 8, 5, 8, 18, 20, 5, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 5, 6, 4, 9, 4, 2, 9, 6, 6, 7, 8, 3, 6, 5, 4, 9, 9, 6, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 9, 10, 7, 9, 4, 9, 9, 7, 6, 7, 13, 7, 3, 7, 6, 8, 9, 8, 8, 9, 8, 4, 6, 4, 7, 68, 4, 9, 7, 8, 8, 6, 5, 5, 6, 5, 4, 8, 4, 7, 12, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 7, 7, 4, 7, 7, 5, 7, 6, 8, 12, 5, 5, 7, 8, 8, 6, 6, 7, 7, 7, 8, 4, 8, 12, 24, 8, 44, 6, 9, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 4, 4, 5, 3, 4, 257, 6, 6, 6, 150, 7, 6, 92, 2, 6, 4, 6, 420]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [10, 7, 4, 5, 4, 4, 6, 4, 4, 4, 6, 6, 9, 4, 4, 4, 7, 4, 3, 3, 4, 3, 5, 2, 4, 6, 8, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 4, 4, 3, 3, 8, 234, 3, 7, 2, 10, 12, 3, 4, 6, 9, 4, 4, 347, 6, 2, 18, 24, 4, 4, 9, 3, 363, 374, 4, 6, 5, 3]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 6, 3, 5, 3, 3, 3, 2, 4, 4, 17, 3, 4, 3, 8, 5, 3, 4, 7, 3, 4, 4, 4, 4, 688, 4, 4, 5, 85, 6, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [17, 4, 5, 3, 4, 3, 4, 21, 5, 4, 5, 3, 4, 6, 4, 3, 4, 3, 3, 3, 4, 5, 6, 3, 3, 4, 3, 3, 8, 4, 4, 3, 4, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 12, 3, 3, 3, 4, 4, 4, 3, 4, 4, 6, 4, 4, 3, 3, 4, 17, 64, 6, 5, 9, 5, 4, 29, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [12, 17, 3, 8, 3, 9, 4, 4, 6, 10, 15, 28]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [6, 8, 3, 7, 7, 4, 7, 6, 4, 4, 4, 12, 4, 5, 12, 6, 4, 3, 59, 4, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [4, 16, 10, 78, 6, 7, 14, 16, 10, 9, 8, 5, 20, 8, 18, 8, 5, 7, 5, 4, 16, 10, 5, 246, 316, 19, 108, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [23, 16, 16, 12, 16, 16, 24, 4, 24, 4, 16, 10, 12, 12, 6, 7, 11, 16, 10, 14, 30, 30, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [17, 24, 16, 7, 16, 19, 10, 16, 16, 23, 8, 17, 22, 21, 16, 16, 16, 21, 11, 21, 26, 20, 22, 16, 24, 22, 17, 18, 20]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [17, 24, 16, 20, 16, 16, 18, 16, 16, 20, 16, 320, 22, 22, 16, 16, 24, 23, 16, 24, 16, 18, 17, 20, 20, 18]
AssertionError("!(isempty(C_list_filtered))")
