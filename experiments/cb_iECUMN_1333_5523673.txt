┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECUMN_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECUMN_1333
----------------------------------
number of metabolites : 1935
number of reactions : 2740
number of genes : 1332

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2740 flux variables and 5089 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 11, 2, 7, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 15, 14, 119, 13, 14, 13, 14, 13, 14, 13]
length(C_list) = 2
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 11, 11, 11, 11, 11, 11, 11, 3, 2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 11, 11, 11, 11, 11, 11, 2, 4, 4, 16, 17, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 11, 11, 11, 11, 11, 37, 11, 2, 11, 16, 16, 17, 16, 19, 16, 16, 13, 13, 14, 13, 14, 13, 13, 22, 17, 13, 14, 95, 14, 13, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 11, 11, 11, 11, 12, 11, 6, 2, 2, 22, 19, 20, 19, 20, 19, 19, 16, 21, 17, 16, 17, 16, 16, 16, 18, 16, 16, 17, 16, 17, 21, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 2, 13, 13, 12, 11, 11, 11, 11, 3, 2, 19, 20, 20, 19, 20, 20, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 7, 2, 11, 20, 11, 11, 11, 11, 14, 3, 3, 2, 39, 16, 17, 16, 17, 16, 159, 13, 16, 14, 286, 14, 13, 13, 13, 13, 115, 14, 14, 14, 13, 14, 13, 13, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 11, 11, 11, 14, 11, 11, 11, 3, 8, 16, 16, 18, 16, 17, 16, 18, 22, 13, 14, 13, 14, 13, 13, 13, 13, 13, 14, 13, 73, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 8, 11, 11, 11, 12, 11, 15, 11, 3, 3, 21, 16, 17, 18, 18, 16, 16, 27, 13, 14, 15, 14, 13, 13, 118, 13, 13, 13, 14, 13, 14, 13, 13, 74]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 12, 11, 11, 11, 11, 11, 11, 2, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 16, 13, 14, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 11, 11, 11, 11, 11, 11, 11, 7, 2, 16, 16, 17, 16, 17, 16, 16, 21, 13, 14, 13, 18, 13, 32, 13, 237, 14, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 6, 11, 11, 11, 127, 11, 11, 11, 6, 3, 16, 16, 21, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 8, 11, 11, 11, 18, 11, 11, 11, 7, 6, 16, 19, 17, 20, 17, 16, 16, 13, 13, 14, 22, 14, 13, 14, 22, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 11, 2, 4, 5, 3, 4, 3, 2, 4, 140, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 6, 2, 3, 3, 3, 2, 4, 2, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 5, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 4, 3, 16, 4, 4, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 3, 3, 2, 12, 151, 5, 2, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 6, 2, 4, 7, 6, 6, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 20
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826921249793616
thermo_feasible = true
