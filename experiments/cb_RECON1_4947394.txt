ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 37
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 7, 9, 6, 6, 4, 2, 8, 2, 8, 6, 9, 5, 5, 325, 48, 7, 4, 4, 9, 9, 4, 12, 7, 4, 10, 8, 3, 6, 3, 15, 8, 7, 11, 48, 8, 4, 5, 10, 8, 9, 5, 5, 2, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [14, 7, 8, 4, 3, 4, 4, 2, 4, 6, 6, 5, 7, 5, 5, 8, 309, 10, 7, 6, 7, 4, 4, 53, 10, 8, 6, 8, 4, 9, 6, 359, 9, 3, 7, 22, 9, 11, 7, 7, 4, 3, 7, 12, 4, 2, 5, 4, 8, 6, 91, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 7, 5, 7, 4, 5, 5, 9, 4, 6, 3, 92, 6, 4, 4, 6, 4, 11, 107, 5, 10, 8, 4, 7, 4, 6, 7, 6, 4, 7, 5, 14, 3, 6, 4, 11, 4, 4, 7, 6, 14, 10, 4, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [15, 2, 2, 2, 2, 4, 4, 2, 2, 4, 5, 30, 3, 3, 4, 13, 10, 2, 8, 3, 8, 11, 2, 18, 9, 73, 16, 5, 3, 8, 5, 8, 28, 4, 5, 296, 6, 6, 15, 10, 20, 5, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 3, 2, 7, 2, 6, 10, 4, 2, 11, 5, 5, 13, 6, 8, 9, 4, 4, 3, 3, 3, 7, 8, 9, 22, 10, 3, 3, 7, 4, 3, 6, 3, 6, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 4, 7, 8, 5, 6, 7, 5, 10, 4, 295, 4, 3, 4, 4, 4, 5, 8, 6, 8, 200, 7, 4, 7, 4, 3, 8, 4, 4, 7, 10, 4, 6, 10, 4, 7, 7, 6, 10, 6, 4, 6, 31, 8, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 8, 9, 8, 6, 4, 6, 7, 10, 10, 5, 8, 29, 5, 6, 8, 4, 9, 368, 14, 6, 4, 4, 4, 10, 3, 13, 4, 10, 8, 5, 7, 6, 5, 5, 80, 4, 5, 4, 7, 4, 44, 7, 6, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 7, 4, 5, 3, 5, 5, 5, 4, 9, 4, 6, 8, 4, 3, 4, 4, 7, 8, 57, 363, 4, 4, 4, 4, 5, 5, 24, 5, 5, 208, 7, 7, 3, 4, 5, 5, 7, 7, 7, 6, 5, 6, 5, 15]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [14, 4, 5, 3, 7, 4, 6, 6, 5, 4, 4, 4, 5, 11, 4, 478, 4, 4, 5, 13, 6, 18, 9, 204, 5, 7, 7, 7, 12, 4, 4, 4, 8, 23, 21, 4, 4, 9, 5, 3, 6, 9, 6, 4, 22, 3, 6, 4, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 10, 6, 6, 5, 6, 4, 6, 4, 4, 4, 7, 4, 12, 3, 5, 12, 9, 4, 5, 3, 8, 5, 5, 4, 10, 285, 10, 4, 6, 7, 6, 6, 4, 6, 6, 6, 8, 9, 4, 15, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [16, 8, 7, 6, 3, 14, 6, 8, 5, 4, 4, 8, 4, 4, 5, 6, 3, 4, 6, 4, 7, 3, 211, 7, 3, 316, 6, 4, 8, 223, 4, 4, 6, 11, 7, 8, 4, 10, 4, 4, 6, 6, 10, 5, 106, 8, 7, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [16, 6, 5, 4, 6, 7, 3, 8, 10, 6, 7, 9, 4, 81, 5, 4, 5, 4, 5, 5, 5, 4, 3, 6, 7, 6, 4, 6, 7, 5, 6, 5, 7, 26, 77, 6, 7, 5, 4, 9, 5, 7, 3, 7, 6, 8, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 5, 5, 6, 3, 4, 7, 6, 4, 4, 11, 5, 8, 7, 4, 5, 4, 11, 7, 3, 352, 4, 4, 4, 4, 5, 7, 4, 5, 26, 4, 190, 4, 7, 25, 5, 4, 5, 4, 4, 9, 6, 4, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [29, 6, 5, 9, 9, 6, 7, 8, 7, 7, 22, 5, 6, 5, 6, 7, 5, 7, 3, 8, 8, 14, 5, 7, 7, 7, 6, 3, 5, 4, 7, 9, 5, 4, 24, 4, 9, 6, 4, 4, 4, 9, 4, 6, 7, 10, 9, 25, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [35, 7, 7, 6, 6, 4, 6, 8, 5, 3, 4, 5, 7, 4, 234, 15, 109, 5, 7, 4, 27, 17, 4, 6, 8, 3, 6, 4, 7, 3, 4, 113, 19, 62, 5, 12, 4, 6, 5, 6, 6, 5, 8, 151, 5, 4, 5, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [31, 5, 5, 8, 10, 3, 5, 5, 8, 4, 9, 8, 7, 4, 7, 6, 4, 11, 3, 7, 7, 7, 6, 105, 7, 4, 5, 6, 9, 4, 8, 6, 6, 7, 21, 26, 9, 3, 5, 7, 7, 6, 8, 8, 5, 3, 43, 4, 8, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 6, 3, 5, 7, 4, 4, 6, 6, 5, 7, 382, 8, 6, 7, 6, 4, 7, 4, 531, 6, 7, 80, 11, 4, 4, 4, 10, 16, 25, 7, 11, 7, 4, 6, 7, 7, 9, 6, 8, 9, 7, 8, 83]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 6, 10, 6, 7, 6, 9, 53, 7, 6, 4, 3, 4, 18, 5, 7, 40, 4, 7, 9, 6, 4, 5, 4, 4, 17, 9, 3, 10, 5, 8, 6, 8, 17, 365, 7, 13, 7, 6, 4, 9, 8, 4, 8, 8, 7, 7, 5, 6, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 12, 7, 3, 4, 5, 98, 12, 7, 256, 9, 8, 10, 4, 7, 8, 11, 5, 6, 6, 4, 9, 4, 55, 6, 5, 6, 6, 3, 46, 6, 8, 8, 5, 5, 6, 5, 5, 4, 10, 7, 3, 7, 5, 6, 5, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 6, 7, 8, 4, 4, 11, 4, 4, 4, 14, 12, 3, 8, 6, 9, 84, 8, 3, 11, 5, 4, 8, 3, 6, 7, 386, 8, 394, 3, 16, 15, 4, 7, 423, 11, 5, 4, 3, 292, 53, 6, 7, 8, 4, 5, 4, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 6, 4, 5, 5, 7, 6, 38, 6, 5, 8, 22, 7, 4, 6, 27, 4, 4, 4, 479, 5, 4, 5, 9, 4, 48, 7, 6, 4, 9, 6, 6, 4, 4, 5, 7, 7, 147, 7, 4, 3, 8, 37, 7, 6, 5, 461]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 4, 11, 6, 4, 11, 4, 6, 9, 248, 5, 3, 7, 32, 4, 4, 10, 10, 4, 12, 156, 4, 7, 9, 27, 4, 4, 4, 6, 8, 4, 99, 7, 4, 10, 3, 388, 51, 3, 5, 4, 6, 3, 7, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [9, 4, 19, 4, 3, 5, 4, 11, 3, 5, 9, 6, 4, 5, 4, 28, 6, 7, 3, 4, 4, 3, 30, 20, 3, 8, 5, 6, 7, 8, 9, 6, 114, 7, 4, 3, 7, 5, 3, 5, 7, 10, 4, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 8, 5, 5, 9, 4, 10, 5, 5, 6, 7, 10, 7, 76, 4, 4, 9, 4, 26, 10, 6, 7, 4, 6, 6, 5, 12, 8, 7, 130, 8, 8, 8, 5, 4, 7, 5, 5, 168, 16, 5, 9, 11, 8, 7, 4, 5, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [17, 7, 3, 6, 4, 3, 3, 6, 11, 6, 8, 5, 4, 3, 6, 4, 5, 9, 5, 4, 42, 4, 5, 8, 9, 7, 5, 5, 6, 7, 9, 5, 7, 4, 11, 4, 8, 5, 3, 8, 10, 5, 6, 6, 4, 8, 86, 4, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 7, 5, 7, 4, 4, 5, 5, 11, 5, 7, 87, 8, 4, 6, 7, 4, 5, 4, 8, 13, 256, 6, 5, 8, 9, 10, 7, 8, 6, 29, 7, 7, 9, 7, 6, 4, 5, 5, 9, 6, 219, 7, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [18, 5, 6, 5, 5, 3, 8, 134, 106, 3, 9, 6, 4, 5, 6, 6, 7, 6, 8, 3, 7, 4, 5, 4, 9, 306, 12, 4, 10, 6, 4, 8, 6, 3, 8, 4, 3, 4, 4, 5, 15, 6, 10, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 5, 7, 3, 7, 3, 9, 5, 5, 13, 8, 11, 5, 4, 6, 6, 4, 8, 5, 8, 8, 4, 7, 5, 4, 11, 10, 10, 6, 3, 4, 8, 7, 4, 194, 6, 7, 8, 10, 6, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 5, 10, 4, 4, 6, 4, 7, 5, 6, 5, 5, 10, 14, 4, 4, 7, 3, 8, 5, 6, 5, 3, 8, 4, 5, 8, 6, 4, 5, 4, 4, 5, 4, 4, 8, 74, 6, 9, 5, 5, 5, 5, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 3, 5, 7, 5, 8, 4, 10, 6, 5, 4, 11, 4, 24, 3, 5, 6, 9, 6, 5, 4, 5, 6, 4, 7, 4, 4, 9, 4, 27, 29, 118, 4, 7, 12, 9, 6, 11, 6, 10, 6, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 6, 6, 4, 4, 7, 7, 6, 4, 6, 7, 7, 5, 4, 7, 5, 271, 5, 6, 4, 6, 25, 4, 6, 4, 9, 4, 6, 4, 26, 9, 27, 8, 6, 3, 6, 4, 5, 5, 4, 4, 5, 11, 4, 6, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 4, 3, 5, 7, 6, 4, 19, 8, 7, 4, 12, 16, 6, 30, 10, 5, 4, 27, 3, 40, 12, 4, 22, 7, 8, 4, 26, 4, 25, 5, 3, 6, 4, 6, 3, 13, 8, 7, 4, 4, 4, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [11, 4, 7, 4, 8, 5, 5, 39, 5, 9, 6, 5, 4, 3, 9, 4, 8, 6, 4, 7, 6, 5, 9, 4, 30, 4, 12, 6, 24, 10, 28, 7, 27, 5, 7, 8, 12, 7, 8, 4, 6, 6, 5, 9, 6, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 3, 6, 5, 8, 6, 6, 4, 6, 6, 10, 451, 7, 32, 4, 6, 5, 4, 12, 5, 3, 4, 5, 6, 7, 9, 4, 4, 26, 4, 26, 6, 29, 6, 11, 7, 441, 4, 4, 5, 4, 5, 250, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [25, 7, 11, 7, 6, 4, 4, 8, 11, 4, 5, 9, 7, 8, 6, 332, 8, 8, 6, 5, 4, 5, 6, 8, 7, 4, 5, 4, 11, 4, 7, 8, 26, 11, 129, 10, 4, 7, 6, 342, 15, 4, 9, 6, 7, 12, 7, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 5, 4, 6, 6, 5, 8, 4, 17, 4, 4, 4, 4, 9, 9, 5, 9, 9, 9, 4, 5, 6, 6, 7, 4, 6, 4, 8, 86, 4, 5, 8, 5, 12, 4, 4, 4, 6, 4, 4, 7, 8, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 6, 4, 5, 6, 8, 8, 8, 4, 4, 7, 4, 4, 340, 5, 4, 542, 4, 7, 360, 5, 49, 7, 4, 30, 8, 4, 6, 6, 7, 310, 7, 8, 4, 4, 10, 15, 5, 10, 11, 6, 4, 7, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 5, 7, 9, 6, 8, 3, 7, 4, 9, 4, 10, 5, 7, 4, 9, 3, 5, 6, 4, 5, 4, 6, 6, 7, 4, 6, 11, 6, 9, 8, 7, 10, 4, 7, 41, 6, 4, 11, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 6, 4, 4, 5, 5, 7, 8, 5, 314, 503, 7, 19, 4, 8, 4, 6, 10, 3, 5, 6, 11, 6, 7, 5, 8, 6, 4, 260, 7, 5, 8, 10, 8, 10, 110, 7, 5, 5, 4, 13, 9, 208, 9, 4, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [23, 7, 6, 4, 8, 10, 10, 8, 9, 4, 6, 8, 5, 7, 5, 4, 4, 26, 9, 25, 7, 5, 10, 4, 9, 8, 26, 14, 7, 8, 5, 25, 453, 14, 5, 4, 5, 3, 4, 27, 4, 7, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 10, 4, 6, 4, 10, 5, 92, 4, 6, 4, 8, 4, 6, 7, 12, 6, 18, 12, 5, 3, 9, 6, 3, 401, 8, 5, 6, 9, 14, 4, 13, 6, 5, 12, 11, 4, 7, 12, 9, 18, 6, 8, 6, 518]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 5, 5, 79, 4, 6, 6, 6, 4, 7, 14, 4, 8, 35, 15, 4, 7, 4, 5, 14, 5, 10, 11, 19, 99, 9, 6, 9, 4, 13, 13, 16, 5, 4, 16, 6, 16, 6, 15, 270, 8, 9, 5, 4, 39]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 7, 8, 7, 4, 3, 4, 3, 4, 5, 3, 4, 4, 7, 9, 4, 5, 4, 6, 4, 8, 4, 5, 5, 3, 8, 102, 258, 6, 4, 377, 5, 3, 24, 5, 6, 5, 4, 173, 113, 5, 7, 10, 13]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [23, 4, 12, 5, 7, 6, 7, 6, 5, 5, 11, 6, 6, 8, 3, 5, 4, 12, 7, 12, 6, 3, 39, 6, 4, 7, 6, 24, 6, 16, 5, 4, 5, 6, 21, 4, 23, 4, 67, 3, 27, 23, 4, 8, 60, 4, 6, 7, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 5, 3, 8, 7, 5, 11, 4, 6, 4, 7, 5, 8, 330, 10, 10, 3, 330, 13, 4, 9, 8, 7, 22, 32, 8, 8, 11, 13, 20, 4, 21, 4, 98, 22, 5, 5, 3, 22, 4, 4, 8, 6, 4, 9, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 5, 11, 5, 5, 7, 5, 4, 6, 10, 4, 4, 6, 8, 16, 12, 3, 9, 195, 6, 12, 6, 36, 28, 4, 7, 3, 21, 19, 21, 3, 22, 4, 131, 11, 22, 10, 8, 18, 4, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 5, 5, 3, 11, 4, 6, 8, 3, 4, 6, 6, 14, 4, 4, 9, 3, 345, 14, 62, 426, 5, 83, 8, 27, 4, 4, 7, 21, 96, 26, 5, 6, 35, 24, 8, 5, 10, 4, 18, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 8, 9, 66, 5, 4, 4, 6, 9, 10, 4, 53, 9, 11, 9, 14, 4, 3, 7, 5, 13, 5, 4, 5, 13, 4, 9, 7, 6, 45, 5, 5, 4, 22, 4, 10, 6, 4, 8, 3, 3, 6, 11, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 4, 4, 6, 7, 5, 8, 6, 7, 7, 9, 6, 4, 4, 6, 9, 6, 5, 9, 3, 9, 6, 8, 5, 10, 10, 8, 8, 11, 10, 69, 8, 10, 6, 216, 9, 16, 4, 4, 4, 12, 7, 11, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 4, 3, 4, 4, 5, 11, 5, 4, 11, 6, 5, 12, 4, 5, 4, 4, 6, 8, 4, 7, 4, 7, 5, 6, 7, 9, 7, 7, 5, 19, 4, 3, 7, 13, 5, 7, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 3, 5, 4, 7, 3, 4, 8, 6, 13, 7, 5, 7, 6, 4, 19, 5, 7, 3, 4, 9, 13, 4, 6, 5, 9, 213, 4, 8, 5, 11, 9, 6, 7, 10, 7, 13, 14]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 5, 109, 5, 5, 11, 9, 3, 10, 4, 10, 312, 3, 5, 7, 12, 5, 6, 3, 4, 7, 7, 131, 3, 4, 6, 7, 5, 7, 74, 5, 9, 3, 11, 4, 5, 7, 4, 6, 11, 7, 4, 6, 7, 9, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 4, 9, 5, 5, 6, 8, 5, 6, 8, 4, 8, 10, 4, 17, 6, 17, 3, 5, 3, 8, 4, 3, 7, 91, 15, 7, 8, 5, 4, 15, 3, 13, 5, 7, 6, 5, 5, 4, 8, 8, 9, 7, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [15, 6, 3, 50, 3, 6, 8, 4, 4, 4, 6, 45, 8, 5, 14, 8, 15, 6, 4, 6, 5, 13, 11, 9, 5, 32, 4, 5, 8, 4, 8, 5, 4, 4, 4, 3, 7, 4, 7, 4, 6, 6, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [9, 5, 5, 4, 6, 4, 6, 4, 6, 5, 7, 6, 4, 7, 6, 4, 7, 4, 6, 4, 6, 4, 7, 8, 5, 4, 7, 5, 8, 365, 8, 4, 4, 7, 3, 5, 7, 6, 48, 4, 6, 8, 6, 7, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [11, 7, 10, 9, 9, 154, 9, 16, 6, 10, 10, 10, 10, 384, 10, 15, 12, 12, 6, 20, 6, 258, 4, 9, 12, 10, 10, 3, 10, 12, 7, 9, 10, 26, 8, 7, 21, 8, 5, 11, 11, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [29, 6, 8, 9, 9, 4, 3, 4, 4, 9, 6, 9, 6, 177, 9, 386, 11, 6, 6, 6, 4, 10, 344, 6, 7, 7, 4, 45, 4, 4, 198, 5, 17, 86, 7, 7, 8, 8, 9, 117, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [20, 5, 4, 10, 13, 11, 8, 4, 9, 6, 10, 8, 4, 5, 6, 6, 6, 4, 6, 5, 6, 14, 10, 3, 12, 63, 5, 10, 8, 10, 8, 14, 4, 5, 15, 8, 14, 6, 12, 21, 7, 18, 12, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [14, 5, 3, 8, 4, 4, 8, 5, 4, 5, 14, 4, 4, 8, 11, 3, 9, 4, 4, 13, 13, 4, 4, 5, 6, 58, 25, 9, 39, 3, 5, 363, 8, 4, 8, 7, 7, 11, 8, 9, 9, 9, 6, 3, 8, 71]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [9, 11, 8, 7, 8, 11, 7, 5, 5, 4, 7, 20, 7, 8, 4, 4, 6, 8, 15, 11, 4, 6, 4, 9, 8, 6, 57, 12, 5, 7, 97, 8, 8, 8, 13, 10, 10, 6, 13, 8, 111, 4, 9, 8, 8, 8, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [12, 5, 7, 7, 4, 5, 9, 4, 6, 7, 10, 7, 7, 8, 7, 7, 6, 7, 7, 14, 8, 4, 9, 5, 13, 4, 10, 5, 3, 9, 5, 6, 4, 7, 10, 6, 8, 8, 8, 5, 6, 4, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 4, 6, 10, 11, 11, 15, 4, 10, 4, 14, 10, 5, 4, 10, 13, 8, 4, 11, 4, 4, 9, 6, 9, 5, 4, 10, 4, 4, 7, 4, 5, 6, 117, 5, 4, 10, 6, 7, 4, 6, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 5, 10, 10, 9, 4, 12, 10, 6, 5, 6, 7, 4, 10, 10, 11, 5, 3, 7, 5, 4, 107, 9, 6, 4, 8, 3, 218, 11, 6, 10, 4, 5, 5, 8, 14, 9, 6, 11, 8, 3, 12, 5, 6, 9, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 4, 6, 5, 6, 6, 4, 10, 5, 5, 3, 4, 7, 23, 5, 5, 5, 187, 5, 4, 3, 5, 7, 14, 5, 7, 9, 7, 4, 4, 7, 4, 4, 4, 4, 4, 4, 5, 7, 8, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 7, 5, 8, 4, 6, 8, 7, 5, 16, 7, 5, 7, 4, 5, 4, 6, 3, 7, 6, 5, 6, 4, 11, 9, 6, 7, 5, 5, 6, 7, 7, 8, 7, 6, 8, 14, 6, 7, 8, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 11, 7, 12, 12, 11, 9, 4, 32, 3, 4, 5, 4, 10, 4, 5, 4, 46, 10, 4, 4, 4, 5, 5, 7, 5, 4, 6, 4, 6, 4, 201, 6, 5, 7, 10, 7, 4, 3, 4, 12, 5, 8, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [7, 7, 11, 3, 6, 10, 6, 6, 4, 14, 10, 9, 9, 4, 6, 8, 6, 216, 6, 4, 7, 9, 4, 10, 14, 28, 6, 9, 10, 12, 3, 11, 10, 3, 9, 11, 4, 4, 9, 153, 8, 9, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [11, 8, 12, 4, 10, 10, 7, 4, 5, 8, 87, 10, 13, 296, 6, 7, 14, 6, 4, 13, 253, 7, 5, 4, 11, 5, 7, 4, 7, 4, 9, 8, 5, 12, 8, 12, 38, 3, 22, 5, 6, 4, 11, 5, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [10, 5, 7, 4, 6, 4, 11, 4, 11, 3, 8, 6, 5, 7, 59, 9, 4, 12, 10, 58, 8, 4, 19, 11, 10, 7, 10, 11, 4, 9, 12, 9, 10, 4, 7, 6, 110, 8, 6, 6, 8, 9, 7, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [25, 6, 4, 5, 6, 12, 4, 10, 7, 36, 8, 7, 9, 5, 6, 10, 6, 6, 13, 20, 5, 5, 4, 8, 9, 6, 11, 11, 7, 6, 9, 5, 4, 5, 9, 3, 423, 8, 13, 6, 7, 11, 5, 4, 8, 4, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [16, 7, 5, 7, 8, 9, 8, 6, 7, 11, 3, 8, 8, 7, 3, 8, 7, 4, 4, 9, 510, 12, 4, 5, 8, 4, 16, 14, 8, 4, 8, 7, 4, 5, 7, 6, 5, 4, 8, 11, 72, 3, 11, 5, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [11, 11, 6, 10, 8, 6, 5, 6, 6, 7, 10, 9, 7, 9, 8, 7, 12, 8, 10, 277, 39, 15, 116, 10, 10, 8, 13, 10, 11, 8, 12, 8, 10, 10, 4, 9, 9, 6, 6, 24, 5, 10, 27, 6, 6, 9, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [22, 5, 4, 6, 6, 4, 5, 5, 6, 6, 3, 5, 9, 9, 9, 20, 8, 7, 171, 4, 4, 4, 6, 5, 273, 5, 10, 9, 5, 79, 3, 4, 8, 9, 8, 7, 5, 7, 10, 12, 514, 7, 6, 8, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 10, 5, 7, 9, 7, 4, 9, 4, 6, 11, 464, 4, 5, 11, 5, 8, 20, 6, 5, 8, 20, 5, 7, 7, 7, 94, 76, 8, 5, 7, 5, 7, 4, 5, 12, 4, 9, 4, 6, 8, 4, 4, 6, 9, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 10, 7, 9, 6, 7, 10, 6, 5, 4, 299, 10, 9, 8, 10, 6, 6, 9, 47, 11, 9, 10, 9, 6, 11, 10, 12, 4, 12, 8, 8, 9, 8, 9, 11, 15, 4, 9, 25]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [19, 5, 10, 8, 11, 10, 7, 7, 13, 9, 5, 5, 3, 6, 97, 6, 5, 7, 9, 8, 5, 9, 204, 8, 8, 9, 13, 8, 18, 4, 10, 5, 9, 3, 9, 11, 5, 3, 11, 11, 3, 6, 5, 10, 9, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [17, 7, 8, 4, 4, 6, 10, 7, 8, 10, 11, 8, 4, 9, 4, 56, 5, 22, 5, 3, 4, 4, 11, 6, 7, 5, 6, 6, 8, 4, 3, 9, 11, 4, 7, 4, 9, 4, 7, 5, 5, 156]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [33, 6, 4, 5, 7, 5, 4, 5, 9, 4, 7, 4, 15, 4, 6, 4, 3, 9, 10, 5, 5, 4, 4, 16, 7, 5, 10, 7, 12, 10, 4, 4, 5, 7, 7, 4, 9, 19, 14, 6, 4, 13]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 7, 6, 7, 4, 6, 4, 4, 4, 7, 6, 6, 8, 7, 9, 4, 4, 6, 5, 12, 4, 5, 6, 7, 371, 128, 8, 5, 5, 6, 8, 4, 7, 8, 7, 10, 5, 7, 6, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 5, 4, 6, 7, 4, 7, 4, 4, 8, 5, 8, 9, 3, 88, 6, 16, 6, 5, 8, 3, 4, 4, 5, 9, 4, 20, 3, 5, 8, 9, 9, 6, 101, 6, 5, 9, 18, 6, 4, 11, 6, 4, 105, 11, 4, 10, 55, 8, 43, 44, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 10, 4, 6, 7, 10, 4, 8, 11, 8, 6, 9, 10, 6, 7, 7, 7, 7, 10, 7, 7, 8, 9, 8, 10, 7, 6, 10, 7, 3, 9, 7, 12, 11, 10, 7, 4, 9, 15, 8, 8, 10, 10, 5, 121, 10, 41, 11, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [12, 6, 11, 8, 9, 11, 6, 8, 10, 7, 7, 9, 10, 8, 10, 11, 6, 5, 12, 6, 7, 5, 6, 10, 4, 8, 7, 12, 13, 11, 7, 9, 8, 8, 9, 7, 5, 11, 9, 9, 102, 10, 9, 11, 4, 8, 8, 10, 4, 5, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [9, 7, 11, 5, 13, 3, 8, 5, 4, 6, 9, 4, 9, 4, 9, 274, 13, 4, 7, 7, 192, 7, 26, 5, 6, 10, 30, 11, 22, 10, 11, 8, 8, 10, 10, 5, 12, 7, 8, 8, 10, 7, 6, 6, 11, 12, 6, 8, 12, 10, 368]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [12, 7, 12, 10, 11, 4, 5, 10, 9, 7, 11, 3, 10, 5, 11, 12, 10, 5, 9, 11, 5, 10, 6, 11, 10, 5, 7, 10, 5, 9, 7, 6, 11, 14, 4, 7, 4, 8, 9, 9, 12, 9, 9, 10, 7, 8, 6, 3, 4, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 6, 8, 3, 2, 7, 9, 4, 3, 539, 227, 5, 5, 7, 8, 5, 3, 5, 7, 2, 242, 4, 5, 6, 7, 6, 2, 3, 6, 6, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 5, 11, 10, 4, 9, 10, 8, 4, 4, 9, 5, 10, 9, 4, 7, 7, 7, 8, 12, 4, 9, 4, 96, 13, 7, 11, 10, 7, 33, 3, 11, 9, 11, 9, 7, 9, 13, 11, 13, 8, 10, 9, 6, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [9, 3, 10, 4, 4, 6, 6, 10, 12, 4, 9, 9, 8, 5, 5, 4, 5, 7, 10, 13, 5, 4, 6, 58, 4, 6, 4, 4, 4, 7, 6, 7, 4, 4, 5, 6, 6, 4, 17, 4, 10, 19, 4, 12, 72, 8, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 4, 3, 6, 4, 7, 7, 5, 4, 5, 7, 5, 5, 7, 4, 9, 4, 8, 6, 8, 8, 6, 12, 3, 4, 7, 3, 10, 11, 11, 12, 17, 9, 6, 8, 5, 4, 4, 7, 5, 6, 9, 4, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 4, 8, 5, 4, 5, 4, 4, 4, 5, 5, 3, 5, 3, 5, 4, 65, 6, 5, 4, 6, 5, 6, 5, 55, 5, 4, 7, 4, 3, 6, 5, 5, 4, 5, 4, 10, 4, 6, 6, 19, 28]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 3, 4, 4, 4, 9, 6, 9, 8, 5, 84, 5, 4, 4, 4, 8, 9, 4, 5, 6, 26, 12, 5, 6, 6, 4, 4, 7, 5, 5, 7, 3, 4, 6, 77, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [8, 11, 4, 7, 8, 98, 10, 7, 5, 9, 28, 12, 269, 5, 5, 8, 8, 10, 5, 9, 8, 12, 8, 26, 5, 10, 4, 9, 8, 12, 11, 10, 4, 10, 9, 8, 7, 9, 6, 7, 7, 5, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 10, 4, 7, 6, 9, 6, 164, 4, 6, 8, 6, 5, 7, 4, 12, 4, 8, 4, 12, 7, 6, 4, 8, 4, 8, 6, 5, 7, 6, 65, 10, 7, 9, 7, 6, 6, 109, 4, 4, 7, 7, 4, 8, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 9, 5, 8, 4, 8, 13, 11, 10, 5, 363, 6, 5, 9, 9, 4, 20, 153, 230, 4, 460, 8, 4, 8, 8, 7, 3, 16, 9, 6, 10, 3, 8, 5, 7, 8, 7, 7, 13, 8, 9, 223]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 12, 7, 6, 6, 4, 7, 8, 6, 8, 14, 5, 4, 5, 6, 7, 7, 4, 68, 4, 5, 4, 8, 8, 385, 5, 4, 7, 3, 6, 7, 4, 5, 7, 3, 6, 6, 6, 7, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 7, 8, 8, 4, 14, 4, 8, 12, 5, 5, 9, 7, 8, 6, 5, 5, 10, 4, 6, 14, 12, 6, 6, 11, 11, 6, 9, 5, 9, 7, 9, 14, 19, 5, 4, 5, 8, 9, 5, 15, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [13, 11, 12, 10, 7, 4, 7, 7, 13, 8, 8, 14, 8, 402, 5, 11, 7, 11, 10, 214, 9, 8, 6, 5, 8, 9, 16, 7, 4, 7, 8, 64, 9, 36, 7, 9, 5, 6, 8, 9, 8, 10, 8, 17, 9, 9, 7, 3, 7, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [12, 13, 13, 6, 12, 13, 12, 10, 4, 4, 9, 7, 11, 8, 10, 5, 10, 20, 10, 5, 9, 7, 9, 4, 13, 289, 6, 6, 11, 9, 11, 10, 12, 10, 8, 4, 7, 7, 31, 10, 12, 7, 11, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 5, 11, 6, 6, 4, 5, 4, 9, 32, 13, 290, 4, 8, 4, 6, 6, 7, 3, 8, 11, 4, 13, 7, 245, 6, 4, 9, 13, 6, 227, 5, 11, 72, 7, 5, 6, 5, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 7, 4, 4, 7, 10, 8, 7, 3, 9, 22, 4, 7, 5, 7, 184, 4, 6, 9, 9, 9, 5, 6, 13, 9, 6, 10, 7, 8, 6, 9, 4, 4, 7, 4, 10, 9, 6, 8, 10, 4, 6, 7, 11, 11, 4, 10]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 4, 9, 4, 7, 13, 6, 10, 5, 8, 10, 4, 8, 4, 8, 8, 15, 6, 7, 5, 10, 8, 12, 6, 10, 10, 7, 7, 9, 7, 10, 4, 6, 7, 4, 7, 10, 7, 5, 9, 7, 5, 8, 4, 418, 11, 11, 10, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 6, 7, 6, 6, 6, 7, 4, 4, 8, 8, 8, 6, 514, 7, 15, 7, 5, 5, 22, 24, 7, 7, 7, 6, 7, 7, 7, 4, 6, 11, 9, 7, 7, 4, 8, 8, 6, 8, 7, 6, 4, 13, 102, 6, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 11, 6, 9, 4, 4, 5, 5, 249, 3, 4, 7, 7, 9, 14, 61, 10, 6, 4, 182, 9, 4, 4, 6, 4, 4, 6, 11, 8, 4, 5, 6, 9, 4, 4, 7, 4, 13, 66, 5, 6, 30]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [29, 6, 5, 4, 7, 4, 5, 4, 12, 13, 8, 5, 105, 4, 6, 6, 19, 84, 6, 11, 5, 11, 4, 5, 7, 5, 6, 6, 6, 5, 8, 4, 6, 11, 9, 6, 5, 4, 19, 155, 9, 5, 5, 19, 4, 7, 5, 10, 6, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 4, 3, 8, 9, 6, 3, 6, 4, 5, 4, 21, 4, 5, 3, 9, 7, 8, 286, 8, 9, 31, 9, 11, 10, 602, 9, 6, 9, 6, 5, 4, 6, 8, 32, 7, 6, 6, 9, 13, 4, 6, 9, 8, 8, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [11, 3, 9, 4, 4, 50, 5, 6, 6, 6, 7, 7, 11, 4, 10, 4, 8, 9, 6, 73, 5, 10, 109, 6, 4, 8, 6, 57, 9, 4, 12, 14, 3, 7, 5, 6, 9, 8, 10, 5, 5, 5, 347, 5, 5, 6, 9, 5, 202, 5, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 6, 6, 4, 5, 4, 8, 7, 7, 7, 5, 8, 11, 7, 23, 11, 5, 4, 23, 28, 19, 3, 8, 10, 28, 7, 8, 5, 8, 4, 6, 569, 5, 7, 7, 5, 6, 8, 11, 5, 7, 5, 5, 12, 135, 4, 8, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 6, 8, 6, 6, 8, 4, 7, 251, 8, 7, 3, 5, 3, 4, 10, 5, 13, 6, 8, 3, 10, 9, 4, 4, 18, 10, 5, 24, 6, 8, 8, 6, 6, 6, 6, 6, 469, 8, 440, 7, 4, 4, 6, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [11, 6, 8, 6, 5, 6, 5, 4, 9, 11, 6, 8, 7, 10, 10, 6, 6, 38, 5, 4, 5, 7, 7, 7, 188, 46, 9, 4, 11, 4, 4, 7, 11, 4, 7, 29, 7, 427, 6, 6, 6, 55, 7, 4, 419, 4, 9, 7, 12, 2, 9, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 81, 4, 9, 6, 11, 8, 14, 7, 8, 76, 7, 7, 5, 7, 10, 8, 106, 197, 3, 11, 5, 7, 9, 5, 7, 5, 4, 7, 6, 12, 3, 9, 6, 13, 10, 5, 4, 4, 5, 6, 4, 10, 4, 7, 96, 7, 4, 12]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 7, 7, 4, 5, 7, 7, 4, 5, 15, 3, 7, 58, 7, 5, 7, 7, 3, 9, 73, 6, 3, 4, 81, 14, 5, 5, 3, 3, 83, 5, 5, 5, 11, 4, 4, 6, 4, 11, 5, 7, 5, 26, 3, 10, 362, 5, 3]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [13, 6, 9, 8, 4, 7, 5, 5, 3, 9, 4, 6, 4, 4, 4, 4, 3, 6, 76, 5, 5, 6, 6, 5, 16, 5, 5, 3, 10, 6, 5, 4, 6, 6, 6, 5, 13, 8, 10, 4, 7, 4, 7, 7, 5, 6, 7, 5, 5, 5, 21, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [10, 7, 11, 5, 5, 7, 7, 10, 4, 10, 6, 3, 8, 7, 8, 5, 7, 9, 163, 7, 7, 14, 11, 5, 5, 8, 9, 8, 9, 4, 11, 20, 5, 7, 14, 7, 57, 6, 13, 5, 10, 29, 11, 9, 7, 8, 4, 16, 8, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [5, 8, 3, 9, 7, 4, 5, 8, 4, 10, 3, 4, 7, 6, 6, 15, 5, 7, 9, 8, 5, 6, 9, 6, 8, 7, 10, 6, 7, 7, 5, 12, 8, 6, 7, 4, 5, 11, 18, 8, 9, 10, 10, 4, 8, 8, 7, 5, 8, 12, 6, 94]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 4, 6, 7, 8, 6, 7, 3, 6, 5, 4, 7, 4, 6, 6, 7, 10, 8, 9, 5, 12, 9, 7, 6, 4, 27, 6, 8, 4, 8, 6, 3, 5, 8, 8, 14, 7, 7, 7, 9, 10, 7, 5, 8, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [9, 11, 5, 5, 5, 5, 7, 9, 11, 10, 4, 7, 5, 8, 9, 7, 7, 6, 33, 8, 3, 18, 8, 438, 13, 8, 9, 11, 7, 7, 5, 9, 9, 10, 8, 9, 6, 5, 9, 8, 4, 7, 11, 5, 8, 4, 8, 8, 12, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [9, 8, 9, 7, 3, 7, 10, 3, 7, 5, 7, 4, 3, 10, 5, 5, 3, 7, 11, 4, 10, 6, 6, 14, 10, 8, 4, 5, 5, 7, 8, 9, 5, 6, 4, 10, 7, 7, 9, 7, 4, 10, 6, 5, 427, 7, 11, 3, 26, 5, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 11, 8, 7, 6, 8, 3, 8, 9, 4, 4, 8, 9, 6, 209, 9, 4, 4, 8, 8, 10, 5, 4, 8, 10, 6, 15, 11, 10, 6, 9, 8, 8, 11, 8, 14, 4, 9, 8, 6, 6, 5, 4, 6]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 8, 10, 8, 7, 7, 6, 5, 7, 7, 7, 6, 8, 12, 11, 7, 10, 10, 9, 4, 10, 12, 13, 6, 12, 10, 9, 15, 10, 5, 6, 384, 7, 6, 8, 8, 12, 6, 9, 7, 8, 10, 11, 9, 10, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [12, 4, 9, 14, 85, 9, 10, 11, 9, 4, 15, 14, 10, 7, 4, 8, 9, 9, 7, 8, 7, 9, 9, 4, 9, 9, 15, 9, 3, 10, 13, 9, 10, 4, 7, 14, 15, 9, 16, 10, 13, 9, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 6, 8, 6, 7, 8, 11, 11, 12, 11, 6, 4, 11, 7, 6, 7, 4, 5, 10, 9, 8, 7, 11, 7, 10, 8, 6, 10, 9, 7, 7, 8, 6, 5, 16, 8, 10, 5, 97, 7, 7, 7, 7, 8, 9, 7, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 6, 5, 3, 5, 7, 5, 7, 10, 4, 8, 4, 7, 11, 9, 9, 13, 4, 9, 37, 5, 10, 4, 7, 7, 6, 3, 7, 8, 13, 15, 6, 14, 9, 8, 7, 9, 5, 5, 8, 12, 235, 8, 13, 10, 5, 5, 34, 6, 23]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 7, 7, 7, 6, 6, 8, 6, 3, 8, 7, 6, 4, 5, 46, 9, 7, 5, 7, 50, 6, 6, 8, 9, 5, 7, 8, 8, 6, 4, 8, 5, 4, 8, 8, 7, 8, 5, 7, 6, 10, 6, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 6, 7, 6, 12, 9, 8, 9, 7, 11, 7, 10, 13, 12, 9, 7, 9, 9, 9, 7, 22, 227, 9, 11, 11, 6, 9, 13, 7, 7, 9, 10, 11, 8, 10, 10, 9, 11, 9, 10, 9, 7, 14, 7, 9, 45, 6, 6, 7, 8, 9, 15]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 10, 10, 4, 8, 5, 8, 8, 6, 4, 6, 11, 7, 12, 8, 321, 11, 9, 7, 6, 4, 10, 7, 7, 7, 7, 7, 7, 7, 12, 6, 7, 8, 7, 63, 6, 7, 9, 6, 9, 38, 91, 9, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 8, 6, 6, 4, 7, 5, 12, 4, 4, 8, 4, 4, 4, 4, 7, 7, 9, 6, 5, 7, 5, 28, 63, 7, 5, 7, 7, 10, 8, 143, 8, 4, 7, 149, 481, 4, 5, 7, 6, 6, 5, 5, 5, 10, 6, 8, 93]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 9, 6, 7, 10, 5, 4, 6, 8, 4, 10, 7, 4, 5, 7, 11, 7, 9, 4, 6, 6, 9, 7, 129, 5, 638, 6, 5, 36, 6, 189, 4, 7, 24, 10, 6, 10, 5, 10, 4, 6, 13, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 5, 7, 7, 8, 9, 9, 8, 7, 7, 7, 7, 6, 7, 255, 4, 7, 8, 7, 6, 4, 6, 7, 8, 6, 5, 4, 6, 6, 7, 6, 6, 4, 7, 6, 6, 5, 4, 4, 4, 6, 5, 6, 11, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 4, 4, 5, 4, 6, 5, 7, 5, 4, 5, 4, 8, 8, 5, 7, 5, 8, 4, 5, 5, 5, 3, 7, 9, 6, 7, 4, 8, 5, 4, 6, 5, 5, 35, 5, 6, 17, 3, 5, 7, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [3, 9, 10, 7, 7, 5, 9, 7, 13, 9, 7, 3, 6, 10, 8, 8, 9, 6, 10, 8, 8, 8, 6, 8, 10, 12, 4, 8, 7, 9, 9, 9, 11, 8, 4, 4, 7, 6, 7, 5, 4, 5, 8, 7, 8, 7, 5, 8, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 4, 5, 5, 6, 8, 9, 9, 9, 8, 4, 5, 6, 4, 4, 4, 6, 8, 4, 4, 217, 4, 5, 10, 8, 8, 7, 6, 6, 5, 6, 4, 4, 4, 11, 7, 6, 174, 9, 21, 22]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 6, 4, 7, 7, 5, 7, 5, 5, 5, 4, 7, 5, 6, 7, 6, 5, 5, 4, 4, 4, 4, 3, 7, 10, 4, 5, 5, 6, 6, 5, 9, 99, 4, 5, 72, 278, 5, 4, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 3, 5, 4, 55, 4, 5, 4, 5, 14, 21, 4, 6, 224, 4, 185, 4, 4, 7, 12, 4, 4, 5, 2, 4, 7, 5, 4, 6, 7, 4, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 6, 6, 5, 4, 4, 4, 3, 7, 88, 3, 13, 4, 4, 350, 4, 2, 7, 35, 7, 5, 4, 32, 5, 3, 11, 18, 4, 6, 10, 4, 3, 6, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 6, 4, 4, 5, 6, 10, 13, 4, 8, 23, 5, 4, 11, 8, 112, 3, 5, 4, 7, 6, 4, 6, 5, 6, 7, 6, 14, 13, 7, 6, 9, 7, 195, 5, 7, 8, 6, 6, 8, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [5, 7, 10, 11, 10, 11, 7, 8, 8, 5, 10, 10, 8, 3, 68, 8, 11, 11, 9, 11, 9, 13, 9, 6, 10, 6, 5, 9, 10, 3, 25, 15, 5, 6, 6, 9, 11, 8, 6, 9, 4, 5, 6, 13, 9, 9, 12, 9, 9, 13, 8, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 7, 4, 4, 6, 9, 4, 8, 12, 7, 6, 7, 11, 8, 9, 11, 11, 6, 7, 10, 6, 6, 7, 8, 210, 9, 7, 7, 7, 4, 10, 9, 10, 9, 6, 9, 9, 5, 533, 7, 7, 5, 5, 12, 6, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [12, 7, 4, 10, 3, 4, 9, 12, 9, 11, 9, 11, 12, 9, 10, 8, 6, 6, 10, 6, 11, 6, 4, 8, 8, 7, 10, 11, 8, 8, 13, 12, 10, 11, 10, 11, 10, 9, 6, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 4, 7, 7, 5, 8, 6, 8, 9, 10, 10, 4, 7, 9, 6, 8, 7, 11, 7, 5, 8, 360, 7, 5, 92, 6, 6, 7, 7, 8, 6, 4, 9, 8, 8, 8, 6, 7, 7, 8, 7, 8, 7, 7, 5, 8, 5, 9, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [3, 10, 6, 11, 13, 11, 11, 3, 9, 12, 13, 6, 11, 13, 11, 14, 9, 11, 10, 9, 8, 9, 51, 5, 7, 5, 8, 9, 11, 11, 13, 9, 8, 10, 11, 11, 9, 11, 9, 18, 15, 11, 7, 9, 10, 10, 11, 9, 13, 3]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [11, 7, 3, 9, 4, 5, 8, 12, 10, 6, 10, 7, 9, 10, 6, 7, 7, 7, 8, 7, 5, 9, 272, 12, 11, 8, 8, 82, 11, 7, 6, 7, 8, 12, 7, 9, 8, 9, 7, 252, 9, 8, 11, 5, 9, 24, 12, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [12, 6, 5, 6, 4, 5, 7, 7, 6, 4, 4, 5, 6, 4, 4, 7, 4, 4, 7, 512, 6, 9, 6, 6, 5, 5, 5, 370, 7, 8, 8, 7, 4, 5, 5, 6, 8, 8, 5, 6, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 3, 4, 6, 7, 6, 5, 7, 4, 6, 6, 4, 8, 6, 6, 4, 4, 5, 10, 4, 5, 4, 14, 8, 5, 4, 8, 5, 5, 5, 197, 5, 10, 7, 7, 7, 7, 6, 5, 4, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 7, 8, 7, 3, 4, 11, 10, 6, 9, 10, 7, 9, 8, 7, 5, 9, 4, 12, 6, 11, 11, 8, 4, 12, 9, 5, 8, 12, 6, 4, 9, 7, 12, 9, 11, 6, 4, 10, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [7, 9, 4, 7, 8, 4, 5, 10, 7, 8, 7, 4, 4, 6, 10, 9, 5, 7, 8, 4, 10, 9, 10, 6, 8, 13, 8, 11, 4, 6, 8, 5, 5, 8, 8, 6, 5, 7, 9, 6, 9, 183, 5, 8, 3, 9, 9, 525]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [9, 6, 13, 4, 4, 13, 5, 8, 10, 14, 5, 8, 5, 6, 11, 10, 4, 12, 8, 14, 231, 8, 10, 8, 9, 7, 17, 4, 4, 7, 11, 8, 10, 14, 9, 7, 7, 9, 4, 4, 16, 6, 13]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [16, 4, 5, 7, 11, 4, 3, 2, 11, 9, 4, 7, 84, 6, 8, 5, 9, 9, 5, 6, 14, 26, 43, 5, 4, 4, 5, 3, 9, 5, 17, 11, 13, 6, 7, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [8, 9, 7, 9, 12, 5, 7, 6, 6, 10, 9, 4, 6, 9, 7, 8, 8, 6, 218, 8, 7, 11, 4, 5, 9, 4, 7, 4, 8, 6, 11, 9, 8, 8, 8, 10, 68, 6, 10, 22, 9, 230, 11, 12, 311, 7, 101, 11, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [12, 8, 3, 10, 6, 11, 9, 8, 10, 9, 8, 5, 10, 4, 7, 9, 8, 7, 8, 6, 6, 10, 4, 11, 11, 6, 11, 5, 11, 7, 3, 8, 10, 9, 9, 10, 9, 11, 11, 278, 6, 503, 9, 6, 7, 8, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [8, 10, 8, 7, 10, 5, 8, 5, 4, 8, 6, 11, 41, 9, 12, 6, 6, 8, 7, 2, 4, 10, 11, 9, 9, 10, 6, 5, 12, 12, 6, 12, 5, 4, 11, 4, 7, 7, 12, 7, 10, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 4, 11, 7, 7, 10, 6, 5, 6, 7, 8, 8, 9, 9, 8, 5, 10, 5, 5, 8, 8, 7, 425, 9, 7, 9, 4, 7, 4, 8, 9, 5, 11, 6, 5, 7, 12, 4, 6, 3, 6, 13, 4, 21, 7, 9, 6, 7, 7, 112]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [5, 9, 7, 7, 10, 6, 5, 7, 8, 9, 7, 14, 12, 8, 7, 8, 6, 6, 11, 7, 4, 7, 9, 4, 69, 9, 8, 7, 8, 9, 11, 13, 9, 7, 7, 8, 6, 5, 8, 6, 6, 6, 8, 19, 8, 7, 11]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [15, 5, 4, 5, 7, 5, 14, 8, 4, 8, 4, 7, 6, 6, 4, 6, 10, 14, 4, 4, 8, 13, 9, 6, 5, 16, 5, 14, 5, 4, 7, 12, 4, 4, 10, 5, 4, 6, 4, 13, 16, 8, 13, 13, 4, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 5, 7, 7, 3, 3, 6, 6, 3, 6, 4, 10, 8, 10, 13, 5, 4, 7, 23, 6, 7, 6, 11, 12, 6, 5, 6, 5, 6, 8, 5, 8, 5, 7, 4, 4, 4, 3, 44, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 3, 7, 5, 6, 7, 5, 4, 3, 3, 3, 4, 6, 7, 4, 23, 11, 8, 5, 6, 5, 3, 9, 3, 8, 6, 6, 8, 7, 151, 11, 4, 6, 8, 3, 5, 6, 5, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [3, 5, 11, 9, 9, 10, 11, 8, 7, 10, 9, 7, 11, 8, 8, 12, 9, 6, 7, 6, 10, 40, 4, 6, 11, 574, 6, 7, 7, 12, 380, 221, 10, 9, 10, 7, 10, 8, 8, 8, 9, 7, 9, 8, 4, 9, 8, 6, 7, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 6, 8, 7, 7, 11, 8, 6, 5, 4, 4, 11, 6, 9, 8, 6, 6, 10, 7, 10, 16, 9, 8, 9, 10, 5, 8, 6, 5, 5, 6, 11, 3, 4, 7, 8, 10, 6, 10, 8, 10, 8, 28, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 9, 10, 9, 8, 6, 5, 6, 6, 7, 9, 4, 6, 9, 8, 7, 9, 9, 5, 6, 6, 7, 6, 6, 8, 9, 5, 7, 4, 9, 9, 4, 7, 10, 7, 6, 6, 7, 337, 7, 8, 8, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 11, 3, 10, 4, 6, 6, 9, 11, 9, 7, 9, 5, 8, 10, 8, 4, 9, 10, 6, 12, 4, 16, 7, 8, 8, 8, 7, 8, 9, 7, 9, 7, 5, 5, 9, 9, 9, 35, 24, 7, 9, 6, 128, 106, 7, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [10, 14, 9, 6, 10, 5, 14, 4, 10, 10, 6, 6, 7, 6, 11, 12, 9, 14, 8, 10, 5, 13, 9, 12, 12, 10, 16, 9, 5, 481, 13, 14, 10, 10, 12, 8, 13, 10, 13, 32, 16, 15, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [11, 10, 9, 11, 12, 11, 8, 7, 11, 9, 9, 9, 9, 5, 13, 9, 181, 5, 10, 10, 3, 11, 10, 8, 9, 43, 4, 10, 9, 9, 91, 11, 8, 9, 8, 10, 12, 12, 6, 10, 10, 4, 11, 81, 10, 58, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 13, 10, 11, 6, 11, 10, 34, 8, 11, 11, 9, 5, 8, 10, 10, 8, 9, 10, 9, 14, 6, 9, 7, 13, 10, 9, 12, 13, 39, 10, 7, 10, 8, 9, 7, 11, 9, 10, 10, 11, 10, 10, 8, 13, 10, 10, 11, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [7, 9, 7, 8, 9, 6, 6, 10, 4, 5, 4, 12, 5, 254, 5, 7, 7, 7, 5, 9, 13, 10, 9, 6, 12, 3, 6, 15, 23, 7, 7, 15, 8, 5, 4, 7, 206, 4, 16, 6, 6, 10, 9, 4, 12, 7, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [10, 10, 11, 4, 9, 12, 12, 9, 4, 5, 22, 4, 35, 8, 497, 4, 8, 4, 4, 8, 4, 4, 8, 10, 5, 194, 14, 9, 10, 266, 6, 8, 6, 7, 8, 4, 5, 6, 8, 8, 243, 5, 69, 4, 6, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [10, 4, 10, 5, 6, 7, 7, 5, 9, 4, 7, 3, 5, 11, 159, 79, 6, 14, 11, 8, 166, 158, 20, 18, 11, 8, 8, 7, 5, 7, 5, 19, 120, 68, 6, 4, 70, 46, 7, 4, 8, 9, 6, 9, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 8, 8, 4, 6, 6, 6, 5, 3, 5, 11, 5, 6, 7, 7, 7, 6, 6, 11, 14, 16, 13, 11, 6, 8, 6, 8, 8, 7, 6, 6, 4, 15, 4, 168, 6, 5, 4, 6, 7, 7, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 7, 12, 8, 8, 9, 9, 7, 7, 7, 7, 6, 7, 10, 8, 4, 9, 10, 4, 8, 7, 39, 8, 9, 6, 7, 10, 7, 7, 6, 8, 5, 8, 6, 6, 6, 141, 6, 4, 9, 15, 12, 7, 5, 8, 10, 11, 3, 8, 5]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 7, 5, 9, 7, 6, 5, 7, 6, 8, 6, 6, 15, 8, 7, 7, 7, 8, 6, 7, 11, 6, 11, 5, 371, 10, 8, 41, 13, 8, 8, 14, 11, 6, 8, 207, 7, 7, 4, 6, 13, 6, 14, 6, 14, 5, 15, 6, 437]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 7, 7, 8, 6, 10, 4, 10, 6, 6, 9, 5, 5, 6, 7, 7, 8, 8, 34, 8, 8, 9, 7, 12, 13, 8, 7, 3, 8, 7, 17, 11, 6, 8, 7, 5, 5, 10, 7, 7, 6, 7, 187, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 7, 7, 12, 5, 9, 5, 8, 10, 11, 6, 7, 10, 9, 6, 5, 7, 8, 47, 8, 8, 11, 6, 8, 11, 8, 95, 9, 4, 4, 9, 4, 5, 9, 8, 10, 8, 7, 6, 4, 7, 13, 5, 76, 5, 84, 9, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [5, 6, 10, 5, 6, 5, 5, 12, 10, 9, 9, 6, 5, 12, 8, 5, 50, 14, 8, 4, 12, 4, 8, 10, 9, 4, 4, 23, 8, 11, 4, 4, 5, 22, 11, 9, 5, 6, 11, 4, 11, 11, 6, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 15, 9, 79, 11, 254, 12, 3, 10, 8, 55, 11, 13, 5, 10, 7, 13, 4, 6, 4, 104, 8, 6, 11, 45, 11, 6, 12, 4, 9, 210, 14, 5, 48, 424, 9, 10, 7, 11, 11, 423, 10, 9, 11, 224]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 12, 9, 5, 13, 4, 11, 10, 9, 10, 8, 6, 4, 9, 12, 8, 10, 10, 48, 8, 8, 18, 10, 4, 5, 11, 9, 16, 8, 9, 8, 4, 8, 6, 6, 4, 8, 238, 10, 8, 13, 30, 14, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 4, 8, 11, 6, 10, 11, 5, 11, 6, 5, 63, 8, 3, 7, 6, 39, 7, 4, 6, 4, 23, 11, 7, 9, 8, 4, 8, 8, 15, 6, 7, 9, 7, 9, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 10, 6, 13, 10, 7, 6, 7, 4, 9, 6, 7, 5, 11, 10, 6, 7, 9, 10, 424, 9, 11, 10, 9, 15, 7, 8, 10, 9, 12, 11, 6, 6, 9, 5, 10, 7, 8, 8, 10, 10, 12, 8, 5, 9, 637]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 9, 4, 9, 4, 8, 10, 4, 12, 12, 6, 85, 4, 7, 6, 10, 9, 6, 11, 9, 6, 4, 8, 11, 8, 9, 8, 8, 4, 7, 4, 10, 6, 5, 5, 6, 10, 11, 11, 9, 8, 7, 6, 6, 9]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 9, 9, 10, 4, 9, 11, 6, 4, 7, 9, 5, 11, 6, 8, 3, 9, 8, 7, 85, 5, 4, 8, 7, 6, 4, 5, 9, 7, 10, 10, 5, 6, 14, 4, 8, 9, 26, 25, 11, 12, 6, 4, 6, 6]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [10, 10, 10, 11, 7, 11, 11, 8, 7, 7, 6, 4, 6, 6, 333, 11, 11, 27, 10, 11, 36, 8, 5, 11, 13, 12, 6, 7, 6, 10, 13, 8, 9, 12, 11, 11, 10, 8, 10, 10, 4, 6, 17, 7, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [10, 10, 12, 4, 10, 7, 9, 9, 10, 3, 8, 18, 11, 10, 10, 8, 14, 11, 6, 8, 7, 10, 9, 26, 9, 2, 6, 10, 8, 7, 8, 12, 9, 8, 8, 10, 9, 11, 6, 10, 4, 6, 6, 146, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 4, 8, 12, 5, 3, 13, 4, 7, 9, 6, 4, 8, 7, 8, 7, 40, 5, 7, 6, 5, 4, 9, 7, 7, 7, 7, 9, 20, 9, 7, 8, 5, 5, 8, 10, 7, 7, 7, 6, 4, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [3, 10, 18, 10, 7, 12, 5, 4, 12, 8, 8, 4, 8, 12, 59, 10, 6, 13, 9, 9, 9, 9, 4, 8, 13, 10, 12, 8, 12, 12, 12, 14, 5, 9, 10, 6, 7, 98, 10, 15, 7, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 9, 5, 7, 9, 6, 6, 6, 10, 6, 7, 7, 8, 9, 7, 7, 5, 11, 3, 6, 7, 6, 4, 4, 9, 5, 8, 4, 8, 12, 202, 28, 10, 11, 9, 9, 9, 9, 5, 8, 95, 7, 43, 6, 8, 9, 7, 7, 9, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 6, 7, 7, 268, 9, 6, 4, 7, 5, 17, 176, 6, 8, 6, 2, 4, 11, 7, 5, 6, 12, 7, 3, 6, 14, 6, 7, 4, 9, 39, 4, 6, 9, 9, 477, 7, 4, 4, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [3, 2, 13, 2, 15, 4, 5, 7, 3, 8, 8, 9, 11, 4, 7, 8, 7, 4, 8, 8, 4, 10, 6, 7, 4, 9, 9, 8, 8, 8, 142, 6, 5, 5, 7, 7, 6, 11, 8, 7, 7, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [4, 12, 5, 13, 10, 8, 3, 10, 8, 7, 6, 9, 10, 4, 7, 4, 6, 11, 6, 7, 10, 174, 8, 8, 9, 4, 9, 4, 11, 10, 5, 5, 509, 9, 10, 8, 6, 4, 3, 12, 12, 3, 8, 214, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [11, 6, 7, 8, 12, 9, 11, 8, 5, 8, 10, 10, 11, 6, 10, 73, 11, 9, 153, 11, 7, 4, 5, 17, 5, 4, 5, 8, 8, 20, 4, 4, 11, 8, 11, 4, 7, 10, 5, 11, 7, 10, 7, 22, 8, 9, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [21, 12, 7, 8, 14, 8, 11, 10, 7, 4, 10, 11, 6, 6, 7, 7, 8, 5, 8, 9, 16, 325, 10, 9, 10, 10, 18, 9, 7, 7, 12, 8, 9, 2, 19, 10, 10, 10, 8, 23, 11, 18, 13, 8, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [9, 4, 10, 10, 4, 7, 12, 8, 9, 8, 4, 10, 10, 6, 9, 8, 7, 6, 6, 11, 6, 9, 7, 7, 10, 4, 7, 110, 8, 11, 10, 9, 8, 6, 9, 10, 9, 5, 11, 10, 13, 8, 11, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [13, 9, 5, 7, 5, 7, 10, 4, 7, 6, 9, 6, 9, 9, 9, 11, 4, 14, 13, 28, 11, 7, 9, 12, 8, 7, 13, 10, 6, 8, 12, 9, 11, 4, 12, 6, 4, 8, 7, 8, 7, 7, 13, 10, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [11, 14, 10, 4, 10, 7, 9, 10, 232, 9, 8, 9, 8, 7, 10, 7, 4, 5, 10, 11, 11, 9, 6, 13, 20, 6, 6, 12, 8, 9, 39, 5, 151, 8, 9, 8, 8, 18, 8, 12, 8, 6, 7, 8, 16, 9, 9, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [43, 5, 14, 11, 9, 9, 7, 9, 9, 5, 10, 11, 9, 14, 7, 452, 41, 11, 4, 4, 10, 9, 7, 6, 11, 11, 8, 10, 7, 7, 6, 14, 8, 9, 101, 16, 7, 8, 8, 11, 8, 7, 5, 19, 15, 9, 9, 13, 10, 8, 8, 12, 14, 11]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 10, 105, 11, 9, 13, 9, 8, 12, 9, 7, 10, 9, 11, 9, 13, 6, 11, 3, 6, 13, 12, 10, 9, 11, 165, 10, 8, 11, 8, 8, 10, 11, 6, 7, 8, 9, 9, 8, 8, 10, 7, 8, 8, 8, 10, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 9, 7, 9, 9, 6, 9, 8, 7, 210, 8, 6, 5, 6, 5, 12, 8, 8, 9, 9, 8, 8, 10, 6, 6, 10, 6, 11, 13, 10, 9, 10, 7, 9, 7, 6, 32, 8, 6, 10, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [13, 8, 12, 9, 3, 15, 8, 6, 9, 4, 11, 5, 7, 13, 519, 10, 5, 172, 15, 7, 7, 10, 11, 8, 11, 6, 9, 13, 5, 10, 8, 11, 8, 10, 12, 4, 10, 12, 8, 9, 13, 6, 9, 10, 9, 14, 163, 86, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [9, 14, 10, 8, 8, 8, 11, 6, 10, 11, 12, 9, 7, 34, 8, 11, 8, 9, 14, 8, 33, 7, 6, 6, 12, 12, 7, 191, 4, 11, 11, 10, 9, 11, 9, 12, 10, 10, 12, 10, 47, 9, 8, 88, 14, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 11, 6, 11, 10, 179, 9, 6, 20, 7, 12, 7, 9, 3, 47, 7, 8, 6, 7, 5, 10, 9, 7, 8, 7, 11, 4, 5, 10, 8, 9, 10, 5, 4, 7, 6, 6, 5, 9, 7, 6, 76, 9, 7, 9, 7, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 9, 7, 6, 10, 11, 10, 12, 23, 10, 10, 9, 13, 169, 12, 4, 4, 12, 4, 10, 271, 16, 9, 4, 12, 4, 300, 10, 10, 9, 9, 38, 20, 10, 11, 12, 9, 11, 8, 175, 4, 11, 7, 10, 8, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [26, 12, 6, 11, 9, 14, 12, 10, 10, 10, 8, 9, 9, 6, 10, 10, 19, 8, 4, 55, 12, 11, 9, 351, 454, 117, 12, 7, 6, 4, 7, 13, 10, 9, 9, 4, 14, 4, 9, 11, 9, 11, 5, 5, 21, 10, 11, 4, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [13, 13, 8, 16, 10, 11, 12, 6, 4, 9, 12, 10, 15, 12, 8, 11, 11, 8, 13, 451, 8, 22, 15, 12, 11, 4, 8, 4, 12, 217, 6, 372, 11, 12, 12, 11, 8, 4, 8, 4, 10, 8, 7, 10, 4, 9, 4, 15, 10, 11, 24, 15, 13, 12]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 7, 6, 5, 8, 4, 8, 4, 10, 7, 9, 11, 10, 10, 12, 6, 6, 8, 5, 7, 6, 6, 9, 4, 4, 9, 6, 9, 9, 6, 6, 8, 8, 363, 10, 11, 6, 18, 7, 7, 9, 242, 8, 3, 43, 6, 5, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [9, 5, 10, 9, 10, 8, 9, 9, 22, 6, 11, 8, 10, 16, 11, 10, 9, 9, 6, 17, 5, 6, 5, 6, 7, 10, 7, 7, 4, 4, 4, 11, 11, 8, 7, 3, 15, 6, 7, 12, 7, 7, 10, 7, 6, 12, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [15, 5, 6, 8, 8, 9, 10, 7, 8, 9, 10, 16, 8, 6, 7, 8, 5, 9, 4, 9, 16, 6, 6, 6, 507, 8, 9, 9, 7, 36, 9, 9, 5, 23, 539, 10, 5, 196, 338, 5, 164, 12, 5, 8, 8, 7, 8, 578, 9, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 11, 12, 10, 9, 8, 11, 11, 12, 13, 9, 11, 12, 4, 7, 34, 8, 11, 9, 6, 7, 12, 12, 9, 8, 10, 10, 8, 11, 11, 9, 12, 4, 13, 278, 12, 4, 11, 4, 11, 6, 14, 5, 12, 8, 9, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 5, 6, 14, 4, 6, 10, 10, 8, 8, 10, 13, 10, 4, 13, 13, 4, 10, 11, 9, 6, 6, 5, 7, 7, 10, 9, 9, 6, 5, 6, 4, 16, 9, 7, 6, 6, 4, 20, 5, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [9, 4, 12, 5, 10, 8, 8, 5, 4, 8, 8, 4, 5, 169, 5, 6, 10, 6, 10, 4, 7, 3, 9, 4, 4, 5, 8, 22, 6, 17, 5, 18, 7, 10, 4, 290, 78, 6, 7, 8, 43, 10, 12, 6, 11, 5, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 11, 4, 4, 11, 12, 15, 12, 17, 440, 11, 268, 14, 13, 5, 42, 8, 4, 4, 5, 11, 63, 10, 11, 5, 4, 10, 14, 188, 226, 4, 9, 6, 10, 10, 6, 17, 10, 11, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [3, 12, 10, 9, 11, 4, 14, 14, 13, 3, 61, 7, 64, 11, 11, 3, 9, 13, 7, 299, 9, 9, 10, 9, 11, 11, 9, 4, 4, 11, 9, 209, 10, 19, 8, 8, 12, 16, 15, 10, 3, 11, 4, 7, 199]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [12, 14, 4, 7, 8, 7, 8, 4, 5, 10, 9, 6, 6, 9, 12, 10, 10, 13, 5, 11, 4, 10, 6, 8, 5, 9, 6, 4, 7, 5, 9, 8, 5, 11, 9, 7, 8, 18, 8, 9, 4, 10, 6, 10, 4, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 6, 9, 12, 10, 10, 7, 13, 8, 8, 9, 8, 8, 9, 5, 6, 7, 11, 4, 10, 10, 7, 5, 304, 4, 10, 9, 8, 11, 7, 9, 4, 9, 9, 14, 7, 12, 8, 23, 6, 10, 10, 46, 4, 9, 11, 12, 3, 7, 114, 6, 5, 11]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 9, 4, 11, 7, 7, 5, 5, 6, 5, 7, 7, 8, 8, 5, 7, 4, 6, 7, 4, 9, 10, 6, 5, 10, 5, 4, 10, 6, 5, 7, 6, 7, 7, 8, 32, 6, 4, 8, 6, 10, 153, 6, 6, 6, 8, 51, 17, 37]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [12, 12, 11, 7, 11, 9, 13, 6, 11, 4, 11, 6, 7, 4, 5, 4, 13, 10, 6, 127, 5, 12, 11, 10, 7, 118, 28, 12, 7, 5, 3, 12, 12, 4, 4, 11, 4, 10, 12, 9, 6, 9, 4, 11, 7, 5, 3]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [7, 11, 6, 7, 4, 9, 10, 4, 7, 9, 11, 9, 3, 9, 5, 6, 10, 10, 10, 7, 9, 10, 8, 8, 11, 8, 13, 9, 5, 9, 9, 4, 7, 8, 9, 8, 8, 7, 7, 8, 7, 7, 7, 9, 377, 8, 8, 6, 8, 8, 12]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [21, 4, 8, 9, 8, 8, 12, 6, 4, 8, 8, 10, 11, 12, 4, 10, 6, 16, 9, 9, 8, 6, 11, 8, 8, 7, 10, 9, 7, 7, 5, 34, 10, 15, 8, 10, 10, 9, 9, 10, 8, 8, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [14, 5, 10, 7, 9, 6, 4, 13, 6, 3, 6, 16, 10, 7, 10, 8, 10, 10, 6, 16, 4, 8, 9, 7, 10, 9, 5, 7, 6, 5, 7, 4, 21, 6, 7, 4, 11, 518, 7, 472, 27, 6, 12, 5, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 4, 9, 4, 6, 5, 9, 4, 4, 6, 10, 6, 7, 8, 94, 8, 7, 7, 6, 10, 10, 7, 4, 7, 4, 17, 501, 9, 52, 9, 7, 6, 5, 9, 10, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 6, 9, 4, 7, 5, 2, 7, 8, 8, 7, 8, 8, 6, 8, 7, 9, 7, 12, 7, 6, 8, 7, 6, 8, 8, 8, 8, 8, 6, 8, 7, 47, 391, 7, 27, 6, 9, 6, 6, 8, 8, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [10, 10, 6, 4, 8, 6, 6, 6, 7, 14, 7, 7, 6, 6, 6, 8, 8, 6, 7, 8, 282, 6, 7, 13, 6, 8, 8, 7, 7, 8, 8, 7, 7, 12, 6, 6, 6, 6, 7, 5, 21, 14, 7, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [12, 5, 9, 8, 8, 6, 7, 6, 10, 9, 7, 6, 6, 8, 14, 4, 11, 6, 8, 7, 6, 5, 6, 7, 6, 6, 6, 7, 9, 9, 6, 6, 8, 8, 7, 10, 9, 6, 8, 4, 3, 9, 5, 9, 8, 9]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [9, 9, 8, 8, 21, 4, 8, 6, 9, 13, 6, 15, 5, 31, 13, 9, 8, 6, 11, 6, 11, 8, 12, 8, 13, 6, 12, 8, 4, 9, 5, 8, 11, 8, 8, 10, 67, 18, 9, 8, 6, 6, 11, 40, 21, 8, 11, 14, 9, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 9, 10, 9, 10, 5, 5, 7, 8, 7, 10, 7, 7, 15, 6, 7, 7, 8, 8, 10, 9, 6, 7, 7, 7, 7, 10, 8, 7, 23, 7, 8, 9, 6, 9, 8, 6, 8, 4, 8, 11, 6, 4, 246, 6, 6, 19, 5, 8, 9, 96]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [12, 10, 14, 3, 12, 6, 4, 11, 10, 11, 11, 9, 10, 10, 13, 10, 9, 10, 9, 10, 5, 10, 3, 228, 10, 19, 8, 11, 10, 5, 116, 12, 23, 11, 5, 18, 11, 17, 7, 11, 11, 16, 18, 15, 4, 5, 12, 8, 11, 164, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 4, 9, 7, 17, 4, 8, 13, 9, 8, 4, 6, 5, 4, 11, 4, 4, 15, 6, 6, 22, 9, 5, 14, 11, 10, 11, 13, 116, 3, 10, 4, 9, 10, 8, 6, 473, 485, 5, 17, 8, 9, 7, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 9, 8, 7, 7, 8, 7, 9, 15, 11, 304, 9, 10, 9, 8, 10, 6, 3, 7, 9, 5, 6, 8, 56, 7, 9, 8, 10, 7, 5, 8, 8, 9, 8, 6, 9, 3, 11, 8, 8, 9, 11, 7, 15]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [11, 10, 8, 3, 8, 4, 13, 6, 10, 8, 11, 10, 9, 4, 275, 10, 4, 10, 5, 7, 12, 3, 4, 4, 8, 7, 4, 10, 6, 8, 7, 6, 6, 282, 10, 7, 8, 234, 11, 7, 8, 2, 11, 11, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [12, 10, 9, 8, 11, 8, 9, 7, 11, 9, 9, 9, 12, 13, 8, 11, 11, 9, 11, 9, 11, 9, 9, 10, 8, 11, 11, 8, 11, 8, 9, 11, 12, 4, 10, 13, 11, 18, 9, 10, 8, 10, 6, 9, 11, 11, 12, 12, 9, 12]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [3, 8, 8, 8, 8, 3, 8, 9, 8, 6, 9, 8, 10, 7, 9, 9, 8, 8, 8, 4, 8, 5, 9, 10, 9, 7, 11, 7, 7, 4, 9, 9, 9, 8, 4, 4, 8, 9, 6, 5, 8, 7, 9, 11, 8, 13, 5, 3]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 5, 5, 6, 11, 10, 5, 10, 12, 8, 10, 5, 7, 53, 6, 9, 439, 20, 6, 17, 9, 5, 8, 10, 8, 10, 7, 9, 6, 5, 11, 8, 7, 10, 4, 7, 7, 10, 6, 7, 8, 6, 8, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 9, 10, 6, 9, 9, 11, 10, 9, 11, 12, 12, 96, 8, 10, 10, 8, 11, 11, 11, 8, 9, 4, 13, 11, 9, 9, 9, 10, 10, 7, 4, 11, 12, 11, 11, 12, 11, 10, 9, 12, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 4, 4, 4, 8, 4, 5, 4, 4, 6, 27, 4, 242, 9, 8, 4, 4, 10, 9, 4, 8, 9, 4, 5, 10, 4, 8, 4, 4, 5, 9, 9, 10, 9, 4, 10, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 12, 12, 13, 12, 10, 11, 9, 14, 8, 11, 11, 7, 10, 11, 12, 11, 8, 9, 237, 10, 12, 238, 11, 14, 12, 9, 9, 12, 12, 10, 8, 9, 10, 8, 13, 14, 11, 15, 10, 13, 13, 12, 10, 10, 11, 9, 24, 8, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 8, 8, 4, 8, 8, 8, 9, 8, 11, 57, 13, 7, 7, 6, 4, 10, 6, 5, 8, 4, 10, 8, 8, 6, 10, 7, 6, 8, 4, 8, 17, 5, 7, 11, 7, 7, 63, 8, 9, 7, 204, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 6, 10, 8, 10, 13, 12, 50, 11, 11, 12, 14, 11, 12, 13, 7, 11, 4, 12, 11, 5, 6, 13, 12, 10, 12, 148, 4, 10, 7, 12, 5, 12, 9, 12, 8, 10, 11, 12, 12, 11, 10, 11, 7, 7, 11, 12, 14, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 5, 6, 7, 4, 8, 9, 6, 9, 6, 5, 8, 9, 6, 4, 6, 7, 6, 17, 9, 14, 8, 7, 7, 8, 6, 8, 385, 7, 5, 12, 5, 10, 6, 10, 5, 5, 7, 10, 7, 36, 4, 11, 4, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [6, 12, 19, 8, 8, 10, 10, 5, 13, 14, 10, 11, 5, 9, 5, 6, 7, 2, 12, 9, 4, 123, 9, 7, 34, 8, 7, 8, 9, 7, 4, 4, 11, 7, 12, 3, 6, 10, 9, 6, 6, 10, 13, 3]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 8, 8, 4, 7, 4, 4, 7, 7, 4, 7, 3, 4, 8, 6, 8, 4, 4, 7, 5, 5, 7, 5, 9, 5, 11, 6, 7, 7, 7, 4, 13, 6, 13, 6, 8, 6, 129, 538, 8, 9, 9, 349, 186, 6, 6, 11, 9, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 8, 10, 4, 8, 8, 8, 8, 7, 8, 8, 5, 7, 7, 7, 4, 7, 8, 9, 6, 4, 11, 6, 16, 7, 4, 9, 6, 7, 14, 8, 10, 9, 9, 6, 2, 11, 207, 6, 9, 26]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [9, 7, 4, 21, 6, 5, 6, 3, 9, 7, 4, 9, 3, 7, 4, 5, 5, 4, 33, 5, 7, 3, 2, 10, 5, 12, 6, 115, 7, 7, 4, 4, 6, 10, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [10, 6, 11, 11, 11, 13, 4, 4, 12, 4, 4, 15, 5, 5, 4, 5, 12, 6, 6, 4, 4, 12, 6, 114, 7, 19, 12, 4, 5, 15, 5, 7, 7, 13, 13, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 12, 7, 2, 3, 5, 6, 14, 4, 3, 9, 11, 2, 6, 7, 5, 4, 13, 51, 8, 12, 13, 35, 7, 21, 5, 4, 16, 10, 16, 4, 3, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 6, 7, 6, 4, 9, 4, 4, 6, 7, 5, 7, 5, 12, 8, 6, 5, 4, 256, 5, 7, 7, 5, 11, 4, 9, 9, 8, 3, 4, 5, 6, 6, 6, 5, 4, 6, 10, 60, 7, 5, 5, 182, 3, 7, 6, 6, 7, 9, 4]
length(C_list) = 49
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [8, 3, 17, 22, 3, 7, 7, 6, 7, 4, 6, 10, 5, 11, 8, 4, 6, 7, 7, 124, 30, 7, 3, 7, 11, 12, 24, 9, 7, 4, 15, 11, 2, 7, 3, 10, 3, 53, 8, 7, 4, 3, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 6, 6, 6, 5, 6, 7, 4, 7, 7, 8, 5, 6, 5, 7, 8, 6, 6, 8, 3, 6, 7, 6, 11, 7, 8, 7, 5, 4, 7, 7, 5, 8, 6, 6, 6, 6, 7, 9, 6, 8, 16, 8, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [12, 14, 5, 6, 10, 11, 8, 5, 4, 11, 6, 8, 6, 5, 7, 5, 4, 6, 8, 4, 4, 12, 8, 6, 11, 8, 5, 4, 210, 10, 11, 6, 7, 6, 5, 5, 9, 15, 4, 9, 8, 4, 11, 14, 243]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [5, 10, 7, 7, 9, 7, 7, 7, 8, 8, 9, 7, 9, 6, 5, 9, 10, 5, 8, 4, 8, 4, 6, 332, 10, 7, 7, 4, 7, 28, 17, 4, 4, 6, 5, 24, 7, 519, 11, 315]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 4, 11, 11, 9, 9, 13, 12, 12, 9, 11, 10, 4, 9, 9, 13, 10, 11, 8, 5, 12, 4, 10, 11, 7, 9, 3, 10, 11, 11, 11, 10, 13, 154, 20, 13, 22, 11, 11, 11, 12, 4, 145, 22, 5, 251, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [21, 11, 9, 9, 11, 12, 11, 15, 8, 6, 11, 9, 11, 13, 9, 9, 10, 12, 8, 12, 12, 11, 15, 10, 9, 10, 16, 228, 7, 11, 9, 11, 10, 10, 12, 7, 14, 8, 10, 8, 10, 10, 10, 12, 9, 10, 15, 9, 17, 11, 17, 12, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [4, 14, 7, 14, 12, 14, 16, 14, 14, 14, 4, 16, 4, 8, 12, 8, 4, 14, 13, 8, 13, 13, 13, 12, 9, 7, 13, 7, 15, 4, 8, 15, 15, 13, 16, 9, 6, 7, 15, 14, 14, 8, 8, 16, 11, 7, 8, 4, 18, 6, 18]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [15, 4, 14, 14, 14, 16, 9, 17, 9, 7, 14, 4, 16, 6, 17, 16, 4, 13, 16, 14, 4, 6, 8, 13, 16, 12, 14, 15, 15, 4, 10, 28, 14, 13, 16, 7, 13, 5, 15, 16, 6, 16, 7, 5, 15, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [11, 4, 8, 10, 8, 7, 9, 4, 8, 10, 8, 8, 8, 9, 9, 5, 10, 7, 8, 8, 8, 7, 7, 6, 8, 10, 10, 11, 7, 9, 10, 5, 8, 10, 11, 12, 12, 5, 8, 7, 8, 11, 8, 8, 14, 6, 8, 9, 8, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [5, 10, 9, 7, 12, 10, 8, 8, 6, 6, 6, 8, 6, 4, 6, 11, 9, 10, 6, 10, 11, 6, 4, 12, 672, 6, 6, 11, 11, 107, 11, 5, 11, 4, 6, 11, 20, 8, 139, 11, 4, 9, 104, 11, 12, 11, 14, 11, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [13, 6, 12, 11, 7, 10, 12, 11, 11, 10, 10, 13, 10, 9, 8, 9, 16, 10, 11, 8, 11, 11, 34, 12, 7, 9, 10, 11, 7, 7, 5, 12, 11, 11, 74, 9, 7, 7, 6, 10, 9, 10, 7, 11, 52, 213, 6, 10, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [8, 10, 9, 10, 12, 8, 9, 9, 9, 10, 8, 12, 4, 10, 12, 14, 10, 13, 5, 41, 11, 11, 4, 7, 4, 11, 7, 6, 11, 11, 10, 10, 11, 12, 12, 4, 9, 9, 11, 9, 11, 5, 11, 11, 8, 22, 10, 10, 7, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 6, 7, 10, 9, 8, 11, 9, 11, 7, 8, 6, 6, 6, 11, 14, 5, 8, 9, 10, 45, 7, 10, 10, 7, 6, 81, 10, 7, 10, 6, 59, 14, 11, 5, 6, 10, 10, 6, 9, 9, 6, 5, 5, 9, 8, 18]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [9, 8, 9, 9, 13, 7, 8, 11, 6, 14, 4, 12, 7, 8, 16, 11, 5, 8, 5, 5, 9, 524, 3, 5, 4, 8, 10, 468, 4, 7, 7, 8, 13, 110, 19, 6, 8, 8, 5, 5, 5, 12, 8, 8, 9, 5, 4, 12]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 3, 8, 8, 8, 6, 8, 4, 8, 4, 221, 33, 9, 9, 9, 4, 9, 7, 7, 13, 8, 8, 10, 10, 9, 8, 8, 6, 10, 8, 5, 8, 9, 9, 9, 8, 7, 9, 6, 11, 7, 8, 10, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 11, 4, 9, 6, 4, 6, 10, 9, 4, 7, 8, 6, 4, 4, 11, 7, 11, 26, 6, 7, 10, 112, 4, 10, 11, 32, 7, 4, 4, 6, 7, 9, 3, 11, 4, 7, 8, 4, 7, 8, 8, 4, 7, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [15, 12, 10, 7, 8, 6, 7, 8, 12, 34, 12, 7, 6, 11, 14, 9, 8, 10, 10, 10, 7, 11, 9, 7, 10, 9, 12, 35, 8, 9, 12, 17, 15, 9, 12, 12, 12, 13, 6, 11, 7, 8, 12, 10, 15, 10, 9, 7, 10, 178, 11, 10, 8, 6, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [12, 10, 17, 9, 9, 12, 13, 15, 5, 4, 9, 7, 9, 8, 14, 23, 12, 9, 5, 9, 11, 22, 9, 14, 10, 197, 15, 22, 11, 11, 11, 10, 27, 27, 12, 10, 17, 4, 22, 9, 24, 6, 30, 19, 9, 19, 8, 10, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 8, 6, 10, 6, 8, 10, 9, 7, 7, 11, 9, 6, 10, 9, 7, 8, 11, 10, 9, 4, 6, 8, 8, 10, 9, 87, 11, 12, 82, 11, 10, 5, 10, 11, 13, 9, 12, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [9, 9, 10, 11, 10, 9, 10, 11, 9, 12, 12, 14, 13, 9, 11, 12, 15, 17, 52, 13, 14, 11, 9, 11, 8, 8, 16, 11, 33, 11, 10, 8, 9, 4, 8, 14, 9, 4, 14, 10, 8, 12, 11, 16, 9, 11, 11, 10, 12, 15, 94, 12]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [30, 5, 8, 15, 17, 6, 9, 7, 14, 7, 10, 7, 12, 16, 12, 268, 12, 7, 5, 4, 6, 8, 321, 11, 10, 8, 325, 6, 9, 20, 17, 9, 7, 9, 6, 7, 8, 7, 4, 21, 4, 52, 11, 30, 12, 8, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [23, 7, 11, 11, 8, 9, 15, 9, 11, 7, 8, 10, 11, 7, 14, 17, 124, 7, 8, 5, 15, 9, 9, 6, 8, 22, 76, 12, 7, 7, 15, 17, 10, 35, 11, 22, 9, 22, 6, 12, 6, 8, 10, 6, 10, 9, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [9, 9, 11, 12, 3, 16, 11, 7, 13, 8, 13, 25, 6, 10, 35, 10, 11, 14, 4, 14, 11, 10, 11, 9, 12, 10, 12, 12, 10, 5, 11, 12, 11, 12, 10, 7, 19, 10, 13, 13, 12, 13, 12, 12, 14, 12, 527, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [9, 7, 8, 6, 10, 23, 8, 7, 8, 8, 9, 10, 8, 8, 11, 11, 6, 8, 8, 10, 7, 9, 9, 195, 13, 6, 10, 10, 8, 9, 9, 7, 11, 6, 325, 8, 6, 7, 9, 9, 6, 32, 11, 9, 10, 9, 11, 4, 9, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [18, 11, 10, 4, 11, 13, 9, 9, 9, 11, 10, 11, 13, 12, 10, 8, 8, 11, 9, 11, 8, 9, 21, 11, 10, 4, 10, 10, 18, 10, 10, 10, 10, 11, 12, 10, 15, 11, 8, 10, 9, 10, 41, 9, 392]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [7, 13, 9, 5, 6, 10, 13, 15, 5, 8, 14, 9, 12, 10, 11, 9, 10, 9, 9, 13, 10, 12, 5, 21, 15, 10, 7, 11, 15, 5, 13, 6, 8, 14, 6, 6, 6, 3, 9, 12, 10, 8, 12, 15, 10, 11, 8, 6, 12, 7, 12, 10]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [21, 12, 6, 11, 5, 8, 6, 9, 4, 8, 6, 12, 6, 7, 6, 10, 4, 5, 4, 595, 10, 5, 13, 7, 8, 6, 11, 11, 9, 4, 14, 5, 6, 11, 4, 8, 7, 9, 8, 5, 14, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 6, 5, 9, 4, 6, 6, 4, 8, 7, 6, 6, 6, 4, 5, 6, 5, 6, 10, 9, 12, 7, 49, 27, 10, 8, 7, 8, 6, 5, 9, 4, 7, 7, 8, 6, 127, 5, 10, 11, 7, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [13, 5, 11, 11, 21, 4, 5, 8, 4, 8, 14, 7, 6, 10, 7, 5, 11, 11, 5, 8, 12, 8, 6, 10, 6, 10, 9, 7, 7, 10, 9, 10, 10, 9, 9, 18, 6, 11, 253, 7, 7, 6, 14, 10, 9, 18, 7, 10]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 7, 11, 7, 8, 8, 6, 7, 10, 10, 6, 6, 4, 6, 7, 7, 4, 6, 5, 5, 7, 9, 8, 7, 9, 10, 7, 17, 9, 6, 6, 6, 7, 15, 4, 8, 10, 15, 7, 6, 18, 8, 6, 6, 7, 9, 5, 38, 6, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [14, 18, 20, 17, 17, 15, 14, 17, 16, 18, 18, 15, 14, 13, 11, 5, 14, 15, 15, 14, 8, 19, 15, 14, 16, 14, 13, 12, 16, 11, 18, 154, 8, 20, 13, 193, 14, 16, 12, 13, 7, 10, 14, 18, 14, 17, 15, 20, 17]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [11, 8, 7, 4, 12, 7, 9, 6, 10, 9, 7, 9, 7, 6, 7, 4, 6, 8, 7, 6, 4, 6, 6, 10, 7, 13, 13, 9, 13, 557, 4, 9, 4, 6, 16, 13, 12, 11, 315, 9, 5, 7, 13, 7, 6, 7, 6, 7, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 3, 4, 3, 4, 4, 10, 4, 4, 8, 4, 7, 7, 7, 6, 4, 6, 4, 6, 5, 6, 6, 5, 7, 9, 6, 5, 6, 10, 4, 10, 9, 4, 7, 391, 9, 5, 4, 5, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 3, 7, 11, 3, 542, 3, 4, 3, 10, 48, 5, 4, 3, 3, 3, 6, 9, 8, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 8, 8, 4, 4, 4, 5, 5, 4, 3, 5, 13, 3, 6, 5, 4, 3, 4, 4, 4, 7, 8, 4, 15, 11, 3, 31, 4, 8, 13, 35, 10, 7, 9, 7, 10, 6, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [24, 3, 4, 4, 8, 7, 8, 7, 70, 6, 4, 7, 6, 14, 3, 5, 3, 4, 9, 4, 166, 6, 10, 7, 8, 23, 3, 5, 6, 5, 10, 5, 7, 245, 6, 6, 5, 272, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 4, 6, 7, 7, 7, 7, 7, 7, 9, 8, 8, 6, 7, 8, 9, 6, 4, 8, 7, 7, 9, 7, 7, 6, 9, 15, 3, 60, 7, 6, 7, 7, 7, 7, 7, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 9, 8, 2, 4, 3, 14, 4, 3, 4, 4, 4, 11, 4, 8, 6, 3, 4, 4, 13, 3, 4, 4, 3, 4, 4, 4, 6, 17, 4, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [20, 5, 10, 8, 8, 3, 7, 10, 10, 2, 7, 11, 8, 8, 4, 4, 4, 8, 6, 15, 9, 16, 9, 3, 13, 9, 4, 6, 59, 10, 4, 8, 13, 7, 15, 8, 9, 8, 9, 14, 15, 8, 4, 14, 8, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 6, 10, 3, 5, 5, 7, 7, 3, 2, 5, 3, 4, 3, 5, 4, 7, 5, 3, 3, 5, 303, 3, 10, 8, 7, 5, 16, 4, 5, 3, 4, 3, 120, 3, 281, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [4, 5, 2, 4, 6, 8, 5, 4, 53, 3, 5, 8, 3, 6, 4, 8, 7, 3, 8, 22, 5, 11, 6, 11, 4, 7, 5, 5, 4, 3, 3, 3, 8, 3, 6, 5, 7, 4, 4, 3, 8, 4, 3, 4, 11, 4, 150, 6, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 3, 4, 10, 5, 4, 11, 11, 13, 3, 5, 6, 4, 4, 4, 5, 10, 15, 13, 5, 10]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 5, 5, 3, 5, 10, 4, 3, 4, 4, 3, 5, 6, 4, 5, 3, 12, 4, 60]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 3, 4, 6, 4, 6, 4, 3, 2, 4, 4, 3, 6, 8, 8, 3, 5, 5, 4, 3, 6, 4, 25, 4, 4, 5, 3, 6, 5, 7, 3, 4, 4, 2, 3, 3, 5, 4, 7, 3, 6, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 7, 4, 5, 4, 6, 4, 7, 5, 3, 6, 4, 3, 4, 4, 3, 3, 42, 3, 4, 4, 5, 6, 4, 4, 4, 3, 3, 4, 3, 4, 9, 5, 4, 4, 12, 5, 4, 3, 154, 4, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 3, 4, 5, 170, 15, 4, 4, 3, 6, 5, 5, 3, 5, 4, 5, 4, 7, 5, 5, 4, 3, 4, 4, 168, 5, 5, 4, 7, 7, 6, 4, 5, 4, 4, 7, 5, 3, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
