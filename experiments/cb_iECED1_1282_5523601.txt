┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECED1_1282
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECED1_1282
----------------------------------
number of metabolites : 1929
number of reactions : 2706
number of genes : 1279

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2706 flux variables and 5021 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 2, 16, 17, 17, 16, 17, 16, 13, 16, 12, 11, 17, 11, 11, 11, 13, 13, 14, 13, 14, 13, 13, 4, 2, 14, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 16, 16, 30, 16, 17, 16, 11, 16, 11, 11, 11, 187, 11, 123, 13, 2, 13, 14, 13, 14, 13, 13, 2, 2, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 16, 18, 17, 16, 17, 16, 11, 16, 11, 39, 11, 11, 11, 11, 13, 13, 14, 13, 14, 13, 13, 3, 14, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 16, 16, 17, 16, 18, 16, 11, 16, 11, 27, 11, 15, 11, 11, 13, 13, 14, 13, 14, 13, 13, 6, 2, 17, 45, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 16, 16, 17, 16, 17, 16, 11, 16, 11, 11, 11, 11, 11, 11, 13, 2, 13, 14, 49, 14, 13, 13, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 10, 16, 16, 17, 17, 17, 16, 11, 16, 11, 11, 18, 11, 11, 12, 13, 14, 15, 31, 13, 14, 13, 13, 2, 4, 14, 18, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [12, 16, 16, 17, 18, 17, 16, 11, 18, 11, 13, 11, 11, 11, 11, 13, 4, 14, 14, 13, 14, 13, 13, 6, 3, 14, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 17, 17, 17, 18, 17, 18, 17, 12, 17, 12, 12, 12, 12, 12, 12, 14, 14, 15, 14, 15, 15, 14, 14, 6, 58, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 10, 16, 16, 17, 16, 17, 16, 11, 16, 11, 11, 18, 11, 11, 11, 13, 6, 13, 14, 13, 14, 13, 16, 120, 6, 14, 104, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 20, 98, 17, 16, 17, 16, 14, 16, 11, 11, 11, 11, 11, 11, 13, 3, 13, 14, 165, 37, 13, 17, 6, 4, 14, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [9, 13, 16, 16, 17, 17, 17, 18, 16, 16, 11, 11, 11, 12, 11, 11, 13, 15, 14, 13, 15, 13, 13, 8, 6, 5, 15, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 17, 53, 18, 17, 18, 17, 11, 17, 11, 11, 11, 11, 11, 11, 14, 4, 14, 17, 14, 15, 14, 14, 7, 7, 123, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 16, 16, 17, 21, 18, 16, 12, 16, 11, 11, 12, 11, 11, 39, 16, 7, 13, 14, 13, 14, 13, 13, 13, 3, 15, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 17, 17, 18, 17, 18, 17, 11, 17, 11, 11, 11, 11, 11, 11, 14, 14, 15, 14, 15, 14, 14, 8, 6, 6, 17, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 19, 19, 20, 21, 20, 19, 11, 19, 11, 11, 12, 11, 11, 11, 16, 16, 17, 16, 58, 16, 19, 6, 6, 14, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 7, 3, 2, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 5, 3, 3, 3, 8, 4, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 4, 26, 3, 15, 6, 5, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 3, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 4, 4, 6, 75, 43]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 5, 4, 16, 5, 5, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 5, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824635461962811
thermo_feasible = true
