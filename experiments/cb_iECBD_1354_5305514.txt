┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECBD_1354
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECBD_1354
----------------------------------
number of metabolites : 1952
number of reactions : 2748
number of genes : 1354

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2748 flux variables and 5105 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 25, 11, 11, 11, 11, 20, 19, 25, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 2, 2, 16, 16, 4, 3, 3, 2, 44, 7, 2, 3, 2, 41, 10, 42, 42, 2, 12, 12, 7, 2, 13, 12, 13, 13]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 7, 3, 2, 4, 2, 3, 3, 3, 4, 196, 2, 3, 4, 4, 206, 3, 9, 3, 3, 3, 3, 4, 133, 3, 5, 3, 7, 4, 4, 15, 5, 19, 4, 3, 8, 6, 4, 4, 2]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 10, 17, 11, 10, 10, 15, 10, 5, 15, 15, 16, 15, 17, 15, 15, 12, 12, 13, 13, 13, 12, 14, 13, 13, 15, 12, 12, 13, 13, 12, 13, 2, 2, 12, 12, 3, 4, 12, 13, 13, 12, 15, 38, 7, 142, 11, 39, 39, 5, 11, 9, 2, 8, 9, 12, 10, 10]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 5, 2, 4, 3, 2, 12, 15, 10, 4, 12, 26, 9, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 4, 4, 4, 5, 78, 5, 2, 3, 2, 5, 2]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 3, 6, 5, 10, 5, 11, 5, 3, 10, 2, 6, 2, 9, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 2, 4, 4, 2, 4, 18, 7, 6, 28, 5, 8, 9, 7, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 5, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 25, 15, 4, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.9756146040973593
thermo_feasible = true
