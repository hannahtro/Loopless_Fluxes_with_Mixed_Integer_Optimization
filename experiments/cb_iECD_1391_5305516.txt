┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECD_1391
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECD_1391
----------------------------------
number of metabolites : 1943
number of reactions : 2741
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 16, 16, 17, 16, 17, 16, 27, 17, 13, 14, 14, 14, 13, 13, 13, 20, 16, 13, 14, 14, 15, 14, 13, 13, 11, 13, 11, 11, 11, 18, 11, 11, 13, 40, 3, 3, 7, 2, 19, 2, 3, 2, 2, 2, 6, 88, 3, 9, 9]
length(C_list) = 52
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 5, 3, 2, 2, 4, 4, 3, 3, 3, 23, 4, 5, 2, 2, 147, 211, 9, 4, 55, 3, 17, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 2, 4, 3, 4, 4, 4, 4, 3, 6, 3, 3, 6, 4, 6, 4, 4, 4, 4, 2, 50]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 8, 3, 6, 5, 3, 22, 2, 8, 3, 6, 2, 7, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 2, 5, 6, 3, 4, 5, 7, 114]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 5, 2, 7, 12, 2, 10, 3, 2, 7, 132]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 2, 5, 2, 43, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 2, 5, 3, 7, 18, 3, 11, 12, 3, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 6, 4, 2, 4, 6, 2, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 6, 4, 5, 11, 3, 3, 15, 41, 3, 4, 6, 16]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 2, 3, 6, 3, 4, 4, 5, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 187, 6, 4, 46]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 2, 4, 4, 14, 6, 3, 5, 4, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 19, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.975614560694901
thermo_feasible = true
