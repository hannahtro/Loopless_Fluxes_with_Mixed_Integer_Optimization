┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iE2348C_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iE2348C_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2703
number of genes : 1287

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2703 flux variables and 5015 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 13, 2, 4, 2, 2, 11, 76, 13, 14, 13, 15, 19, 9, 14, 13, 13, 24, 25, 24, 24, 25, 2, 2, 6, 2, 2, 3, 3, 25, 2, 2, 3, 10, 3]
length(C_list) = 16
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 13, 2, 2, 13, 4, 6, 20, 13, 13, 13, 13, 14, 13, 9, 14, 13, 13, 24, 25, 24, 24, 25, 6, 4, 3, 10, 2, 7, 4, 2, 6, 25, 6, 6, 6, 182, 10, 3, 10]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 13, 4, 2, 3, 7, 24, 13, 13, 13, 13, 14, 13, 12, 14, 13, 13, 21, 21, 21, 21, 21, 7, 7, 6, 2, 6, 9, 4, 21, 6, 7, 25, 3, 6, 2, 10, 3, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 6, 13, 6, 6, 13, 4, 13, 13, 13, 13, 14, 13, 7, 14, 13, 13, 24, 25, 24, 24, 25, 6, 11, 8, 6, 6, 3, 6, 6, 24, 6, 6, 6, 6, 52, 7, 8, 9, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 6, 13, 3, 8, 6, 40, 38, 14, 13, 13, 20, 18, 13, 39, 14, 24, 14, 24, 25, 24, 24, 25, 6, 7, 6, 6, 6, 6, 6, 27, 24, 5, 7, 6, 8, 7, 10, 71]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 13, 7, 6, 48, 6, 10, 9, 14, 14, 14, 14, 15, 14, 9, 15, 14, 17, 26, 26, 25, 25, 26, 3, 7, 6, 58, 5, 8, 6, 6, 22, 7, 25, 6, 6, 9, 6, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 3, 2, 8, 9, 4, 5, 6, 33, 4, 5, 6, 3, 4, 4, 6, 7, 4, 4, 4, 8, 8, 3, 5, 4, 138, 8, 6, 2, 6, 5, 5, 6, 4, 3, 6, 3, 5, 277]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 13, 6, 20, 3, 10, 7, 9, 13, 13, 13, 13, 15, 13, 6, 14, 13, 135, 24, 25, 24, 24, 25, 6, 8, 29, 4, 17, 12, 7, 6, 6, 24, 4, 7, 8, 10, 9, 6, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 13, 3, 8, 6, 6, 9, 13, 13, 13, 13, 14, 13, 9, 14, 14, 13, 24, 25, 24, 24, 25, 6, 6, 4, 7, 6, 6, 6, 24, 9, 7, 6, 62, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 59, 14, 6, 3, 10, 13, 13, 13, 13, 14, 13, 6, 14, 13, 13, 24, 25, 24, 24, 25, 4, 6, 6, 6, 6, 25, 8, 6, 24, 7, 7, 12, 47, 6, 6, 10, 7, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 6, 13, 10, 6, 6, 6, 6, 9, 13, 34, 13, 13, 14, 13, 9, 6, 13, 15, 24, 6, 24, 33, 25, 6, 2, 6, 7, 7, 6, 24, 7, 7, 3, 20, 6, 11, 7, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 6, 13, 6, 7, 6, 6, 6, 10, 13, 13, 13, 13, 14, 14, 6, 14, 13, 15, 24, 25, 25, 24, 25, 6, 6, 6, 6, 7, 6, 6, 24, 7, 6, 6, 8, 9, 19]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 5, 4, 3, 3, 4, 184, 2, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 30, 5, 81]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 4, 12, 7, 24, 4, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 41, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784950802206
thermo_feasible = true
