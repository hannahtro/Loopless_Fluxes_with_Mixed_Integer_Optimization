┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECH74115_1262
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECH74115_1262
----------------------------------
number of metabolites : 1918
number of reactions : 2694
number of genes : 1262

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 108
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2694 flux variables and 4997 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 11, 11, 11, 11, 50, 3, 19, 20, 20, 19, 20, 19, 19, 18, 30, 17, 18, 17, 16, 16, 16, 16, 16, 16, 16, 17, 16, 17, 16, 16, 39, 11, 2, 2, 7, 2, 7, 4, 3, 2, 3, 7, 12, 12, 12, 12, 13, 4]
length(C_list) = 51
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 5, 2, 2, 4, 2, 4, 3, 2, 4, 4, 30, 4, 3, 2, 3, 5, 3, 5, 5, 4, 4, 3, 3, 3, 4, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 2, 3, 4, 5, 3, 3, 7, 6, 2, 4, 3, 4, 14, 4, 6, 4, 4, 4, 5, 4, 3, 4, 5, 5, 4, 3, 6, 4, 67, 5, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 4, 3, 2, 4, 4, 3, 3, 6, 2, 2, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 6, 3, 3, 9, 14, 6, 2, 4, 7, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 4, 2, 3, 4, 2, 2, 8, 10, 11, 10, 5, 8, 4, 5, 4, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 4, 4, 13, 4, 6, 5, 4, 6, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 8, 19]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 5, 4, 3, 5, 106, 6, 2, 6, 4, 5, 60, 5, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 5, 5, 5, 6, 9, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 118]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 3, 4, 6, 6, 5, 5, 5, 102, 4, 7, 6, 4, 5, 15]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 6, 12, 5, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 4, 139, 3, 5, 8, 5, 9, 10, 8, 115, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 20, 5, 100, 7, 10, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784585764532
thermo_feasible = true
