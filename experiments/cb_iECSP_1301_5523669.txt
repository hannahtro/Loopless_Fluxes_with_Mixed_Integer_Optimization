┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECSP_1301
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECSP_1301
----------------------------------
number of metabolites : 1920
number of reactions : 2712
number of genes : 1299

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2712 flux variables and 5033 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 77, 11, 11, 198, 53, 11, 11, 11, 3, 16, 17, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 2, 13, 14, 13, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 12, 11, 11, 11, 11, 11, 11, 7, 16, 16, 17, 16, 17, 20, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 2, 13, 17, 13, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 14, 11, 11, 11, 11, 11, 11, 23, 16, 17, 16, 18, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 2, 15, 14, 13, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 11, 11, 12, 11, 11, 4, 23, 19, 20, 19, 20, 19, 19, 16, 16, 19, 16, 17, 16, 16, 17, 6, 16, 2, 16, 17, 16, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 11, 11, 11, 14, 40, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 6, 13, 14, 13, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 12, 11, 11, 11, 11, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13, 14, 6, 13, 2, 13, 14, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 11, 11, 11, 11, 11, 11, 11, 22, 17, 18, 17, 19, 17, 17, 14, 14, 15, 15, 15, 14, 14, 14, 6, 14, 2, 14, 15, 14, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 11, 12, 11, 11, 11, 11, 16, 16, 17, 16, 17, 17, 16, 13, 13, 14, 13, 14, 13, 15, 15, 6, 13, 13, 5, 20, 14, 15, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 11, 11, 11, 11, 11, 11, 11, 16, 16, 19, 16, 17, 16, 16, 13, 13, 14, 13, 14, 14, 76, 6, 13, 13, 13, 7, 85, 14, 13, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 11, 6, 16, 21, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 6, 13, 14, 13, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 12, 11, 11, 11, 11, 11, 9, 35, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 17, 13, 7, 13, 14, 13, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 3, 4, 3, 3, 6, 4, 3, 2, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 3, 4, 4, 5, 6, 5, 4, 4, 5, 4, 3, 6, 5, 4, 4, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 144, 4, 2, 4, 50, 4, 24]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 5, 4, 6, 5, 13, 6, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 2, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 5, 4, 5, 14, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 2, 3, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 63, 2, 2, 2, 3, 2, 26]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 210]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 15, 20, 55, 15, 5, 14, 4, 21, 22, 7, 24, 4, 20, 4, 3, 4, 3, 3, 4, 3, 3, 46, 11, 4, 5, 17, 5, 61]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 3, 21, 4, 12, 34]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 4, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 26
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784873402483
thermo_feasible = true
