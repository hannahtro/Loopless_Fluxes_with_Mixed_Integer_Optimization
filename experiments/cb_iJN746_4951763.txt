┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN746
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN746
----------------------------------
number of metabolites : 907
number of reactions : 1054
number of genes : 746

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 11
max_cuts = 5
(indicator, big_m) = (false, true)
BIG M ADDED
model with 1054 flux variables and 2001 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 137, 3, 190, 21, 14]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 2, 7, 7, 5, 76, 10, 13, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [10, 6, 10, 3, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 29, 10, 12, 6, 5, 141, 40, 5, 9, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [15, 6, 5, 6, 5, 8, 10, 9, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 15, 3, 23, 9, 8, 77]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [19, 20, 15, 16, 96]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [35, 5, 5, 3, 134, 10, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 5, 70, 23, 77]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [22, 14, 9, 13, 13, 126, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 17, 14, 13, 11, 34, 23, 36]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [15, 152, 8, 34, 7, 7, 17, 12, 14, 64]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [49, 55, 20, 7, 20, 10, 11, 21, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 24, 24, 23, 7, 22]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 18, 9, 59, 85, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [31, 37, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 8, 57, 207, 255]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 11, 10, 32]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [9, 9, 8, 8, 6, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 24, 36]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [8, 45, 44, 44, 10, 38, 45]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [25, 6, 53, 24, 9, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [25, 28, 27, 48, 21, 32, 40, 176]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [13, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 6, 17, 209, 7, 10, 27]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 4, 35, 44, 38, 40]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [26, 9, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [12, 5, 9, 8, 9, 195]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [11, 10, 9, 10, 11, 8, 3, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [9, 3, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [14, 8, 12, 13, 12, 27, 8, 12, 12, 10, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [40, 21, 35, 14, 31, 18, 20]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [16, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [23, 26, 24, 15]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [2, 8, 9, 8, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 9, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [31, 11, 20, 11, 21, 11]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [14, 32, 33, 41, 7, 39, 49, 43, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [11, 14, 15, 14, 99, 19, 15]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 39
termination = MathOptInterface.OPTIMAL
objective_value = 1.4000000000000001
thermo_feasible = true
