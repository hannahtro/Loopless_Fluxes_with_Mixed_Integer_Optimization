WARNING: Dual bound 0.586118 is smaller than the objective of the primal solution 0.586119. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN1463
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN1463
----------------------------------
number of metabolites : 2153
number of reactions : 2927
number of genes : 1462

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 59
max_cuts = 29
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2927 flux variables and 5473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 2, 4, 6, 5, 3, 3, 3, 132, 2, 5, 6, 4, 314, 6, 4, 8, 5, 6, 213, 6, 8, 5, 10, 3, 6]
length(C_list) = 28
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 2, 2, 5, 4, 64, 5, 7, 3, 5, 10, 3, 9, 3, 12, 3, 3, 5, 132, 6, 5, 36]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 12, 4, 47, 5, 31, 3, 42, 4, 4, 12, 139, 12, 11, 4, 28, 18, 219, 12, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [12, 4, 12, 4, 4, 5, 4, 4, 12, 3, 13, 5, 12, 4, 53, 5, 7, 16, 317]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 14, 4, 8, 12, 12, 14, 7, 14, 7, 13, 13, 6, 6, 6, 6, 6, 69, 3, 4, 5, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 3, 3, 5, 11, 8, 3, 3, 97, 203, 3, 3, 4, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 9, 7, 5, 3, 6, 3, 8, 8, 4, 6, 8, 5, 7, 7, 5, 8, 5, 8, 38, 6, 9, 6, 27, 7, 5, 6, 6, 89, 6, 12, 6, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 6, 5, 5, 2, 6, 5, 7, 20, 6, 6, 6, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 18, 17, 4, 4, 51, 4, 4, 5, 8, 4, 62, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [23, 7, 4, 4, 4, 9, 7, 3, 4, 4, 3, 2, 7, 10, 153, 4, 3, 4, 5, 5, 6, 6, 101, 5, 6, 5, 6, 4, 28, 7, 8, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 7, 4, 7, 7, 59, 6, 6, 3, 8, 9, 6, 6, 7, 56, 6, 8, 11, 6, 6, 11, 6, 6, 7, 6, 6, 6, 15, 7, 6, 8, 10, 7, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 7, 4, 4, 8, 4, 11, 6, 4, 5, 22]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 7, 9, 6, 7, 28, 6, 6, 14, 4, 4, 6, 7, 7, 5, 7, 23, 6, 5, 6, 5, 12]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [16, 7, 6, 4, 4, 7, 8, 4, 4, 4, 70, 9, 7, 6, 6, 4, 39, 8, 4, 5, 10, 6, 18, 4, 4, 4, 4, 33, 5, 5, 5, 5, 6, 24, 6, 8, 4, 4, 4, 14]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 5, 5, 3, 5, 5, 5, 7, 5, 4, 4, 191, 6, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 4, 7, 3, 4, 6, 9, 3, 9, 7, 3, 6, 6, 7, 163, 6, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 5, 4, 9, 4, 17, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 7, 3, 2, 2, 7, 6, 4, 4, 9, 5, 21, 4, 2, 3, 3, 6, 6, 10, 5, 6, 7, 8, 4, 35, 3]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [29, 4, 6, 3, 9, 4, 3, 5, 5, 2, 2, 6, 6, 5, 6, 9, 2, 7, 5, 6, 7, 112, 7, 6, 4, 7, 5, 5, 15]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 40, 7, 2, 2, 4, 15, 4, 4, 3, 3, 6, 6, 4, 21, 3, 30, 6, 7, 6, 3, 5, 12, 4, 3, 3, 3, 8, 8, 3, 5, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 9, 12, 10, 4, 4, 8, 9, 8, 111, 4, 2, 3, 3, 2, 5, 21, 6, 5, 3, 10, 10, 3, 8, 12, 9, 12, 12]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 8, 10, 5, 106, 6, 4, 27, 6, 6, 7, 9, 6, 6, 10, 111, 11, 6, 7, 7, 6, 8, 9, 6, 8, 10, 7, 7, 5, 5, 8, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 10, 6, 8, 2, 13, 7, 81, 6, 351, 9, 9, 5, 170, 7, 11, 10, 11, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 10, 9, 9, 3, 7, 9, 11, 3, 4, 11, 9, 7, 20, 7, 394, 9, 7, 10, 7, 6, 9, 21, 4, 17, 23, 7, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 11, 7, 10, 4, 2, 9, 4, 5, 29, 3, 7, 199, 30, 16, 118, 3, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 6, 6, 6, 6, 3, 2, 9, 5, 8, 198, 7, 6, 7, 5, 329, 5, 7, 6, 4, 8, 4, 9]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 6, 5, 6, 4, 4, 5, 5, 5, 4, 4, 4, 5, 14, 5, 5, 4, 4, 5, 3, 4, 4, 3, 17, 8, 4, 27, 9, 5, 3, 5, 7, 58, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 20, 6, 6, 6, 9, 8, 6, 5, 6, 4, 6, 6, 10, 16, 6, 6, 5, 6, 5, 4, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 6, 13, 11, 6, 6, 10, 6, 63, 7, 9, 10, 11, 27, 6, 9, 8, 10, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 4, 7, 13, 6, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 7, 6, 4, 6, 9, 4, 5, 11, 8, 6, 5, 5, 8, 20, 167, 9, 9, 20, 7, 4, 46]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 9, 4, 9, 6, 4, 4, 4, 98, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 9, 5, 5, 5, 5, 5, 5, 6, 6, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 7, 11, 10, 9, 7, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 14, 27, 6, 2, 2, 5, 15, 5, 6, 3, 8, 3, 6, 12, 6, 254, 6, 4, 7, 4, 5, 4, 6, 6, 3]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 5, 8, 93, 9, 10, 5, 7, 6, 49]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [8, 7, 37, 8, 4, 8, 8, 6, 9, 4, 6, 6, 10, 5, 4, 6, 3, 4, 6, 8, 38, 9, 5, 7, 7, 8, 7, 8, 4, 8, 56, 6, 6, 4, 8, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 6, 6, 4, 6, 6, 6, 4, 7, 6, 6, 8, 7, 9, 6, 6, 6, 114, 22, 10, 48, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 38
termination = MathOptInterface.OPTIMAL
objective_value = 0.5861178518747926
thermo_feasible = true
