┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN746
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN746
----------------------------------
number of metabolites : 907
number of reactions : 1054
number of genes : 746

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 53
max_cuts = 21
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1054 flux variables and 2001 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [13, 2, 8, 12, 7, 8, 7, 7, 8, 10, 22, 9, 7, 8, 7, 21, 17, 20, 93, 70, 41, 16, 169]
length(C_list) = 21
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 7, 87, 3, 4, 79, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4, 13, 201, 203, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [14, 3, 6, 3, 5, 13, 6, 4, 7, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 9, 34, 167, 255, 2, 7, 20, 147]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 5, 6, 6, 119, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 4, 2, 4, 4, 6, 3, 40, 3, 38]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [9, 9, 12, 9, 12, 8, 9, 8, 9, 12, 7, 12, 8, 9, 13, 10, 7, 9, 11, 10, 9, 63, 27, 17, 10, 38, 8, 13]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 52, 10, 44, 123]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 1.4
thermo_feasible = true
