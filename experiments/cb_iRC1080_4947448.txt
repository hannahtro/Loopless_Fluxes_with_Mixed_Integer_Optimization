┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 8, 3, 4, 4, 4, 8, 3, 6, 2, 7, 3, 5, 7, 4, 3, 4, 6, 16, 4, 4, 10, 9, 9, 6, 6]
length(C_list) = 18
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 9, 4, 4, 3, 6, 5, 3, 2, 7, 3, 4, 4, 4, 3, 3, 5, 8, 3, 3, 7, 3, 8, 5, 4, 3, 41, 11]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [15, 9, 3, 4, 3, 7, 5, 8, 4, 7, 6, 3, 3, 6, 3, 7, 3, 5, 45, 9, 4, 11, 52, 4, 4, 9, 3, 4, 5, 8, 12]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 9, 9, 4, 7, 5, 9, 7, 7, 6, 6, 7, 8, 11, 35, 7, 8, 3, 5, 7, 4, 7, 8, 8, 3, 9, 6, 9, 8, 8, 9, 8, 8, 7, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 9, 5, 4, 6, 3, 5, 3, 7, 4, 8, 7, 3, 8, 3, 7, 3, 9, 7, 7, 4, 8, 6, 7, 5, 5, 5, 8, 4, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [9, 9, 7, 7, 10, 8, 4, 7, 8, 8, 9, 7, 15, 7, 3, 5, 9, 8, 5, 3, 70, 7, 6, 8, 7, 5, 7, 172, 9, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 5, 5, 5, 3, 5, 3, 4, 3, 5, 4, 9, 6, 3, 5, 13, 8, 7, 9, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 9, 5, 7, 4, 7, 7, 8, 7, 9, 7, 6, 8, 4, 9, 8, 9, 24, 5, 57, 7, 5, 6, 8, 8, 3, 8, 9, 82, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [10, 9, 7, 9, 7, 11, 9, 8, 5, 7, 7, 8, 7, 5, 8, 7, 8, 9, 7, 9, 7, 7, 8, 10, 14, 6, 9, 7, 8, 7, 6, 10, 5, 8, 10, 9, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 8, 6, 3, 6, 4, 5, 4, 7, 4, 9, 4, 5, 7, 6, 7, 7, 9, 8, 3, 10, 8, 7, 8, 8, 8, 8, 8, 9, 8, 3, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [10, 9, 11, 9, 9, 7, 9, 8, 10, 7, 8, 9, 7, 6, 10, 5, 7, 6, 6, 7, 11, 7, 10, 8, 9, 8, 8, 8, 7, 7, 7, 9, 7, 10, 8, 8, 9, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 5, 12, 6, 4, 6, 5, 8, 7, 5, 7, 7, 4, 13, 10, 8, 4, 38, 7, 10, 13, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 9, 8, 4, 5, 10, 5, 10, 8, 4, 10, 9, 8, 8, 9, 14, 4, 9, 8, 9, 10, 11, 10, 9, 10, 4, 236, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 4, 4, 3, 3, 4, 156, 7, 3, 5, 7, 7, 6, 7, 26, 9, 12, 4, 6, 8, 6, 14, 9, 4, 9, 11, 6, 6, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 8, 3, 9, 9, 8, 3, 7, 5, 7, 6, 6, 9, 9, 7, 5, 3, 9, 13, 6, 74, 7, 8, 6, 8, 4, 7, 4, 7, 9, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [9, 9, 7, 9, 8, 8, 9, 11, 9, 9, 10, 186, 8, 9, 10, 8, 7, 9, 8, 8, 5, 7, 10, 9, 8, 6, 7, 7, 8, 9, 8, 9, 8, 7, 6, 8, 9, 136, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 9, 8, 7, 9, 8, 8, 8, 8, 8, 7, 10, 8, 9, 9, 7, 8, 18, 7, 8, 6, 9, 7, 8, 129, 8, 8, 8, 9, 7, 9, 8, 140, 7, 8, 12, 97, 6, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 7, 3, 4, 7, 7, 3, 3, 3, 7, 11, 13, 3, 3, 8, 6, 7, 3, 8, 14, 9, 7, 8, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 3, 7, 6, 9, 7, 89, 7, 7, 8, 7, 8, 4, 28, 8, 7, 4, 8, 13, 6, 8, 4, 10, 8, 7, 9, 7, 8, 13, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 9, 3, 10, 3, 3, 9, 10, 3, 8, 9, 9, 7, 8, 9, 9, 7, 24, 9, 10, 11, 8, 8, 13, 10, 8, 10, 33, 31, 8, 8, 10, 4, 10, 11, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 4, 7, 5, 4, 3, 7, 3, 7, 5, 4, 4, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 3, 5, 3, 7, 3, 4, 4, 4, 16, 7, 6, 9, 3, 7, 6, 7, 7, 7, 9, 19, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 110, 4, 4, 5, 4, 5, 5, 170]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 9, 7, 10, 5, 7, 5, 9, 11, 7, 6, 4, 10, 3, 7, 6, 7, 5, 7, 7, 13, 142, 130, 5, 9, 13, 7, 6, 10, 6, 3, 3, 9, 8, 7, 4, 8, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [12, 9, 14, 7, 9, 10, 7, 11, 6, 10, 10, 10, 11, 7, 8, 7, 7, 11, 10, 16, 11, 12, 11, 6, 13, 7, 11]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 3, 3, 7, 7, 56, 8, 11, 12, 8, 12, 8, 8, 14, 13, 6, 4, 3, 8, 8, 8, 8, 9, 4, 22, 3, 9, 7, 15, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 4, 10, 8, 4, 8, 7, 4, 7, 520, 3, 4, 6, 7, 4, 6, 3, 7, 3, 4, 8, 3, 13, 3, 7, 8, 7, 3, 7, 8, 8, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [14, 8, 10, 8, 7, 7, 7, 7, 7, 8, 9, 8, 7, 13, 9, 279, 13, 9, 7, 9, 9, 15, 6, 11, 6, 13, 6, 7, 10, 8, 7, 353, 9, 11, 15, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 5, 3, 3, 3, 3, 8, 3, 3, 5, 7, 3, 60, 4, 50, 3, 8, 6, 3, 64, 8, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [7, 4, 10, 7, 32, 16, 3, 7, 17, 6, 5, 12, 17, 9, 4, 4, 4, 156, 7, 22, 7, 10, 271, 13, 8, 8, 10, 6, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 8, 4, 9, 5, 12, 7, 7, 3, 7, 7, 6, 6, 4, 5, 5, 6, 7, 7, 3, 12, 7, 7, 8, 3, 4, 7, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 16, 3, 7, 18, 7, 6, 7, 5, 8, 9, 8, 9, 15, 7, 7, 5, 7, 8, 44, 5, 9, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 5, 176, 15, 10, 10, 61, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [7, 5, 8, 7, 52, 6, 8, 170]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 8, 7, 7, 52, 8, 7, 8, 7, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 15, 3, 21, 3, 7, 6, 12, 7, 7, 8, 14, 8, 9, 7, 7, 4, 9, 10, 16, 13, 20, 15, 3, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 11, 14, 4, 11, 9, 6, 5, 3, 3, 10, 8, 5, 7, 9, 3, 3, 59, 8, 8, 5, 8, 5, 7, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 12, 9, 8, 9, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [8, 4, 10, 5, 9, 10, 4, 3, 6, 11, 7, 6, 15, 9, 11, 12, 11, 9, 6, 70, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 9, 323, 490, 8, 11, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 14, 8, 38, 5, 105]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 8, 7, 7, 8, 4, 7, 8, 9, 9, 8, 11, 8, 3, 8, 8, 9, 8, 16, 8, 7, 8, 7, 9, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 8, 8, 9, 8, 4, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 7, 7, 8, 7, 8, 7, 8, 9, 7, 9, 8, 7, 8, 7, 6, 8, 8, 58, 8, 16, 7, 9, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [10, 10, 7, 3, 8, 8, 8, 8, 3, 7, 18, 4, 8, 4, 3, 7, 8, 8, 7, 7, 4, 7, 7, 8, 3, 8, 4, 15, 8, 8, 7, 9, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [13, 14, 14, 14, 13, 17, 14, 13, 13, 14, 26, 286, 13, 14, 26, 16, 14, 12, 27, 14, 14, 30, 13, 15, 12, 14, 47, 14, 14, 13, 14, 15, 27]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 24, 26, 5, 34, 13, 7, 23, 3, 15, 29, 16, 6, 4, 10, 11, 21, 4, 9, 13, 56, 21, 13, 4, 4, 13, 7, 13, 78, 5, 27, 25]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [8, 4, 10, 6, 4, 8, 7, 5, 5, 5, 5, 9, 7, 6, 5, 34, 8, 6, 5, 5, 12, 7, 6, 5, 10, 5, 5, 34, 25, 5, 6, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [13, 4, 8, 22, 3, 4, 3, 16, 28, 14, 13, 12, 26, 14, 16, 15, 25, 15, 15, 15, 108, 26, 28, 5, 6, 15]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 4, 13, 4, 13, 12, 6, 5, 12, 4, 12, 6, 81, 12, 133, 6, 6, 10, 9, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 6, 8, 3, 7, 7, 7, 7, 7, 8, 7, 8, 8, 6, 7, 8, 8, 9, 9, 6, 5, 8, 7, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [8, 3, 10, 8, 10, 7, 9, 4, 11, 69, 5, 9, 5, 10, 12, 9, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 5, 4, 6, 8, 3, 7, 3, 7, 5, 7, 8, 8, 10, 7, 7, 16, 9, 5, 8, 8, 10, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 4, 4, 4, 6, 4, 4, 6, 4, 4, 24, 7, 7, 4, 5, 7, 4, 4, 12, 4, 5, 19, 11, 7, 4, 5, 11]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 3, 7, 14, 9, 11, 8, 7, 9, 8, 8, 8, 14, 7, 9, 8, 9, 7, 8, 7, 8, 8, 9, 4, 24, 8, 7, 7, 15, 7, 9, 19, 7, 26]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 7, 8, 10, 6, 7, 5, 5, 8, 7, 17, 6, 6, 7, 4, 6, 4, 8, 7, 8, 8, 5, 7, 8, 8, 6, 7, 10, 8, 9, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [10, 3, 7, 3, 7, 4, 7, 8, 3, 4, 7, 4, 9, 7, 4, 7, 7, 4, 7, 8, 107, 7, 7, 6, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 13, 4, 6, 5, 8, 4, 5, 6, 8, 4, 6, 5, 7, 14, 8, 6, 8, 8, 25, 5, 8, 8, 28, 8, 7, 256, 22]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 8, 7, 7, 8, 7, 7, 4, 9, 8, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 7, 148, 38, 7, 257, 8, 4, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [10, 12, 6, 8, 8, 8, 7, 10, 8, 8, 9, 7, 147, 7, 10, 9, 7, 9, 9, 9, 8, 8, 8, 10, 10, 10, 7, 8, 8, 8, 8, 31, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 3, 4, 4, 9, 5, 4, 4, 3, 12, 190, 3, 23, 6, 6, 4, 4, 3, 7, 5, 4, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [7, 10, 7, 10, 8, 4, 8, 5, 4, 7, 8, 4, 4, 4, 8, 4, 4, 4, 4, 9, 35, 9, 9, 7, 7, 7, 8, 11, 11, 6, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [8, 4, 17, 14, 4, 4, 16, 5, 15, 3, 4, 9, 14, 9, 4, 17, 9, 3, 4, 14, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 4, 5, 5, 5, 8, 242, 4, 5, 5, 7, 4, 6, 32, 5, 9, 7, 5, 7, 5, 9, 5, 4, 5, 6, 7, 6, 6, 33]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 9, 8, 16, 20]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 8, 9, 12]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 7, 7, 7, 7, 7, 7, 25, 8, 8, 7, 8, 5, 7, 200, 49]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [3, 4, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 7, 9, 7, 8, 9, 8, 3, 10, 8, 11, 8, 8, 8, 8, 9, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 8, 8, 7, 8, 8, 7, 8, 7, 11, 10, 8, 10, 9, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [6, 9, 8, 8, 7, 7, 8, 5, 4, 8, 27, 7, 7, 8, 8, 8, 7, 10, 7, 8, 7, 7, 4, 7, 9, 8, 8, 160, 8, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 3, 8, 6, 21, 3, 4, 8, 3, 7, 8, 7, 8, 9, 8, 7, 4, 9, 34, 7, 134, 8, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 8, 10, 27, 8, 7, 7, 8, 13, 9, 7, 8, 8, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [8, 13, 7, 8, 9, 9, 8, 12, 7, 7, 11, 8, 10, 50, 8, 88, 42, 9, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [22, 8, 22, 20, 21, 7, 14, 15, 24, 21, 15, 14, 25, 30, 22, 20, 22, 24, 22, 23, 25, 25, 28, 15, 23, 16, 15, 14, 21, 19, 14, 23, 29, 24, 25]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [14, 14, 17, 17, 39, 15, 17]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [26, 11, 8, 29, 9, 12, 11, 8, 9, 17, 10, 30, 29, 30, 24, 9, 12, 17, 28]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 7, 7, 7, 8, 4, 12, 112]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 8, 8, 6, 8, 7, 5, 8, 8, 9]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [13, 17, 14, 8, 613, 23, 20]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 5, 4, 6, 13, 6, 8, 5, 9, 7, 16]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [3, 4, 15, 6, 9, 8, 5, 17, 16, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 84
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
