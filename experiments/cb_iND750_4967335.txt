┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iND750
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iND750
----------------------------------
number of metabolites : 1059
number of reactions : 1266
number of genes : 750

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 63
max_cuts = 25
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1266 flux variables and 2416 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 111, 3, 2, 3, 4, 4, 9, 6, 6, 8, 173, 7, 4, 19, 4, 4, 103]
length(C_list) = 21
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 4, 143, 4, 44, 4, 6, 6, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 7, 9, 4, 3, 8, 3, 10, 7, 6, 2, 35, 7, 4, 29, 33]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 4, 4, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 25, 4, 6, 45]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 8, 6, 3, 4, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 3, 28, 17, 20, 20, 19, 27, 19, 20, 5, 17, 19, 2, 27, 21]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 8
termination = MathOptInterface.OPTIMAL
objective_value = 0.09732337722813647
thermo_feasible = true
