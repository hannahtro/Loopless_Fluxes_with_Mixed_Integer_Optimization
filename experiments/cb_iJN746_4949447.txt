┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN746
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN746
----------------------------------
number of metabolites : 907
number of reactions : 1054
number of genes : 746

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 21
max_cuts = 5
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1054 flux variables and 2001 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [13, 2, 8, 12, 7, 8, 7, 7, 8, 10, 22, 9]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 5, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 12, 5, 15, 174, 26, 3, 53]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [26, 5, 3, 7, 7, 25, 20, 7, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 12, 18, 10, 10, 165, 8, 26, 23, 25, 41, 285, 22, 14, 14, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 13, 3, 8, 9, 5, 9, 282]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [15, 8, 7, 10, 96, 10, 15, 7, 9, 9, 10, 9, 23, 7, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [9, 3, 140, 139, 12, 13, 7, 6, 13, 10, 230, 12, 239, 11]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
MIS problem not feasible
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 272]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 9, 15, 10, 12, 9, 8, 10, 10, 12, 20, 131, 189, 141]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [18, 11, 11, 8, 10, 8, 17, 16, 72, 17, 3, 10, 11, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 9, 8, 9, 8, 9, 16, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 5, 11, 6, 10, 12, 10, 11, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [14, 8, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 10, 11, 7, 139, 4, 11, 18, 11, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 17
termination = MathOptInterface.OPTIMAL
objective_value = 1.4
thermo_feasible = true
