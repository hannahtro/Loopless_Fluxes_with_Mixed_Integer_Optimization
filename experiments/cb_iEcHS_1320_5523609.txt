┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcHS_1320
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcHS_1320
----------------------------------
number of metabolites : 1963
number of reactions : 2753
number of genes : 1321

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2753 flux variables and 5115 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 16, 16, 17, 16, 17, 16, 16, 13, 14, 14, 13, 24, 13, 13, 13, 236, 17, 140, 87, 13, 14, 13, 14, 13, 13, 13, 24, 12, 11, 11, 11, 11, 26, 7, 2, 11, 9, 2, 17]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 16, 39, 17, 16, 17, 17, 16, 13, 13, 15, 15, 17, 14, 14, 24, 13, 14, 13, 14, 14, 13, 26, 13, 16, 13, 13, 13, 14, 14, 13, 11, 15, 18, 153, 2, 3, 115, 2, 2, 11]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 16, 16, 18, 16, 17, 16, 74, 13, 13, 17, 13, 14, 13, 14, 14, 13, 13, 13, 14, 13, 14, 13, 13, 15, 14, 13, 11, 11, 11, 11, 2, 3, 11, 3, 11]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 8, 2, 18, 16, 17, 158, 17, 16, 16, 13, 13, 14, 13, 16, 13, 13, 14, 14, 13, 14, 13, 14, 14, 13, 75, 11, 11, 11, 11, 11, 13, 6, 7, 11, 3, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 14, 14, 13, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 3, 6, 11, 3, 4, 21]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 32, 19, 19, 20, 21, 20, 20, 97, 16, 17, 17, 21, 17, 16, 16, 246, 16, 16, 16, 17, 16, 17, 16, 16, 11, 11, 11, 11, 11, 4, 2, 11, 6, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 2, 6, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 18, 17, 16, 16, 17, 16, 16, 17, 16, 17, 16, 16, 142, 11, 11, 11, 12, 7, 4, 11, 3, 6, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 23, 9, 13, 6, 3, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 41, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 19, 13, 14, 13, 14, 13, 13, 13, 16, 11, 11, 11, 11, 11, 2, 7, 11, 8, 5, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 25, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 14, 13, 14, 13, 14, 13, 13, 13, 11, 11, 11, 11, 11, 3, 2, 12, 6, 3, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 172, 16, 17, 59, 17, 16, 16, 13, 13, 14, 13, 14, 13, 14, 14, 19, 13, 13, 14, 14, 14, 16, 13, 19, 13, 11, 11, 11, 11, 62, 13, 15, 5, 7, 11, 7, 3, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 2, 7, 19, 20, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 30, 17, 16, 16, 17, 16, 17, 16, 16, 71, 12, 11, 11, 11, 11, 18, 7, 5, 14, 197, 9, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 16, 16, 18, 16, 17, 16, 44, 13, 13, 14, 13, 14, 13, 13, 17, 47, 13, 13, 15, 13, 14, 13, 13, 14, 11, 11, 11, 11, 11, 6, 10, 13, 6, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 26, 6, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 15, 14, 13, 13, 13, 13, 13, 14, 13, 14, 13, 13, 14, 11, 11, 11, 11, 11, 6, 3, 11, 10, 3, 19]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 245, 47, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 14, 14, 77, 14, 13, 13, 188, 13, 14, 13, 13, 14, 11, 11, 11, 11, 11, 6, 9, 11, 8, 6, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 17, 27, 18, 16, 17, 16, 16, 13, 13, 198, 13, 14, 17, 13, 14, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 41, 4, 11, 6, 7, 21]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 16, 19, 17, 18, 17, 16, 16, 13, 14, 15, 13, 14, 13, 13, 13, 14, 13, 29, 14, 53, 14, 13, 14, 13, 13, 11, 22, 11, 12, 11, 13, 6, 7, 11, 7, 6, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 2, 3, 2, 5, 5, 2, 2, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 6, 4, 11, 38, 2, 6, 7, 7, 2, 12, 4, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 158, 3, 4, 6, 6, 2, 7, 6, 38]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 4, 4, 3, 4, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4, 6, 186]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 3, 4, 14, 6, 7, 13, 6, 5, 4, 7, 3, 13, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 23
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784909321175
thermo_feasible = true
