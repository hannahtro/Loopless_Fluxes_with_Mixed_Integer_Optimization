ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 25
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 3, 22, 2, 10, 7, 6, 2, 3, 4, 3, 4, 3, 2, 4, 3, 9, 4, 5, 6, 6, 2, 4, 5, 197, 2, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 9, 135, 2, 2, 2, 4, 4, 4, 4, 2, 8, 3, 4, 5, 4, 8, 2, 5, 111, 4, 2, 4, 5, 2, 4, 9, 3, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 6, 4, 6, 4, 2, 3, 7, 5, 6, 4, 3, 6, 5, 3, 8, 6, 3, 9, 4, 5, 5, 5, 22, 4, 4, 491, 7, 16, 6, 5, 3, 67, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 4, 7, 6, 6, 5, 4, 7, 5, 5, 5, 9, 3, 4, 3, 3, 5, 8, 5, 4, 4, 5, 5, 3, 7, 8, 2, 5, 10, 4, 575, 2, 4, 68]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 3, 4, 4, 8, 2, 9, 7, 9, 4, 6, 5, 10, 5, 4, 5, 3, 4, 2, 5, 3, 154, 5, 5, 4, 7, 2, 40, 8, 4, 3, 5, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 6, 4, 3, 4, 5, 105, 4, 44, 4, 2, 5, 4, 4, 5, 8, 6, 4, 26, 5, 8, 9, 3, 7, 4, 3, 4, 5, 4, 133, 7, 4, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 3, 4, 9, 4, 6, 4, 3, 4, 5, 4, 4, 5, 9, 4, 4, 236, 4, 4, 9, 4, 20, 6, 7, 4, 3, 5, 5, 17, 11, 62, 8, 2, 154, 9, 4, 405]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 4, 8, 4, 13, 5, 4, 10, 4, 9, 4, 6, 7, 5, 7, 8, 5, 4, 5, 5, 4, 4, 7, 8, 10, 6, 5, 5, 12, 4, 4, 5, 7, 7, 4, 4, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 236, 7, 4, 5, 7, 10, 4, 3, 4, 4, 5, 4, 4, 4, 6, 6, 5, 9, 5, 4, 4, 6, 4, 4, 186, 4, 5, 7, 7, 2, 7, 5, 3, 4, 4, 4, 6, 7, 5, 3, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 3, 8, 3, 2, 4, 7, 4, 4, 5, 10, 6, 10, 5, 7, 4, 3, 4, 6, 2, 5, 13, 5, 7, 5, 4, 7, 12, 4, 3, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 5, 9, 9, 3, 10, 4, 7, 8, 4, 4, 4, 3, 5, 3, 6, 6, 8, 7, 3, 4, 6, 8, 200, 7, 7, 7, 7, 10, 3, 7, 3, 7, 8, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 3, 4, 4, 4, 164, 5, 6, 8, 5, 7, 4, 6, 4, 4, 169, 6, 9, 7, 7, 8, 236, 8, 7, 3, 7, 4, 8, 3, 7, 7, 9, 7, 7, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 2, 13, 3, 7, 3, 5, 4, 4, 5, 4, 6, 6, 6, 6, 8, 6, 15, 3, 215, 8, 6, 5, 4, 5, 3, 14, 3, 6, 5, 5, 5, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 5, 20, 3, 13, 4, 7, 8, 4, 2, 4, 5, 16, 4, 9, 25, 10, 4, 3, 3, 7, 5, 3, 2, 4, 4, 2, 3, 5, 129, 3, 5, 4, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 9, 3, 5, 7, 7, 7, 3, 7, 9, 9, 3, 4, 4, 6, 8, 4, 7, 124, 4, 4, 7, 8, 4, 6, 3, 4, 5, 7, 5, 8, 4, 4, 16, 3, 4, 7, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 9, 7, 6, 5, 3, 6, 4, 41, 5, 6, 4, 4, 4, 4, 3, 5, 4, 9, 3, 9, 9, 15, 3, 4, 6, 3, 4, 3, 6, 5, 5, 4, 3, 3, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 6, 5, 3, 5, 5, 3, 6, 4, 2, 4, 8, 4, 34, 6, 7, 9, 8, 29, 7, 3, 5, 5, 3, 5, 4, 5, 3, 4, 6, 2, 8, 6, 5, 3]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 4, 359, 4, 7, 4, 15, 11, 12, 9, 13, 5, 8, 3, 5, 10, 4, 5, 4, 4, 8, 4, 5, 5, 3, 20, 6, 3, 215, 3, 6, 5, 4, 7, 8, 3, 126, 7, 3, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 6, 5, 5, 9, 4, 6, 9, 6, 6, 8, 7, 6, 3, 4, 4, 3, 8, 4, 5, 4, 2, 6, 7, 8, 3, 4, 8, 5, 73, 5, 7, 7, 4, 6, 9, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 4, 301, 4, 5, 5, 4, 6, 6, 6, 4, 4, 5, 10, 9, 3, 4, 4, 8, 9, 5, 7, 5, 3, 77, 17, 6, 4, 7, 231, 11, 4, 9, 51, 6, 14, 5, 5, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 234, 10, 5, 3, 7, 7, 6, 8, 4, 4, 4, 8, 5, 4, 5, 7, 7, 6, 104, 5, 3, 5, 6, 6, 6, 4, 6, 5, 9, 4, 5, 11, 4, 6, 8, 7, 4, 3, 7, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 9, 9, 6, 17, 8, 20, 10, 5, 10, 9, 10, 8, 10, 121, 139, 4, 5, 5, 5, 7, 2, 22, 5, 9, 10, 5, 170, 8, 6, 3, 6, 13, 4, 4, 22, 4, 3, 4, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [14, 3, 5, 3, 6, 7, 4, 9, 4, 3, 4, 3, 4, 9, 4, 4, 8, 3, 4, 7, 4, 3, 6, 6, 4, 4, 4, 411, 4, 7, 3, 4, 4, 4, 4, 4, 3, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 3, 3, 8, 4, 10, 4, 6, 8, 4, 4, 19, 4, 4, 3, 13, 26, 7, 6, 10, 5, 4, 6, 40, 408, 3, 10, 10, 4, 9, 5, 3, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [11, 3, 7, 4, 6, 8, 9, 10, 11, 7, 3, 4, 5, 8, 3, 4, 3, 5, 3, 13, 6, 4, 5, 4, 4, 11, 6, 4, 7, 9, 9, 4, 11, 345]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [13, 3, 4, 13, 7, 4, 7, 8, 10, 10, 4, 3, 9, 13, 3, 4, 4, 8, 12, 4, 4, 4, 6, 5, 7, 13, 6, 7, 9, 3, 4, 8, 4, 4, 4, 5, 3, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [14, 4, 9, 12, 6, 3, 8, 10, 4, 12, 4, 11, 7, 7, 4, 110, 4, 10, 4, 4, 3, 5, 7, 101, 4, 4, 11, 12, 9, 4, 8, 7, 8]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [23, 53, 4, 3, 8, 8, 48, 7, 12, 4, 11, 4, 8, 3, 11, 10, 6, 10, 8, 4, 10, 5, 7, 7, 5, 9, 10, 8, 43, 4, 3, 33, 3, 11, 7, 5, 4, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [13, 5, 5, 8, 7, 2, 10, 6, 357, 9, 4, 4, 6, 4, 8, 3, 3, 3, 4, 9, 5, 5, 138, 6, 5, 4, 3, 7, 6, 8, 6, 13, 3, 5, 4, 4, 9, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [2, 3, 10, 4, 8, 9, 7, 9, 3, 106, 4, 8, 4, 3, 4, 3, 10, 8, 4, 9, 10, 4, 3, 3, 6, 10, 5, 4, 7, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [13, 5, 5, 8, 9, 8, 6, 4, 335, 4, 6, 4, 4, 4, 4, 8, 10, 18, 91, 8, 5, 3, 4, 3, 4, 4, 5, 7, 7, 5, 7, 6, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 7, 3, 7, 3, 63, 4, 10, 3, 9, 4, 11, 9, 9, 4, 14, 8, 4, 10, 10, 5, 4, 15, 4, 4, 12, 7, 6, 9, 12, 8, 9, 11]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 5, 11, 5, 6, 3, 4, 7, 5, 10, 8, 6, 7, 6, 5, 4, 7, 2, 3, 4, 4, 5, 4, 7, 6, 4, 118, 6, 6, 10, 9, 12, 6, 10, 6, 3, 7, 75]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [17, 3, 5, 5, 4, 8, 7, 8, 3, 4, 10, 21, 11, 6, 8, 4, 10, 11, 5, 11, 32, 6, 4, 4, 4, 4, 5, 9, 5, 6, 6, 3, 4, 13, 7, 8, 9, 6, 5, 4, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 4, 4, 7, 4, 5, 4, 3, 3, 5, 5, 3, 111, 5, 3, 3, 10, 194, 8, 8, 5, 4, 10, 12, 8, 5, 4, 3, 3, 5, 7, 6, 4, 4, 4, 4, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 6, 8, 10, 9, 10, 4, 4, 4, 4, 9, 3, 4, 6, 3, 4, 3, 6, 31, 4, 9, 3, 4, 5, 4, 82, 5, 4, 4, 8, 4, 4, 6, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [16, 3, 8, 4, 3, 10, 5, 10, 9, 6, 5, 24, 4, 4, 223, 7, 5, 8, 3, 4, 8, 4, 4, 6, 3, 4, 9, 5, 5, 5, 8, 5, 3, 4, 8, 3, 4, 6, 10, 4, 6, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 7, 5, 9, 7, 4, 8, 7, 4, 5, 9, 9, 3, 5, 3, 9, 15, 4, 7, 3, 6, 8, 9, 8, 7, 233, 8, 13, 3, 5, 5, 9, 3, 6, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 4, 9, 9, 8, 4, 11, 6, 10, 3, 9, 9, 3, 7, 5, 5, 5, 9, 12, 6, 9, 6, 7, 7, 6, 8, 4, 6, 10, 8, 8, 9, 3, 8, 5, 11, 4, 3, 59, 12, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 6, 3, 3, 8, 8, 3, 57, 6, 6, 8, 6, 5, 3, 3, 3, 8, 10, 11, 13, 51, 54, 8, 8, 7, 4, 10, 7, 6, 8, 5, 4, 4, 5, 13, 5, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [6, 13, 14, 10, 3, 4, 7, 5, 4, 9, 7, 4, 9, 9, 7, 7, 7, 6, 8, 7, 7, 6, 9, 11, 6, 7, 10, 8, 388, 6, 14, 3, 19, 8, 3, 9, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [5, 19, 4, 5, 8, 8, 9, 5, 3, 10, 3, 9, 9, 4, 10, 9, 5, 8, 8, 7, 11, 8, 6, 8, 4, 4, 4, 3, 11, 6, 7, 4, 4, 9, 7, 10, 257]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [20, 3, 12, 9, 6, 5, 10, 10, 3, 3, 11, 6, 6, 10, 6, 5, 8, 6, 7, 3, 4, 7, 7, 10, 7, 5, 4, 7, 19, 9, 5, 9, 41, 5, 5, 4, 12, 3, 525, 7, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [7, 3, 10, 4, 7, 3, 5, 9, 4, 4, 4, 4, 7, 4, 5, 7, 9, 6, 5, 16, 7, 8, 4, 9, 5, 8, 6, 12, 13, 3, 13, 5, 7, 4, 5, 9, 7, 14, 425]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [15, 3, 4, 7, 8, 10, 4, 10, 6, 5, 28, 13, 7, 9, 7, 8, 9, 6, 7, 4, 4, 9, 6, 9, 266, 109, 11, 6, 6, 8, 10, 7, 4, 7, 9, 49, 8, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 9, 3, 3, 6, 4, 10, 10, 4, 5, 7, 7, 10, 9, 6, 11, 9, 7, 6, 7, 3, 3, 6, 5, 6, 9, 8, 4, 6, 12, 4, 11, 4, 5, 4, 8, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [19, 3, 12, 4, 7, 9, 5, 15, 8, 3, 7, 8, 3, 6, 5, 10, 3, 4, 7, 10, 4, 4, 13, 5, 10, 13, 9, 9, 9, 4, 6, 7, 9, 12, 6, 6, 58, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 3, 6, 8, 8, 4, 9, 3, 9, 3, 3, 7, 9, 7, 5, 10, 8, 23, 8, 7, 10, 6, 10, 7, 7, 7, 7, 4, 14, 7, 8, 51, 8, 397, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [9, 5, 3, 7, 6, 3, 12, 6, 6, 12, 9, 6, 9, 6, 33, 3, 26, 9, 14, 6, 7, 2, 9, 3, 3, 8, 4, 8, 150, 5, 4, 13, 7, 6, 6, 8, 28, 7, 5, 7, 6, 8, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 9, 4, 6, 10, 4, 8, 15, 25, 4, 58, 6, 6, 8, 9, 5, 9, 4, 2, 4, 9, 6, 6, 6, 3, 5, 6, 62, 14, 6, 10, 5, 12, 6, 11]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [8, 15, 9, 7, 5, 2, 7, 3, 4, 7, 3, 8, 12, 6, 4, 4, 12, 3, 7, 59, 5, 10, 4, 23, 3, 9, 477, 12, 10, 6, 412, 8, 18, 5, 7, 5, 10, 9, 5, 8, 18]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 4, 3, 4, 13, 17, 3, 262, 6, 14, 4, 14, 4, 5, 5, 5, 7, 6, 9, 9, 39, 9, 102, 4, 3, 7, 5, 7, 4, 9, 4, 8, 5, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 4, 3, 11, 4, 5, 9, 4, 4, 5, 3, 5, 3, 5, 6, 4, 5, 4, 4, 5, 11, 4, 5, 6, 24, 4, 3, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [11, 12, 10, 7, 3, 4, 15, 5, 8, 4, 4, 5, 6, 3, 6, 16, 4, 4, 5, 5, 7, 7, 3, 4, 5, 212, 56, 4, 9, 4, 5, 3, 6, 4, 5, 4, 5, 7, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 6, 7, 7, 7, 8, 10, 6, 8, 7, 7, 11, 9, 6, 3, 12, 128, 8, 7, 7, 4, 11, 3, 9, 5, 4, 222, 6, 4, 28, 3, 10, 460, 11, 7, 6, 8, 2, 6, 7, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 6, 3, 4, 4, 4, 4, 6, 6, 6, 6, 6, 3, 3, 3, 6, 4, 3, 5, 16, 6, 4, 7, 4, 9, 3, 6, 13, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [14, 6, 5, 6, 6, 11, 5, 7, 7, 7, 5, 24, 9, 4, 5, 3, 3, 9, 8, 6, 3, 9, 4, 6, 6, 4, 6, 14, 6, 5, 4, 13, 5, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [8, 15, 5, 4, 6, 3, 53, 6, 6, 6, 10, 4, 4, 6, 5, 3, 18, 19, 18, 12, 8, 6, 5, 4, 6, 5, 16, 3, 20, 273, 18, 477, 9, 77, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [12, 7, 4, 6, 18, 4, 7, 172, 10, 23, 5, 10, 7, 4, 14, 15, 3, 7, 12, 3, 8, 4, 7, 16, 4, 10, 6, 6, 19, 8, 9, 7, 11, 5, 4, 11, 15, 96, 8, 46, 11]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [2, 13, 7, 5, 6, 8, 7, 8, 10, 7, 8, 7, 4, 7, 469, 4, 11, 11, 7, 9, 7, 4, 16, 7, 5, 13, 6, 7, 10, 3, 10, 4, 9, 4, 8, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 6, 6, 7, 6, 6, 14, 12, 9, 15, 4, 7, 3, 7, 7, 7, 7, 7, 7, 6, 6, 6, 11, 11, 7, 440, 6, 6, 242, 10, 6, 9, 7, 7, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [10, 3, 9, 5, 4, 7, 6, 6, 6, 4, 4, 4, 4, 3, 3, 8, 4, 7, 8, 23, 2, 4, 9, 7, 5, 525, 5, 190, 3, 40, 8, 4, 9, 5, 9, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 5, 12, 8, 6, 36, 81, 3, 6, 6, 5, 4, 5, 8, 7, 4, 26, 4, 88, 3, 6, 7, 337, 5, 4, 6, 4, 15, 46, 38]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [7, 10, 3, 4, 3, 7, 99, 6, 7, 4, 14, 4, 4, 3, 60, 58, 4, 14, 11, 3, 14, 6, 5, 14, 18, 4, 13, 4, 25, 16, 5, 10, 4, 6, 16, 5, 39]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 5, 7, 3, 7, 6, 8, 6, 5, 6, 4, 3, 7, 9, 5, 9, 8, 5, 10, 6, 5, 135, 4, 9, 6, 6, 15, 13, 12, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 7, 7, 4, 9, 8, 13, 3, 5, 8, 4, 3, 4, 113, 6, 8, 5, 4, 9, 8, 7, 3, 8, 6, 6, 436, 5, 7, 7, 7, 5, 4, 6, 7, 8, 3, 30]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 6, 6, 4, 4, 4, 5, 4, 10, 16, 6, 5, 7, 4, 6, 4, 4, 10, 9, 3, 8, 10, 10, 14, 9, 10, 6, 7, 8, 8, 7, 11, 7, 8, 9, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 7, 7, 6, 6, 4, 6, 15, 9, 8, 8, 10, 11, 8, 5, 7, 7, 8, 5, 6, 9, 5, 7, 6, 4, 8, 5, 7, 10, 3, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 17, 7, 9, 6, 10, 6, 11, 10, 8, 6, 9, 4, 9, 8, 8, 7, 11, 7, 22, 6, 12, 8, 19, 9, 9, 11, 7, 8, 7, 7, 4, 7, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [22, 4, 6, 6, 7, 8, 9, 9, 5, 5, 10, 3, 8, 6, 5, 7, 300, 11, 8, 85, 5, 5, 6, 7, 8, 9, 10, 5, 5, 5, 4, 8, 9, 4, 11, 16, 287, 9, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 5, 3, 4, 4, 4, 5, 8, 4, 5, 9, 8, 7, 6, 5, 7, 4, 12, 5, 7, 8, 9, 5, 3, 6, 11, 6, 6, 5, 6, 4, 6, 5, 6, 9, 7, 3, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 4, 5, 7, 6, 3, 6, 4, 5, 6, 15, 6, 8, 144, 8, 5, 5, 5, 6, 10, 6, 15, 6, 4, 4, 7, 9, 8, 5, 5, 9, 4, 8, 4, 8, 12, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 3, 4, 9, 6, 4, 7, 5, 14, 11, 7, 11, 9, 7, 7, 8, 9, 8, 7, 6, 7, 7, 3, 5, 7, 4, 8, 9, 4, 543, 7, 5, 6, 6, 10, 4, 198]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 5, 14, 8, 5, 10, 9, 28, 9, 12, 8, 442, 5, 4, 119, 6, 6, 4, 5, 6, 4, 7, 4, 6, 5, 5, 5, 8, 157, 6, 3, 6, 4, 8, 4, 4, 5, 4, 3, 260]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [9, 5, 10, 7, 6, 12, 7, 7, 6, 6, 10, 9, 12, 7, 5, 9, 4, 11, 6, 5, 8, 7, 13, 10, 5, 346, 14, 101, 10, 12, 5, 8, 6, 10, 7, 7, 3, 5, 3]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 6, 9, 7, 4, 6, 6, 6, 4, 8, 6, 5, 6, 5, 5, 4, 8, 8, 6, 8, 7, 7, 7, 48, 3, 10, 8, 6, 9, 10, 3, 8, 6, 7, 6, 6, 101, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [9, 4, 391, 8, 8, 7, 8, 8, 9, 8, 9, 9, 7, 4, 4, 10, 7, 8, 7, 430, 8, 7, 4, 7, 269, 11, 5, 6, 7, 7, 6, 4, 7, 9, 19, 178, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [6, 4, 169, 3, 9, 3, 12, 10, 5, 27, 10, 3, 7, 8, 10, 4, 6, 11, 6, 4, 8, 4, 9, 7, 6, 3, 9, 31, 6, 5, 6, 10, 5, 11, 10, 4, 7, 6, 4, 11, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 4, 4, 4, 5, 4, 8, 8, 5, 15, 3, 6, 3, 11, 7, 6, 4, 7, 6, 5, 7, 7, 7, 4, 3, 7, 7, 4, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 4, 12, 4, 5, 7, 7, 4, 6, 4, 5, 11, 10, 7, 7, 148, 8, 7, 3, 6, 3, 4, 3, 4, 155, 5, 6, 5, 175, 7, 12, 5, 8, 3, 7, 8, 12, 8, 4, 8, 6, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 8, 4, 10, 5, 6, 5, 4, 6, 8, 6, 4, 3, 6, 48, 6, 10, 52, 6, 7, 5, 6, 4, 4, 7, 6]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7, 10, 6, 9, 4, 7, 9, 4, 5, 5, 4, 53, 8, 7, 7, 6, 5, 5, 11, 4, 7, 181, 4, 82, 8, 7, 6, 8, 12, 10, 5, 3, 4, 4, 4, 4, 13]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 9, 6, 6, 6, 4, 251, 7, 6, 30, 8, 8, 6, 3, 9, 13, 3, 4, 4, 9, 5, 9, 5, 5, 7, 37, 10, 3, 24, 7, 5, 4, 5, 6, 6, 27]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 10, 8, 6, 10, 6, 8, 9, 8, 7, 8, 5, 17, 7, 7, 9, 7, 10, 7, 7, 4, 8, 7, 6, 419, 8, 6, 8, 8, 7, 7, 7, 7, 9, 23, 3, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [11, 7, 8, 9, 8, 10, 9, 3, 10, 10, 9, 9, 8, 10, 12, 10, 8, 7, 8, 11, 9, 8, 9, 9, 8, 8, 6, 8, 24, 4, 10, 10, 7, 7, 8, 7, 7, 4, 4, 6, 20, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 4, 4, 4, 7, 6, 6, 9, 9, 7, 8, 7, 6, 9, 8, 4, 9, 5, 4, 7, 7, 5, 5, 7, 8, 4, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [6, 10, 10, 4, 11, 6, 4, 7, 14, 10, 6, 6, 8, 10, 11, 7, 8, 13, 8, 5, 8, 5, 6, 11, 8, 488, 4, 4, 11, 10, 7, 7, 3, 8, 6, 14, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 7, 6, 4, 14, 316, 8, 7, 5, 7, 8, 84, 7, 6, 6, 7, 6, 5, 10, 8, 6, 6, 7, 10, 4, 10, 7, 8, 120, 5, 9, 13, 9, 15, 6, 355, 11, 7, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 6, 3, 5, 19, 7, 16, 6, 4, 7, 7, 12, 5, 9, 9, 4, 5, 3, 5, 5, 10, 8, 9, 4, 8, 4, 9, 122, 76, 4, 10, 4, 4, 6, 7, 6, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [12, 10, 8, 9, 10, 8, 7, 24, 4, 9, 9, 10, 4, 48, 4, 9, 7, 10, 5, 5, 6, 7, 9, 11, 10, 6, 9, 14, 7, 7, 8, 6, 11, 7, 8, 9, 6, 11, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 8, 6, 4, 5, 8, 3, 8, 3, 9, 7, 2, 5, 3, 8, 4, 4, 9, 10, 23, 6, 9, 4, 6, 8, 3, 6, 11, 6, 7, 379, 9, 10, 3, 7, 3, 5, 5, 6, 8, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 4, 3, 12, 5, 3, 5, 3, 4, 9, 10, 7, 4, 8, 8, 8, 4, 5, 3, 5, 11, 3, 5, 3, 115, 6, 4, 4, 5, 6, 12, 7, 12, 7, 3, 11, 12, 104]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [5, 10, 10, 20, 11, 9, 9, 5, 13, 9, 8, 22, 4, 10, 10, 6, 21, 5, 9, 4, 4, 3, 8, 9, 6, 4, 5, 8, 7, 8, 3, 11, 5]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 6, 7, 10, 29, 8, 9, 10, 12, 9, 4, 4, 12, 8, 8, 5, 10, 8, 160, 7, 6, 8, 12, 11, 6, 51, 5, 9, 10, 12, 9, 8, 10, 7, 7, 6, 14, 8, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [12, 25, 172, 5, 7, 11, 3, 9, 9, 7, 7, 9, 8, 9, 11, 8, 7, 8, 6, 7, 7, 9, 11, 14, 11, 11, 8, 8, 8, 7, 7, 8, 9, 10, 8, 9, 9, 11, 9, 15, 7, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 9, 11, 3, 31, 4, 11, 21, 3, 4, 7, 11, 7, 10, 4, 14, 4, 4, 11, 9, 5, 10, 11, 4, 9, 283, 13, 11, 7, 8, 17, 7, 9, 7, 10, 9, 145, 5, 6, 6, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 8, 6, 4, 11, 4, 9, 3, 4, 9, 7, 3, 6, 4, 3, 9, 3, 10, 4, 5, 6, 20, 10, 3, 10, 10, 5, 4, 3, 8, 15, 8, 14, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 6, 6, 6, 6, 8, 4, 4, 7, 7, 16, 4, 9, 6, 6, 8, 10, 7, 11, 7, 6, 3, 6, 8, 5, 12, 9, 4, 6, 5, 4, 8, 7, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 8, 14, 4, 7, 4, 6, 12, 10, 4, 16, 6, 4, 6, 4, 8, 9, 8, 3, 454, 9, 4, 5, 7, 9, 6, 8, 5, 13, 199, 6, 6, 6, 11, 9, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 8, 6, 7, 6, 4, 144, 4, 9, 4, 7, 9, 8, 7, 9, 5, 4, 3, 5, 4, 9, 5, 5, 6, 4, 5, 3, 3, 6, 5, 6, 4, 12]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 8, 5, 288, 9, 4, 6, 6, 5, 342, 5, 6, 6, 5, 8, 8, 6, 6, 5, 7, 5, 6, 6, 6, 7, 5, 6, 8, 9, 5, 12, 8, 7, 8, 4, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [16, 11, 6, 4, 4, 8, 10, 8, 9, 6, 7, 7, 171, 8, 6, 6, 12, 7, 3, 5, 7, 12, 4, 6, 14, 324, 12, 4, 6, 6, 6, 6, 4, 9, 6, 4, 6, 7, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [5, 8, 13, 9, 6, 5, 3, 7, 10, 7, 11, 4, 3, 9, 3, 7, 11, 8, 7, 7, 9, 16, 6, 7, 4, 7, 5, 4, 41, 8, 8, 17, 5, 4, 12, 6, 6, 7, 4, 7, 6, 6, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [16, 7, 10, 6, 8, 5, 10, 4, 18, 86, 9, 13, 13, 15, 6, 8, 6, 4, 6, 7, 5, 10, 6, 10, 8, 6, 10, 6, 7, 8, 4, 6, 7, 7, 4, 22, 6, 10, 6, 8, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [11, 25, 345, 9, 9, 10, 3, 4, 15, 16, 4, 4, 10, 16, 7, 8, 8, 8, 7, 11, 52, 10, 4, 8, 9, 8, 5, 4, 8, 3, 8, 8, 11, 6, 11, 7, 9, 9, 23, 10, 6, 9, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 9, 7, 7, 4, 7, 14, 7, 3, 10, 9, 4, 5, 6, 7, 7, 5, 7, 35, 4, 8, 9, 344, 3, 6, 6, 8, 9, 5, 19, 10, 5, 11, 11, 9, 13, 8, 7, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [13, 4, 34, 4, 11, 7, 10, 6, 12, 12, 40, 5, 10, 5, 84, 7, 5, 4, 4, 15, 9, 11, 7, 9, 7, 5, 4, 9, 10, 7, 10, 8, 3, 3, 6, 7, 7, 7, 7, 9, 7, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 7, 8, 8, 9, 6, 8, 10, 8, 6, 7, 8, 7, 10, 6, 7, 10, 8, 8, 9, 4, 4, 4, 6, 7, 6, 5, 4, 8, 5, 6, 11, 6, 6, 4, 8, 7, 50, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 10, 8, 5, 7, 8, 8, 7, 4, 6, 7, 7, 9, 10, 6, 9, 3, 10, 19, 10, 9, 12, 8, 10, 9, 9, 10, 8, 33, 7, 6, 10, 5, 12, 8, 7, 3, 9, 7, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [15, 6, 6, 6, 9, 6, 6, 9, 6, 6, 7, 9, 5, 9, 9, 6, 5, 9, 3, 7, 8, 3, 9, 10, 8, 8, 79, 7, 11, 44, 8, 18, 8, 8, 4, 9, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 8, 6, 10, 10, 5, 7, 10, 8, 5, 8, 4, 9, 4, 3, 4, 8, 4, 9, 13, 7, 9, 7, 5, 8, 7, 11, 8, 11, 4, 8, 7, 7, 7, 5, 7, 6, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 13, 4, 8, 8, 6, 4, 4, 7, 4, 9, 5, 3, 6, 8, 6, 9, 6, 4, 7, 9, 9, 8, 8, 25, 6, 7, 11, 10, 10, 7, 7, 9, 5, 6, 6, 7, 15, 6, 13, 11, 9, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 7, 23, 10, 6, 9, 132, 7, 6, 12, 8, 5, 11, 8, 3, 7, 6, 6, 4, 11, 5, 7, 9, 7, 9, 8, 7, 8, 8, 7, 4, 9, 6, 3, 10, 6, 8, 3, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 4, 5, 6, 5, 8, 9, 7, 5, 5, 4, 7, 9, 4, 37, 3, 8, 8, 16, 6, 6, 7, 5, 5, 4, 4, 9, 5, 5, 6, 9, 9, 3, 18, 7, 3, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 6, 6, 4, 10, 5, 11, 6, 3, 5, 7, 6, 10, 7, 5, 260, 10, 12, 6, 9, 7, 7, 14, 10, 136, 5, 6, 6, 5, 5, 5, 5, 9, 6, 14, 6, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 7, 10, 7, 7, 11, 10, 12, 5, 9, 6, 155, 12, 11, 13, 7, 8, 6, 7, 8, 12, 7, 9, 10, 55, 149, 12, 14, 7, 8, 8, 4, 7, 9, 4, 7, 9, 10, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [10, 7, 11, 5, 5, 10, 5, 9, 5, 9, 5, 5, 11, 6, 7, 9, 7, 14, 7, 6, 5, 10, 6, 4, 11, 119, 279, 4, 128, 4, 5, 8, 10, 8, 9, 12, 8, 9, 59, 15, 7, 178]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [4, 56, 6, 10, 7, 7, 4, 6, 7, 10, 8, 7, 4, 13, 7, 13, 10, 3, 13, 9, 9, 10, 9, 10, 11, 12, 68, 7, 5, 14, 15, 3, 10, 7, 10, 7, 14, 9, 6, 9, 9, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 8, 10, 10, 8, 12, 9, 7, 14, 12, 12, 3, 19, 10, 12, 12, 7, 6, 18, 13, 8, 7, 17, 13, 8, 7, 8, 6, 23, 8, 9, 10, 16, 11, 6, 14, 8, 7, 11]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [15, 8, 8, 10, 5, 6, 8, 4, 6, 4, 10, 7, 8, 7, 11, 7, 7, 3, 4, 8, 8, 9, 7, 8, 7, 4, 7, 9, 7, 3, 7, 4, 9, 28, 5, 10, 7, 7, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 3, 3, 6, 3, 6, 5, 2, 3, 299, 5, 6, 5, 5, 6, 3, 4, 2, 72, 3, 3, 3, 5, 5, 8, 7, 8, 5, 4, 5, 8, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [5, 2, 5, 6, 5, 4, 6, 8, 9, 5, 18, 78, 5, 4, 4, 429, 5, 4, 4, 352, 5, 4, 6, 5, 4, 4, 5, 41, 5, 5, 7, 4, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [3, 8, 5, 10, 5, 7, 14, 11, 11, 10, 12, 8, 7, 6, 6, 8, 11, 15, 6, 5, 5, 7, 7, 5, 8, 10, 4, 5, 3, 145, 3, 7, 4, 7, 11, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [16, 8, 4, 5, 7, 8, 6, 4, 6, 5, 16, 12, 7, 12, 5, 3, 6, 12, 8, 4, 8, 7, 4, 10, 8, 6, 10, 4, 10, 10, 4, 6, 8, 7, 8, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [12, 5, 125, 4, 6, 7, 6, 9, 4, 10, 9, 9, 5, 10, 7, 3, 275, 5, 6, 3, 8, 6, 4, 13, 8, 9, 7, 446, 4, 12, 10, 6, 8, 5, 8, 7, 9, 10, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [5, 6, 240, 4, 12, 10, 5, 10, 13, 11, 11, 9, 4, 15, 12, 9, 6, 6, 13, 7, 6, 8, 11, 9, 8, 9, 7, 10, 5, 12, 10, 10, 9, 7, 13, 9, 10, 5, 9, 17]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [8, 4, 10, 12, 5, 508, 4, 6, 7, 3, 8, 11, 5, 10, 4, 15, 5, 5, 14, 11, 12, 7, 10, 10, 66, 10, 8, 3, 10, 10, 8, 11, 10, 9, 5, 13, 14, 12, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [5, 12, 15, 5, 7, 9, 7, 7, 21, 7, 12, 12, 6, 11, 10, 8, 7, 10, 8, 24, 21, 11, 9, 636, 9, 9, 11, 5, 11, 7, 10, 13, 7, 7, 6, 16, 9, 11]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [5, 13, 7, 6, 8, 7, 8, 3, 4, 4, 14, 13, 4, 6, 15, 12, 50, 5, 7, 3, 6, 11, 13, 5, 5, 6, 8, 7, 7, 8, 10, 10, 13, 8, 9, 7, 7, 4, 3, 11, 8, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [13, 6, 6, 19, 14, 8, 9, 9, 5, 9, 18, 4, 6, 146, 10, 6, 7, 9, 9, 9, 8, 4, 7, 6, 6, 9, 5, 7, 9, 8, 6, 9, 4, 9, 5, 6, 5, 5, 4, 6, 11, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [6, 22, 7, 4, 9, 9, 8, 8, 13, 6, 9, 8, 9, 13, 6, 7, 7, 6, 5, 4, 6, 3, 8, 5, 5, 6, 8, 7, 4, 4, 8, 5, 7, 12, 10, 10, 13, 4, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [7, 14, 4, 6, 5, 11, 3, 4, 5, 3, 15, 9, 13, 4, 394, 85, 4, 5, 6, 6, 5, 9, 8, 5, 6, 3, 6, 15, 9, 10, 9, 19, 5, 12, 9, 9, 17, 9, 10, 15, 6, 4, 5, 7, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[9, 11, 5, 9, 6, 7, 6, 4, 17, 10, 5, 5, 7, 17, 6, 11, 5, 9, 5, 5, 5, 6, 5, 11, 5, 17, 11, 8, 4, 17, 4, 6, 6, 8, 6, 4, 11, 8, 5, 8, 8, 7, 11, 19]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 10, 11, 5, 6, 11, 11, 9, 8, 12, 6, 6, 7, 3, 4, 7, 6, 14, 12, 4, 4, 6, 4, 12, 6, 8, 8, 6, 5, 7, 4, 10, 4, 4, 9, 7, 4, 13]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [11, 8, 6, 7, 9, 10, 12, 11, 9, 9, 11, 12, 9, 9, 4, 8, 8, 13, 13, 6, 10, 9, 5, 10, 6, 4, 7, 11, 7, 253, 5, 12, 6, 13, 11, 9, 10, 10, 8, 11, 11, 4, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [10, 9, 6, 7, 12, 10, 6, 8, 10, 12, 8, 51, 11, 10, 9, 9, 12, 10, 9, 7, 10, 9, 10, 6, 5, 8, 6, 8, 8, 9, 4, 5, 11, 11, 11, 313, 9, 4, 9, 10, 6, 13]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 12, 4, 3, 5, 4, 17, 4, 8, 8, 7, 3, 13, 9, 11, 5, 9, 6, 11, 9, 11, 10, 10, 7, 11, 10, 6, 12, 10, 6, 98]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [3, 11, 5, 5, 22, 6, 9, 5, 5, 4, 6, 55, 12, 6, 13, 5, 7, 4, 20, 5, 7, 9, 4, 6, 8, 7, 6, 4, 6, 4, 6, 29]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 8, 7, 8, 5, 8, 6, 5, 7, 8, 5, 8, 5, 5, 11, 12, 5, 12, 5, 144, 11, 4, 6, 9, 6, 12, 6, 7, 8, 6, 5, 6, 19, 6, 6, 8, 95, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 6, 7, 8, 11, 8, 5, 5, 20, 8, 8, 5, 12, 5, 6, 6, 14, 9, 4, 9, 5, 5, 5, 600, 5, 15, 8, 14, 6, 5, 6, 5, 10, 5, 5, 12, 5, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [13, 7, 5, 8, 32, 9, 8, 6, 5, 5, 10, 6, 8, 8, 10, 6, 23, 5, 18, 7, 4, 7, 8, 3, 5, 19, 7, 4, 10, 4, 5, 4, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 4, 6, 5, 10, 7, 9, 7, 5, 4, 6, 6, 10, 8, 5, 7, 4, 9, 324, 9, 284, 7, 4, 9, 4, 8, 177, 9, 9, 7, 9, 327, 3, 14]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [17, 4, 5, 13, 4, 4, 4, 9, 4, 8, 4, 10, 5, 4, 9, 9, 5, 10, 6, 8, 11, 5, 10, 7, 115, 4, 8, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 8, 5, 4, 6, 4, 7, 4, 6, 4, 5, 6, 7, 4, 4, 3, 8, 4, 344, 6, 6, 279, 30, 9, 6, 5, 35, 6, 3]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [5, 11, 196, 5, 4, 7, 6, 4, 5, 7, 5, 16, 6, 8, 5, 7, 6, 374, 5, 6, 9, 10, 4, 5, 6, 11, 141, 3, 5, 8, 9, 3, 8, 7, 4, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 10, 6, 7, 5, 7, 7, 5, 6, 8, 4, 3, 7, 8, 321, 7, 7, 238, 4, 9, 17, 9, 9, 8, 7, 5, 7, 8, 90, 5, 35, 4, 3]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [5, 10, 5, 9, 6, 7, 5, 3, 6, 5, 4, 7, 7, 8, 4, 5, 3, 8, 5, 9, 10, 8, 6, 88, 8, 7, 6, 5, 6, 7, 6, 6, 7, 5, 10, 13, 51, 8, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 21, 7, 7, 19, 6, 7, 10, 4, 6, 6, 6, 7, 8, 9, 10, 7, 8, 6, 5, 4, 8, 6, 6, 7, 7, 5, 8, 6, 7, 8, 5, 4, 7, 8, 5, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 18, 6, 8, 9, 22, 7, 8, 4, 8, 5, 359, 30, 4, 4, 4, 6, 6, 7, 5, 6, 4, 8, 56, 5, 50, 6, 150, 6, 6, 8, 6, 8, 7, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 8, 447, 7, 5, 4, 7, 4, 7, 8, 6, 7, 7, 12, 3, 6, 5, 5, 7, 5, 7, 7, 5, 37, 7, 8, 7, 4, 4, 5, 8, 6, 8, 9, 9, 3, 7, 6, 7, 8, 7, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 7, 8, 4, 6, 6, 8, 23, 3, 8, 6, 8, 6, 12, 7, 9, 5, 6, 556, 3, 7, 6, 8, 7, 7, 8, 6, 7, 278, 8, 132, 7, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [6, 7, 40, 7, 9, 14, 8, 7, 8, 6, 7, 10, 7, 6, 4, 7, 8, 6, 9, 4, 6, 12, 3, 6, 155, 159, 8, 4, 9, 6, 6, 118, 11, 10, 7, 12, 5, 6, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 12, 13, 5, 32, 5, 4, 6, 4, 7, 8, 5, 3, 4, 10, 8, 6, 5, 7, 6, 13, 15, 7, 8, 11, 183, 11, 4, 7, 8, 6, 9, 7, 6, 9, 7, 12]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 9, 7, 10, 10, 7, 9, 9, 9, 7, 7, 9, 45, 7, 7, 9, 7, 8, 70, 7, 8, 6, 7, 8, 8, 7, 7, 6, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5, 8, 5, 4, 23, 41, 9, 9, 9, 8, 6, 5, 3, 7, 5, 6, 5, 6, 7, 5, 7, 484, 4, 8, 9, 4, 9, 7, 6, 7, 5, 7, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 8, 6, 6, 5, 7, 5, 8, 6, 4, 6, 7, 4, 9, 7, 5, 7, 5, 4, 4, 3, 5, 5, 4, 5, 37, 4, 6, 5, 10, 7, 5, 8, 9, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 4, 126, 8, 11, 9, 10, 8, 8, 15, 10, 4, 9, 5, 3, 6, 9, 9, 10, 5, 7, 7, 16, 9, 9, 7, 5, 8, 9, 4, 6, 9, 15, 4, 7, 8, 4, 8, 7, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 3, 7, 3, 6, 3, 9, 6, 7, 7, 9, 13, 7, 6, 4, 4, 4, 43, 7, 6, 7, 7, 5, 7, 11, 6, 7, 10, 7, 10, 7, 11, 53, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 5, 6, 5, 12, 11, 6, 6, 8, 11, 6, 7, 6, 7, 8, 7, 6, 11, 8, 8, 4, 7, 13, 6, 6, 7, 9, 6, 7, 5, 6, 6, 6, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 32, 107, 6, 6, 6, 7, 6, 8, 7, 7, 4, 7, 5, 9, 16, 6, 6, 6, 6, 5, 7, 9, 10, 6, 23, 6, 11, 7, 8, 11, 4, 5, 7, 7, 7, 8, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 4, 4, 7, 7, 4, 9, 10, 9, 7, 4, 11, 425, 4, 7, 3, 7, 7, 10, 7, 9, 44, 8, 219, 5, 125, 6, 4, 6, 8, 217, 11, 6, 5, 4, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 11, 4, 11, 3, 4, 8, 7, 3, 3, 6, 12, 7, 15, 4, 7, 3, 8, 7, 4, 162, 5, 3, 64, 4, 7, 8, 10, 12, 13, 7, 9, 7, 8, 10, 9, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 7, 8, 3, 5, 6, 4, 9, 9, 8, 4, 6, 19, 6, 6, 4, 7, 6, 8, 4, 8, 6, 5, 6, 4, 6, 8, 5, 5, 3, 3, 7, 10, 6, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 6, 4, 3, 7, 4, 4, 6, 5, 7, 4, 27, 210, 7, 5, 5, 6, 6, 7, 7, 7, 7, 8, 5, 9, 6, 5, 5, 7, 4, 3, 5, 6, 6, 7, 48, 5, 7, 5, 7, 21]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 9, 4, 6, 477, 5, 7, 8, 6, 3, 3, 3, 6, 6, 7, 9, 6, 7, 6, 8, 7, 4, 6, 7, 8, 5, 6, 6, 8, 6, 7, 7, 8, 5, 10, 7, 7, 6, 47, 9, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 8, 7, 7, 5, 6, 4, 28, 9, 6, 6, 4, 4, 7, 7, 7, 7, 13, 4, 4, 11, 7, 6, 9, 4, 371, 18, 5, 5, 8, 3, 6, 4, 15, 4, 6, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 7, 5, 7, 7, 8, 14, 6, 9, 8, 6, 6, 5, 8, 9, 8, 7, 5, 5, 9, 6, 9, 47, 8, 4, 14, 9, 9, 6, 8, 8, 10, 6, 6, 8, 9, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 7, 7, 8, 6, 146, 10, 5, 5, 4, 6, 5, 7, 8, 8, 10, 8, 12, 7, 6, 7, 15, 4, 9, 7, 7, 7, 8, 7, 18, 5, 6, 172, 6, 51, 4, 5, 8, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 4, 6, 6, 7, 8, 84, 5, 5, 7, 4, 10, 9, 7, 6, 3, 8, 4, 7, 539, 6, 6, 9, 8, 6, 4, 6, 10, 6, 6, 5, 13, 8, 6, 8, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 6, 7, 4, 3, 7, 3, 9, 7, 6, 8, 7, 6, 11, 229, 8, 8, 406, 6, 11, 6, 6, 4, 7, 9, 3, 6, 9, 174, 8, 11, 6, 13]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7, 6, 7, 7, 4, 5, 10, 8, 6, 7, 7, 7, 7, 7, 4, 5, 9, 4, 7, 10, 10, 11, 7, 7, 7, 12, 4, 6, 6, 6, 9, 6, 539, 8, 5, 28, 6, 7, 8, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 9, 11, 7, 7, 6, 4, 6, 7, 6, 6, 5, 7, 5, 8, 6, 9, 10, 4, 8, 11, 7, 9, 10, 12, 5, 6, 7, 4, 9, 16, 6, 10, 93, 10, 7, 8, 4, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [7, 8, 7, 6, 7, 11, 10, 5, 8, 9, 6, 7, 4, 5, 4, 5, 5, 7, 6, 6, 5, 10, 7, 3, 8, 8, 6, 377, 5, 6, 4, 5, 8, 9, 7, 8, 10, 8, 8, 4, 8, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [19, 10, 4, 16, 7, 8, 18, 15, 5, 7, 6, 74, 7, 6, 13, 9, 8, 7, 15, 6, 16, 4, 5, 6, 7, 4, 162, 16, 13, 11, 19, 74, 193, 5, 14, 17, 20, 4, 15, 15, 16]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 4, 3, 8, 6, 4, 6, 4, 6, 5, 5, 5, 3, 5, 5, 9, 4, 4, 9, 10, 5, 4, 5, 3, 4, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [4, 6, 397, 7, 7, 4, 13, 5, 8, 8, 8, 3, 4, 6, 6, 5, 15, 7, 3, 7, 4, 7, 7, 3, 5, 5, 6, 5, 7, 4, 4, 6, 7, 6, 4, 6, 8, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 4, 5, 5, 4, 4, 4, 7, 5, 8, 11, 7, 4, 4, 4, 5, 4, 36, 7, 8, 5, 5, 4, 4, 3, 6, 5, 10, 6, 5, 3, 10, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 7, 7, 8, 5, 6, 5, 4, 5, 4, 6, 260, 9, 3, 6, 6, 38, 5, 6, 6, 6, 155, 8, 5, 6, 6, 7, 7, 5, 7, 6, 5, 5, 15, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 6, 5, 4, 4, 5, 55, 9, 3, 5, 8, 5, 11, 4, 9, 3, 10, 4, 6, 7, 6, 4, 4, 3, 8, 8, 5, 4, 4, 4, 7, 4, 4, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 5, 5, 33, 5, 5, 5, 5, 20, 37, 6, 4, 6, 6, 5, 5, 3, 6, 6, 4, 5, 8, 5, 9, 6, 4, 6, 6, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 6, 3, 4, 5, 6, 5, 7, 5, 5, 16, 5, 6, 4, 9, 4, 6, 4, 5, 7, 7, 21, 6, 4, 10, 112, 4, 6, 10, 5, 7, 5, 6, 8, 5, 4, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [4, 4, 324, 4, 5, 5, 7, 3, 7, 6, 5, 5, 5, 4, 6, 131, 6, 9, 3, 4, 4, 3, 6, 5, 5, 4, 5, 6, 6, 5, 6, 7, 57, 4, 6, 6, 4, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 4, 4, 5, 4, 4, 4, 7, 4, 6, 5, 7, 5, 6, 3, 10, 5, 4, 12, 3, 5, 6, 5, 4, 4, 3, 4, 7, 6, 4, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 6, 4, 4, 5, 4, 7, 6, 5, 6, 6, 6, 5, 11, 7, 13, 5, 4, 8, 4, 7, 28, 5, 13, 7, 4, 8, 7, 5, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [8, 8, 253, 9, 4, 7, 5, 5, 7, 5, 7, 6, 5, 7, 6, 4, 7, 9, 7, 6, 6, 8, 6, 7, 6, 5, 7, 14, 5, 12, 9, 5, 8, 138, 8, 5, 5, 7, 6, 6, 8, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 4, 6, 4, 47, 6, 4, 5, 5, 5, 4, 6, 6, 5, 5, 5, 5, 4, 5, 61, 7, 5, 5, 6, 7, 6, 3, 4, 9, 5, 6, 6, 5, 6, 4, 8, 6, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [9, 20, 6, 3, 8, 8, 8, 7, 10, 10, 9, 5, 8, 7, 9, 10, 6, 4, 5, 5, 4, 6, 7, 6, 6, 6, 8, 27, 7, 5, 7, 6, 6, 10, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 5, 7, 4, 4, 3, 4, 7, 28, 8, 8, 10, 4, 4, 10, 8, 7, 5, 5, 5, 7, 4, 6, 5, 7, 7, 6, 7, 6, 11, 3, 10, 5, 6, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 9, 7, 10, 7, 6, 8, 8, 6, 5, 10, 8, 30, 7, 4, 7, 5, 9, 17, 7, 6, 6, 18, 6, 6, 6, 7, 7, 6, 9, 8, 5, 8, 5, 3, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 4, 4, 4, 5, 8, 3, 17, 10, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 4, 5, 5, 5, 13, 4, 4, 5, 6, 5, 6, 4, 4, 6, 8, 38, 3, 6, 10, 4, 11, 10, 34]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 4, 6, 7, 3, 5, 6, 3, 6, 6, 5, 6, 44, 5, 8, 3, 7, 6, 11, 6, 7, 5, 12, 10, 5, 9, 5, 4, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 12, 9, 6, 4, 12, 324, 19, 8, 5, 7, 8, 7, 3, 7, 6, 7, 5, 35, 4, 6, 4, 8, 3, 5, 6, 7, 5, 6, 5]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 4, 4, 8, 5, 4, 4, 7, 8, 6, 8, 6, 6, 7, 8, 7, 6, 6, 4, 7, 6, 7, 189, 19, 7, 6, 11, 9, 11, 5, 10, 5, 6, 5, 7, 8, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 5, 5, 7, 3, 7, 48, 5, 4, 237, 5, 74, 4, 4, 3, 7, 4, 7, 4, 6, 7, 5, 40, 80, 6, 7, 3, 5, 6, 4, 5, 7, 4, 5, 9, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 10, 6, 7, 12, 8, 8, 8, 6, 7, 11, 7, 11, 9, 9, 10, 9, 8, 6, 86, 4, 4, 8, 32, 5, 9, 10, 10, 37, 11, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 5, 6, 5, 5, 22, 4, 19, 6, 4, 8, 4, 9, 7, 11, 6, 4, 10, 6, 5, 7, 6, 15, 4, 6, 81, 4, 4, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 6, 7, 5, 5, 8, 4, 7, 8, 8, 6, 6, 5, 437, 5, 5, 7, 5, 9, 5, 7, 8, 8, 7, 10, 7, 10, 9, 7, 7, 6, 10, 6, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 4, 8, 5, 4, 6, 8, 4, 5, 6, 7, 15, 4, 7, 6, 5, 10, 7, 3, 6, 7, 6, 7, 5, 5, 113, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 5, 9, 8, 7, 7, 6, 10, 7, 9, 7, 7, 4, 10, 4, 5, 10, 7, 6, 6, 10, 10, 12, 8, 5, 6, 8, 30, 5, 7, 9, 365, 7, 9, 298, 6, 8, 8, 7, 7, 9, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [17, 5, 9, 6, 3, 10, 6, 9, 7, 4, 4, 8, 9, 9, 8, 41, 8, 6, 12, 7, 7, 9, 8, 8, 8, 6, 6, 6, 8, 7, 8, 9, 8, 7, 7, 202, 9, 8, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 276, 5, 4, 5, 6, 4, 5, 7, 4, 6, 9, 5, 3, 4, 6, 4, 11, 10, 29, 8, 8, 6, 9, 10, 7, 10, 4, 6, 4, 10, 4, 3, 5, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [15, 10, 6, 8, 8, 6, 11, 12, 17, 5, 11, 11, 10, 161, 7, 11, 11, 13, 15, 16, 16, 6, 11, 11, 26, 12, 12, 79, 11, 17, 14, 13, 78, 15]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 5, 8, 4, 5, 7, 6, 5, 5, 5, 5, 5, 31, 5, 4, 5, 251, 5, 4, 6, 8, 6, 5, 8, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 4, 7, 7, 7, 12, 4, 9, 5, 4, 13, 6, 5, 17, 7, 10, 6, 5, 9, 5, 6, 4, 9, 8, 9, 3, 6, 10, 10, 7, 5, 7, 7, 7, 8, 3]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 10, 4, 7, 9, 8, 6, 8, 7, 8, 8, 5, 6, 12, 6, 11, 8, 9, 11, 55, 8, 9, 7, 9, 8, 6, 5, 6, 7, 5, 10, 7, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [2, 7, 5, 4, 4, 10, 7, 6, 7, 5, 4, 11, 7, 8, 6, 8, 8, 17, 10, 5, 6, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 4, 3, 5, 5, 7, 6, 4, 64, 6, 6, 4, 4, 4, 5, 4, 8, 5, 4, 6, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [4, 26, 23, 8, 24, 27, 5, 25, 41, 4, 25, 27, 2, 26]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 5, 4, 4, 193, 5, 21, 4, 12, 5, 5, 6, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [10, 11, 11, 11, 11, 11, 11, 12, 11, 13, 12, 41]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [5, 26, 26, 4, 204, 4, 27, 31, 30, 33, 25, 24, 135, 23, 31, 4, 200, 28, 7, 4, 22, 5, 297, 4, 23]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 49, 43, 15, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [2, 27, 22, 70, 4, 24, 4, 26, 177, 29, 25, 26, 27, 47, 58, 28, 87, 65, 41, 4, 29, 27]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [23, 28, 28, 29, 29, 30, 29, 28, 35, 24, 30, 30, 31, 30, 31, 45]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 33, 32, 35, 9, 4, 6, 106, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 218
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
