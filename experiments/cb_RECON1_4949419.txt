ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
max_cuts = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 39
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 4, 2, 7, 6, 5, 10, 2, 4, 4, 7, 5, 4, 8, 6, 2, 7, 9, 19, 10, 9, 8, 5, 2, 9, 8, 7, 5, 5, 7, 12, 4, 5, 8, 3, 19, 4, 6, 5, 3, 7, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [14, 6, 7, 7, 6, 4, 3, 5, 6, 5, 3, 4, 5, 5, 9, 3, 6, 4, 5, 4, 2, 12, 4, 8, 3, 2, 6, 11, 6, 7, 4, 8, 6, 5, 12, 41, 8, 8, 10, 7, 4, 5, 4, 5, 4, 5, 4, 61, 7, 5, 5, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [7, 5, 8, 7, 7, 5, 6, 6, 5, 10, 10, 5, 4, 4, 5, 4, 8, 4, 7, 4, 9, 4, 4, 5, 4, 168, 7, 3, 2, 2, 8, 7, 10, 4, 4, 6, 6, 12, 7, 4, 10, 32, 5, 91, 11, 5, 9, 4, 8, 4, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [14, 7, 7, 6, 5, 4, 5, 6, 5, 6, 2, 6, 6, 4, 242, 11, 7, 3, 4, 4, 6, 7, 234, 4, 8, 9, 4, 4, 7, 5, 5, 284, 4, 3, 4, 4, 4, 7, 9, 6, 6, 4, 6, 9, 8, 7, 4, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 5, 4, 5, 3, 4, 77, 2, 4, 4, 8, 4, 9, 4, 285, 6, 8, 4, 7, 5, 4, 7, 4, 6, 8, 3, 4, 119, 7, 7, 6, 5, 4, 9, 7, 4, 11, 5, 9, 5, 4, 3, 7, 8, 57, 5, 4, 452, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 4, 8, 2, 6, 5, 5, 9, 4, 6, 6, 63, 4, 7, 5, 6, 5, 5, 4, 4, 7, 3, 5, 7, 261, 3, 4, 5, 11, 6, 27, 5, 4, 4, 5, 3, 26, 7, 359, 4, 8, 214, 434, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 5, 6, 4, 8, 5, 3, 5, 5, 2, 4, 3, 4, 56, 7, 54, 4, 4, 6, 5, 4, 4, 3, 5, 4, 6, 41, 5, 171, 6, 6, 5, 4, 5, 6, 4, 5, 112, 4, 5, 231, 4, 6, 8, 163, 4, 7, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 6, 8, 5, 6, 5, 6, 4, 8, 6, 410, 4, 8, 4, 4, 7, 6, 3, 5, 7, 4, 8, 6, 3, 3, 7, 6, 6, 4, 215, 8, 15, 6, 7, 4, 4, 6, 8, 3, 5, 4, 7, 6, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [13, 6, 4, 9, 6, 4, 4, 4, 7, 10, 4, 5, 6, 194, 7, 6, 4, 4, 7, 5, 5, 4, 9, 154, 5, 13, 4, 7, 6, 4, 3, 8, 7, 4, 66, 71, 4, 5, 6, 6, 5, 5, 10, 4, 23, 4, 4, 8, 5, 7, 42]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [21, 5, 3, 4, 2, 4, 6, 4, 4, 5, 6, 12, 6, 9, 6, 6, 4, 336, 4, 4, 3, 8, 6, 5, 7, 6, 9, 91, 5, 7, 6, 6, 3, 6, 71, 4, 4, 3, 4, 78, 5, 4, 10, 5, 4, 9, 4, 6, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 4, 6, 7, 3, 5, 8, 7, 6, 4, 6, 4, 259, 5, 4, 2, 5, 28, 3, 6, 5, 5, 340, 40, 6, 19, 4, 6, 3, 14, 65, 8, 5, 22, 4, 6, 5, 5, 9, 5, 21, 54, 7, 5, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 9, 5, 4, 5, 7, 4, 7, 6, 4, 5, 4, 5, 4, 5, 11, 19, 5, 4, 5, 6, 166, 11, 6, 6, 4, 3, 6, 6, 4, 3, 5, 5, 3, 14, 4, 4, 4, 118, 8, 4, 6, 8, 5, 6, 9, 189, 8, 9, 4, 237]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 5, 5, 5, 4, 5, 6, 8, 4, 3, 4, 4, 6, 7, 6, 7, 8, 9, 8, 5, 5, 6, 5, 4, 5, 25, 6, 5, 5, 64, 10, 4, 5, 6, 3, 6, 6, 4, 9, 5, 5, 4, 5, 68, 7, 6, 4, 239, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [20, 2, 5, 9, 5, 7, 8, 6, 7, 6, 7, 6, 4, 11, 10, 10, 6, 8, 4, 4, 5, 5, 15, 7, 7, 5, 4, 89, 5, 8, 8, 5, 98, 3, 4, 7, 6, 7, 4, 10, 4, 3, 32, 8, 95, 6, 6, 8, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 7, 11, 4, 5, 11, 4, 5, 10, 119, 6, 5, 4, 6, 10, 7, 4, 216, 6, 3, 10, 5, 7, 8, 9, 4, 7, 6, 6, 10, 4, 9, 13, 10, 4, 5, 5, 8, 4, 8, 8, 4, 4, 10, 10, 8, 9, 4, 4, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 3, 5, 4, 4, 5, 5, 4, 4, 4, 3, 21, 3, 314, 5, 3, 5, 3, 5, 6, 5, 6, 4, 44, 4, 6, 9, 4, 38, 7, 7, 5, 11, 4, 6, 194, 5, 5, 4, 4, 6, 8, 4, 8, 4, 363]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 6, 6, 423, 4, 7, 85, 6, 3, 3, 5, 8, 250, 112, 17, 344, 4, 5, 4, 17, 4, 4, 4, 6, 4, 4, 4, 23, 6, 7, 6, 4, 7, 6, 152, 7, 5, 8, 6, 7, 20, 8, 4, 80, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 8, 5, 6, 4, 9, 5, 6, 4, 11, 9, 3, 6, 4, 22, 4, 5, 8, 6, 4, 114, 6, 5, 4, 291, 6, 4, 5, 4, 9, 14, 10, 4, 3, 3, 17, 4, 167, 6, 5, 4, 4, 7, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [15, 7, 6, 118, 4, 7, 7, 6, 6, 7, 4, 6, 7, 4, 9, 12, 4, 5, 9, 4, 7, 3, 52, 6, 5, 12, 11, 16, 6, 4, 5, 5, 4, 5, 227, 5, 6, 100, 9, 8, 6, 10, 23, 11, 9, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [14, 9, 6, 5, 4, 6, 6, 4, 7, 4, 5, 7, 301, 4, 207, 11, 12, 4, 13, 8, 10, 7, 6, 4, 6, 10, 11, 7, 22, 7, 8, 7, 12, 5, 7, 9, 11, 4, 13, 7, 8, 5, 10, 14, 11, 11, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [11, 10, 8, 12, 6, 7, 5, 5, 5, 5, 7, 5, 9, 12, 7, 9, 3, 33, 4, 6, 8, 217, 4, 6, 11, 5, 9, 4, 7, 10, 10, 5, 7, 8, 11, 175, 77, 3, 5, 6, 10, 10, 14, 11, 7, 9, 6, 12, 6, 405, 216]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [13, 8, 7, 4, 6, 4, 4, 4, 6, 3, 6, 9, 3, 8, 10, 5, 8, 4, 5, 4, 5, 5, 6, 6, 9, 8, 9, 10, 5, 4, 4, 4, 4, 11, 8, 113, 8, 6, 4, 9, 6, 4, 4, 4, 4, 7, 4, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 7, 8, 6, 5, 6, 4, 6, 4, 5, 6, 4, 8, 23, 9, 4, 6, 8, 8, 11, 48, 6, 4, 6, 3, 11, 12, 10, 7, 6, 9, 329, 7, 5, 7, 12, 9, 7, 5, 6, 122, 11, 7, 4, 7, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 4, 4, 3, 6, 6, 9, 5, 4, 4, 7, 363, 5, 5, 4, 6, 16, 6, 8, 5, 7, 6, 3, 10, 9, 4, 8, 5, 4, 8, 10, 8, 9, 22, 10, 14, 6, 7, 6, 6, 133, 3, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 8, 7, 8, 3, 6, 3, 6, 6, 4, 8, 10, 5, 5, 4, 5, 4, 10, 4, 10, 9, 14, 6, 6, 5, 9, 5, 4, 4, 6, 3, 23, 5, 4, 7, 4, 10, 13, 6, 7, 8, 8, 4, 8, 6, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 4, 7, 5, 6, 5, 8, 4, 4, 5, 10, 8, 10, 6, 6, 10, 5, 10, 6, 6, 499, 3, 5, 7, 10, 4, 8, 4, 5, 410, 7, 10, 3, 8, 9, 7, 10, 9, 11, 14, 5, 7, 4, 9, 4, 8, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 7, 12, 6, 11, 4, 8, 8, 4, 10, 10, 5, 10, 9, 5, 3, 7, 4, 7, 9, 7, 3, 7, 5, 5, 7, 7, 6, 8, 12, 12, 13, 4, 8, 10, 11, 6, 11, 10, 4, 6, 11, 6, 10, 9, 10, 4, 7, 11, 8]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 10, 9, 5, 8, 4, 4, 6, 7, 3, 6, 3, 100, 473, 9, 17, 4, 4, 6, 3, 4, 15, 9, 4, 6, 9, 15, 11, 4, 4, 4, 6, 18, 6, 102, 61, 9, 4, 3, 4, 10, 5, 5, 7, 4, 6, 6, 5, 16, 5, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [15, 6, 6, 4, 8, 3, 5, 6, 4, 5, 6, 7, 3, 4, 3, 7, 6, 4, 357, 10, 3, 13, 4, 4, 10, 10, 4, 8, 4, 24, 12, 9, 39, 11, 5, 3, 3, 5, 6, 334, 6, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 4, 8, 8, 4, 5, 8, 9, 7, 5, 20, 6, 7, 35, 7, 8, 10, 9, 5, 4, 4, 8, 7, 4, 6, 4, 8, 7, 6, 6, 5, 4, 10, 122, 8, 4, 10, 6, 8, 7, 8, 17, 4, 3, 5, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [14, 3, 11, 6, 6, 6, 3, 3, 4, 7, 3, 6, 4, 8, 9, 198, 12, 4, 7, 9, 4, 7, 4, 4, 4, 13, 4, 3, 3, 8, 10, 5, 4, 118, 89, 8, 16, 7, 5, 10, 4, 4, 3, 7, 246, 13, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 4, 7, 4, 6, 15, 6, 6, 5, 5, 4, 4, 6, 113, 6, 4, 9, 9, 10, 8, 4, 9, 9, 3, 307, 57, 4, 4, 4, 5, 7, 4, 4, 7, 6, 5, 11, 10, 3, 137, 9, 4, 5, 8, 317, 12]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 9, 286, 9, 6, 4, 13, 6, 10, 6, 5, 7, 7, 451, 22, 26, 8, 7, 6, 7, 4, 11, 12, 4, 7, 5, 6, 8, 6, 4, 6, 7, 6, 6, 8, 11, 6, 6, 7, 17, 4, 8, 9, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 5, 7, 3, 7, 3, 4, 4, 5, 5, 7, 3, 8, 9, 12, 6, 6, 16, 7, 5, 257, 7, 5, 5, 4, 4, 272, 5, 4, 4, 26, 5, 340, 102, 5, 8, 119, 13, 11, 6, 5, 14, 10, 232, 7, 310]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 5, 4, 5, 9, 4, 7, 6, 5, 4, 6, 6, 4, 190, 10, 8, 6, 529, 58, 7, 8, 7, 7, 6, 64, 6, 10, 4, 4, 12, 4, 5, 6, 10, 128, 3, 10, 13, 4, 5, 7, 10, 12, 10, 6, 5, 6, 4, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [16, 4, 5, 10, 5, 4, 10, 8, 4, 9, 10, 12, 4, 5, 4, 6, 5, 6, 4, 4, 6, 4, 4, 5, 6, 3, 4, 268, 7, 6, 6, 5, 4, 15, 9, 6, 4, 597, 105, 7, 109, 3, 27, 8, 4, 8, 7, 7, 5, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 9, 6, 6, 4, 4, 5, 32, 8, 9, 6, 6, 4, 7, 392, 10, 129, 5, 6, 6, 5, 363, 9, 3, 7, 8, 3, 474, 134, 4, 4, 7, 11, 20, 4, 6, 5, 9, 5, 10, 11, 111, 19, 5, 8, 5, 8, 8, 87]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 8, 7, 3, 10, 4, 5, 6, 6, 5, 7, 3, 6, 5, 4, 144, 4, 4, 4, 10, 4, 4, 7, 7, 7, 3, 4, 8, 4, 12, 117, 6, 10, 4, 3, 4, 5, 11, 4, 7, 4, 6, 4, 6, 13, 4, 5, 3, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5, 4, 4, 4, 7, 4, 4, 3, 8, 11, 8, 5, 310, 8, 4, 8, 369, 19, 3, 9, 4, 6, 9, 21, 4, 9, 6, 3, 7, 9, 4, 8, 4, 254, 19, 5, 12, 11, 15, 9, 7, 6, 4, 13, 5, 4, 9, 5, 98]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 5, 9, 9, 9, 8, 5, 5, 10, 5, 4, 6, 7, 4, 73, 5, 532, 7, 7, 8, 4, 4, 3, 7, 25, 4, 11, 5, 47, 4, 4, 9, 7, 11, 12, 8, 11, 4, 4, 9, 9, 6, 4, 4, 11, 10]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 9, 6, 4, 4, 5, 7, 5, 5, 6, 4, 3, 8, 7, 8, 16, 4, 5, 4, 74, 20, 7, 5, 3, 5, 7, 5, 425, 4, 9, 4, 10, 10, 10, 5, 3, 9, 4, 4, 4, 10, 6, 5, 6, 10, 19]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 11, 12, 7, 7, 10, 11, 10, 6, 6, 109, 3, 4, 10, 4, 4, 4, 62, 10, 193, 57, 13, 4, 11, 20, 7, 3, 7, 14, 6, 6, 3, 4, 13, 11, 5, 4, 8, 11, 4, 12, 4, 10, 13, 5, 573, 20, 13, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 6, 9, 7, 4, 11, 6, 4, 7, 7, 65, 10, 5, 9, 7, 63, 23, 5, 12, 10, 6, 8, 6, 5, 8, 12, 3, 4, 4, 4, 11, 8, 8, 5, 4, 10, 4, 6, 4, 19, 13, 11, 4, 5, 4, 12, 13, 7, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [7, 5, 9, 3, 10, 4, 8, 5, 3, 10, 5, 4, 4, 6, 5, 6, 4, 7, 4, 7, 7, 3, 183, 353, 6, 6, 4, 4, 14, 4, 5, 13, 129, 215, 455, 59, 8, 3, 6, 4, 6, 10, 8, 5, 238]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 15, 4, 4, 13, 9, 4, 6, 10, 7, 26, 16, 407, 4, 5, 6, 8, 4, 3, 5, 4, 7, 56, 8, 12, 4, 13, 4, 16, 9, 3, 29, 4, 4, 7, 4, 5, 4, 4, 14, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 4, 6, 13, 3, 5, 6, 6, 4, 11, 11, 5, 4, 4, 12, 29, 4, 3, 5, 11, 4, 8, 4, 4, 21, 13, 508, 5, 15, 4, 23, 6, 20, 48, 8, 7, 49, 5, 16, 15, 4, 9, 4, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 11, 12, 7, 6, 6, 10, 5, 4, 10, 5, 4, 4, 8, 93, 627, 9, 68, 6, 9, 11, 4, 3, 20, 9, 9, 9, 5, 255, 5, 6, 5, 7, 5, 13, 18, 4, 8, 6, 4, 11, 3, 4, 4, 24, 4, 8, 8, 8, 5, 10, 11, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 4, 8, 7, 11, 7, 5, 7, 9, 8, 8, 5, 4, 9, 6, 7, 11, 10, 10, 7, 8, 6, 6, 9, 6, 14, 20, 20, 9, 17, 8, 4, 214, 8, 9, 4, 8, 8, 10, 4, 4, 3, 8, 9, 89, 13, 5, 10, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [9, 5, 11, 11, 7, 11, 4, 4, 6, 4, 6, 5, 13, 9, 5, 5, 6, 4, 16, 4, 7, 8, 467, 3, 5, 306, 4, 7, 195, 8, 7, 4, 4, 101, 13, 5, 7, 4, 5, 4, 5, 12, 13, 10, 6, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [17, 5, 7, 10, 4, 9, 8, 11, 11, 18, 4, 4, 10, 9, 4, 9, 6, 5, 4, 9, 4, 4, 541, 285, 6, 4, 13, 8, 11, 6, 5, 4, 7, 320, 7, 4, 30, 10, 7, 7, 8, 9, 192, 6, 5, 9, 7, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [3, 9, 6, 4, 4, 9, 6, 9, 8, 8, 5, 6, 7, 6, 4, 209, 10, 5, 7, 7, 7, 4, 4, 67, 7, 47, 4, 12, 4, 7, 5, 8, 4, 12, 5, 9, 5, 4, 18, 13, 4, 9, 8, 358, 11, 260, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 3, 4, 8, 5, 5, 4, 11, 8, 4, 8, 3, 504, 9, 15, 7, 3, 73, 3, 4, 10, 7, 6, 8, 4, 11, 5, 8, 7, 6, 18, 14, 8, 6, 4, 12, 4, 6, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 9, 10, 7, 7, 4, 13, 8, 4, 3, 10, 4, 36, 9, 9, 4, 26, 7, 6, 3, 6, 240, 6, 5, 10, 8, 10, 562, 12, 5, 10, 8, 5, 4, 7, 8, 14, 10, 10, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 10, 3, 3, 4, 7, 6, 8, 6, 6, 4, 6, 145, 7, 5, 6, 7, 4, 4, 5, 7, 4, 4, 6, 9, 4, 3, 6, 5, 8, 7, 9, 6, 6, 7, 6, 9, 8, 4, 5, 5, 21, 22, 7, 6, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 11, 8, 6, 6, 8, 6, 9, 10, 14, 6, 4, 6, 6, 13, 19, 4, 10, 3, 6, 4, 7, 14, 18, 11, 13, 8, 9, 7, 4, 300, 8, 14, 8, 10, 12, 12, 5, 5, 9, 5, 7, 7, 9, 3, 11, 12, 5, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [12, 11, 9, 4, 6, 9, 8, 9, 12, 5, 11, 11, 6, 9, 8, 7, 9, 6, 8, 11, 10, 5, 11, 4, 204, 4, 10, 6, 5, 12, 6, 10, 5, 8, 8, 9, 13, 7, 5, 9, 6, 4, 5, 6, 7, 4, 7, 15, 5, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [10, 12, 4, 7, 7, 10, 9, 9, 5, 5, 3, 8, 7, 3, 5, 11, 12, 5, 4, 8, 21, 5, 5, 7, 7, 12, 8, 11, 9, 12, 3, 4, 7, 5, 7, 8, 4, 4, 7, 12, 7, 4, 6, 11, 9, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 4, 4, 5, 9, 7, 92, 5, 10, 6, 7, 4, 7, 5, 25, 6, 10, 133, 6, 7, 4, 4, 9, 6, 18, 3, 4, 8, 6, 7, 11, 6, 16, 4, 10, 9, 7, 7, 5, 9, 9, 4, 13, 5, 155, 5, 5, 18]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [10, 5, 3, 4, 6, 7, 8, 4, 6, 5, 9, 182, 7, 12, 13, 4, 574, 15, 10, 4, 6, 5, 121, 11, 6, 4, 8, 54, 5, 5, 7, 9, 5, 7, 5, 5, 12, 3, 6, 9, 10, 7, 5, 11, 6, 8, 9, 8, 4, 6]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [8, 6, 9, 4, 5, 8, 4, 9, 7, 8, 6, 8, 7, 12, 11, 5, 4, 10, 4, 114, 10, 8, 12, 5, 4, 6, 8, 4, 9, 4, 6, 9, 6, 9, 4, 10, 3, 31, 9, 8, 7, 10, 5, 8, 6, 9, 4, 6, 8, 5, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [12, 4, 12, 5, 4, 8, 10, 11, 6, 4, 9, 6, 4, 7, 9, 8, 11, 10, 5, 5, 6, 9, 6, 135, 7, 11, 10, 4, 14, 11, 148, 10, 4, 3, 4, 7, 9, 13, 5, 4, 10, 4, 10, 157, 7, 10, 4, 11, 13]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [16, 7, 4, 10, 10, 4, 11, 9, 14, 11, 6, 4, 4, 6, 7, 318, 7, 5, 10, 8, 6, 7, 8, 3, 4, 4, 5, 9, 4, 4, 99, 7, 10, 11, 8, 8, 27, 37, 5, 5, 6, 8, 12, 4, 73, 10, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 8, 3, 4, 10, 12, 8, 5, 5, 7, 7, 5, 9, 7, 9, 6, 7, 3, 5, 4, 12, 8, 4, 4, 6, 23, 179, 4, 28, 4, 5, 4, 10, 10, 12, 4, 4, 4, 6, 7, 9, 11, 6, 6, 8, 6, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 4, 7, 4, 9, 6, 4, 7, 5, 7, 8, 8, 6, 7, 13, 8, 3, 4, 10, 9, 6, 7, 4, 7, 6, 5, 3, 72, 9, 4, 285, 5, 9, 6, 7, 5, 4, 7, 45, 7, 8, 294, 6, 8, 16, 8, 4, 169]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 5, 7, 4, 5, 7, 4, 4, 7, 8, 10, 4, 6, 9, 38, 7, 5, 7, 9, 7, 7, 6, 4, 4, 4, 7, 4, 5, 4, 4, 6, 10, 10, 9, 5, 76, 7, 5, 9, 9, 9, 8, 6, 4, 10, 5, 8, 11, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [29, 3, 5, 7, 5, 4, 3, 6, 4, 10, 4, 4, 6, 5, 4, 8, 3, 8, 6, 4, 17, 3, 8, 4, 8, 33, 5, 153, 11, 5, 5, 3, 4, 4, 69, 6, 12, 6, 8, 4, 8, 8, 8, 4, 11, 8, 11, 8, 5, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 4, 10, 3, 4, 6, 9, 7, 8, 4, 7, 8, 5, 10, 6, 11, 6, 4, 5, 7, 7, 4, 81, 7, 6, 4, 6, 7, 9, 17, 13, 7, 15, 5, 11, 9, 4, 6, 8, 9, 12, 69, 4, 7, 8, 9, 7, 4, 12, 8, 5]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [13, 12, 3, 4, 8, 4, 8, 8, 4, 9, 6, 11, 11, 8, 5, 6, 6, 7, 4, 7, 5, 8, 7, 4, 5, 15, 3, 12, 9, 3, 4, 9, 10, 7, 4, 7, 8, 4, 7, 4, 5, 3, 6, 465, 31, 6, 9, 16, 9, 7, 8, 419, 8, 4]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 6, 12, 6, 3, 10, 6, 9, 4, 4, 14, 13, 5, 4, 9, 7, 4, 4, 4, 114, 8, 87, 3, 5, 9, 8, 4, 7, 12, 146, 4, 13, 5, 7, 10, 13, 10, 5, 7, 6, 8, 4, 7, 397, 6, 5, 6, 6, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 10, 4, 9, 9, 7, 3, 12, 13, 12, 7, 8, 150, 11, 7, 7, 96, 7, 6, 9, 520, 9, 10, 10, 8, 10, 54, 8, 7, 10, 7, 7, 8, 7, 8, 6, 9, 9, 9, 4, 8, 5, 4, 7, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 7, 4, 11, 9, 8, 4, 6, 8, 8, 11, 6, 5, 5, 4, 5, 6, 28, 7, 7, 6, 10, 5, 6, 6, 6, 5, 6, 4, 4, 7, 5, 7, 4, 6, 11, 6, 49, 13, 4, 5, 11, 4, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 5, 9, 4, 27, 10, 5, 6, 5, 10, 5, 364, 7, 235, 4, 9, 6, 6, 118, 7, 9, 7, 11, 6, 17, 6, 12, 6, 11, 10, 15, 5, 9, 6, 7, 7, 17, 131, 4, 5, 7, 12, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 7, 10, 7, 10, 4, 12, 4, 8, 6, 5, 4, 12, 4, 387, 12, 8, 6, 10, 4, 6, 8, 10, 5, 11, 7, 9, 10, 11, 9, 6, 6, 9, 9, 6, 12, 4, 212, 11, 6, 13, 7, 5, 10, 4, 8, 6, 5, 372, 7]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [12, 5, 12, 6, 6, 7, 4, 4, 8, 5, 9, 4, 7, 11, 5, 4, 4, 12, 3, 4, 4, 7, 4, 4, 5, 8, 3, 7, 11, 5, 12, 9, 6, 8, 10, 11, 4, 8, 8, 10, 14, 9, 7, 3, 4, 10, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 8, 10, 5, 4, 4, 9, 6, 4, 9, 10, 9, 3, 5, 7, 3, 8, 4, 8, 4, 10, 4, 7, 8, 7, 4, 4, 6, 9, 8, 4, 11, 4, 8, 8, 9, 10, 4, 11, 14, 9, 7, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [17, 6, 9, 7, 9, 9, 8, 8, 7, 9, 8, 8, 4, 10, 8, 4, 6, 11, 14, 9, 8, 9, 9, 10, 4, 7, 6, 24, 6, 19, 4, 6, 8, 9, 5, 10, 10, 7, 6, 8, 12, 5, 13, 11, 11, 10, 7, 10, 14, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 4, 10, 8, 6, 8, 12, 4, 4, 7, 3, 5, 5, 9, 8, 5, 7, 9, 6, 6, 11, 11, 8, 4, 7, 2, 5, 11, 7, 3, 6, 6, 5, 5, 7, 12, 3, 4, 8, 5, 9, 5, 10, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 8, 8, 7, 3, 6, 9, 10, 4, 8, 8, 34, 5, 4, 15, 7, 10, 8, 9, 5, 469, 14, 11, 8, 7, 7, 4, 294, 4, 4, 9, 14, 13, 10, 5, 7, 11, 4, 12, 4, 9, 9, 5, 9]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [17, 4, 10, 12, 5, 7, 10, 13, 4, 10, 6, 8, 6, 10, 135, 7, 4, 7, 5, 3, 8, 9, 54, 7, 4, 4, 10, 33, 6, 7, 11, 13, 9, 4, 6, 6, 172, 9, 46, 194, 8, 9, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 12, 7, 8, 3, 4, 12, 8, 6, 6, 7, 4, 5, 4, 100, 6, 8, 10, 6, 10, 10, 6, 8, 6, 23, 7, 4, 4, 12, 10, 7, 9, 7, 22, 10, 7, 6, 5, 6, 32, 12, 9, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [11, 3, 7, 6, 6, 5, 8, 8, 4, 8, 7, 6, 7, 8, 6, 7, 4, 6, 3, 7, 4, 33, 16, 8, 4, 7, 10, 5, 6, 8, 10, 7, 9, 9, 9, 7, 8, 6, 8, 41, 7, 30, 10, 6, 10, 8, 8, 5, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 9, 4, 4, 4, 3, 4, 8, 9, 3, 4, 5, 8, 4, 10, 7, 3, 4, 7, 4, 6, 4, 10, 12, 8, 6, 5, 536, 7, 7, 11, 4, 366, 5, 382, 10, 9, 5, 14, 14]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [12, 5, 6, 3, 9, 6, 3, 6, 7, 3, 5, 9, 10, 161, 181, 9, 5, 8, 4, 9, 4, 5, 5, 6, 21, 4, 3, 10, 10, 4, 11, 6, 11, 3, 5, 5, 5, 5, 3, 5, 4, 13, 4, 8, 514, 7, 5, 4, 4, 8, 12, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [13, 5, 9, 9, 8, 9, 11, 7, 4, 10, 7, 8, 7, 10, 6, 4, 5, 10, 38, 13, 4, 9, 7, 8, 358, 13, 9, 10, 5, 4, 20, 4, 7, 10, 11, 6, 287, 5, 4, 9, 3, 20, 10, 4, 11, 4, 19, 9, 11, 6, 10, 6]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [16, 8, 8, 10, 5, 6, 10, 5, 9, 4, 8, 5, 7, 8, 8, 208, 178, 4, 5, 6, 5, 8, 10, 8, 193, 8, 4, 8, 5, 4, 6, 5, 8, 6, 4, 4, 6, 4, 273, 226, 5, 3, 4, 8, 8, 13, 13, 16, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 5, 4, 9, 6, 3, 10, 10, 7, 8, 5, 5, 8, 10, 7, 10, 549, 124, 4, 10, 4, 4, 6, 4, 11, 7, 11, 3, 11, 9, 40, 94, 11, 6, 7, 11, 4, 5, 131, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 5, 6, 4, 8, 9, 4, 5, 8, 6, 6, 7, 6, 10, 6, 6, 6, 8, 12, 12, 8, 4, 16, 6, 4, 12, 6, 5, 6, 7, 4, 9, 6, 4, 7, 6, 8, 9, 290, 10, 7, 6, 8, 4, 6, 5, 5, 14, 10, 12]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [17, 7, 11, 10, 10, 5, 7, 9, 6, 6, 8, 10, 8, 5, 10, 10, 10, 8, 6, 4, 131, 8, 4, 18, 17, 7, 15, 4, 10, 4, 9, 11, 7, 12, 5, 7, 8, 9, 9, 4, 39, 3, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [9, 7, 4, 4, 8, 8, 3, 8, 7, 6, 8, 9, 9, 10, 5, 3, 6, 7, 4, 10, 4, 3, 5, 503, 8, 8, 9, 12, 4, 6, 6, 7, 11, 9, 10, 11, 11, 6, 8, 8, 7, 6, 13, 8, 13, 9, 6, 4, 9]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [7, 12, 8, 8, 5, 10, 4, 6, 6, 10, 9, 288, 8, 12, 51, 7, 8, 9, 8, 10, 9, 9, 11, 348, 12, 13, 12, 10, 11, 10, 3, 6, 10, 10, 12, 9, 10, 12, 9, 8, 9, 8, 119, 10, 9, 11, 8, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 7, 6, 5, 16, 5, 11, 4, 5, 8, 4, 9, 361, 11, 12, 6, 15, 12, 9, 4, 10, 3, 9, 15, 19, 15, 4, 8, 6, 10, 8, 9, 5, 4, 4, 10, 4, 14, 6, 54, 11, 9, 12, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 17, 9, 12, 5, 10, 9, 9, 119, 8, 12, 6, 11, 7, 150, 4, 4, 9, 9, 15, 12, 11, 3, 6, 8, 4, 4, 9, 14, 10, 4, 10, 13, 11, 9, 8, 8, 11, 10, 9, 9, 4, 19, 523]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [9, 4, 10, 8, 3, 7, 6, 4, 7, 10, 9, 8, 253, 8, 7, 7, 5, 5, 309, 6, 14, 8, 8, 9, 6, 4, 9, 6, 8, 10, 6, 9, 8, 6, 9, 6, 9, 6, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [9, 6, 10, 8, 10, 6, 8, 11, 8, 6, 20, 9, 11, 11, 5, 10, 4, 142, 10, 6, 21, 8, 18, 10, 10, 155, 42, 13, 32, 13, 8, 8, 10, 8, 9, 5, 9, 4, 10, 8, 5, 13, 10, 9, 7, 11, 6, 9, 10, 8, 48]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 9, 9, 9, 8, 11, 10, 9, 5, 9, 11, 71, 5, 97, 4, 6, 12, 8, 10, 8, 9, 6, 3, 4, 7, 11, 4, 8, 43, 17, 75, 11, 14, 9, 16, 10, 6, 7, 5, 11, 9, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [12, 9, 6, 5, 5, 4, 9, 9, 4, 4, 7, 4, 5, 5, 8, 3, 6, 4, 5, 4, 8, 13, 8, 8, 5, 9, 13, 270, 268, 14, 4, 11, 4, 9, 11, 12, 7, 6, 4, 12, 4, 20]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [18, 5, 7, 10, 8, 10, 6, 6, 6, 8, 8, 3, 6, 3, 5, 6, 7, 6, 11, 8, 6, 5, 9, 8, 7, 6, 8, 11, 9, 4, 8, 71, 8, 8, 15, 6, 5, 39, 8, 135, 9, 6, 11, 6, 5, 10, 7, 12, 5, 10]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [12, 4, 12, 9, 4, 6, 6, 4, 8, 10, 10, 8, 4, 9, 10, 8, 4, 4, 4, 12, 8, 9, 13, 10, 4, 3, 13, 4, 8, 10, 11, 9, 12, 7, 49, 11, 10, 7, 4, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [7, 5, 12, 10, 7, 8, 4, 8, 8, 4, 7, 8, 3, 5, 6, 7, 4, 6, 10, 9, 4, 5, 5, 14, 12, 12, 3, 564, 3, 4, 24, 10, 5, 6, 29, 6, 7, 158, 10, 12, 5, 5, 4, 11, 9, 8, 11, 13, 117, 6]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 14, 3, 8, 6, 11, 10, 8, 13, 8, 10, 5, 6, 5, 5, 7, 7, 10, 6, 8, 7, 8, 7, 6, 11, 15, 10, 8, 7, 12, 10, 8, 5, 6, 6, 10, 10, 103, 6, 10, 7, 11, 12, 39, 7, 12, 18, 7, 11, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [18, 6, 9, 13, 9, 4, 8, 7, 4, 10, 9, 11, 7, 38, 4, 13, 11, 5, 5, 6, 6, 8, 13, 78, 20, 8, 5, 8, 143, 10, 22, 7, 6, 369, 6, 9, 8, 5, 12, 174, 6, 6, 4, 4, 3, 9, 548]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 5, 8, 12, 4, 5, 4, 4, 11, 11, 5, 6, 3, 5, 4, 4, 6, 4, 8, 8, 6, 5, 6, 30, 7, 7, 6, 9, 6, 7, 11, 6, 7, 4, 431, 163, 5, 8, 5, 151, 4, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 4, 7, 5, 4, 6, 4, 4, 6, 9, 7, 3, 5, 4, 4, 7, 30, 4, 6, 7, 8, 344, 9, 4, 9, 7, 497, 4, 9, 15, 6, 16, 22, 6, 5, 5, 9, 11, 5, 8, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [5, 11, 11, 3, 10, 9, 12, 6, 10, 9, 8, 7, 288, 7, 9, 9, 8, 7, 10, 8, 74, 10, 11, 8, 6, 8, 59, 9, 10, 347, 6, 4, 7, 5, 5, 10, 6, 10, 11, 8, 5, 5, 8, 10, 7, 18, 5]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [11, 5, 5, 8, 8, 5, 9, 8, 11, 9, 10, 9, 9, 10, 10, 3, 12, 170, 129, 8, 11, 4, 4, 8, 8, 4, 7, 10, 13, 12, 11, 8, 9, 7, 5, 5, 8, 7, 9, 15, 4, 7, 12, 9, 5, 9, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [7, 4, 9, 9, 7, 8, 9, 9, 6, 6, 4, 10, 5, 8, 8, 7, 4, 13, 5, 11, 11, 6, 7, 11, 9, 7, 8, 311, 4, 13, 10, 4, 6, 48, 9, 10, 5, 7, 10, 10, 9, 5, 9, 11, 12, 4, 8, 31]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 9, 8, 6, 7, 5, 11, 4, 4, 9, 4, 26, 10, 9, 366, 7, 6, 4, 9, 10, 4, 7, 10, 10, 4, 6, 8, 7, 7, 11, 7, 8, 7, 3, 9, 11, 7, 9, 7, 6, 5, 4, 17, 9, 8, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [10, 5, 7, 9, 9, 8, 9, 6, 10, 4, 6, 4, 10, 7, 6, 5, 13, 10, 6, 5, 4, 6, 11, 4, 9, 5, 7, 5, 293, 3, 6, 22, 6, 8, 6, 11, 9, 6, 5, 11, 4, 9, 9, 11, 11, 12, 50, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [8, 9, 5, 8, 5, 15, 6, 9, 4, 11, 3, 4, 3, 19, 3, 296, 4, 21, 8, 10, 31, 15, 8, 7, 5, 5, 44, 7, 7, 5, 10, 3, 20, 7, 10, 22, 4, 4, 5, 3, 9, 9, 5, 3, 5, 4, 5, 6, 18, 5]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [6, 11, 10, 7, 14, 5, 10, 13, 7, 7, 8, 5, 10, 26, 9, 7, 9, 8, 7, 37, 6, 6, 9, 4, 4, 8, 6, 7, 13, 17, 12, 4, 10, 3, 12, 6, 4, 4, 8, 6, 7, 9, 10, 11, 5, 507]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [3, 4, 12, 8, 7, 5, 17, 7, 4, 4, 6, 14, 8, 133, 14, 9, 6, 5, 4, 7, 12, 6, 7, 10, 14, 10, 12, 338, 3, 5, 7, 11, 9, 15, 6, 9, 7, 7, 31, 11, 7, 3, 7, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [6, 8, 13, 11, 7, 10, 6, 4, 9, 11, 10, 5, 5, 11, 7, 11, 12, 4, 3, 4, 9, 17, 9, 8, 6, 9, 6, 9, 9, 9, 11, 6, 6, 4, 12, 5, 5, 8, 3, 10, 11, 10, 12, 368, 6, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 5, 5, 10, 5, 8, 12, 78, 7, 6, 7, 3, 6, 6, 9, 6, 4, 10, 5, 11, 4, 5, 399, 5, 8, 7, 9, 7, 5, 9, 7, 6, 9, 6, 6, 9, 7, 89, 11, 11, 11, 4, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 8, 3, 9, 4, 8, 7, 6, 5, 4, 7, 387, 8, 6, 4, 7, 13, 370, 7, 4, 9, 6, 8, 8, 8, 5, 15, 8, 8, 11, 7, 8, 8, 12, 7, 9, 10, 7, 3, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 7, 7, 11, 5, 10, 9, 9, 6, 8, 6, 4, 6, 5, 7, 12, 4, 4, 7, 6, 194, 7, 6, 6, 6, 10, 9, 71, 7, 7, 9, 5, 8, 8, 5, 8, 8, 9, 7, 6, 13, 7, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 8, 12, 7, 11, 9, 4, 11, 7, 11, 10, 7, 7, 7, 14, 6, 12, 10, 9, 6, 4, 272, 10, 270, 8, 9, 13, 9, 8, 5, 12, 7, 10, 11, 8, 10, 7, 53, 6, 11, 6, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 8, 10, 4, 11, 9, 11, 11, 9, 9, 10, 8, 13, 5, 8, 8, 13, 150, 8, 11, 7, 11, 4, 27, 6, 9, 7, 14, 9, 7, 6, 5, 10, 10, 9, 8, 9, 8, 8, 12, 12, 8, 34, 3, 39, 12, 4, 9, 9, 9, 11, 8]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [8, 5, 10, 3, 7, 6, 6, 6, 7, 11, 7, 7, 6, 4, 6, 218, 4, 7, 5, 9, 10, 4, 9, 7, 5, 9, 10, 11, 3, 5, 5, 11, 6, 10, 3, 4, 8, 8, 6, 4, 5, 8, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [7, 8, 9, 8, 5, 7, 8, 3, 7, 6, 8, 132, 8, 7, 7, 6, 41, 7, 38, 3, 8, 5, 8, 8, 5, 11, 7, 8, 3, 7, 6, 5, 9, 5, 4, 38, 6, 7, 6, 7, 8, 14, 8, 6, 6, 8, 6, 6, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 8, 9, 5, 6, 7, 11, 4, 8, 72, 12, 4, 4, 9, 10, 9, 4, 4, 30, 6, 9, 4, 9, 10, 10, 7, 9, 10, 8, 5, 7, 9, 12, 7, 14, 7, 8, 6, 6, 324, 7, 13, 9, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [10, 9, 8, 3, 8, 9, 7, 11, 6, 7, 7, 5, 9, 6, 7, 9, 8, 10, 8, 9, 6, 5, 10, 7, 9, 9, 5, 9, 7, 9, 6, 6, 5, 8, 7, 4, 7, 8, 6, 4, 4, 9, 10, 9, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [14, 5, 6, 4, 4, 8, 9, 4, 6, 218, 5, 13, 8, 5, 9, 7, 3, 9, 11, 26, 4, 8, 6, 8, 7, 42, 12, 4, 6, 3, 9, 5, 6, 8, 8, 6, 11, 84, 5, 13, 12, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 7, 8, 7, 7, 12, 17, 12, 8, 10, 5, 8, 7, 9, 87, 7, 8, 11, 4, 5, 211, 12, 5, 5, 10, 8, 4, 3, 4, 7, 4, 114, 11, 7, 11, 8, 37, 157, 11, 10, 10, 9, 14, 3, 7]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [10, 6, 8, 10, 4, 12, 10, 11, 9, 11, 8, 12, 5, 12, 9, 10, 9, 6, 6, 4, 4, 11, 7, 9, 8, 4, 106, 5, 13, 6, 5, 8, 7, 7, 233, 11, 8, 10, 7, 9, 8, 10, 11, 11, 7, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 6, 6, 4, 4, 6, 4, 6, 6, 5, 4, 5, 7, 176, 7, 4, 4, 5, 6, 4, 6, 86, 5, 11, 11, 10, 164, 5, 4, 4, 8, 7, 8, 6, 6, 6, 3, 4, 5, 3]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 3, 6, 3, 3, 14, 10, 4, 4, 5, 12, 4, 4, 11, 4, 6, 92, 7, 5, 11, 5, 6, 6, 4, 11, 4, 4, 5, 6, 5, 6, 442, 178, 5, 23, 4, 6, 5, 7, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 9, 5, 3, 6, 203, 8, 8, 7, 10, 4, 4, 8, 4, 35, 4, 8, 10, 4, 8, 6, 9, 7, 9, 7, 4, 5, 8, 6, 6, 7, 4, 10, 16, 8, 7, 9, 10, 4, 8, 8, 5, 4, 9, 4, 5, 9, 9, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [14, 13, 7, 8, 4, 12, 9, 8, 7, 9, 8, 8, 7, 8, 7, 287, 14, 8, 5, 6, 11, 9, 5, 11, 8, 8, 6, 3, 14, 10, 3, 10, 6, 8, 96, 9, 11, 9, 7, 13, 13, 8, 97, 10, 9, 5, 266, 6, 8, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [6, 9, 8, 7, 12, 12, 11, 8, 12, 10, 9, 8, 6, 9, 10, 9, 8, 21, 17, 8, 9, 6, 116, 8, 4, 19, 5, 7, 19, 4, 5, 4, 9, 32, 7, 8, 11, 10, 10, 12, 11, 9, 28, 14, 7, 5, 8, 11, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 8, 7, 10, 7, 12, 117, 7, 8, 10, 9, 8, 11, 17, 7, 8, 4, 5, 7, 5, 81, 5, 9, 4, 10, 5, 8, 4, 44, 7, 6, 7, 8, 8, 4, 7, 8, 6, 9, 5, 4, 7, 9, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 9, 9, 10, 5, 3, 11, 4, 6, 4, 5, 12, 4, 10, 9, 10, 4, 12, 6, 7, 6, 10, 9, 16, 6, 9, 4, 4, 41, 6, 4, 4, 6, 9, 373, 14, 9, 4, 11, 5, 11, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 4, 7, 9, 6, 4, 7, 4, 5, 11, 4, 12, 10, 8, 8, 14, 10, 8, 5, 8, 4, 420, 9, 3, 5, 9, 8, 4, 4, 7, 188, 6, 18, 17, 3, 14, 6, 7, 9, 11, 11, 4, 16, 10, 4, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 9, 5, 6, 5, 9, 6, 5, 5, 10, 4, 12, 6, 6, 4, 10, 12, 4, 16, 6, 12, 5, 53, 9, 6, 3, 8, 6, 6, 5, 10, 6, 10, 241, 49, 7, 6, 17, 5, 9, 286, 5, 4, 7, 58, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [3, 14, 4, 4, 10, 10, 10, 11, 4, 3, 12, 6, 13, 260, 4, 14, 11, 5, 7, 6, 59, 10, 4, 12, 6, 14, 7, 4, 5, 11, 15, 6, 10, 13, 6, 8, 14, 5, 6, 4, 24, 123, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [8, 5, 12, 4, 9, 9, 12, 7, 9, 6, 10, 7, 11, 4, 9, 4, 8, 10, 5, 4, 6, 37, 9, 6, 22, 10, 9, 10, 5, 10, 10, 9, 84, 13, 11, 8, 335, 54, 4, 8, 11, 107, 8, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [12, 12, 13, 9, 11, 16, 10, 8, 14, 13, 14, 12, 3, 12, 5, 9, 10, 28, 10, 11, 12, 11, 11, 4, 9, 13, 10, 9, 12, 4, 9, 7, 8, 10, 8, 11, 15, 5, 6, 6, 13, 16, 14, 6, 9, 14, 4, 125, 9, 9, 8, 11]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [9, 10, 7, 10, 8, 10, 6, 6, 8, 11, 7, 9, 10, 8, 6, 5, 8, 6, 5, 10, 7, 12, 4, 10, 452, 7, 9, 10, 12, 5, 5, 7, 6, 11, 7, 9, 10, 114, 10, 6, 4, 7, 6, 9, 9, 7, 14, 6, 101, 5, 5, 6, 4, 12]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [7, 7, 13, 16, 11, 12, 14, 9, 12, 5, 15, 12, 16, 7, 6, 9, 9, 12, 9, 11, 5, 15, 17, 29, 5, 11, 19, 12, 8, 15, 11, 12, 11, 11, 8, 11, 26, 10, 15, 9, 13, 4, 13, 21, 8, 5, 61, 7, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [9, 5, 12, 4, 7, 7, 8, 4, 7, 11, 37, 3, 136, 9, 11, 4, 6, 7, 78, 10, 4, 12, 3, 9, 8, 5, 11, 60, 8, 9, 4, 10, 10, 11, 7, 12, 400, 11, 5, 7, 16, 8, 14, 22]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [12, 6, 10, 3, 9, 5, 13, 10, 7, 10, 11, 12, 9, 4, 10, 6, 7, 12, 5, 9, 10, 12, 4, 5, 10, 9, 3, 7, 4, 10, 14, 4, 16, 8, 10, 7, 7, 3, 11, 10, 12, 11, 3, 6, 5, 171, 18, 22, 7, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [8, 5, 8, 6, 9, 4, 6, 14, 13, 8, 10, 4, 6, 5, 14, 11, 6, 6, 7, 9, 16, 21, 4, 13, 14, 5, 74, 4, 22, 13, 19, 16, 15, 7, 6, 17, 3, 10, 10, 7, 10, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [3, 5, 12, 7, 13, 4, 6, 12, 8, 8, 6, 8, 5, 8, 7, 5, 11, 7, 6, 8, 11, 286, 10, 5, 7, 4, 7, 463, 10, 10, 10, 6, 9, 6, 4, 4, 5, 12, 7, 9, 6, 12, 6, 6, 5, 5, 13, 9, 10, 6, 6, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 13, 4, 6, 7, 15, 5, 11, 12, 7, 4, 4, 10, 3, 4, 125, 4, 7, 4, 6, 6, 5, 5, 7, 10, 6, 5, 7, 4, 4, 6, 13, 11, 18, 8, 11, 156]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 5, 5, 7, 9, 7, 9, 5, 9, 7, 157, 6, 35, 4, 6, 4, 11, 6, 8, 4, 7, 4, 11, 9, 5, 7, 3, 8, 21, 12, 6, 8, 6, 5, 195, 7, 9, 6, 6, 13, 2, 10, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 14, 11, 6, 4, 4, 14, 7, 10, 11, 10, 11, 11, 4, 6, 9, 11, 10, 13, 5, 4, 13, 6, 205, 13, 5, 6, 11, 4, 5, 12, 15, 10, 5, 7, 12, 4, 4, 11, 13, 12, 8, 4, 14, 10, 10, 12, 11]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [10, 9, 7, 8, 7, 9, 8, 10, 5, 3, 10, 9, 6, 4, 13, 6, 11, 7, 10, 14, 5, 7, 4, 8, 6, 10, 4, 11, 11, 7, 5, 10, 5, 11, 7, 4, 8, 6, 6, 7, 28, 7, 11, 6, 9, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [3, 9, 6, 11, 4, 7, 12, 10, 9, 6, 11, 10, 124, 386, 28, 12, 12, 8, 80, 7, 7, 13, 12, 9, 8, 10, 6, 12, 10, 6, 20, 7, 10, 6, 6, 13, 7, 8, 5, 8, 7, 10, 8, 14, 9, 14, 7, 9, 8, 6, 9, 16]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 9, 3, 7, 5, 8, 4, 8, 8, 6, 4, 9, 73, 6, 4, 6, 501, 5, 4, 9, 6, 3, 256, 7, 8, 5, 409, 10, 5, 6, 8, 6, 4, 10, 12, 9, 8, 4, 349, 5, 10, 6, 21]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 11, 11, 9, 9, 6, 10, 5, 5, 6, 8, 9, 12, 5, 12, 5, 14, 22, 4, 6, 11, 12, 10, 13, 14, 12, 9, 6, 7, 12, 14, 39, 4, 10, 4, 7, 59, 4, 16, 4, 5, 8, 14]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 5, 12, 6, 6, 4, 4, 8, 4, 4, 271, 9, 140, 13, 4, 8, 9, 13, 12, 9, 7, 11, 26, 162, 11, 4, 7, 10, 4, 17, 13, 15, 7, 11, 6, 7, 10, 12, 11, 7, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 7, 8, 4, 6, 8, 6, 5, 11, 5, 10, 6, 6, 9, 6, 7, 8, 8, 6, 6, 9, 7, 8, 4, 8, 5, 9, 5, 4, 6, 7, 6, 7, 8, 3, 9, 7, 6, 11, 7, 7, 5, 4, 5, 11]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 7, 4, 9, 8, 9, 6, 10, 7, 4, 8, 11, 6, 6, 9, 8, 6, 76, 8, 9, 9, 11, 11, 9, 10, 9, 11, 10, 13, 8, 8, 12, 5, 9, 24, 8, 8, 4, 4, 9, 7, 7, 10, 8, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [8, 3, 9, 3, 4, 7, 4, 11, 10, 16, 8, 5, 6, 4, 219, 5, 5, 7, 4, 9, 5, 8, 8, 25, 7, 8, 8, 11, 10, 8, 10, 9, 11, 10, 6, 12, 6, 7, 4, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [11, 10, 7, 3, 3, 4, 8, 44, 5, 6, 37, 20, 6, 5, 4, 4, 9, 207, 11, 237, 8, 6, 13, 12, 5, 10, 4, 40, 3, 31, 10, 10, 6, 7, 7, 90, 7, 8, 7, 6, 4, 10, 31]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [16, 9, 4, 9, 6, 10, 4, 8, 4, 8, 9, 6, 6, 10, 9, 4, 12, 10, 119, 13, 6, 9, 6, 4, 6, 3, 12, 44, 6, 7, 7, 6, 12, 9, 7, 6, 11, 9, 6, 7, 6, 12, 6, 14, 19, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 13, 10, 11, 3, 10, 10, 6, 6, 7, 7, 19, 4, 4, 9, 6, 80, 16, 6, 11, 342, 5, 5, 10, 17, 10, 12, 10, 5, 4, 6, 10, 9, 7, 9, 4, 12, 3, 9, 10, 8, 7, 12, 6, 15, 11, 19, 6, 12]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 13, 4, 8, 9, 7, 12, 7, 7, 9, 8, 8, 8, 5, 9, 7, 12, 9, 54, 8, 14, 10, 5, 12, 14, 8, 10, 10, 8, 116, 11, 9, 7, 6, 12, 9, 6, 6, 8, 9, 8, 16, 11, 10, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 6, 10, 8, 7, 10, 4, 8, 5, 8, 215, 9, 3, 9, 4, 11, 7, 20, 7, 5, 8, 12, 14, 6, 11, 9, 3, 7, 314, 4, 12, 8, 416, 12, 14, 8, 10, 7, 9, 8, 8, 4, 8, 6, 8, 10]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 7, 9, 10, 5, 7, 7, 4, 7, 8, 8, 7, 6, 10, 4, 6, 8, 10, 12, 13, 8, 12, 8, 46, 11, 7, 8, 9, 8, 6, 8, 14, 7, 4, 9, 10, 6, 11, 7, 6, 10, 4, 4, 9, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [7, 5, 9, 7, 6, 5, 4, 8, 6, 7, 7, 10, 5, 6, 6, 9, 4, 12, 6, 6, 6, 10, 9, 8, 5, 7, 6, 12, 4, 11, 11, 4, 362, 7, 8, 59, 6, 7, 7, 4, 6, 8, 10, 7, 9, 8, 13, 6, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [14, 8, 4, 6, 7, 4, 6, 8, 6, 7, 5, 10, 7, 6, 7, 5, 8, 6, 7, 5, 5, 120, 56, 4, 10, 12, 7, 9, 4, 51, 5, 11, 20, 12, 13, 11, 8, 7, 9, 7, 7, 6, 5, 10, 5, 4, 7, 4, 10]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 4, 6, 8, 7, 8, 9, 7, 9, 8, 10, 9, 6, 15, 6, 7, 10, 10, 7, 9, 11, 6, 10, 7, 5, 7, 7, 4, 8, 7, 10, 9, 10, 7, 8, 276, 13, 6, 7, 188, 9, 10, 8, 14, 38, 5, 9, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [15, 8, 9, 10, 8, 9, 4, 5, 7, 4, 7, 6, 4, 9, 6, 6, 8, 6, 10, 6, 8, 10, 6, 199, 9, 453, 4, 6, 10, 12, 7, 8, 7, 7, 7, 8, 6, 11, 89, 8, 13, 10, 4, 8, 8, 7, 8, 9, 7, 7, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [11, 6, 3, 4, 4, 7, 8, 7, 11, 8, 15, 3, 9, 11, 7, 71, 6, 8, 10, 4, 10, 10, 4, 7, 6, 7, 7, 8, 10, 6, 10, 6, 5, 6, 7, 9, 6, 7, 7, 11, 14, 6, 4, 13]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 6, 10, 3, 4, 249, 5, 6, 8, 11, 8, 60, 9, 5, 5, 6, 10, 7, 10, 11, 10, 6, 7, 7, 10, 8, 10, 199, 4, 7, 8, 10, 6, 21, 4, 6, 6, 5, 9, 8, 7, 6, 7, 8, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 6, 4, 6, 8, 6, 8, 4, 7, 10, 7, 4, 7, 9, 5, 5, 5, 8, 6, 7, 8, 5, 7, 7, 5, 5, 6, 5, 8, 4, 9, 8, 9, 7, 9, 8, 7, 8, 8, 490, 5, 11, 447]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 9, 5, 7, 14, 8, 9, 7, 7, 7, 7, 9, 8, 7, 7, 10, 8, 16, 97, 7, 13, 9, 5, 6, 8, 7, 6, 7, 8, 10, 10, 7, 145, 8, 15, 8, 10, 9, 7, 6, 8, 4, 7, 10, 9, 151, 4, 7, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 6, 5, 5, 7, 7, 5, 4, 5, 8, 7, 7, 6, 7, 15, 7, 3, 8, 9, 8, 4, 7, 8, 8, 8, 6, 7, 9, 5, 8, 8, 9, 11, 6, 6, 12, 9, 6, 6, 8, 5, 71]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 8, 17, 11, 16, 14, 13, 15, 13, 12, 11, 12, 13, 508, 16, 12, 13, 14, 14, 5, 4, 15, 12, 12, 13, 14, 15, 16, 13, 15, 12, 13, 12, 17, 248, 13, 15, 13, 15, 14, 13, 13, 6]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [13, 11, 8, 15, 4, 10, 27, 16, 10, 17, 11, 5, 5, 15, 16, 11, 315, 10, 15, 4, 10, 10, 8, 4, 7, 12, 6, 13, 12, 15, 10, 8, 11, 14, 10, 15, 11, 11, 10, 12, 10, 6, 7, 10, 4, 11, 14, 9, 13, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [11, 16, 5, 19, 17, 9, 18, 16, 7, 14, 14, 5, 14, 9, 17, 5, 135, 5, 7, 4, 16, 17, 20, 7, 7, 17, 17, 4, 20, 17, 10, 16, 17, 9, 203, 17, 5, 4, 4, 17, 7, 77, 7, 7, 18, 18, 18, 10, 410, 18, 16]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 9, 12, 8, 10, 4, 10, 10, 4, 9, 203, 14, 4, 83, 8, 12, 7, 6, 15, 4, 18, 6, 7, 10, 9, 7, 5, 17, 11, 372, 20, 9, 5, 37, 6, 5, 8, 9, 5, 4, 7, 6, 10, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [12, 10, 8, 8, 6, 10, 10, 6, 10, 7, 7, 13, 6, 10, 337, 10, 12, 9, 12, 5, 10, 9, 3, 12, 6, 11, 9, 7, 10, 10, 11, 5, 7, 8, 10, 9, 5, 13, 11, 6, 14, 5, 6, 6, 10, 8, 7, 11, 8, 9, 35]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [4, 10, 12, 4, 11, 11, 10, 10, 12, 11, 10, 8, 8, 6, 11, 8, 13, 32, 4, 8, 9, 24, 8, 12, 9, 17, 7, 14, 10, 4, 11, 5, 11, 11, 9, 4, 5, 12, 11, 11, 5, 11, 12, 10, 8, 12, 12, 10, 12]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [18, 4, 7, 11, 16, 17, 13, 12, 16, 11, 18, 8, 10, 12, 18, 9, 4, 65, 12, 13, 7, 9, 11, 15, 16, 19, 9, 17, 17, 10, 9, 12, 13, 16, 9, 12, 144, 16, 5, 16, 14, 26, 11, 7, 8, 347, 12, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [9, 10, 10, 15, 14, 12, 13, 10, 41, 10, 14, 12, 13, 15, 12, 9, 14, 4, 7, 11, 8, 15, 4, 9, 10, 9, 10, 9, 11, 13, 16, 14, 8, 18, 320, 8, 9, 14, 9, 13, 12, 7, 9, 10, 12, 8, 7, 14, 7, 7, 11, 10, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [5, 10, 8, 10, 9, 11, 10, 13, 5, 11, 12, 11, 11, 6, 9, 231, 9, 8, 10, 9, 12, 6, 6, 11, 5, 9, 7, 11, 12, 14, 14, 9, 8, 11, 11, 10, 9, 10, 10, 14, 9, 8, 8, 8, 9, 11, 8, 10, 9, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 15, 8, 13, 14, 4, 12, 8, 14, 12, 14, 6, 8, 8, 11, 8, 16, 13, 3, 16, 11, 16, 4, 4, 7, 14, 16, 4, 14, 8, 12, 14, 5, 6, 16, 14, 22, 14, 12, 10, 7, 6, 90, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 14, 8, 14, 7, 14, 5, 6, 18, 8, 6, 3, 5, 17, 4, 6, 7, 16, 14, 5, 4, 14, 15, 4, 5, 5, 3, 15, 5, 16, 13]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [5, 5, 12, 11, 4, 13, 14, 10, 4, 11, 10, 6, 3, 11, 5, 7, 50, 11, 10, 10, 9, 5, 13, 4, 11, 8, 9, 350, 13, 12, 494, 9, 7, 6, 23, 11, 11, 10, 9, 10, 9, 14, 8, 5, 8, 5, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 4, 11, 10, 6, 8, 9, 8, 7, 4, 7, 10, 4, 10, 9, 9, 4, 6, 6, 8, 12, 8, 10, 11, 11, 7, 10, 5, 7, 5, 5, 86, 10, 9, 16, 6, 10, 7, 8, 13, 8, 4, 10, 7, 7, 8, 7, 6]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [18, 4, 6, 4, 9, 6, 10, 6, 8, 11, 9, 10, 14, 13, 5, 10, 9, 9, 17, 10, 8, 9, 3, 8, 4, 7, 9, 9, 9, 10, 8, 14, 8, 11, 6, 9, 5, 6, 8, 7, 8, 4, 11, 8, 7, 8, 10, 12, 9, 25, 5, 7]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 10, 4, 19, 5, 8, 5, 12, 14, 5, 6, 6, 5, 4, 5, 9, 6, 10, 4, 5, 5, 12, 13, 10, 7, 10, 5, 6, 4, 4, 10, 6, 4, 12, 17, 12, 9, 11, 8, 32, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [14, 6, 15, 7, 7, 47, 15, 7, 16, 17, 13, 6, 6, 294, 9, 8, 15, 6, 11, 7, 10, 11, 5, 7, 5, 14, 14, 18, 9, 11, 8, 17, 10, 18, 6, 9, 7, 7, 7, 36, 12, 14, 15]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [23, 8, 8, 7, 11, 8, 9, 9, 7, 11, 30, 8, 10, 6, 6, 8, 7, 6, 7, 11, 8, 8, 9, 7, 8, 6, 4, 10, 11, 8, 9, 5, 10, 4, 7, 6, 5, 5, 4, 9, 5, 10, 7, 7, 31, 7, 8, 11]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 8, 10, 7, 7, 4, 5, 5, 4, 4, 3, 6, 6, 8, 8, 9, 5, 4, 6, 6, 6, 8, 3, 5, 6, 9, 10, 9, 5, 7, 7, 4, 8, 157, 9, 12, 4, 13, 8, 7, 6, 4, 7, 7, 9, 27, 6, 6, 9, 6]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 6, 13, 16, 10, 47, 7, 4, 8, 4, 15, 9, 101, 13, 16, 118, 8, 9, 13, 11, 6, 14, 6, 8, 14, 4, 3, 8, 6, 6, 5, 8, 4, 7, 12, 14, 13, 16, 15, 11, 12, 12, 4, 10, 8, 13, 7, 4, 5, 9, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 6, 6, 7, 4, 4, 6, 6, 4, 6, 4, 5, 4, 7, 41, 6, 4, 7, 8, 8, 5, 6, 5, 6, 6, 6, 4, 6, 7, 5, 10, 9, 7, 9, 4, 7, 6, 9, 6, 4, 4, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [8, 11, 7, 5, 11, 9, 5, 8, 10, 8, 10, 463, 12, 29, 11, 11, 6, 4, 6, 12, 11, 14, 10, 4, 9, 9, 12, 9, 7, 8, 3, 13, 8, 11, 7, 9, 9, 11, 108, 10, 9, 10, 10, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 17, 7, 4, 7, 7, 8, 8, 6, 8, 10, 12, 6, 10, 8, 6, 8, 4, 7, 363, 18, 11, 7, 6, 9, 11, 6, 6, 7, 10, 8, 10, 11, 8, 9, 9, 7, 13, 11, 8, 6, 9, 10, 15, 8, 12, 136, 8, 11, 8, 7, 8]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 11, 11, 10, 11, 12, 5, 9, 5, 4, 4, 13, 8, 9, 10, 7, 6, 6, 22, 92, 7, 7, 8, 10, 13, 9, 9, 9, 10, 10, 8, 11, 12, 4, 9, 7, 12, 7, 7, 8, 6, 8, 8, 3, 7, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 5, 6, 5, 6, 12, 7, 10, 7, 3, 8, 5, 4, 6, 12, 10, 9, 8, 6, 4, 10, 8, 96, 16, 7, 8, 12, 10, 11, 7, 3, 8, 16, 6, 10, 11, 6, 12, 9, 12, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [18, 6, 15, 7, 7, 5, 4, 9, 14, 8, 16, 6, 9, 7, 15, 7, 9, 14, 15, 7, 8, 7, 5, 8, 8, 12, 4, 17, 6, 11, 6, 16, 22, 13, 4, 8, 7, 14, 4, 16, 16, 8, 10, 8, 13, 9, 7, 8, 16, 7, 12, 4, 16]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 8, 11, 8, 11, 9, 7, 9, 11, 7, 7, 13, 9, 16, 5, 13, 7, 4, 17, 9, 9, 4, 8, 7, 12, 6, 12, 8, 16, 7, 7, 7, 12, 10, 2, 2, 8, 12, 17, 11, 8, 10, 10, 10, 9, 9, 17, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [9, 8, 5, 19, 4, 3, 4, 17, 3, 212, 18, 9, 8, 3, 19, 2, 4, 4, 5, 19, 19, 6, 7, 7, 104, 4, 10, 332]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 8, 7, 8, 10, 3, 7, 14, 14, 22, 4, 6, 25, 15, 8, 12, 12, 7, 12, 4, 5, 6, 280, 18, 8, 10, 7, 7, 8, 4, 10, 4, 10, 3, 8, 9, 28, 11, 19, 12, 11, 4, 10, 9]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [7, 5, 11, 152, 8, 5, 6, 5, 27, 4, 12, 12, 4, 4, 6, 7, 9, 8, 9, 9, 11, 4, 8, 4, 11, 10, 12, 12, 8, 7, 6, 14, 12, 3, 53, 146, 9, 105, 62, 4, 10, 4, 9, 13, 7, 6, 6, 7, 7, 6, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [16, 6, 10, 11, 14, 156, 15, 21, 8, 12, 11, 6, 11, 5, 6, 18, 18, 9, 11, 12, 12, 11, 16, 14, 11, 48, 12, 61, 11, 7, 18, 6, 15, 11, 11, 5, 13, 10, 13, 13, 11, 7, 28, 9, 16, 12, 13, 60, 103]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [11, 14, 12, 6, 5, 12, 12, 18, 94, 6, 13, 4, 13, 17, 12, 13, 7, 9, 14, 12, 6, 9, 14, 7, 13, 11, 17, 18, 8, 12, 12, 20, 11, 4, 9, 10, 13, 11, 10, 11, 12, 14, 9, 6, 11, 16, 11, 15, 14, 13]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [8, 12, 11, 10, 8, 11, 7, 9, 13, 6, 12, 8, 7, 6, 5, 35, 9, 5, 13, 9, 8, 314, 10, 8, 7, 12, 7, 23, 9, 8, 7, 9, 8, 395, 8, 10, 9, 9, 322, 9, 10, 9, 72, 7, 9, 8, 6, 10]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 8, 3, 7, 226, 5, 6, 5, 7, 8, 10, 509, 11, 32, 6, 9, 8, 9, 4, 8, 11, 7, 7, 321, 7, 7, 15, 6, 9, 7, 8, 8, 9, 7, 7, 8, 7, 8, 4, 5, 8, 9, 6]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 7, 11, 6, 9, 7, 8, 15, 7, 5, 6, 9, 7, 7, 6, 12, 9, 7, 11, 8, 8, 8, 13, 659, 10, 7, 13, 7, 7, 8, 6, 8, 12, 10, 8, 20, 7, 7, 8, 6, 13, 7, 113, 12, 14, 10, 9, 12, 7, 6, 8, 13]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 8, 4, 3, 8, 7, 6, 3, 5, 4, 9, 4, 9, 5, 5, 13, 12, 8, 6, 4, 13, 4, 6, 8, 11, 73, 5, 5, 7, 10, 6, 8, 11, 13, 7, 63, 6, 6, 17, 5, 18, 6, 4, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [5, 11, 10, 7, 10, 4, 9, 12, 14, 8, 7, 6, 12, 10, 10, 7, 13, 12, 6, 12, 12, 11, 10, 36, 6, 10, 12, 14, 15, 7, 22, 9, 11, 9, 15, 10, 10, 14, 5, 9, 10, 8, 12, 11, 12, 8, 9, 4, 13]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 8, 7, 8, 10, 10, 8, 5, 13, 8, 8, 250, 7, 101, 5, 24, 9, 7, 9, 10, 9, 7, 8, 7, 4, 11, 7, 8, 10, 9, 9, 9, 9, 10, 9, 8, 9, 7, 10, 10, 6, 10, 11, 12, 8, 13, 7, 8, 14, 9, 15, 10]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 9, 9, 10, 9, 23, 5, 12, 10, 10, 4, 9, 4, 9, 9, 9, 7, 34, 7, 4, 4, 13, 5, 9, 10, 9, 6, 8, 10, 7, 7, 10, 9, 6, 8, 5, 8, 8, 4, 9, 13, 12, 14, 9, 7, 34]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [7, 10, 5, 6, 5, 6, 6, 7, 4, 7, 8, 4, 9, 11, 8, 10, 9, 8, 10, 579, 10, 9, 5, 4, 9, 11, 5, 4, 6, 7, 8, 8, 11, 8, 7, 6, 29, 7, 8, 11, 8, 9, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [10, 8, 10, 10, 10, 11, 10, 7, 10, 8, 8, 12, 10, 7, 10, 9, 6, 9, 10, 9, 10, 80, 11, 7, 8, 6, 13, 12, 11, 11, 22, 10, 4, 11, 278, 9, 8, 10, 8, 11, 7, 36, 10, 11, 8, 11, 8, 9, 5, 11, 10, 5, 99]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [15, 6, 10, 8, 4, 7, 5, 5, 9, 11, 10, 7, 11, 10, 9, 8, 10, 8, 5, 6, 8, 14, 11, 7, 12, 7, 7, 6, 9, 243, 421, 11, 10, 9, 10, 5, 5, 23, 6, 9, 8, 9, 11, 177, 8, 8, 7, 9, 10, 4, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [6, 12, 4, 6, 12, 12, 4, 5, 11, 3, 10, 10, 14, 11, 6, 10, 4, 247, 3, 483, 5, 4, 10, 4, 4, 378, 14, 26, 5, 9, 8, 10, 7, 10, 7, 5, 6, 13, 6, 10, 15]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 83, 4, 6, 12, 4, 7, 4, 4, 7, 7, 130, 7, 8, 4, 9, 28, 4, 9, 6, 6, 7, 5, 16, 6, 144, 10, 7, 8, 5, 4, 6, 8, 4, 10, 8, 9, 10, 8, 7, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 8, 6, 10, 7, 5, 8, 7, 8, 4, 7, 9, 6, 4, 8, 8, 6, 6, 9, 6, 8, 7, 7, 10, 4, 6, 9, 8, 4, 8, 42, 7, 6, 9, 9, 93, 7, 4, 6, 5, 52, 5, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [3, 10, 7, 13, 5, 4, 8, 6, 8, 9, 9, 4, 7, 12, 9, 10, 34, 5, 9, 7, 9, 8, 5, 10, 6, 4, 7, 8, 8, 6, 9, 9, 7, 18, 10, 6, 8, 10, 6, 8, 9, 8, 6, 7, 7, 6, 9, 11, 12, 11, 10]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 6, 8, 11, 7, 5, 10, 5, 9, 8, 9, 8, 13, 32, 6, 11, 9, 12, 4, 9, 8, 8, 9, 6, 11, 11, 10, 6, 6, 7, 8, 9, 5, 4, 8, 8, 8, 10, 11, 5, 12, 10, 9, 10, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 8, 3, 6, 4, 5, 11, 5, 7, 9, 7, 7, 4, 432, 11, 20, 11, 9, 10, 10, 9, 6, 7, 10, 8, 10, 8, 8, 6, 7, 6, 11, 9, 6, 8, 15, 8, 10, 7, 4, 12, 10, 9, 10, 10, 9, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 8, 7, 9, 5, 9, 11, 8, 14, 10, 6, 10, 5, 4, 10, 7, 5, 5, 7, 12, 4, 4, 5, 11, 13, 4, 12, 8, 4, 8, 6, 10, 6, 13, 5, 9, 7, 7, 12, 4, 7, 249]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [11, 6, 12, 4, 7, 9, 15, 5, 9, 15, 3, 4, 9, 33, 4, 12, 7, 6, 10, 35, 13, 10, 4, 12, 6, 16, 13, 13, 15, 5, 14, 11, 10, 7, 10, 9, 9, 14, 3, 12, 11, 21, 11, 11, 6, 9, 11, 7, 13, 15]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [10, 4, 14, 9, 4, 5, 5, 9, 11, 6, 6, 9, 11, 4, 441, 8, 11, 4, 7, 4, 5, 5, 5, 8, 4, 17, 10, 9, 5, 13, 10, 12, 25, 5, 73, 12, 9, 7, 376, 9, 4, 8, 4, 6, 8, 5, 82, 9, 14]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 6, 8, 5, 8, 7, 7, 8, 8, 4, 7, 4, 5, 5, 8, 26, 10, 5, 7, 7, 6, 6, 5, 5, 5, 9, 7, 143, 5, 7, 6, 9, 7, 7, 4, 6, 3, 8, 5, 6, 12, 7, 4, 9, 6, 7, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 6, 5, 5, 5, 9, 10, 4, 4, 8, 13, 10, 5, 6, 9, 7, 11, 8, 5, 5, 7, 12, 12, 5, 5, 5, 8, 15, 5, 8, 8, 9, 7, 4, 8, 9, 11, 25, 9, 8, 11, 7, 12, 11, 11, 10, 11, 11]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [5, 10, 9, 9, 4, 7, 6, 10, 11, 12, 2, 9, 7, 8, 10, 562, 57, 8, 8, 155, 10, 8, 7, 11, 9, 7, 8, 5, 12, 11, 5, 11, 10, 30, 8, 9, 11, 9, 9, 7, 11, 11, 10, 7, 7, 11, 204, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 7, 6, 5, 12, 5, 11, 10, 6, 12, 4, 5, 10, 4, 7, 9, 5, 5, 14, 9, 6, 10, 12, 12, 12, 4, 9, 10, 9, 8, 6, 10, 5, 11, 12, 18, 6, 9, 6, 8, 3, 9, 7, 4, 244, 10, 11, 6, 7, 10]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [9, 9, 11, 4, 12, 167, 7, 13, 6, 2, 8, 4, 7, 13, 3, 62, 7, 129, 3, 8, 24, 9, 9, 9, 7, 9, 9, 9, 9, 10, 7, 8, 7, 9, 9, 9, 8, 9, 12, 8, 8, 8, 8, 9, 18, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [9, 10, 12, 9, 10, 10, 9, 12, 7, 7, 9, 323, 11, 172, 10, 11, 4, 13, 4, 4, 12, 5, 9, 13, 6, 10, 12, 33, 11, 15, 12, 11, 36, 6, 12, 10, 14, 9, 10, 9, 9, 7, 11, 9, 108, 6, 13, 46, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [15, 15, 9, 3, 4, 9, 10, 13, 14, 9, 6, 10, 15, 11, 11, 25, 8, 10, 9, 11, 14, 483, 12, 10, 4, 11, 12, 59, 16, 8, 62, 12, 8, 10, 15, 17, 15, 7, 301, 13, 4, 17, 6, 12, 6, 11, 10, 19, 9, 11, 9]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [12, 10, 4, 12, 7, 9, 9, 7, 13, 5, 10, 13, 12, 13, 8, 6, 10, 6, 14, 9, 3, 12, 3, 27, 5, 5, 8, 10, 4, 10, 27, 10, 9, 38, 4, 12, 10, 4, 4, 8, 12, 8, 9, 11, 18, 6, 6, 10]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [9, 6, 10, 9, 2, 9, 11, 9, 6, 13, 13, 6, 8, 11, 10, 6, 4, 35, 9, 9, 10, 10, 11, 12, 11, 10, 4, 9, 11, 9, 10, 4, 7, 10, 12, 4, 9, 15, 7, 16, 8, 5, 9, 5, 5, 12, 9, 8, 8, 12, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [11, 10, 7, 2, 10, 5, 9, 8, 10, 11, 7, 9, 8, 11, 37, 13, 5, 8, 9, 16, 6, 7, 8, 13, 7, 12, 16, 11, 355, 12, 9, 22, 7, 7, 12, 7, 13, 7, 15, 14, 6, 7, 13, 11, 8, 10, 11, 9, 12, 8, 13, 12, 16]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 6, 8, 8, 10, 7, 11, 4, 7, 5, 7, 8, 9, 6, 7, 7, 9, 9, 6, 8, 8, 11, 5, 5, 7, 5, 7, 5, 6, 6, 14, 5, 12, 4, 8, 7, 9, 5, 7, 3, 8, 3, 5, 9, 5, 9, 8, 7, 5, 16, 8, 12]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [7, 9, 4, 12, 4, 7, 7, 9, 10, 6, 6, 11, 5, 11, 7, 10, 5, 12, 11, 4, 10, 9, 6, 12, 8, 9, 11, 4, 8, 7, 9, 7, 9, 11, 8, 5, 10, 8, 4, 391, 7, 7, 9, 7, 11, 9, 8, 10, 11, 9, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 6, 8, 4, 7, 9, 5, 34, 9, 9, 4, 7, 4, 9, 5, 6, 9, 8, 8, 7, 8, 6, 8, 8, 6, 7, 6, 5, 7, 7, 6, 6, 10, 8, 5, 7, 8, 8, 10, 4, 4, 13, 10, 7, 12, 11, 7, 331, 10, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 11, 7, 7, 4, 8, 7, 11, 10, 10, 7, 11, 13, 6, 207, 5, 7, 7, 6, 7, 10, 6, 8, 6, 7, 9, 12, 10, 7, 6, 9, 9, 9, 16, 7, 29, 188, 8, 14, 11, 7, 11, 6, 5, 35]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [11, 11, 14, 14, 8, 9, 12, 10, 8, 497, 12, 18, 12, 5, 8, 9, 25, 6, 8, 10, 8, 20, 12, 9, 11, 12, 14, 7, 10, 5, 8, 11, 9, 18, 8, 9, 10, 494, 9, 4, 12, 8, 9, 9, 17, 9, 10, 9, 11, 12]
length(C_list) = 50
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 10, 4, 12, 6, 8, 8, 11, 8, 4, 7, 5, 186, 9, 10, 8, 11, 10, 6, 4, 6, 14, 9, 8, 4, 8, 6, 9, 8, 5, 5, 12, 10, 12, 4, 4, 7, 9, 5, 8, 6, 6, 7, 10, 9, 12, 9, 4]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [4, 17, 17, 13, 6, 13, 14, 8, 7, 6, 4, 7, 10, 14, 14, 16, 14, 5, 4, 15, 11, 15, 18, 13, 4, 17, 16, 231, 8, 8, 16, 15, 5, 8, 18, 9, 5, 18, 7, 9, 4, 9, 16, 10, 18, 9, 138]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 12, 13, 4, 10, 4, 7, 4, 4, 6, 5, 5, 7, 14, 462, 4, 11, 7, 10, 9, 97, 10, 4, 5, 9, 10, 4, 11, 13, 5, 4, 10, 10, 11, 7, 11, 12, 15, 5, 82, 7, 10, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 7, 11, 14, 52, 11, 15, 14, 9, 8, 9, 11, 312, 14, 8, 9, 6, 3, 9, 13, 13, 7, 8, 46, 12, 10, 12, 8, 10, 12, 10, 13, 12, 13, 14, 11, 11, 13, 11, 10, 8, 10, 11, 12, 8, 14, 9, 14, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [6, 8, 12, 11, 11, 10, 10, 12, 10, 9, 11, 8, 9, 11, 7, 4, 12, 9, 11, 10, 6, 10, 10, 9, 11, 163, 8, 12, 12, 9, 10, 12, 9, 7, 4, 11, 12, 10, 24, 121, 8, 10, 10, 9, 8, 10, 10, 11, 13]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [2, 8, 9, 4, 6, 4, 3, 5, 4, 7, 4, 15, 6, 8, 147, 52, 5, 9, 9, 4, 9, 6, 9, 7, 5, 7, 7, 11, 7, 7, 6, 6, 8, 8, 44, 7, 30, 7, 7, 9, 11, 7, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [9, 11, 9, 9, 10, 8, 7, 8, 11, 6, 8, 14, 9, 8, 8, 7, 7, 9, 5, 8, 16, 8, 4, 12, 9, 4, 9, 7, 33, 261, 10, 11, 9, 11, 15, 9, 11, 7, 12, 10, 11, 9, 6, 10, 6, 14, 7, 15, 18, 6, 16]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [8, 10, 9, 10, 9, 8, 7, 7, 12, 8, 11, 8, 9, 10, 7, 13, 6, 12, 11, 4, 8, 9, 10, 10, 10, 7, 7, 115, 11, 11, 8, 33, 52, 5, 12, 14, 9, 6, 14, 13, 9, 8, 117, 51]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
