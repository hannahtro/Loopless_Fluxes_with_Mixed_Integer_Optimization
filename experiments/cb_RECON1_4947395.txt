ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 37
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 7, 9, 6, 6, 4, 2, 8, 2, 8, 6, 9, 5, 5, 325, 48, 7, 4, 4, 9, 9, 4, 12, 7, 4, 10, 8, 3, 6, 3, 15, 8, 7, 11, 48, 8, 4, 5, 10, 8, 9, 5, 5, 2, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [14, 7, 8, 4, 3, 4, 4, 2, 4, 6, 6, 5, 7, 5, 5, 8, 309, 10, 7, 6, 7, 4, 4, 53, 10, 8, 6, 8, 4, 9, 6, 359, 9, 3, 7, 22, 9, 11, 7, 7, 4, 3, 7, 12, 4, 2, 5, 4, 8, 6, 91, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 7, 5, 7, 4, 5, 5, 9, 4, 6, 3, 92, 6, 4, 4, 6, 4, 11, 107, 5, 10, 8, 4, 7, 4, 6, 7, 6, 4, 7, 5, 14, 3, 6, 4, 11, 4, 4, 7, 6, 14, 10, 4, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [15, 2, 2, 2, 2, 4, 4, 2, 2, 4, 5, 30, 3, 3, 4, 13, 10, 2, 8, 3, 8, 11, 2, 18, 9, 73, 16, 5, 3, 8, 5, 8, 28, 4, 5, 296, 6, 6, 15, 10, 20, 5, 9, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 5, 4, 7, 9, 6, 4, 7, 6, 7, 6, 8, 6, 565, 26, 14, 6, 6, 7, 11, 5, 7, 253, 85, 2, 5, 6, 4, 16, 6, 9, 7, 5, 8, 6, 6, 16, 68, 6, 5, 7, 4, 9, 5, 31, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 5, 4, 4, 4, 4, 4, 5, 24, 9, 6, 5, 5, 3, 3, 5, 8, 4, 3, 6, 6, 6, 4, 407, 128, 4, 3, 516, 10, 9, 7, 8, 285, 7, 4, 3, 6, 4, 5, 4, 8, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 3, 5, 5, 4, 4, 5, 18, 7, 7, 6, 5, 5, 4, 6, 9, 3, 3, 6, 5, 5, 4, 7, 4, 4, 4, 8, 5, 15, 5, 8, 3, 4, 3, 7, 3, 5, 5, 6, 4, 9, 5, 6, 4, 7, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [21, 3, 10, 5, 2, 7, 146, 8, 4, 5, 6, 5, 4, 6, 6, 4, 7, 6, 4, 440, 3, 8, 8, 10, 3, 4, 5, 4, 6, 7, 7, 5, 9, 7, 9, 5, 4, 7, 5, 4, 32, 5, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 9, 6, 9, 7, 96, 6, 10, 4, 4, 5, 9, 7, 4, 13, 4, 10, 4, 7, 9, 54, 10, 3, 10, 40, 4, 7, 144, 43, 4, 3, 128, 9, 6, 4, 5, 5, 6, 25, 13, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [19, 7, 5, 8, 7, 6, 5, 4, 3, 2, 4, 9, 4, 4, 4, 9, 3, 11, 7, 10, 8, 6, 3, 8, 8, 4, 12, 13, 5, 6, 6, 8, 6, 8, 4, 7, 6, 3, 15, 10, 5, 4, 8, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 4, 4, 6, 10, 6, 4, 6, 9, 6, 16, 5, 4, 6, 6, 23, 3, 8, 4, 4, 81, 15, 6, 11, 9, 6, 4, 4, 74, 10, 5, 6, 4, 6, 7, 4, 17, 4, 4, 4, 8, 6, 4, 8, 6, 6, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 4, 4, 4, 8, 6, 5, 4, 5, 6, 7, 5, 4, 8, 13, 7, 9, 4, 4, 4, 7, 25, 26, 8, 10, 90, 5, 5, 5, 4, 5, 5, 5, 5, 6, 11, 7, 6, 6, 11, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 3, 4, 6, 7, 10, 4, 9, 10, 4, 7, 3, 6, 4, 8, 8, 4, 4, 7, 9, 11, 5, 5, 7, 6, 9, 3, 13, 7, 6, 3, 7, 3, 5, 4, 6, 9, 6, 6, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 4, 6, 9, 13, 102, 3, 10, 4, 282, 5, 4, 7, 4, 8, 8, 4, 5, 4, 5, 5, 4, 48, 10, 4, 7, 5, 7, 5, 5, 6, 9, 6, 9, 6, 8, 6, 5, 6, 4, 8, 10, 4, 6, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [21, 6, 6, 4, 9, 4, 4, 10, 3, 6, 3, 8, 141, 4, 6, 4, 240, 9, 4, 6, 7, 8, 7, 83, 5, 8, 4, 122, 5, 7, 8, 8, 7, 4, 12, 8, 4, 4, 10, 3, 114, 7, 8, 14, 7, 27, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [12, 3, 10, 7, 9, 4, 8, 6, 9, 6, 144, 7, 5, 10, 5, 202, 6, 4, 8, 7, 11, 573, 8, 3, 6, 8, 7, 4, 5, 3, 12, 28, 6, 5, 7, 32, 9, 6, 9, 7, 4, 9, 5, 6, 8, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 5, 6, 4, 6, 10, 7, 4, 4, 3, 7, 8, 3, 20, 9, 4, 5, 5, 4, 9, 12, 6, 6, 7, 12, 9, 8, 4, 333, 6, 13, 5, 5, 4, 4, 6, 4, 4, 3, 9, 5, 6, 8, 20]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 8, 6, 4, 8, 4, 4, 40, 5, 7, 3, 5, 55, 5, 4, 5, 5, 4, 24, 9, 6, 545, 4, 4, 15, 5, 5, 7, 8, 3, 13, 7, 7, 5, 31, 3, 8, 5, 5, 44, 10, 8, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 5, 11, 3, 11, 6, 6, 5, 4, 75, 9, 3, 4, 5, 5, 450, 9, 8, 10, 4, 524, 4, 6, 355, 4, 9, 4, 5, 123, 3, 12, 5, 7, 4, 4, 4, 14, 6, 3, 9, 7, 11, 8, 14, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 4, 7, 13, 6, 16, 9, 10, 6, 10, 4, 4, 12, 11, 428, 3, 4, 5, 4, 3, 6, 9, 6, 5, 127, 217, 4, 3, 6, 4, 10, 5, 5, 7, 4, 5, 4, 3, 4, 8, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 5, 6, 6, 6, 4, 6, 4, 7, 6, 11, 8, 7, 11, 4, 7, 6, 5, 6, 7, 4, 4, 29, 74, 5, 5, 6, 4, 8, 4, 6, 34, 11, 7, 7, 11, 6, 5, 111, 6, 58, 5, 33, 5, 3]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [20, 9, 6, 7, 6, 4, 7, 6, 9, 4, 4, 4, 7, 4, 12, 5, 6, 3, 8, 10, 4, 9, 6, 4, 9, 10, 11, 4, 11, 3, 10, 9, 12, 6, 9, 24, 6, 11, 18, 6, 9, 9, 3, 6, 7, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 5, 4, 8, 4, 3, 12, 10, 8, 11, 8, 7, 6, 7, 11, 4, 5, 5, 6, 8, 10, 8, 225, 8, 9, 285, 6, 4, 173, 3, 3, 3, 77, 17, 3, 10, 11, 28, 4, 8, 8, 3, 9, 5, 11, 3, 9, 36]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [19, 5, 4, 6, 7, 4, 6, 10, 4, 7, 5, 4, 105, 19, 4, 4, 6, 4, 6, 3, 3, 7, 3, 11, 40, 11, 4, 34, 6, 247, 8, 4, 8, 4, 19, 47, 4, 6, 11, 7, 4, 12, 5, 5, 8, 4, 7, 59, 57, 447]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [19, 5, 9, 4, 4, 28, 9, 4, 4, 5, 13, 4, 10, 17, 6, 7, 9, 6, 6, 3, 4, 196, 4, 5, 5, 8, 8, 5, 4, 4, 4, 23, 5, 4, 5, 10, 5, 4, 19, 12, 5, 27, 8, 8, 4, 8, 5, 7, 9, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [18, 4, 5, 8, 10, 5, 12, 4, 4, 328, 9, 9, 4, 11, 4, 7, 8, 7, 14, 4, 4, 4, 7, 4, 6, 4, 5, 4, 5, 4, 6, 8, 4, 13, 7, 4, 7, 5, 4, 6, 6, 7, 6, 5, 9, 10, 6, 12, 12, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [32, 5, 7, 6, 12, 5, 8, 11, 4, 4, 8, 8, 8, 43, 3, 356, 4, 8, 8, 11, 7, 4, 5, 3, 4, 6, 100, 11, 12, 5, 25, 9, 7, 8, 6, 9, 4, 6, 6, 5, 7, 12, 16, 6, 40, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [24, 4, 9, 6, 6, 5, 9, 8, 4, 6, 9, 4, 12, 4, 6, 12, 6, 5, 12, 10, 7, 9, 4, 11, 7, 6, 6, 15, 6, 6, 22, 10, 10, 249, 9, 6, 8, 8, 11, 5, 9, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 4, 9, 6, 12, 6, 160, 15, 7, 10, 6, 3, 30, 6, 5, 208, 10, 5, 10, 420, 6, 6, 9, 14, 18, 13, 6, 4, 6, 3, 9, 4, 7, 23, 5, 35, 4, 5, 4, 4, 6, 4, 43, 9, 5, 7, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 5, 112, 6, 4, 9, 8, 7, 8, 6, 4, 6, 7, 6, 18, 6, 11, 185, 8, 10, 5, 9, 6, 4, 6, 9, 10, 182, 44, 6, 133, 115, 5, 6, 5, 7, 4, 8, 7, 6, 11, 39, 5, 4, 4, 7, 6, 17, 6, 6, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 8, 7, 11, 7, 10, 3, 9, 11, 7, 7, 6, 217, 9, 6, 7, 4, 6, 5, 8, 5, 520, 8, 5, 5, 4, 6, 5, 7, 6, 5, 6, 22, 6, 6, 4, 8, 6, 30, 4, 5, 6, 4, 11, 13, 14, 7, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 9, 7, 6, 6, 4, 10, 8, 7, 10, 6, 4, 5, 18, 14, 9, 4, 5, 10, 4, 33, 15, 10, 7, 11, 6, 6, 4, 7, 36, 17, 9, 4, 3, 4, 8, 4, 7, 6, 6, 5, 4, 11, 5, 14, 10, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 4, 6, 7, 6, 6, 7, 10, 8, 8, 11, 3, 378, 6, 5, 6, 8, 3, 4, 6, 4, 5, 5, 7, 9, 232, 68, 4, 7, 6, 6, 14, 4, 5, 3, 14, 12, 7, 8, 4, 9, 6, 11, 7, 8, 17, 30]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 13, 11, 4, 6, 4, 6, 4, 56, 5, 9, 5, 9, 541, 12, 9, 11, 7, 6, 83, 4, 7, 4, 7, 4, 4, 5, 5, 6, 9, 11, 5, 13, 10, 370, 20, 367, 5, 4, 4, 5, 235, 7, 4, 7, 5, 48, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [13, 7, 6, 9, 7, 11, 7, 8, 7, 6, 12, 4, 5, 12, 339, 33, 9, 4, 8, 9, 4, 6, 88, 5, 10, 6, 16, 10, 4, 4, 9, 4, 9, 7, 12, 22, 6, 11, 4, 7, 13, 5, 5, 3, 12, 145, 4, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [40, 9, 4, 5, 4, 5, 4, 8, 5, 25, 5, 10, 7, 5, 11, 9, 13, 5, 6, 6, 5, 8, 4, 4, 4, 4, 4, 33, 4, 6, 12, 14, 26, 6, 4, 6, 4, 7, 5, 12, 4, 6, 8, 4, 6, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 5, 13, 13, 6, 13, 5, 6, 4, 9, 6, 4, 17, 5, 4, 4, 5, 6, 6, 4, 13, 129, 5, 6, 11, 16, 6, 8, 4, 8, 5, 7, 8, 3, 3, 4, 8, 7, 10, 8, 10, 4, 13, 15, 8, 8, 7, 11]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 8, 11, 4, 4, 8, 4, 5, 7, 7, 8, 5, 6, 7, 9, 337, 5, 4, 4, 9, 6, 4, 8, 6, 3, 8, 8, 5, 5, 4, 147, 7, 14, 4, 5, 7, 11, 4, 5, 4, 9, 3, 5, 5, 4, 7, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 7, 8, 7, 8, 14, 4, 4, 4, 6, 7, 9, 56, 11, 11, 9, 7, 12, 4, 8, 6, 6, 4, 9, 10, 6, 4, 6, 10, 12, 9, 5, 31, 10, 12, 8, 7, 14, 9, 9, 6, 6, 81, 4, 7, 6, 4, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [8, 10, 5, 6, 14, 4, 9, 4, 3, 8, 10, 6, 4, 459, 9, 354, 7, 7, 5, 9, 6, 5, 10, 32, 564, 12, 4, 4, 9, 14, 8, 9, 8, 6, 9, 4, 34, 3, 9, 96, 11, 4, 8, 4, 4, 7, 4, 10, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [13, 4, 9, 4, 8, 5, 5, 5, 6, 8, 7, 6, 4, 7, 21, 8, 9, 194, 6, 7, 3, 162, 8, 4, 5, 6, 5, 13, 7, 9, 10, 7, 31, 4, 8, 3, 165, 297, 9, 4, 8, 4, 212, 6, 8, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 7, 5, 6, 13, 5, 8, 9, 5, 10, 7, 3, 10, 9, 14, 5, 19, 4, 234, 228, 5, 4, 6, 4, 4, 9, 10, 8, 6, 4, 4, 6, 6, 5, 476, 8, 4, 4, 12, 3, 219, 297, 4, 4, 10, 5, 11, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [3, 11, 7, 6, 6, 6, 4, 7, 3, 6, 3, 8, 4, 9, 9, 9, 11, 5, 5, 8, 5, 7, 3, 8, 8, 6, 4, 4, 4, 11, 9, 10, 5, 8, 7, 5, 7, 165, 4, 10, 294, 7, 25, 6, 4, 5, 158, 10, 4, 9, 13]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 6, 4, 4, 4, 4, 7, 7, 7, 6, 2, 6, 3, 7, 2, 3, 5, 4, 6, 2, 7, 5, 8, 5, 5, 8, 7, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [11, 9, 5, 4, 7, 6, 6, 7, 9, 4, 6, 11, 11, 6, 10, 4, 4, 12, 37, 4, 8, 5, 10, 8, 4, 7, 42, 20, 13, 5, 10, 5, 13, 13, 10, 9, 10, 7, 4, 16, 4, 13, 4, 5, 8, 10, 6, 11, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 8, 4, 10, 7, 5, 9, 4, 7, 6, 419, 9, 13, 5, 8, 12, 4, 4, 27, 21, 12, 7, 5, 4, 7, 9, 10, 5, 3, 11, 4, 4, 12, 8, 7, 10, 12, 4, 11, 6, 9, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [9, 6, 7, 8, 12, 10, 8, 7, 7, 9, 7, 11, 3, 12, 4, 130, 11, 3, 5, 6, 11, 9, 9, 9, 7, 11, 9, 8, 11, 8, 106, 85, 6, 6, 11, 8, 4, 8, 6, 6, 8, 9, 14, 4, 3, 4, 8, 6, 6, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 9, 6, 4, 9, 7, 113, 3, 10, 4, 7, 5, 5, 5, 8, 5, 6, 6, 5, 6, 6, 12, 11, 10, 7, 6, 6, 11, 9, 8, 7, 4, 185, 6, 8, 4, 6, 78, 6, 4, 4, 13, 6, 6, 6, 6]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 4, 6, 8, 8, 7, 7, 39, 8, 4, 6, 204, 4, 7, 6, 3, 3, 7, 248, 3, 4, 8, 4, 5, 11, 5, 5, 5, 6, 11, 4, 85, 4, 9, 6, 4, 9, 112, 8, 9, 115, 8, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [9, 6, 12, 4, 3, 6, 6, 4, 8, 7, 9, 12, 8, 8, 9, 12, 12, 4, 8, 5, 5, 8, 13, 9, 6, 6, 11, 6, 7, 8, 14, 7, 5, 4, 9, 12, 8, 4, 38, 50, 9, 10, 9, 5, 14, 9, 6, 13, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 243, 4, 4, 8, 6, 9, 37, 8, 6, 5, 74, 5, 8, 12, 8, 8, 7, 9, 10, 8, 4, 37, 7, 12, 9, 8, 4, 16, 6, 7, 8, 10, 5, 201, 4, 35, 4, 7, 5, 8, 10, 3, 12, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 10, 6, 6, 10, 8, 9, 8, 9, 6, 8, 4, 18, 12, 5, 5, 24, 11, 9, 10, 13, 7, 5, 4, 4, 13, 4, 5, 10, 8, 6, 11, 4, 4, 100, 4, 7, 269, 4, 5, 8, 4, 10, 123]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 9, 5, 7, 6, 8, 6, 7, 10, 5, 8, 8, 9, 8, 10, 13, 8, 16, 10, 9, 8, 8, 7, 4, 25, 4, 8, 5, 12, 10, 12, 5, 11, 10, 8, 7, 4, 4, 5, 8, 4, 13, 7, 136, 16, 4, 8, 73, 9, 17]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 10, 7, 7, 8, 9, 8, 266, 6, 8, 7, 10, 9, 13, 9, 6, 7, 9, 4, 3, 12, 9, 11, 11, 7, 12, 4, 10, 7, 8, 185, 9, 12, 137, 3, 5, 12, 4, 4, 4, 27, 5, 5, 467, 7, 8, 6, 8, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 6, 7, 4, 6, 9, 3, 8, 4, 7, 4, 5, 7, 6, 11, 7, 4, 5, 7, 4, 8, 6, 4, 5, 4, 4, 5, 5, 53, 136, 27, 9, 4, 13, 424, 4, 10, 5, 4, 466, 13, 3, 4, 6, 7, 8, 66, 18]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [5, 7, 3, 13, 10, 10, 4, 5, 3, 10, 5, 8, 6, 8, 198, 8, 4, 8, 9, 11, 9, 11, 7, 10, 7, 4, 4, 9, 3, 9, 4, 12, 5, 6, 12, 3, 79, 3, 5, 3, 5, 10, 6, 5, 4, 6, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [16, 5, 6, 5, 7, 8, 8, 5, 3, 5, 5, 6, 8, 4, 3, 11, 445, 6, 5, 8, 7, 7, 7, 6, 28, 4, 3, 11, 4, 205, 531, 4, 4, 6, 4, 157, 3, 3, 7, 3, 7, 3, 545, 4, 6, 8, 5, 6, 6, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [9, 5, 7, 7, 7, 7, 7, 10, 4, 4, 7, 4, 325, 9, 5, 4, 4, 6, 3, 6, 3, 172, 3, 7, 6, 4, 3, 4, 19, 4, 23, 4, 7, 4, 9, 6, 118, 9, 4, 155, 5, 4, 4, 5, 3, 5, 3, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 11, 6, 4, 4, 4, 3, 7, 10, 10, 12, 6, 10, 5, 466, 6, 4, 25, 3, 4, 4, 4, 3, 5, 361, 10, 5, 3, 8, 8, 4, 5, 495, 3, 5, 4, 5, 97, 5, 4, 12, 4, 6, 5, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [10, 9, 5, 4, 11, 10, 9, 4, 8, 26, 5, 4, 4, 5, 7, 8, 380, 19, 5, 6, 4, 8, 4, 12, 4, 5, 4, 4, 3, 4, 3, 4, 4, 8, 6, 9, 8, 8, 8, 13, 7, 321, 4, 563, 55, 4, 8, 7, 11, 9, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [7, 7, 10, 4, 5, 4, 5, 6, 9, 12, 43, 4, 6, 8, 9, 4, 111, 5, 6, 8, 408, 7, 5, 6, 4, 432, 5, 38, 10, 12, 5, 4, 5, 4, 3, 182, 7, 309, 6, 5, 4, 9, 7, 5, 7, 4, 235, 4, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 4, 5, 9, 9, 6, 6, 11, 5, 12, 207, 9, 6, 6, 149, 7, 4, 5, 9, 7, 4, 230, 5, 9, 6, 10, 7, 7, 11, 5, 6, 4, 4, 265, 9, 7, 8, 7, 4, 469, 12, 5, 4, 201, 6, 10, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 4, 4, 6, 9, 5, 10, 5, 4, 9, 23, 5, 4, 9, 5, 5, 45, 7, 7, 4, 4, 5, 6, 4, 4, 4, 4, 6, 248, 6, 4, 5, 3, 6, 6, 4, 4, 4, 4, 7, 9, 7, 3]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [11, 6, 9, 11, 7, 5, 5, 5, 5, 5, 4, 5, 6, 8, 109, 167, 5, 5, 6, 5, 4, 4, 3, 5, 157, 10, 12, 6, 7, 4, 5, 8, 4, 7, 5, 10, 12, 4, 7, 4, 4, 7, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [10, 8, 4, 6, 4, 5, 11, 6, 6, 10, 5, 6, 5, 125, 5, 87, 5, 4, 6, 7, 5, 7, 6, 9, 6, 10, 5, 4, 9, 6, 9, 7, 4, 6, 6, 8, 10, 7, 4, 7, 4, 5, 5, 6, 5, 8, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 4, 4, 6, 6, 4, 6, 4, 5, 7, 6, 7, 6, 8, 4, 4, 9, 10, 3, 11, 15, 17, 10, 4, 9, 6, 8, 9, 9, 11, 8, 4, 5, 77, 4, 9, 5, 6, 9, 6, 9, 5, 5, 11, 7, 5, 7, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 10, 6, 9, 8, 4, 11, 6, 5, 48, 10, 9, 3, 4, 6, 8, 11, 7, 7, 5, 9, 6, 9, 6, 7, 8, 11, 6, 6, 5, 7, 14, 7, 6, 219, 6, 5, 10, 13, 4, 10, 91, 7, 7, 8, 11, 86, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 8, 9, 10, 3, 9, 15, 7, 4, 4, 3, 10, 11, 262, 9, 10, 3, 12, 8, 12, 6, 11, 8, 10, 9, 8, 12, 7, 8, 5, 9, 8, 10, 11, 8, 9, 7, 8, 5, 11, 10, 4, 15, 10, 6, 10, 10, 12, 5, 11, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 8, 8, 9, 12, 7, 8, 8, 7, 9, 11, 9, 5, 13, 14, 11, 15, 11, 7, 11, 10, 17, 5, 10, 10, 4, 12, 9, 8, 304, 10, 11, 14, 4, 13, 12, 8, 10, 9, 10, 11, 8, 11, 11, 7, 12]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [12, 7, 9, 5, 4, 9, 16, 4, 4, 8, 7, 8, 7, 6, 11, 15, 5, 4, 9, 4, 10, 3, 238, 546, 6, 4, 9, 7, 4, 9, 4, 7, 3, 7, 4, 9, 9, 7, 6, 9, 5, 8, 7, 6, 10, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 10, 5, 5, 10, 5, 8, 4, 10, 3, 6, 5, 8, 6, 6, 4, 8, 3, 8, 7, 8, 198, 173, 6, 8, 15, 11, 5, 7, 29, 6, 11, 3, 18, 118, 10, 8, 5, 11, 5, 10, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [6, 9, 5, 9, 11, 10, 7, 8, 10, 6, 13, 10, 11, 6, 10, 7, 9, 10, 9, 8, 8, 10, 296, 8, 5, 10, 10, 9, 7, 4, 7, 8, 8, 4, 11, 7, 10, 21, 11, 7, 12, 6, 4, 8, 7, 6, 8, 13, 5]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 7, 5, 9, 10, 8, 10, 4, 4, 5, 40, 5, 15, 7, 8, 11, 4, 11, 10, 12, 9, 8, 11, 8, 4, 9, 7, 10, 8, 9, 11, 8, 5, 6, 10, 4, 9, 7, 7, 5, 11, 12, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 6, 9, 9, 10, 3, 9, 10, 10, 10, 12, 4, 6, 3, 11, 8, 6, 7, 13, 11, 10, 6, 11, 4, 16, 3, 8, 12, 4, 5, 9, 7, 5, 5, 7, 4, 5, 7, 8, 6, 4, 11, 11, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 5, 7, 5, 11, 10, 4, 8, 7, 9, 6, 8, 5, 7, 8, 10, 47, 5, 36, 10, 11, 4, 4, 5, 13, 4, 4, 6, 4, 9, 4, 8, 5, 9, 6, 10, 11, 10, 3, 11, 8, 8, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 6, 5, 5, 9, 4, 9, 4, 8, 10, 8, 12, 4, 8, 4, 3, 4, 7, 13, 4, 4, 9, 7, 10, 6, 5, 52, 22, 4, 8, 10, 8, 8, 5, 4, 288, 14, 4, 8, 9, 15, 3, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [8, 6, 13, 12, 4, 10, 4, 4, 14, 16, 11, 10, 28, 9, 4, 14, 9, 4, 13, 12, 7, 10, 12, 97, 17, 4, 4, 4, 4, 12, 10, 49, 12, 13, 5, 4, 6, 10, 74, 7, 14, 11, 10, 16]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 6, 6, 9, 5, 6, 3, 11, 8, 10, 10, 5, 9, 5, 4, 8, 9, 11, 10, 8, 9, 5, 4, 12, 6, 4, 5, 11, 9, 5, 9, 7, 8, 7, 11, 10, 10, 9, 10, 9, 49, 5, 12, 10, 17, 7, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 8, 8, 9, 8, 8, 4, 6, 6, 12, 8, 10, 8, 8, 14, 8, 5, 6, 7, 13, 7, 9, 10, 7, 11, 6, 16, 72, 6, 9, 8, 6, 9, 8, 4, 9, 12, 6, 6, 7, 8, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [14, 8, 247, 5, 10, 4, 10, 3, 9, 7, 7, 5, 7, 11, 12, 12, 11, 7, 4, 10, 15, 28, 5, 8, 6, 9, 20, 4, 6, 7, 8, 6, 22, 9, 8, 11, 7, 7, 4, 7, 65, 7, 7, 5, 17, 18, 6, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 8, 10, 7, 5, 11, 7, 7, 7, 3, 8, 4, 13, 5, 9, 9, 6, 6, 7, 6, 7, 8, 8, 4, 12, 7, 10, 8, 10, 11, 5, 8, 11, 4, 127, 11, 5, 195, 6, 8, 8, 8, 7, 8, 5, 4, 9, 12]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [13, 6, 5, 12, 191, 8, 5, 11, 12, 4, 11, 8, 9, 8, 7, 11, 9, 4, 10, 9, 14, 14, 9, 9, 14, 7, 101, 5, 12, 10, 9, 10, 15, 11, 8, 11, 9, 11, 10, 13, 12, 10, 6, 5, 13, 12, 5, 13]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [17, 8, 4, 5, 3, 5, 5, 9, 10, 7, 10, 10, 3, 4, 12, 5, 9, 4, 4, 5, 18, 4, 11, 5, 8, 9, 11, 10, 6, 6, 8, 14, 7, 9, 9, 8, 9, 7, 5, 11, 9, 7, 13, 7, 5, 9, 15, 3, 10, 15, 5, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [11, 8, 9, 8, 7, 11, 6, 4, 3, 10, 11, 4, 8, 14, 6, 11, 13, 11, 6, 10, 7, 4, 12, 10, 5, 3, 11, 64, 8, 6, 9, 6, 6, 6, 11, 11, 11, 61, 13, 11, 10, 6, 10, 4, 12, 8, 253, 4, 4, 11, 7, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 7, 7, 7, 8, 11, 8, 9, 4, 8, 9, 11, 6, 10, 11, 4, 13, 7, 5, 8, 4, 8, 4, 8, 12, 4, 8, 4, 16, 4, 8, 5, 55, 9, 5, 6, 8, 12, 11, 7, 12, 6, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 10, 8, 8, 5, 4, 7, 46, 6, 10, 9, 3, 5, 8, 11, 29, 6, 13, 6, 5, 8, 452, 8, 10, 9, 8, 8, 11, 15, 5, 212, 65, 433, 11, 10, 7, 7, 7, 9, 8, 10, 10, 4, 15, 11, 7, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 10, 5, 5, 8, 10, 6, 9, 10, 6, 11, 7, 11, 6, 10, 10, 10, 5, 6, 4, 4, 4, 3, 3, 7, 4, 13, 7, 7, 4, 12, 11, 4, 9, 6, 12, 8, 7, 18, 8, 9, 4, 11, 6, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 11, 14, 9, 8, 13, 16, 12, 12, 9, 7, 10, 11, 4, 7, 11, 9, 12, 10, 3, 57, 4, 13, 8, 10, 12, 8, 11, 10, 5, 4, 14, 4, 26, 7, 9, 10, 6, 12, 213, 10, 11, 11, 19, 11, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 10, 12, 11, 9, 9, 7, 12, 9, 13, 8, 72, 8, 10, 9, 10, 11, 10, 10, 5, 4, 10, 8, 10, 7, 5, 10, 11, 5, 11, 53, 8, 9, 7, 10, 9, 8, 9, 9, 14, 5, 6, 7, 12, 10, 4, 6, 7, 7, 7]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 4, 8, 9, 6, 8, 4, 7, 10, 9, 6, 10, 447, 4, 13, 6, 7, 8, 8, 6, 5, 133, 11, 9, 8, 7, 4, 8, 10, 3, 8, 13, 6, 4, 8, 6, 6, 12, 18, 18, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 5, 11, 4, 10, 5, 9, 7, 10, 9, 8, 6, 6, 193, 4, 5, 6, 8, 6, 8, 5, 7, 4, 7, 5, 8, 9, 3, 4, 9, 8, 4, 7, 41, 3, 9, 11, 6, 13, 42, 23, 10, 7, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 5, 13, 4, 3, 16, 5, 106, 17, 12, 6, 16, 15, 13, 4, 5, 6, 4, 4, 4, 12, 5, 14, 4, 14, 6, 3, 12, 19, 82, 9, 4, 12, 46, 11, 15, 3, 15, 6, 7, 12, 5, 5, 11, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [5, 12, 11, 7, 9, 7, 4, 7, 13, 6, 15, 10, 4, 11, 5, 5, 519, 10, 9, 10, 11, 8, 13, 7, 6, 12, 245, 15, 4, 12, 10, 6, 3, 16, 14, 4, 4, 13, 12, 10, 9, 10, 20, 8, 574]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [7, 4, 11, 11, 5, 8, 5, 11, 297, 13, 11, 5, 12, 5, 7, 12, 13, 13, 8, 11, 7, 3, 4, 6, 4, 46, 4, 3, 11, 4, 8, 10, 13, 11, 8, 4, 6, 7, 10, 7, 8, 7, 4, 5, 9, 11, 5, 14, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 8, 4, 3, 4, 4, 3, 9, 8, 8, 5, 9, 6, 6, 3, 253, 7, 6, 8, 7, 6, 7, 458, 6, 4, 4, 4, 4, 6, 344, 6, 4, 7, 8, 4, 12, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [19, 9, 8, 6, 8, 11, 63, 11, 9, 9, 9, 8, 16, 10, 207, 6, 8, 8, 12, 10, 7, 10, 104, 10, 9, 10, 8, 6, 8, 7, 4, 9, 11, 7, 8, 5, 10, 5, 10, 216, 3, 4, 10, 9, 5, 10, 12, 11, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [16, 5, 8, 13, 7, 8, 10, 10, 10, 100, 8, 7, 7, 12, 5, 3, 9, 10, 4, 7, 94, 19, 7, 5, 14, 13, 9, 13, 13, 11, 12, 9, 6, 13, 7, 6, 11, 4, 5, 5, 6, 6, 7, 4, 11, 6, 12, 16]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [15, 6, 4, 9, 11, 4, 4, 4, 10, 6, 9, 6, 276, 6, 6, 6, 9, 9, 4, 3, 6, 4, 7, 8, 17, 6, 3, 4, 7, 13, 5, 5, 66, 4, 7, 10, 4, 5, 9, 3, 8, 8, 4, 16, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 7, 12, 3, 3, 4, 3, 10, 11, 7, 4, 4, 11, 4, 13, 6, 8, 6, 8, 6, 8, 4, 8, 7, 353, 4, 12, 8, 9, 6, 10, 9, 109, 8, 4, 146, 194, 7, 5, 3, 3, 11, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 7, 8, 10, 4, 9, 7, 8, 5, 10, 5, 5, 9, 12, 3, 8, 515, 12, 3, 578, 17, 4, 4, 6, 3, 11, 14, 8, 93, 12, 5, 7, 9, 6, 5, 7, 6, 9, 13, 10, 213, 23, 11, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [14, 7, 6, 7, 5, 4, 5, 10, 7, 8, 10, 8, 4, 8, 9, 10, 8, 9, 8, 10, 7, 7, 6, 10, 8, 4, 6, 11, 8, 3, 8, 8, 7, 8, 8, 8, 9, 8, 9, 10, 9, 18, 65, 7, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 12, 8, 4, 8, 9, 10, 10, 8, 7, 8, 7, 9, 11, 10, 7, 8, 149, 7, 25, 3, 8, 4, 6, 6, 6, 35, 9, 9, 10, 20, 9, 10, 10, 10, 4, 8, 9, 8, 6, 11, 20, 8, 8, 7, 8, 7, 11, 11, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [14, 8, 4, 8, 9, 8, 11, 6, 4, 7, 10, 9, 15, 7, 4, 8, 4, 7, 9, 8, 7, 59, 8, 7, 6, 10, 6, 9, 3, 9, 8, 120, 4, 7, 8, 6, 3, 186, 8, 7, 10, 8, 26, 15, 4, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 12, 5, 5, 5, 6, 4, 7, 6, 8, 9, 5, 7, 7, 12, 9, 6, 51, 7, 7, 5, 6, 7, 7, 7, 11, 3, 11, 390, 264, 7, 41, 6, 4, 7, 7, 9, 7, 6, 10, 12, 16, 9, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [13, 8, 9, 5, 5, 7, 7, 8, 4, 19, 7, 5, 9, 5, 7, 7, 6, 8, 8, 8, 4, 168, 10, 6, 4, 32, 4, 9, 8, 8, 9, 7, 8, 5, 6, 3, 6, 8, 10, 7, 8, 7, 28, 8, 6, 5, 9, 4, 6, 7, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 5, 6, 6, 9, 9, 4, 7, 8, 6, 8, 5, 3, 8, 7, 9, 11, 4, 8, 6, 5, 9, 4, 10, 5, 8, 7, 5, 7, 9, 48, 7, 5, 4, 13, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [5, 10, 8, 7, 4, 10, 12, 5, 6, 4, 10, 4, 4, 6, 4, 4, 7, 7, 13, 8, 4, 12, 178, 4, 7, 6, 4, 7, 11, 12, 4, 8, 4, 4, 4, 7, 11, 4, 6, 8, 14, 11, 8, 4, 4, 6, 70, 5, 8, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [13, 9, 9, 10, 3, 6, 9, 6, 3, 9, 10, 7, 5, 29, 11, 6, 6, 4, 9, 7, 18, 4, 4, 4, 39, 48, 5, 4, 7, 4, 9, 14, 6, 9, 19, 7, 261, 5, 6, 5, 8, 7, 6, 4, 7, 21, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 7, 13, 3, 8, 6, 4, 8, 6, 12, 15, 4, 216, 6, 4, 5, 5, 4, 6, 5, 4, 12, 3, 3, 4, 4, 12, 8, 7, 8, 4, 8, 6, 7, 5, 7, 4, 11, 5, 11, 5, 6, 12, 3, 14, 6, 12, 215, 8, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [7, 10, 14, 8, 12, 4, 11, 16, 12, 10, 12, 10, 4, 4, 7, 9, 13, 4, 14, 4, 11, 6, 8, 273, 5, 13, 7, 9, 8, 8, 13, 5, 11, 7, 5, 7, 4, 4, 10, 8, 11, 5, 13, 8, 9, 16, 10, 8, 5, 5, 5]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 6, 8, 4, 11, 4, 8, 9, 7, 11, 9, 4, 4, 12, 9, 6, 6, 5, 282, 4, 11, 14, 4, 21, 11, 9, 11, 8, 4, 11, 14, 9, 8, 10, 7, 10, 4, 11, 3, 8, 17, 7, 11, 11, 13, 9, 11, 7, 9, 12, 14, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [5, 8, 11, 4, 12, 6, 7, 13, 9, 10, 4, 4, 5, 11, 398, 9, 6, 8, 14, 4, 6, 14, 10, 7, 8, 8, 13, 10, 9, 7, 11, 8, 5, 4, 8, 7, 22, 6, 10, 11, 16, 9, 5, 12, 14, 74, 15, 11, 11, 14, 13, 124]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 10, 5, 11, 4, 18, 12, 12, 13, 4, 10, 17, 10, 15, 14, 6, 12, 77, 15, 13, 14, 70, 12, 6, 9, 10, 5, 10, 11, 6, 11, 11, 10, 10, 13, 11, 4, 5, 11, 10, 11, 14, 15, 5, 11, 12, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 8, 4, 4, 15, 7, 4, 12, 4, 5, 5, 6, 11, 4, 4, 4, 8, 4, 4, 10, 4, 8, 5, 4, 4, 30, 4, 9, 4, 6, 10, 8, 4, 5, 23, 3, 4, 6, 35, 5, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 3, 10, 4, 4, 8, 19, 4, 4, 11, 11, 8, 59, 10, 12, 3, 6, 8, 13, 9, 6, 4, 11, 10, 5, 8, 14, 6, 7, 4, 4, 11, 8, 5, 10, 9, 4, 3, 6, 6, 3, 6, 8, 6, 7, 14, 11, 9, 60]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [8, 8, 10, 8, 9, 4, 11, 7, 4, 4, 4, 8, 5, 6, 6, 13, 3, 4, 10, 5, 9, 15, 7, 10, 10, 7, 3, 4, 4, 6, 15, 11, 10, 8, 8, 11, 30, 15, 10, 7, 8, 5, 6, 8, 5, 7, 5, 9, 9, 12]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [12, 5, 8, 7, 7, 11, 8, 7, 9, 10, 7, 380, 6, 5, 7, 7, 4, 6, 4, 5, 8, 8, 8, 11, 12, 13, 14, 12, 13, 3, 8, 4, 7, 5, 12, 12, 5, 13, 15, 14, 4, 4, 15, 14, 7, 7, 10, 12, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 6, 8, 4, 4, 11, 4, 6, 4, 4, 6, 20, 4, 11, 163, 8, 5, 10, 7, 7, 5, 4, 13, 4, 7, 9, 5, 13, 7, 18, 3, 7, 7, 5, 4, 5, 4, 5, 5, 4, 7, 6, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 3, 10, 14, 4, 6, 4, 13, 5, 4, 11, 5, 7, 4, 4, 11, 4, 4, 5, 6, 8, 8, 13, 9, 5, 9, 10, 6, 49, 9, 10, 7, 11, 5, 4, 8, 11, 15, 12, 15, 4, 6, 4, 10, 9, 9, 10, 6, 10]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 8, 13, 12, 9, 5, 7, 4, 9, 9, 11, 5, 14, 66, 55, 9, 20, 10, 12, 9, 11, 17, 12, 10, 10, 10, 10, 11, 5, 10, 16, 13, 10, 9, 4, 8, 10, 7, 9, 10, 38, 9, 6, 13, 10, 385]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [7, 10, 6, 11, 11, 9, 12, 8, 11, 13, 5, 9, 12, 11, 11, 7, 4, 11, 8, 10, 11, 12, 11, 11, 13, 6, 8, 11, 13, 6, 10, 12, 11, 12, 15, 13, 9, 6, 15, 13, 6, 15, 10, 12, 159, 11, 12, 8, 7, 11, 10, 11, 5, 5, 10, 208]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [11, 5, 8, 10, 6, 5, 5, 10, 12, 55, 11, 8, 11, 8, 5, 9, 12, 4, 7, 9, 12, 9, 9, 5, 7, 8, 10, 37, 10, 162, 11, 7, 4, 12, 11, 7, 7, 9, 9, 5, 11, 87, 5, 12, 8, 36, 8, 10, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 9, 11, 10, 5, 8, 10, 6, 10, 7, 268, 11, 40, 12, 4, 3, 6, 6, 6, 78, 5, 7, 6, 8, 8, 4, 13, 13, 109, 15, 8, 8, 7, 11, 97, 4, 10, 8, 16, 15, 4, 8, 5, 7, 10, 8, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [11, 8, 7, 8, 4, 7, 7, 4, 9, 8, 10, 50, 7, 7, 6, 9, 12, 10, 9, 4, 12, 10, 5, 9, 210, 10, 9, 11, 7, 9, 73, 6, 11, 3, 9, 9, 8, 7, 8, 6, 10, 357, 5, 11, 5, 10, 7, 11, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 5, 3, 8, 4, 5, 6, 9, 11, 7, 10, 9, 10, 8, 8, 7, 9, 5, 9, 11, 4, 124, 8, 9, 8, 8, 8, 10, 7, 10, 10, 9, 12, 16, 5, 6, 4, 11, 9, 62, 11, 10, 8, 408]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [11, 8, 9, 4, 10, 13, 7, 10, 5, 4, 7, 4, 6, 6, 4, 5, 7, 5, 7, 7, 6, 11, 14, 9, 4, 9, 8, 6, 7, 11, 4, 4, 9, 3, 80, 6, 4, 7, 4, 9, 5, 4, 7, 9, 6, 11, 10, 9, 6, 5, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 7, 7, 13, 29, 8, 3, 10, 5, 4, 6, 50, 9, 8, 7, 23, 8, 7, 13, 58, 4, 6, 11, 8, 6, 387, 8, 4, 7, 4, 6, 7, 6, 4, 9, 10, 6, 3, 8, 6, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [18, 11, 11, 11, 9, 9, 8, 13, 11, 10, 7, 9, 8, 11, 14, 8, 9, 9, 7, 4, 9, 5, 9, 11, 7, 6, 11, 129, 10, 6, 9, 8, 11, 9, 6, 11, 4, 6, 8, 12, 9, 9, 11, 18, 9, 11, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 6, 9, 6, 9, 9, 10, 6, 4, 9, 3, 3, 9, 332, 8, 10, 7, 10, 9, 7, 9, 7, 7, 7, 4, 6, 6, 11, 13, 3, 4, 11, 6, 17, 8, 9, 26, 6, 10, 5, 10, 6, 10, 11, 10, 8, 10, 7, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 5, 9, 15, 5, 13, 3, 8, 295, 5, 8, 11, 12, 9, 7, 36, 6, 9, 432, 7, 11, 5, 15, 4, 9, 10, 8, 11, 6, 6, 8, 8, 6, 6, 8, 7, 11, 8, 7, 60, 15, 7, 5, 9, 5, 9, 12]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 8, 7, 8, 8, 5, 7, 4, 7, 8, 8, 6, 10, 5, 6, 11, 8, 11, 9, 11, 6, 6, 13, 7, 7, 7, 7, 11, 9, 12, 7, 9, 9, 7, 8, 8, 6, 4, 557, 11, 12, 5, 5, 9, 9, 207, 8, 95, 8, 9, 7, 9, 6, 11]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [13, 9, 7, 11, 4, 28, 10, 6, 10, 4, 10, 11, 7, 8, 6, 8, 11, 5, 10, 8, 5, 29, 5, 7, 7, 10, 8, 10, 4, 4, 7, 11, 5, 11, 7, 5, 6, 8, 12, 9, 6, 12, 8, 17, 19, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 8, 10, 10, 9, 5, 9, 10, 10, 10, 10, 4, 9, 3, 8, 8, 9, 11, 11, 11, 8, 6, 9, 9, 4, 5, 9, 11, 5, 9, 18, 4, 8, 9, 8, 11, 5, 10, 10, 10, 11, 9, 25, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 8, 5, 3, 5, 7, 4, 8, 4, 6, 4, 10, 7, 10, 7, 6, 8, 8, 9, 6, 4, 6, 8, 8, 23, 12, 7, 6, 7, 10, 7, 6, 9, 10, 8, 9, 4, 8, 6, 9, 10, 7, 10, 8, 9, 7, 11, 5, 7, 9, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 7, 4, 6, 4, 9, 7, 5, 10, 4, 7, 31, 3, 6, 6, 7, 6, 8, 7, 7, 5, 5, 3, 6, 9, 4, 5, 5, 6, 6, 4, 6, 9, 6, 3, 9, 11, 7, 7, 5, 6, 7, 18, 4, 9, 8, 4, 7, 27]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [12, 6, 9, 7, 7, 11, 12, 6, 12, 5, 8, 12, 8, 6, 10, 11, 12, 8, 9, 7, 7, 7, 9, 14, 8, 8, 8, 10, 9, 10, 5, 6, 7, 8, 11, 7, 9, 3, 5, 10, 10, 8, 7, 9, 6, 10, 6, 7, 10, 8, 5, 6, 7, 9, 8, 8, 91]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [4, 8, 11, 12, 5, 8, 6, 13, 4, 10, 5, 11, 11, 12, 7, 4, 15, 13, 8, 12, 9, 10, 14, 10, 8, 9, 7, 13, 7, 3, 5, 11, 3, 6, 15, 4, 9, 6, 10, 7, 11, 26, 9, 10, 9, 10, 8, 11, 7, 67]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [8, 8, 9, 5, 9, 5, 12, 10, 10, 11, 11, 12, 12, 12, 9, 10, 13, 9, 9, 9, 9, 6, 11, 9, 14, 9, 6, 14, 11, 9, 11, 110, 8, 5, 12, 10, 11, 9, 10, 14, 9, 6, 69, 7, 11, 11, 9, 12, 13, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 8, 6, 7, 6, 5, 6, 5, 6, 8, 5, 4, 7, 67, 10, 5, 5, 5, 8, 8, 10, 6, 4, 4, 4, 5, 7, 8, 8, 4, 6, 5, 11, 6, 6, 7, 9, 11, 8, 9, 7, 7, 26, 33]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [8, 13, 5, 10, 13, 10, 5, 9, 4, 6, 5, 4, 6, 6, 6, 6, 6, 9, 24, 9, 8, 6, 6, 8, 12, 12, 8, 4, 6, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [8, 5, 13, 6, 9, 12, 4, 5, 10, 6, 10, 9, 8, 13, 358, 4, 6, 8, 7, 7, 10, 7, 4, 11, 36, 5, 9, 9, 11, 9, 9, 10, 14, 8, 10, 9, 10, 4, 9, 11, 11, 5, 4, 11, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 7, 10, 11, 10, 12, 9, 10, 9, 8, 11, 16, 12, 6, 7, 11, 10, 11, 8, 13, 7, 10, 4, 13, 11, 12, 14, 82, 11, 10, 6, 11, 10, 10, 8, 255, 12, 5, 12, 22, 9, 10, 12, 12, 7, 99, 10, 12, 12]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [8, 10, 11, 11, 15, 8, 10, 5, 11, 9, 10, 12, 9, 10, 9, 9, 6, 15, 11, 8, 9, 9, 9, 9, 9, 4, 9, 9, 82, 12, 9, 10, 13, 11, 8, 10, 11, 10, 11, 9, 8, 6, 11, 10, 7, 12, 11, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 9, 12, 9, 12, 9, 9, 8, 8, 7, 8, 297, 6, 7, 12, 29, 4, 6, 7, 7, 7, 9, 9, 13, 8, 9, 9, 8, 11, 10, 553, 7, 7, 7, 4, 7, 8, 10, 5, 10, 12, 8, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 7, 5, 4, 8, 8, 4, 8, 4, 6, 11, 9, 10, 9, 15, 7, 6, 5, 11, 11, 7, 10, 8, 7, 7, 11, 6, 8, 7, 7, 4, 10, 9, 8, 8, 12, 7, 10, 9, 7, 12, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 5, 7, 8, 4, 9, 6, 4, 10, 6, 5, 8, 11, 32, 5, 8, 3, 4, 7, 4, 7, 7, 11, 7, 6, 8, 11, 4, 11, 11, 10, 13, 5, 10, 27, 9, 17, 13, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 7, 9, 9, 12, 10, 4, 8, 5, 5, 116, 13, 8, 230, 11, 3, 11, 8, 5, 12, 4, 12, 4, 10, 4, 4, 7, 10, 9, 10, 6, 9, 11, 507, 7, 3, 39, 3, 6, 7, 76, 11, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 16, 7, 4, 9, 11, 7, 12, 4, 4, 5, 4, 5, 13, 13, 4, 4, 21, 228, 7, 5, 12, 7, 37, 6, 11, 9, 7, 8, 6, 14, 8, 4, 10, 8, 4, 8, 10, 11, 6, 6, 8, 8, 8, 7, 14, 10, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [16, 6, 5, 8, 7, 12, 9, 8, 15, 10, 6, 12, 4, 19, 7, 4, 16, 4, 6, 15, 13, 17, 3, 14, 26, 11, 17, 16, 16, 13, 12, 11, 11, 13, 17, 19, 12, 13, 8, 13, 8, 8, 158, 6, 11, 13, 10]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [9, 14, 12, 16, 10, 154, 7, 5, 5, 12, 7, 14, 7, 13, 4, 9, 15, 7, 4, 10, 9, 12, 10, 10, 10, 8, 17, 79, 4, 8, 15, 9, 11, 17, 19, 4, 16, 8, 626, 10, 8, 9, 17, 7, 6, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [18, 8, 6, 12, 4, 10, 9, 9, 11, 9, 7, 9, 6, 217, 7, 10, 12, 7, 6, 6, 6, 6, 12, 8, 9, 7, 12, 8, 6, 7, 12, 10, 9, 12, 7, 12, 8, 7, 10, 10, 7, 5, 4, 8, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [9, 9, 6, 9, 8, 4, 8, 9, 4, 10, 7, 5, 7, 7, 7, 3, 8, 8, 8, 6, 11, 8, 3, 11, 7, 5, 10, 6, 8, 5, 11, 6, 5, 13, 10, 4, 4, 8, 11, 8, 4, 10, 7, 7, 7, 11, 6]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [10, 9, 7, 7, 6, 11, 10, 8, 7, 35, 6, 8, 9, 4, 7, 69, 8, 7, 8, 9, 7, 6, 5, 2, 4, 8, 4, 9, 9, 6, 8, 4, 8, 17, 8, 8, 7, 8, 9, 8, 13, 8, 7, 5, 10, 11, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 4, 4, 6, 7, 6, 6, 3, 4, 6, 5, 5, 5, 5, 5, 5, 5, 5, 8, 5, 8, 13, 8, 4, 5, 7, 5, 7, 5, 8, 46, 315, 5, 5, 39, 5, 8, 4, 8, 5, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 5, 9, 11, 6, 7, 9, 8, 5, 6, 10, 6, 6, 8, 11, 9, 383, 8, 12, 9, 473, 7, 13, 10, 17, 11, 23, 7, 8, 10, 80, 5, 6, 9, 5, 7, 5, 13, 7, 9, 13, 10, 6, 7, 9, 13]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [9, 11, 10, 4, 9, 7, 9, 8, 13, 4, 6, 7, 10, 7, 12, 9, 10, 8, 8, 9, 9, 7, 7, 4, 8, 8, 10, 6, 9, 11, 12, 10, 5, 4, 10, 11, 8, 9, 9, 5, 8, 9, 12, 5, 9, 25, 4, 12, 11]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 6, 7, 6, 6, 6, 6, 11, 9, 6, 4, 10, 4, 8, 71, 6, 7, 4, 7, 8, 6, 11, 8, 7, 18, 9, 7, 4, 57, 8, 8, 4, 10, 5, 4, 4, 11, 13, 14, 8, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 4, 67, 6, 8, 6, 6, 12, 8, 6, 9, 5, 10, 5, 6, 4, 7, 6, 8, 8, 7, 8, 10, 8, 7, 5, 3, 8, 4, 8, 9, 11, 10, 12, 9, 9, 6, 77, 11, 9, 386]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [12, 10, 7, 9, 14, 9, 11, 3, 9, 7, 10, 9, 4, 8, 48, 11, 8, 10, 10, 11, 5, 7, 431, 8, 9, 9, 9, 8, 9, 10, 9, 11, 11, 10, 7, 11, 11, 9, 11, 7, 10, 8, 7, 10, 12, 351]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [10, 5, 11, 166, 11, 6, 4, 6, 8, 7, 4, 4, 9, 6, 210, 7, 10, 6, 10, 6, 6, 8, 4, 4, 7, 12, 5, 7, 9, 4, 7, 6, 8, 4, 7, 4, 6, 6, 9, 10, 5, 3, 6, 5, 6, 6, 4, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 5, 7, 5, 6, 6, 6, 3, 6, 5, 7, 10, 5, 8, 4, 6, 6, 4, 5, 10, 8, 9, 7, 7, 3, 4, 109, 3, 8, 6, 3, 6, 5, 5, 9, 8, 5, 5, 7, 4, 7, 7, 4, 8, 5, 4, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [11, 6, 8, 11, 5, 8, 6, 8, 6, 5, 6, 8, 5, 10, 6, 10, 121, 9, 286, 4, 7, 6, 7, 12, 7, 5, 4, 6, 13, 5, 8, 13, 75, 11, 12, 6, 4, 492, 10, 13, 4, 9, 26, 6, 417]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 8, 7, 4, 7, 6, 12, 4, 8, 13, 6, 4, 15, 4, 5, 8, 6, 5, 6, 7, 4, 4, 538, 4, 4, 6, 138, 8, 23, 3, 4, 9, 4, 5, 11, 9, 4, 8, 19, 8, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 6, 5, 15, 20, 12, 9, 10, 216, 6, 10, 8, 7, 10, 6, 10, 12, 22, 12, 10, 17, 8, 147, 4, 8, 7, 47, 5, 4, 2, 8, 8, 12, 7, 24]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 10, 10, 8, 14, 5, 6, 13, 4, 10, 12, 8, 9, 6, 10, 9, 8, 7, 9, 14, 6, 4, 8, 5, 29, 4, 11, 8, 6, 9, 5, 193, 4, 5, 7, 9, 10, 6, 10, 12, 288, 8, 66, 11, 6, 8, 13, 160]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 10, 10, 5, 12, 10, 8, 7, 6, 6, 7, 10, 57, 10, 8, 10, 11, 11, 5, 170, 9, 128, 6, 8, 4, 8, 5, 6, 12, 9, 9, 12, 10, 8, 8, 5, 9, 6, 12, 6, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 8, 6, 7, 8, 12, 11, 8, 7, 9, 6, 7, 6, 131, 5, 76, 4, 10, 7, 410, 5, 4, 7, 8, 14, 114, 9, 8, 5, 9, 212, 9, 134, 8, 9, 10, 22, 8, 15, 14, 9, 13, 20]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [3, 5, 11, 11, 8, 10, 8, 6, 7, 8, 8, 4, 4, 5, 6, 12, 8, 8, 4, 10, 8, 11, 13, 4, 12, 8, 8, 4, 11, 6, 11, 12, 6, 37, 8, 6, 8, 6, 4, 6, 5, 8, 6, 5, 10, 10, 10, 4, 7]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 5, 15, 12, 12, 12, 12, 6, 11, 13, 113, 11, 7, 5, 8, 26, 12, 20, 6, 27, 8, 4, 13, 14, 113, 7, 13, 13, 7, 15, 17, 10, 17, 13, 11, 18, 13, 16, 9, 5, 8, 45, 9, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 7, 8, 6, 4, 7, 11, 7, 8, 10, 9, 7, 180, 4, 12, 14, 8, 4, 7, 8, 9, 9, 7, 9, 17, 9, 11, 8, 6, 9, 15, 10, 4, 10, 9, 11, 363, 9, 7, 16, 6, 10, 14, 20]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 7, 10, 11, 9, 9, 12, 268, 9, 9, 8, 5, 9, 7, 12, 189, 9, 10, 11, 553, 5, 7, 13, 14, 8, 10, 11, 10, 5, 4, 34, 11, 6, 11, 12, 14, 8, 8, 6, 10, 12, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 11, 7, 12, 5, 10, 7, 9, 6, 4, 8, 51, 10, 7, 7, 4, 118, 6, 11, 4, 213, 6, 4, 7, 12, 13, 9, 10, 13, 9, 10, 9, 4, 134, 8, 9, 4, 4, 9, 14, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 9, 4, 3, 4, 7, 4, 9, 5, 8, 7, 7, 6, 6, 152, 9, 8, 11, 8, 5, 9, 9, 8, 64, 17, 6, 4, 7, 11, 4, 11, 8, 4, 4, 28, 8, 11, 7, 7, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [14, 5, 7, 8, 4, 4, 7, 6, 6, 6, 7, 7, 3, 5, 7, 6, 7, 29, 8, 23, 7, 7, 6, 9, 16, 7, 7, 9, 7, 6, 7, 7, 8, 8, 8, 10, 4, 8, 6, 4, 7, 8, 11, 9, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [5, 10, 9, 2, 4, 3, 384, 6, 6, 6, 6, 5, 11, 6, 6, 308, 23, 8, 9, 10, 7, 134, 51, 6, 49, 4, 5, 9, 27, 5, 207, 30, 5, 9, 6, 5, 9, 11, 8, 8, 7, 13, 6, 5, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [19, 7, 9, 3, 7, 11, 8, 11, 9, 8, 6, 10, 8, 475, 21, 4, 25, 12, 10, 6, 143, 10, 11, 5, 11, 7, 6, 11, 25, 5, 8, 7, 11, 8, 9, 5, 7, 6, 7, 7, 3, 9, 8, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [11, 6, 10, 10, 11, 10, 4, 7, 78, 9, 6, 7, 7, 6, 10, 74, 12, 9, 15, 361, 8, 8, 9, 9, 5, 9, 8, 83, 11, 7, 15, 91, 16, 9, 10, 14, 6, 11, 8, 9, 16, 13, 10, 7, 10, 13, 11, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [9, 5, 12, 5, 3, 6, 7, 10, 3, 10, 5, 10, 8, 9, 4, 8, 3, 4, 7, 10, 5, 13, 9, 9, 4, 9, 11, 7, 11, 6, 7, 10, 10, 8, 4, 4, 10, 12, 10, 9, 4, 7, 12, 9, 169]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 9, 8, 7, 9, 4, 7, 10, 6, 5, 6, 4, 6, 7, 8, 83, 9, 8, 5, 8, 7, 8, 14, 9, 7, 7, 4, 6, 7, 5, 10, 85, 6, 7, 8, 4, 6, 8, 15, 10, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 12, 4, 6, 10, 9, 4, 9, 8, 8, 14, 7, 4, 16, 6, 10, 11, 9, 8, 17, 8, 7, 7, 13, 9, 7, 8, 12, 8, 9, 168, 8, 8, 11, 7, 6, 10, 11, 4, 7, 10, 8, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [10, 13, 10, 7, 12, 4, 4, 12, 9, 13, 9, 12, 12, 10, 5, 14, 13, 8, 13, 10, 4, 10, 13, 12, 4, 14, 9, 10, 12, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [3, 9, 10, 6, 10, 11, 10, 4, 7, 4, 8, 9, 8, 66, 9, 7, 8, 10, 7, 6, 8, 8, 10, 8, 7, 8, 7, 4, 144, 10, 8, 16, 7, 10, 9, 9, 11, 173, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 6, 3, 8, 9, 8, 6, 8, 5, 12, 5, 5, 6, 4, 7, 5, 17, 6, 6, 5, 10, 7, 7, 6, 7, 11, 6, 7, 11, 4, 8, 5, 8, 9, 8, 8, 4, 6, 9, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 8, 8, 9, 3, 4, 8, 7, 6, 6, 7, 5, 7, 8, 7, 28, 8, 6, 8, 4, 7, 7, 6, 9, 6, 7, 10, 5, 6, 6, 8, 6, 7, 7, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [10, 10, 9, 7, 9, 7, 9, 6, 11, 11, 11, 12, 8, 5, 8, 8, 7, 6, 8, 8, 7, 8, 4, 10, 8, 9, 12, 7, 9, 10, 19, 6, 6, 9, 10, 5, 8, 7, 9, 197, 28, 11, 5, 8, 6, 6, 7]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [7, 11, 13, 4, 9, 10, 8, 5, 5, 4, 6, 10, 29, 4, 11, 11, 395, 9, 9, 10, 4, 10, 22, 6, 5, 9, 7, 8, 10, 9, 10, 4, 13, 9, 7, 4, 6, 9, 5, 9, 7, 10, 45]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [7, 10, 13, 8, 12, 8, 11, 10, 5, 10, 9, 8, 7, 7, 8, 4, 9, 9, 10, 4, 6, 10, 16, 4, 8, 8, 11, 8, 10, 13, 10, 8, 3, 10, 9, 11, 9, 8, 11, 7, 7, 7, 12, 9, 11, 412]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 6, 6, 3, 8, 5, 7, 8, 6, 8, 8, 8, 6, 10, 12, 12, 313, 10, 258, 11, 7, 6, 8, 10, 7, 14, 12, 8, 7, 7, 13, 6, 4, 6, 5, 6, 7, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 4, 8, 6, 5, 7, 9, 10, 7, 9, 10, 8, 10, 7, 4, 9, 7, 8, 8, 9, 8, 9, 9, 7, 266, 4, 6, 7, 4, 9, 352, 7, 5, 27, 10, 10, 5, 9, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [4, 12, 10, 6, 4, 5, 9, 6, 9, 4, 6, 6, 11, 4, 9, 5, 5, 13, 15, 6, 5, 6, 11, 7, 11, 6, 8, 6, 4, 10, 9, 4, 4, 9, 10, 114, 4, 8, 278, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 2, 6, 5, 11, 5, 12, 3, 7, 6, 3, 10, 57, 3, 6, 18, 2, 11, 8, 7, 12, 7]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [12, 12, 11, 12, 12, 7, 9, 4, 208, 7, 15, 8, 172, 7, 10, 12, 11, 8, 4, 16, 11, 9, 12, 11, 12, 10, 7, 9, 13, 5, 9, 15, 9, 12, 12, 5, 11, 7, 5, 8, 12, 14, 5, 4, 12, 5, 21, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [3, 13, 9, 6, 4, 14, 4, 4, 8, 4, 9, 9, 22, 8, 9, 6, 11, 4, 8, 10, 8, 3, 4, 6, 6, 12, 7, 7, 4, 8, 10, 5, 18, 7, 5, 4, 8, 8, 130, 115, 8, 4, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 7, 7, 4, 7, 8, 7, 9, 6, 4, 7, 8, 11, 17, 8, 8, 11, 7, 8, 9, 11, 5, 7, 11, 6, 8, 34, 6, 8, 5, 5, 10, 7, 13, 8, 17, 9, 7, 9, 9, 9, 6, 9, 8, 6, 38]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [18, 6, 8, 7, 7, 4, 6, 4, 7, 8, 5, 7, 4, 196, 5, 5, 7, 4, 6, 11, 6, 4, 7, 6, 6, 2, 8, 7, 7, 7, 6, 14, 12, 6, 7, 6, 6, 5, 6, 75, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [17, 3, 5, 13, 8, 12, 10, 9, 9, 3, 6, 8, 8, 5, 6, 8, 8, 10, 8, 7, 14, 8, 9, 11, 3, 13, 10, 5, 16, 12, 4, 15, 9, 11, 5, 9, 8, 10, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 7, 12, 13, 7, 10, 8, 12, 7, 61, 4, 11, 8, 8, 4, 4, 6, 8, 8, 13, 4, 283, 8, 4, 8, 6, 7, 8, 42, 9, 7, 12, 6, 7, 6, 8, 112]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [19, 9, 7, 10, 6, 6, 8, 6, 8, 8, 10, 7, 9, 11, 6, 12, 12, 11, 7, 11, 8, 6, 11, 9, 8, 8, 10, 14, 6, 9, 15, 11, 9, 8, 8, 47, 9, 11, 13, 10, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 8, 8, 7, 9, 7, 10, 13, 8, 8, 4, 190, 12, 10, 10, 12, 7, 4, 20, 6, 7, 9, 10, 7, 8, 6, 10, 9, 7, 10, 8, 6, 10, 11, 9, 24, 10, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 9, 8, 6, 7, 9, 3, 5, 8, 6, 11, 6, 4, 4, 6, 5, 8, 6, 7, 23, 8, 23, 7, 4, 10, 11, 39, 8, 5, 6, 6, 7, 4, 8, 4, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 4, 4, 4, 8, 4, 6, 7, 8, 10, 7, 3, 7, 11, 9, 9, 4, 5, 5, 6, 5, 4, 9, 10, 9, 5, 6, 9, 4, 8, 8, 5, 9, 3, 10, 8, 4, 4, 8, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 7, 7, 9, 9, 9, 12, 7, 11, 11, 9, 7, 8, 8, 9, 16, 6, 9, 10, 10, 8, 8, 4, 4, 9, 4, 8, 9, 7, 7, 10, 11, 8, 11, 8, 5, 10, 7, 10, 3, 8, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 9, 7, 8, 8, 8, 4, 21, 14, 8, 4, 4, 5, 7, 9, 44, 8, 9, 6, 10, 9, 6, 7, 11, 6, 5, 14, 11, 12, 8, 9, 9, 4, 9, 11, 6, 9, 9, 7, 7, 6, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [13, 4, 16, 4, 40, 9, 10, 7, 10, 18, 11, 4, 8, 10, 13, 12, 387, 24, 8, 18, 7, 12, 10, 4, 8, 13, 9, 10, 13, 10, 7, 15, 9, 12, 9, 16, 9, 12, 8, 15, 7, 6, 15, 10, 19, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [7, 6, 7, 7, 4, 5, 4, 6, 4, 4, 4, 6, 11, 5, 7, 4, 15, 8, 4, 4, 9, 9, 5, 5, 5, 6, 6, 7, 5, 7, 156, 7, 6, 9, 8, 5, 5, 7, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [6, 5, 14, 11, 5, 7, 6, 11, 9, 5, 8, 6, 4, 9, 6, 8, 117, 3, 4, 6, 11, 7, 5, 4, 6, 4, 8, 10, 5, 8, 7, 7, 6, 4, 12, 241, 7, 5, 3, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 9, 3, 4, 7, 4, 4, 7, 9, 8, 11, 5, 8, 4, 6, 5, 8, 15, 9, 8, 9, 4, 9, 7, 10, 4, 6, 10, 7, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [19, 7, 11, 11, 7, 11, 15, 10, 7, 23, 12, 8, 9, 13, 10, 9, 13, 11, 10, 11, 10, 7, 12, 2, 183, 12, 4, 8, 4, 11, 17, 8, 10, 21, 15, 154, 12, 10, 5, 6, 3, 21, 9, 12, 12, 10, 14, 12]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [11, 10, 6, 8, 10, 14, 7, 9, 9, 4, 6, 15, 9, 7, 10, 9, 3, 9, 7, 4, 6, 10, 9, 7, 8, 16, 8, 11, 6, 8, 7, 6, 10, 7, 7, 7, 6, 8, 11, 7, 6, 8, 9, 8, 13, 9, 9, 209, 10, 8]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [3, 5, 10, 3, 10, 8, 10, 9, 5, 10, 13, 4, 11, 9, 7, 5, 10, 8, 3, 9, 7, 10, 7, 9, 5, 8, 5, 10, 11, 12, 5, 6, 9, 10, 13, 12, 20, 11, 5, 8, 12, 10, 5, 9, 9, 11, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [6, 21, 17, 12, 14, 3, 11, 12, 5, 13, 4, 13, 7, 10, 16, 204, 7, 14, 15, 12, 14, 2, 6, 7, 18, 11, 12, 4, 23, 15, 13, 5, 11, 26, 4, 16, 8, 32, 26, 13, 3, 5, 9, 13, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [6, 10, 10, 7, 10, 6, 11, 6, 7, 9, 7, 6, 4, 10, 7, 7, 5, 7, 14, 8, 8, 10, 9, 6, 8, 6, 8, 8, 7, 8, 7, 12, 12, 11, 8, 7, 9, 7, 8, 6, 7, 7, 7, 6, 11, 7, 9, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 7, 14, 10, 10, 9, 12, 7, 6, 12, 10, 9, 8, 3, 11, 8, 12, 11, 17, 12, 10, 13, 13, 16, 7, 14, 19, 17, 12, 9, 13, 9, 7, 8, 12, 7, 431, 10, 12, 6, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 12, 9, 6, 10, 10, 7, 5, 6, 11, 9, 8, 7, 13, 4, 11, 14, 46, 17, 6, 6, 30, 29, 12, 7, 10, 6, 10, 8, 10, 8, 9, 8, 10, 11, 6, 13, 10, 12, 9, 13]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [5, 6, 11, 10, 8, 13, 6, 12, 12, 10, 31, 100, 11, 9, 19, 6, 271, 14, 25, 11, 8, 12, 4, 3, 11, 9, 15, 11, 12, 5, 8, 13, 10, 10, 10, 9, 15, 22, 22, 7, 13]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 12, 6, 13, 8, 13, 7, 15, 9, 8, 10, 12, 12, 11, 9, 10, 9, 12, 14, 10, 14, 10, 15, 10, 12, 9, 11, 13, 10, 11, 9, 13, 7, 4, 11, 10, 8, 10, 10, 12, 21, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [11, 11, 10, 7, 6, 3, 10, 7, 7, 4, 7, 10, 10, 100, 6, 12, 9, 13, 15, 4, 9, 9, 4, 10, 7, 13, 14, 9, 9, 7, 7, 9, 7, 12, 12, 8, 8, 4, 8, 7, 8, 49, 7, 7, 10, 6, 41, 11, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [4, 7, 11, 11, 5, 20, 9, 15, 7, 4, 12, 9, 5, 16, 28, 10, 4, 5, 9, 10, 10, 16, 11, 10, 12, 8, 7, 9, 67, 7, 9, 7, 9, 10, 5, 13, 10, 5, 8, 4, 16, 9, 13, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [12, 15, 4, 14, 12, 13, 12, 21, 4, 12, 7, 7, 12, 10, 4, 14, 10, 11, 13, 12, 7, 6, 8, 8, 16, 14, 11, 309, 4, 19, 14, 12, 8, 12, 12, 12, 99, 14, 6, 12, 13, 6, 10, 3, 7, 15]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [8, 7, 9, 12, 12, 15, 4, 8, 11, 7, 6, 6, 4, 9, 5, 4, 3, 8, 8, 277, 7, 7, 7, 7, 3, 8, 7, 3, 7, 3, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [15, 10, 8, 20, 10, 9, 17, 7, 4, 12, 12, 16, 5, 8, 12, 9, 12, 39, 8, 16, 17, 523, 4, 4, 14, 10, 7, 10, 9, 17, 10, 5, 9, 8, 10, 14, 9, 8, 10, 12, 7, 3, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [13, 12, 14, 10, 10, 11, 28, 4, 8, 6, 9, 9, 7, 9, 9, 8, 9, 6, 10, 9, 9, 6, 4, 9, 8, 9, 4, 6, 9, 14, 9, 12, 9, 9, 9, 12, 10, 11, 5, 12, 11, 15, 10, 9, 11, 16, 8, 13, 3]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 7, 10, 12, 7, 10, 4, 10, 10, 16, 343, 12, 13, 8, 6, 9, 10, 9, 7, 9, 10, 10, 8, 135, 9, 8, 12, 12, 9, 12, 11, 5, 9, 13, 14, 10, 9, 9, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [7, 9, 5, 8, 7, 9, 8, 7, 9, 9, 15, 4, 5, 7, 5, 9, 6, 12, 9, 47, 6, 12, 11, 10, 12, 6, 11, 4, 8, 10, 7, 7, 11, 11, 6, 5, 11, 4, 8, 8, 6, 9, 111]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [4, 5, 14, 5, 6, 7, 8, 6, 5, 7, 22, 14, 10, 5, 8, 149, 16, 4, 9, 10, 6, 20, 11, 9, 16, 15, 5, 5, 7, 15, 7, 4, 10, 7, 14, 7, 7, 10, 7, 10, 21, 8, 6, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 7, 10, 8, 6, 10, 10, 7, 9, 8, 9, 12, 6, 4, 4, 40, 4, 6, 8, 8, 7, 8, 7, 8, 10, 10, 10, 4, 10, 9, 16, 11, 12, 8, 13, 4, 7, 8, 7, 11, 15, 420, 9, 11, 12, 6, 6, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 8, 4, 6, 8, 5, 8, 11, 8, 6, 7, 4, 7, 7, 4, 8, 4, 8, 4, 8, 6, 4, 10, 8, 5, 4, 5, 7, 8, 6, 10, 4, 7, 11, 84, 6, 46, 4, 3, 11, 9, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [12, 13, 7, 10, 11, 13, 10, 8, 14, 11, 10, 16, 11, 10, 8, 8, 11, 36, 22, 9, 9, 5, 8, 16, 5, 13, 12, 12, 11, 9, 8, 9, 12, 8, 10, 10, 13, 8, 4, 12, 7, 12, 10, 8, 12, 9, 37]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 10, 11, 10, 10, 12, 10, 15, 11, 10, 26, 10, 57, 16, 8, 11, 10, 9, 11, 11, 9, 7, 9, 12, 20, 11, 4, 9, 10, 7, 8, 13, 10, 9, 11, 11, 12, 10, 10, 12, 10, 8, 10, 4, 8, 6, 8, 7]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 7, 7, 6, 7, 10, 8, 7, 6, 7, 5, 18, 8, 8, 12, 7, 6, 5, 6, 498, 7, 4, 11, 5, 218, 6, 6, 7, 6, 15, 9, 6, 6, 6, 7, 8, 14, 7, 10, 10, 9, 409]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [6, 11, 5, 9, 12, 12, 9, 8, 11, 10, 10, 8, 9, 9, 9, 9, 10, 12, 22, 3, 11, 188, 11, 6, 11, 11, 8, 6, 7, 3, 13, 10, 11, 10, 6, 10, 7, 11, 10, 11, 9, 4, 10, 10, 10, 9, 88, 7, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [3, 10, 9, 11, 4, 10, 11, 18, 20, 7, 4, 9, 8, 3, 10, 58, 4, 5, 7, 12, 7, 7, 10, 4, 3, 122, 11, 4, 12, 8, 11, 9, 9, 6, 3, 7, 8, 9, 6, 3, 11, 9, 17, 20, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [25, 11, 6, 6, 12, 5, 11, 10, 13, 10, 11, 10, 11, 12, 12, 5, 8, 350, 11, 6, 11, 7, 8, 521, 8, 13, 7, 10, 8, 8, 10, 6, 12, 8, 8, 4, 14, 8, 4, 9, 4, 7, 10, 9, 9, 10, 6, 10]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [3, 8, 14, 12, 5, 14, 6, 6, 4, 4, 13, 6, 6, 279, 7, 13, 9, 5, 6, 16, 4, 14, 315, 19, 11, 4, 4, 8, 11, 7, 4, 6, 5, 17, 10, 19, 23, 4, 123]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [8, 10, 10, 9, 2, 10, 8, 10, 10, 8, 6, 8, 10, 10, 8, 28, 2, 8, 10, 9, 30, 317, 10, 12, 10, 10, 29, 12, 10, 10, 10, 7, 42, 5, 7, 12, 11, 9, 12, 12, 4, 68]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [8, 5, 8, 10, 11, 3, 9, 4, 10, 4, 6, 4, 18, 2, 10, 7, 8, 6, 7, 6, 4, 4, 10, 6, 8, 6, 2, 5, 4, 9, 7, 7, 5, 4, 10, 8, 6, 13, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 4, 10, 9, 6, 11, 10, 5, 57, 7, 4, 5, 6, 9, 4, 8, 33, 9, 7, 12, 10, 8, 19, 8, 12, 4, 7, 8, 6, 3, 9, 11, 9, 8, 9, 13, 11, 6, 8, 13]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[4, 4, 7, 14, 10, 11, 10, 4, 10, 11, 13, 7, 4, 5, 12, 4, 6, 20, 10, 10, 13, 6, 14, 4, 4, 6, 4, 10, 8, 7, 5, 8, 5, 4, 14, 4, 11, 10, 10, 12, 16, 6, 14, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [16, 6, 9, 8, 8, 6, 11, 10, 6, 9, 8, 10, 11, 11, 9, 10, 10, 12, 12, 14, 10, 9, 30, 8, 10, 7, 13, 10, 9, 62, 63, 12, 9, 12, 9, 9, 8, 6, 5, 6, 8, 5, 9, 10, 14, 14, 9, 12]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 3, 10, 10, 9, 10, 12, 3, 6, 8, 10, 9, 11, 12, 10, 8, 4, 5, 4, 8, 11, 7, 8, 7, 10, 6, 4, 595, 8, 4, 8, 12, 8, 10, 11, 4, 13, 4, 13, 9, 4, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 4, 12, 10, 5, 7, 4, 9, 8, 8, 9, 8, 7, 56, 3, 146, 10, 7, 5, 13, 402, 7, 4, 5, 91, 6, 10, 5, 8, 5, 4, 5, 10, 5, 4, 9, 8, 4, 6, 13, 107, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [10, 8, 6, 6, 10, 4, 10, 8, 5, 46, 7, 4, 5, 9, 227, 8, 7, 8, 7, 8, 5, 4, 8, 294, 6, 7, 17, 7, 10, 10, 7, 8, 4, 6, 8, 7, 6, 7, 7, 6, 6, 10, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [16, 9, 7, 9, 12, 7, 11, 12, 8, 8, 9, 5, 6, 9, 9, 6, 5, 73, 17, 9, 7, 15, 4, 8, 6, 6, 9, 10, 9, 6, 11, 4, 174, 8, 13, 12, 11, 8, 8, 10, 10, 13, 7, 9, 9, 10, 114, 111, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [13, 11, 13, 9, 10, 12, 9, 4, 11, 10, 10, 13, 13, 7, 12, 16, 4, 6, 8, 13, 9, 4, 13, 14, 4, 8, 9, 10, 11, 12, 4, 3, 11, 10, 7, 12, 14, 11, 11, 10, 8, 17, 14, 12, 11, 11, 11]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [3, 8, 11, 9, 11, 4, 3, 15, 11, 13, 9, 11, 11, 7, 4, 10, 7, 10, 10, 8, 8, 13, 11, 8, 7, 11, 7, 11, 5, 8, 12, 11, 11, 8, 9, 8, 4, 11, 7, 5, 86, 8, 9, 11, 411, 11, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [6, 11, 8, 6, 10, 6, 3, 5, 4, 4, 5, 4, 9, 8, 31, 4, 10, 7, 7, 369, 10, 7, 4, 8, 8, 9, 10, 9, 7, 8, 11, 9, 8, 4, 129, 12, 13]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [5, 5, 12, 6, 4, 3, 4, 8, 9, 4, 9, 9, 4, 9, 8, 5, 8, 5, 6, 7, 42, 9, 5, 4, 4, 9, 10, 10, 4, 4, 4, 9, 6, 11, 4, 6, 4, 7, 7, 7, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 13, 6, 5, 6, 9, 5, 6, 7, 4, 7, 6, 10, 9, 7, 3, 33, 8, 12, 7, 8, 8, 9, 8, 7, 9, 6, 5, 8, 9, 9, 4, 13, 6, 6, 8, 5, 5, 210, 12]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [10, 9, 10, 62, 8, 12, 4, 6, 7, 5, 6, 10, 8, 9, 8, 8, 8, 8, 9, 9, 6, 9, 19, 7, 10, 9, 7, 9, 7, 5, 7, 7, 8, 8, 2, 7, 8, 5, 6, 8, 12, 9, 9, 12]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 8, 8, 6, 6, 11, 8, 6, 7, 7, 9, 6, 22, 7, 7, 7, 6, 10, 17, 53, 9, 8, 6, 7, 28, 4, 23, 6, 8, 7, 5, 6, 10, 7, 12, 8, 6, 7, 10, 8, 9, 8, 13]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 8, 11, 10, 6, 8, 6, 7, 8, 8, 5, 14, 7, 5, 10, 5, 5, 9, 9, 6, 7, 8, 6, 7, 7, 11, 8, 12, 5, 9, 9, 4, 7, 5, 7, 10, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [9, 9, 8, 7, 8, 9, 7, 10, 5, 8, 7, 7, 7, 7, 92, 7, 6, 7, 8, 9, 8, 8, 9, 8, 7, 7, 8, 11, 7, 5, 8, 7, 9, 8, 9, 4, 8, 8, 9, 37, 8, 9, 8, 13, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 5, 9, 8, 4, 6, 9, 6, 4, 9, 10, 8, 9, 10, 13, 4, 5, 6, 7, 8, 8, 8, 7, 8, 10, 5, 40, 7, 6, 8, 7, 7, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [7, 8, 2, 7, 7, 11, 10, 12, 9, 6, 10, 8, 15, 8, 10, 8, 7, 13, 9, 12, 10, 5, 11, 9, 8, 9, 7, 7, 93, 5, 9, 9, 6, 12, 137, 6, 10, 19, 8, 11, 12, 11, 13, 7, 30, 7, 7, 8, 12]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [9, 10, 4, 3, 7, 11, 7, 35, 4, 8, 9, 3, 3, 6, 2, 10, 6, 7, 18, 4, 12, 12, 2, 14, 401, 4, 4, 13, 41, 4, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 8, 4, 7, 8, 4, 8, 7, 7, 9, 10, 2, 9, 11, 8, 8, 5, 8, 7, 7, 11, 9, 100, 3, 8, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 9, 7, 4, 5, 26, 11, 5, 4, 9, 6, 261, 133, 5, 4, 9, 4, 10, 7, 7, 7, 8, 9, 12, 8, 8, 10, 5, 5, 9, 5, 4, 4, 20, 5, 8, 6, 6, 4, 4, 42, 5, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 9, 7, 10, 7, 5, 4, 9, 6, 8, 8, 4, 4, 3, 9, 7, 8, 5, 8, 7, 5, 13, 4, 12, 5, 24, 8, 6, 7, 5, 4, 9, 9, 30, 7, 8, 11, 14, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [3, 8, 2, 7, 10, 11, 6, 6, 6, 6, 7, 9, 8, 10, 265, 5, 6, 12, 6, 12, 7, 12, 4, 28, 7, 16, 19, 4, 9, 5, 6, 8, 6, 5, 3, 7, 117, 44, 7, 6, 5, 5, 13, 15, 7, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 13, 150, 6, 13, 7, 4, 10, 7, 4, 7, 5, 10, 13, 7, 4, 10, 6, 8, 6, 8, 5, 10, 10, 9, 11, 10, 11, 7, 6, 10, 7, 9, 11, 9, 6, 61, 11, 13, 5, 7, 10, 6, 10, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [9, 14, 10, 8, 6, 7, 9, 9, 9, 4, 9, 8, 10, 8, 6, 6, 10, 8, 4, 7, 8, 10, 14, 10, 9, 10, 11, 17, 11, 11, 12, 4, 10, 4, 8, 8, 10, 12, 8, 10, 8, 7, 46, 5, 10, 6, 8, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [7, 8, 3, 12, 5, 3, 9, 3, 8, 11, 4, 6, 14, 13, 5, 5, 2, 380, 5, 4, 113, 4, 14, 5, 19, 14, 6, 14, 6, 3, 12, 7, 26, 6, 163, 5, 3, 19, 16, 2, 13, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 6, 9, 9, 15, 10, 9, 17, 18, 11, 10, 11, 14, 80, 15, 16, 88, 8, 11, 8, 12, 16, 10, 9, 14, 58, 16, 18, 17, 8, 8, 9, 10, 6, 8, 15, 15, 10, 16, 15, 17, 11, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [9, 8, 9, 8, 4, 3, 6, 9, 4, 11, 12, 6, 4, 9, 10, 8, 11, 21, 35, 8, 7, 343, 210, 8, 9, 13, 196, 4, 8, 11, 42, 6, 8, 6, 8, 4, 3, 8, 113, 3, 3, 8, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [2, 12, 9, 8, 9, 11, 9, 8, 11, 18, 7, 11, 9, 18, 8, 8, 13, 16, 8, 10, 11, 6, 9, 12, 15, 4, 17, 8, 10, 8, 9, 22, 11, 112, 11, 8, 349, 8, 9, 10, 9, 10, 10, 7, 9, 13, 14, 7, 36]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [8, 12, 4, 4, 12, 14, 19, 6, 177, 4, 7, 10, 4, 8, 9, 5, 5, 10, 390, 68, 23, 4, 6, 10, 6, 102, 13, 9, 8, 292, 14, 13, 8, 7, 10, 9, 47, 10, 4, 12, 24, 8, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [10, 4, 12, 6, 8, 6, 6, 8, 14, 13, 13, 6, 8, 11, 17, 6, 7, 10, 12, 11, 4, 5, 7, 12, 9, 7, 6, 20, 7, 6, 17, 15, 10, 9, 142, 9, 11, 11, 3, 15, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [13, 6, 9, 3, 6, 5, 29, 6, 6, 8, 3, 5, 11, 8, 85, 21, 4, 18, 30, 11, 4, 7, 10, 31, 7, 13, 6, 7, 10, 33, 34, 11, 537, 6, 6, 11, 5, 5, 6, 6, 4, 8, 7, 9, 8, 7, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 9, 4, 4, 5, 10, 4, 7, 13, 15, 6, 7, 9, 20, 229, 10, 13, 13, 5, 494, 6, 5, 3, 7, 8, 5, 9, 5, 65, 12, 7, 8, 53, 204, 5, 8, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [35, 9, 7, 11, 7, 8, 13, 9, 18, 5, 8, 4, 237, 7, 8, 8, 9, 7, 4, 11, 8, 9, 7, 7, 8, 13, 5, 8, 125, 8, 7, 6, 22, 9, 340, 13, 8, 9, 13, 9, 16, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 8, 9, 12, 7, 9, 4, 4, 12, 5, 153, 8, 5, 10, 9, 8, 9, 42, 4, 6, 167, 10, 12, 7, 8, 8, 9, 9, 15, 294, 7, 113, 128, 143, 8, 8, 6, 4, 4, 7, 8, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 4, 5, 4, 4, 13, 10, 4, 4, 4, 4, 9, 7, 10, 9, 4, 5, 13, 40, 7, 13, 7, 14, 4, 13, 12, 12, 6, 6, 4, 7, 3, 6, 10, 15]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [13, 15, 9, 9, 4, 4, 4, 9, 8, 7, 8, 7, 4, 65, 11, 4, 4, 4, 524, 6, 490, 15, 487, 11, 5, 7, 15, 15, 4, 15, 6, 10, 4, 4, 9, 17, 4, 10, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 3, 4, 7, 4, 3, 5, 4, 4, 14, 3, 3, 8, 4, 16, 3, 251, 5, 6, 4, 328, 5, 4, 6, 3, 3, 6, 2, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 4, 4, 12, 4, 13, 5, 6, 10, 276, 13, 397, 4, 10, 6, 10, 3, 6, 9, 94, 8, 4, 8, 9, 4, 4, 7, 4, 5, 8, 13, 11, 12, 11, 11, 14, 14, 7, 14]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 4, 6, 3, 7, 4, 153, 4, 12, 4, 3, 8, 3, 8, 4, 4, 4, 8, 7, 317, 76, 4, 11, 6, 6, 7, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 9, 9, 11, 4, 4, 4, 4, 9, 4, 10, 5, 11, 21, 4, 7, 9, 8, 4, 4, 11, 11, 3, 130, 6, 5, 12, 11, 12, 10, 12, 11, 4, 9, 11, 4, 7, 2, 9, 4, 5, 10, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [4, 11, 8, 7, 9, 5, 14, 8, 5, 11, 5, 5, 6, 12, 8, 4, 8, 6, 7, 5, 4, 9, 7, 9, 10, 16, 8, 8, 70, 13, 10, 5, 7, 18, 10, 14, 10, 7, 8, 4, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 9, 5, 11, 259, 8, 16, 9, 10, 10, 5, 11, 9, 26, 7, 4, 11, 7, 9, 5, 11, 12, 11, 15, 80, 11, 138, 34, 98, 16, 9, 8, 9, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [13, 6, 8, 2, 14, 17, 6, 10, 7, 8, 9, 6, 7, 159, 14, 9, 18, 13, 11, 9, 12, 7, 18, 10, 7, 7, 11, 7, 12, 8, 8, 5, 6, 7, 12, 7, 9, 8, 25, 8, 10, 17]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 5, 7, 8, 13, 4, 5, 8, 11, 12, 9, 11, 4, 12, 14, 47, 4, 6, 5, 8, 12, 8, 8, 6, 14, 8, 7, 13, 6, 8, 12, 53, 20, 8, 8, 6, 10, 6, 3, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 10, 9, 4, 12, 10, 9, 9, 5, 7, 8, 7, 11, 14, 10, 11, 64, 10, 14, 7, 14, 13, 12, 14, 11, 13, 7, 10, 10, 7, 11, 8, 9, 11, 7, 7, 10, 11, 8, 11, 6, 9, 10]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 4, 12, 13, 12, 8, 6, 5, 4, 11, 11, 14, 9, 11, 11, 9, 9, 9, 10, 4, 9, 10, 9, 5, 5, 9, 13, 6, 5, 7, 6, 10, 11, 9, 4, 8, 11, 8, 12, 7, 11, 13, 154, 14, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 6, 12, 6, 9, 5, 9, 184, 9, 10, 6, 4, 12, 5, 8, 10, 5, 8, 255, 8, 7, 9, 11, 12, 3, 9, 12, 10, 211, 6, 13, 5, 7, 9, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [13, 9, 8, 8, 7, 9, 8, 10, 10, 10, 8, 10, 10, 9, 14, 10, 9, 11, 8, 8, 7, 9, 12, 73, 10, 12, 7, 7, 9, 7, 14, 10, 15, 15, 10, 8, 6, 8, 19, 8, 7, 11, 7, 9, 7, 10, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [8, 10, 8, 7, 8, 13, 10, 8, 8, 11, 9, 7, 4, 17, 7, 7, 5, 6, 10, 9, 10, 9, 422, 7, 7, 8, 4, 9, 14, 12, 12, 12, 9, 11, 11, 18, 18, 11, 10, 4, 11, 11, 10, 12, 15, 8, 12]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [9, 9, 13, 11, 7, 9, 9, 8, 7, 9, 13, 6, 6, 11, 10, 9, 11, 9, 10, 10, 131, 7, 10, 10, 10, 12, 14, 8, 8, 11, 10, 12, 7, 7, 90, 10, 8, 19, 15, 8, 10, 10, 9, 8, 133]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [26, 15, 4, 5, 7, 13, 11, 6, 12, 7, 9, 18, 20, 11, 9, 7, 13, 7, 19, 6, 12, 9, 7, 4, 326, 14, 12, 5, 11, 14, 59, 10, 9, 9, 10, 12, 5, 460, 8, 15, 11, 130, 9, 84, 11, 8, 118, 7, 6, 201]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [3, 9, 10, 15, 11, 15, 9, 14, 9, 10, 8, 117, 11, 13, 11, 11, 11, 11, 10, 13, 11, 6, 13, 18, 12, 4, 12, 13, 13, 15, 15, 12, 11, 16, 15, 10, 20, 13, 12, 12, 14, 12, 13, 9, 16, 12, 12, 11, 11, 17, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
