┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEKO11_1354
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEKO11_1354
----------------------------------
number of metabolites : 1972
number of reactions : 2778
number of genes : 1354

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
max_cuts = 42
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2778 flux variables and 5165 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 12, 13, 11, 12, 2, 22, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 257, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 31
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 3, 3, 2, 2, 3, 3, 3, 2, 2, 2, 3, 3, 2, 9, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 3, 2, 4, 29, 2, 3, 3, 3, 4, 18, 2, 3, 3, 9, 2, 3, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 92, 9, 54, 9, 9, 9, 15, 14, 14, 15, 14, 15, 14, 14, 12, 11, 12, 11, 13, 11, 26, 244, 12, 12, 11, 25, 11, 12, 11, 49, 11, 11, 12, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [8, 3, 12, 12, 12, 12, 12, 12, 12, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 76, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 8, 12, 13, 12, 33, 12, 15, 12, 7, 17, 17, 18, 17, 18, 61, 18, 14, 14, 15, 14, 15, 14, 14, 15, 14, 14, 24, 14, 14, 16, 14, 15, 57, 15, 15]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 5, 3, 4, 4, 5, 2, 4, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 3, 4, 3, 4, 5, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 10, 6, 2, 4, 5, 7, 2, 7, 2]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 84, 4, 6, 10, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 41, 3, 3, 4, 8, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 2, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784757918279
thermo_feasible = true
