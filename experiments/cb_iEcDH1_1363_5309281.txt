┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcDH1_1363
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcDH1_1363
----------------------------------
number of metabolites : 1949
number of reactions : 2750
number of genes : 1363

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 28
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2750 flux variables and 5109 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 24, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 13, 70, 14, 13, 14, 13, 13, 11, 11, 11, 13, 13, 14, 11, 11]
length(C_list) = 28
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 4, 3, 3, 18, 2, 23, 4, 3, 4, 2, 2, 2]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 2, 2, 98, 9, 7, 3, 3, 4, 3, 3, 3, 5, 11, 5, 4, 3, 4, 4, 5, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 2, 6, 4, 4, 4, 2, 7, 4, 4, 6, 6, 4, 8, 3, 5, 6, 3, 6, 4, 5, 3, 5, 5, 4, 4, 5, 3, 5, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 3, 4, 4, 2, 6, 6, 4, 4, 196, 3, 66, 5, 4, 4, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 4, 4, 3, 4, 4, 4, 3, 4, 4, 5, 4, 3, 3, 4, 5, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 5, 4, 2, 4, 2, 6, 4, 3, 2, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 7, 2, 2, 2, 7, 7, 2, 4, 8, 4, 2, 6, 22, 4, 3, 3, 6, 6, 173, 155, 34]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 61, 8, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 3, 27]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 6, 22]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 5, 4, 9, 11, 6, 5, 24, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 4, 4, 45, 58, 25]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 9, 5, 61, 154]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 13, 9, 7, 8, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785243762536
thermo_feasible = true
