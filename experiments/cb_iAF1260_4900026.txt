┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260
----------------------------------
number of metabolites : 1668
number of reactions : 2382
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 48
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2382 flux variables and 4460 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 67, 18, 18, 3, 18, 18, 4, 20, 2, 2, 15, 2, 3, 12, 14, 2, 11, 15, 12, 11, 7, 2, 3, 40, 40, 41, 11, 11]
length(C_list) = 20
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 3, 3, 2, 21, 3, 3, 89, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 8, 3, 5, 75, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 4, 4, 5, 4, 3, 56, 35, 4, 5, 3, 4, 23, 29, 4, 4, 4, 4, 3, 5, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 18, 4, 4, 2, 206, 6, 5, 4, 4, 5, 26, 3, 4, 9, 9, 11, 15, 9, 9, 5, 4, 4, 4, 9, 9, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 4, 3, 4, 4, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 6
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367010384206386
thermo_feasible = true
