ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECB_1328
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECB_1328
----------------------------------
number of metabolites : 1951
number of reactions : 2748
number of genes : 1329

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2748 flux variables and 5105 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 3, 2, 2, 2, 2, 4, 2, 3, 7, 3, 2, 3, 2, 2, 2, 3, 3, 32, 3, 5, 4, 47, 3]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 4, 5, 4, 5, 4, 219, 3, 3, 4, 5, 2, 4, 3, 3, 3, 9, 4, 5, 4, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 4, 4, 3, 3, 5, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 5, 2, 4, 9, 29, 50, 14, 6, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 5, 10, 5, 28, 37]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 8, 3, 4, 6, 7, 5, 6, 2, 8, 4, 8, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 2, 4, 77, 6, 2, 4, 141, 4, 23, 3, 4, 3, 4, 4, 2, 4, 16, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 6
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660046
thermo_feasible = true
