┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 118
max_cuts = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8, 8, 6, 4, 4, 8, 11, 3, 127, 13, 19, 13, 7, 3, 6, 5, 4, 4, 8, 7, 2, 3, 8, 9]
length(C_list) = 65
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 2, 4, 8, 3, 8, 4, 4, 3, 88, 6, 6, 11, 8, 4, 6, 4, 4, 4, 3, 179, 3, 10, 4, 6, 10, 11, 54, 5, 6, 4, 4, 5, 4, 5, 4, 4, 5, 5, 6, 148, 3, 96, 8, 39, 4, 4, 4, 87, 4, 7, 4, 4, 8, 8, 5, 4, 3, 3, 6, 24, 4]
length(C_list) = 65
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 62, 5, 7, 5, 17, 4, 6, 5, 4, 7, 3, 6, 3, 7, 139, 3, 326, 3, 3, 6, 7, 4, 4, 6, 6, 6, 3, 276, 4, 7, 7, 6, 4, 6, 4, 5, 5, 4, 4, 280, 6, 4, 27, 4, 5, 3, 6, 5, 10, 5, 5, 4, 5, 15, 47, 5, 4, 3, 18, 6, 4, 3, 4, 4, 10, 5, 15, 4, 19, 4]
length(C_list) = 71
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 4, 3, 3, 3, 8, 6, 4, 5, 4, 5, 8, 23, 391, 5, 5, 4, 27, 5, 4, 295, 6, 9, 5, 7, 4, 4, 4, 4, 3, 4, 6, 46, 8, 5, 3, 84, 8, 6, 5, 5, 9, 6, 49, 41, 4, 4, 3, 4, 4, 5, 36, 4, 7, 11, 224, 6, 6, 113, 6, 5]
length(C_list) = 63
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 3, 4, 3, 3, 4, 7, 5, 5, 4, 5, 3, 6, 6, 8, 4, 4, 9, 4, 6, 330, 4, 10, 59, 5, 254, 95, 9, 11, 8, 9, 4, 10, 7, 10, 9, 8, 4, 5, 6, 6, 12, 4, 4, 4, 4, 10, 4, 4, 21, 6, 4, 4]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [13, 4, 3, 3, 9, 4, 9, 3, 3, 3, 4, 5, 4, 3, 8, 3, 4, 4, 4, 63, 6, 8, 13, 58, 14, 7, 8, 10, 4, 4, 5, 7, 5, 3, 4, 9, 5, 8, 6, 339, 6, 12, 5, 6, 40, 4, 6, 28, 8, 3, 6, 13, 16, 4, 4, 7, 4]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 5, 6, 4, 313, 242, 5, 4, 10, 385, 23, 5, 15, 140, 11, 8, 6, 12, 8, 6, 7, 12, 8, 5, 4, 11, 3, 4, 5, 4, 4, 6, 4, 201, 4, 9, 13, 8, 9, 6, 5, 27, 6, 5, 10, 6, 7, 4, 6, 6, 4, 4, 6, 5, 4, 5, 8, 76, 5, 3, 6, 51, 6, 5, 6, 7, 6]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 4, 39, 6, 8, 5, 8, 7, 4, 4, 6, 4, 6, 13, 7, 6, 105, 90, 11, 4, 4, 5, 4, 6, 6, 23, 9, 4, 12, 4, 6, 4, 15, 3, 6, 3, 4, 3, 6, 3, 5, 6, 5, 9, 187, 6, 7, 4, 29, 4, 4, 4, 9, 5, 5, 4, 4, 7, 8, 8, 6, 7, 7, 50, 6, 4, 5]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 7, 4, 5, 4, 4, 3, 6, 113, 5, 9, 8, 8, 4, 4, 25, 4, 4, 8, 10, 6, 5, 4, 6, 6, 8, 5, 9, 10, 11, 10, 4, 9, 4, 4, 4, 38, 4, 5, 38, 4, 76, 5, 7, 4, 6, 7, 7, 4, 8, 11, 6, 8, 4, 17, 4, 4, 4, 5, 21, 231, 5, 10, 7, 4, 4, 4, 5, 7, 7, 8, 9, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 108, 7, 3, 9, 6, 7, 18, 4, 14, 6, 7, 7, 6, 4, 33, 4, 6, 6, 4, 7, 6, 4, 6, 113, 6, 5, 6, 6, 6, 4, 6, 7, 5, 135, 6, 7, 193, 4, 8, 7, 3, 4, 5, 10, 13, 8, 3, 5, 6, 4, 15, 5, 6, 6, 7, 4, 9, 7, 10, 5, 7, 22, 9, 5, 7, 3]
length(C_list) = 67
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 102, 3, 3, 93, 4, 8, 6, 15, 6, 6, 4, 300, 4, 13, 4, 214, 5, 8, 17, 9, 6, 61, 6, 86, 5, 7, 78, 7, 434, 6, 5, 7, 5, 4, 13, 6, 6, 5, 5, 4, 305, 4, 9, 4, 56, 8, 4, 9]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 7, 16, 5, 6, 5, 26, 5, 6, 222, 3, 4, 8, 3, 4, 3, 4, 4, 11, 5, 6, 7, 4, 3, 9, 6, 4, 7, 3, 8, 5, 4, 16, 5, 6, 5, 16, 7, 4, 7, 13, 72, 4, 5, 6, 4, 6, 6, 6, 6, 5, 8, 6, 145, 5, 6, 10, 5, 6, 6, 8, 30, 8, 7]
length(C_list) = 67
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 9, 5, 3, 10, 5, 4, 8, 7, 9, 12, 4, 8, 7, 4, 8, 4, 6, 216, 7, 13, 4, 16, 4, 7, 8, 5, 11, 4, 99, 15, 84, 6, 7, 33, 4, 5, 10, 4, 6, 4, 9, 5, 7, 5, 9, 9, 8, 13, 7, 6, 128, 6, 4, 14, 7, 13, 4, 3, 4, 4, 6, 50, 7, 9, 30, 6, 7, 13, 5, 4]
length(C_list) = 71
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 4, 3, 4, 7, 4, 4, 10, 9, 6, 8, 6, 4, 4, 4, 7, 8, 4, 5, 4, 8, 10, 250, 6, 6, 6, 8, 5, 4, 17, 4, 4, 413, 4, 4, 5, 9, 4, 26, 10, 4, 5, 25, 4, 8, 8, 4, 8, 5, 6, 4, 251, 7, 8, 56, 4]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [22, 6, 7, 6, 8, 4, 11, 4, 5, 4, 4, 4, 6, 264, 5, 4, 7, 5, 3, 13, 6, 125, 4, 4, 29, 6, 8, 145, 4, 4, 6, 10, 5, 12, 6, 8, 6, 4, 43, 4, 4, 10, 4, 4, 4, 6, 5, 4, 5, 7, 6, 6, 4, 5, 4, 4, 72, 4, 3, 7, 6, 6, 7, 7, 8, 5, 4, 6, 49, 9, 7, 13, 6, 4]
length(C_list) = 74
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 7, 4, 7, 8, 6, 3, 6, 4, 13, 6, 7, 4, 4, 463, 4, 6, 4, 6, 9, 5, 5, 9, 3, 4, 9, 7, 6, 4, 6, 6, 5, 4, 5, 4, 5, 35, 4, 5, 8, 263, 6, 9, 6, 7, 41, 4, 5, 4, 4, 5, 9, 8, 4, 189, 6, 7, 9, 8, 4, 4, 11, 5, 4, 5, 6, 8]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 9, 7, 10, 6, 6, 7, 8, 10, 3, 6, 9, 9, 5, 7, 8, 7, 4, 8, 8, 8, 11, 4, 10, 11, 8, 190, 14, 5, 25, 10, 167, 366, 38, 8, 9, 6, 4, 8, 5, 4, 11, 7, 4, 7, 85, 8, 8, 11, 4, 125, 9, 11, 8, 6, 33, 10, 8, 6, 4, 4, 7]
length(C_list) = 64
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 4, 3, 4, 6, 5, 33, 6, 4, 5, 8, 6, 6, 4, 4, 4, 8, 6, 5, 28, 5, 6, 4, 35, 9, 8, 9, 4, 3, 8, 8, 8, 4, 7, 4, 5, 8, 5, 8, 11, 371, 5, 6, 17, 4, 4, 4, 11, 44, 6, 4, 7, 344, 4, 10, 7, 8, 6, 4, 5, 7, 6, 11, 5, 4]
length(C_list) = 67
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 320, 9, 6, 7, 5, 4, 122, 22, 11, 17, 37, 4, 7, 11, 6, 9, 4, 5, 4, 5, 6, 9, 7, 6, 7, 15, 8, 6, 3, 7, 5, 4, 5, 6, 6, 4, 5, 3, 7, 7, 10, 6, 8, 4, 68, 8, 4, 4, 10, 8, 25, 5, 4, 4, 8, 8, 7, 10, 4, 8, 4, 4, 8, 7, 7, 11, 64, 8]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 21, 9, 233, 5, 4, 7, 4, 9, 8, 4, 4, 8, 4, 145, 7, 6, 4, 5, 6, 3, 4, 5, 25, 11, 5, 27, 6, 57, 9, 6, 4, 11, 6, 7, 4, 5, 3, 8, 8, 7, 4, 10, 8, 6, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 7, 4, 262, 7, 4, 5, 5, 6, 8, 7, 4, 4, 4, 4, 22, 4, 8, 313, 5, 218, 7, 7, 13, 56, 4, 3, 8, 4, 7, 4, 4, 5, 8, 5, 4, 4, 4, 29, 4, 173, 50, 6, 17, 7, 7, 8, 4, 6, 4, 5, 4, 4, 7, 10, 8, 6, 7, 4, 10, 4, 4]
length(C_list) = 66
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 5, 4, 7, 3, 13, 5, 7, 5, 4, 8, 7, 9, 4, 4, 4, 6, 8, 3, 6, 5, 51, 8, 149, 9, 7, 7, 47, 9, 49, 4, 6, 6, 12, 8, 112, 22, 197, 10, 7, 7, 8, 4, 5, 8, 6, 4, 4, 4, 5, 12, 8, 7, 4, 6, 8, 8, 10, 19, 4, 10, 5, 8, 4, 6, 7, 6]
length(C_list) = 70
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 11, 8, 4, 7, 4, 7, 5, 5, 4, 6, 3, 5, 5, 16, 6, 4, 4, 12, 4, 7, 5, 6, 10, 34, 6, 8, 262, 6, 4, 7, 10, 4, 6, 4, 10, 4, 155, 8, 146, 8, 5, 6, 4, 5, 4, 6, 4, 40, 4, 4, 5, 6, 4, 4, 4, 7, 6, 11, 8, 29, 5, 5, 156, 3, 6, 9]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 6, 3, 4, 4, 5, 3, 25, 10, 26, 6, 45, 5, 4, 4, 4, 8, 100, 5, 6, 5, 10, 8, 10, 7, 6, 9, 4, 7, 7, 7, 8, 4, 14, 5, 4, 6, 6, 4, 10, 7, 7, 5, 4, 6, 16, 5, 5, 12, 5, 4, 4, 7, 7, 6, 7, 4, 5, 4, 12, 5, 5, 7, 5, 7, 20, 87, 11]
length(C_list) = 70
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 7, 11, 6, 6, 9, 3, 4, 8, 4, 3, 4, 7, 6, 4, 62, 4, 4, 14, 10, 6, 4, 27, 5, 4, 10, 26, 8, 11, 6, 4, 5, 5, 9, 34, 6, 4, 4, 7, 7, 5, 24, 4, 21, 5, 3, 6, 5, 4, 6, 6, 4, 8, 71, 4, 5, 4, 9, 6, 5, 6, 4, 8, 4, 5, 4, 4, 4]
length(C_list) = 68
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [11, 4, 7, 9, 4, 6, 4, 6, 4, 72, 4, 25, 4, 6, 5, 11, 5, 12, 9, 4, 185, 4, 9, 147, 8, 9, 11, 4, 5, 8, 7, 7, 4, 12, 4, 5, 9, 68, 5, 7, 8, 6, 6, 4, 4, 5, 6, 5, 158, 6, 4, 7, 6, 295, 63, 4, 5, 5, 18, 9, 329, 5, 14, 5, 4, 5, 4, 4, 24, 6, 9, 4]
length(C_list) = 72
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 7, 9, 8, 6, 5, 3, 6, 4, 7, 6, 6, 5, 8, 9, 5, 5, 5, 5, 4, 4, 8, 4, 5, 26, 8, 9, 48, 4, 4, 8, 4, 7, 6, 6, 9, 5, 7, 4, 45, 6, 6, 5, 4, 12, 268, 4, 9, 5, 8, 16, 4, 8, 7, 4, 5, 4, 8, 124, 8, 4, 5, 4, 6, 18, 3, 7]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 5, 9, 4, 9, 4, 10, 4, 10, 5, 4, 7, 6, 9, 5, 20, 5, 4, 4, 6, 6, 93, 4, 6, 4, 9, 9, 10, 8, 4, 7, 5, 4, 6, 4, 8, 5, 5, 4, 7, 6, 12, 5, 9, 5, 4, 5, 4, 4, 4, 219, 16, 13, 8, 12, 7, 4, 6, 8, 147, 4, 4, 6, 4, 6, 4, 5, 4, 4]
length(C_list) = 73
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
termination = MathOptInterface.INFEASIBLE
objective_value = 0.010689973085453625
