┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLF82_1304
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLF82_1304
----------------------------------
number of metabolites : 1938
number of reactions : 2726
number of genes : 1302

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2726 flux variables and 5061 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 2, 16, 16, 17, 17, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 14, 13, 13, 2, 23, 81, 7, 71, 14, 11, 15, 12, 11, 11, 11, 2, 2, 6, 2, 9, 9, 2, 2, 2, 9, 6, 9, 10, 10, 9, 9, 9, 55, 7, 2, 2, 3, 11, 14, 4, 3, 4, 3, 44, 2, 6]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 2, 2, 5, 3, 5, 2, 5, 2, 2, 3, 5, 5, 4, 3, 14, 6, 3, 3, 3, 4, 3, 39, 6, 12, 3, 5, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 2, 5, 2, 3, 4, 21, 4, 4, 5, 5, 5, 6, 14, 45, 3, 48, 19]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 3, 3, 4, 5, 4, 4, 4, 6, 4, 6, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 11, 4, 5, 4, 4, 5, 2, 5, 5, 5, 5, 2, 47, 6, 26, 4, 7, 7, 8]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 6, 8, 4, 6, 7, 5, 16, 4, 9, 7, 7, 6, 5, 6, 11, 8, 10, 2, 2, 2, 12]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 63, 2, 2, 3, 3, 4, 3, 4, 3, 3, 32, 92, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 73, 24, 4, 5, 5, 4, 4, 5, 4, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 4, 3, 11, 5, 4, 5, 6, 3, 6, 6, 5, 8, 4, 10, 7, 7, 8, 5, 78]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 140, 13, 6, 3, 8, 14, 3, 3, 3, 67, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 6, 6, 6, 7, 6, 15, 15, 4, 15, 4, 15, 16, 10, 42, 4, 10, 7, 10, 10, 10, 7, 8, 15, 10, 10, 6, 72, 6, 12, 39, 11, 3, 12, 6, 11, 13, 6, 7, 4, 8, 50, 8, 8, 48, 8, 12, 8, 131, 7, 4, 4, 4, 6, 7, 6, 8, 6, 5, 7, 6, 6, 4, 6, 7, 7, 6, 6, 7, 11, 6, 7, 6, 8, 7, 6, 6, 6, 5, 8, 9, 13, 6, 6, 6, 8, 7, 7, 6, 7, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 5, 4, 139, 5, 6, 4, 9, 5, 26]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 5, 3, 17, 17, 17, 20, 31, 17, 17, 15, 5, 3, 15, 7, 4, 16, 15, 15, 4, 15, 16, 15, 4, 15, 20, 13, 13, 14, 14, 20, 13, 13, 19, 20, 19, 20, 21, 20, 19, 20, 20, 8, 4, 39, 22, 26, 5, 29, 6, 6, 20]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 6, 6, 4, 191, 5, 22, 6, 3, 4, 5, 5, 4, 6, 6, 6, 5, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 4, 4, 4, 5, 3, 8, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 9, 35, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785252058286
thermo_feasible = true
