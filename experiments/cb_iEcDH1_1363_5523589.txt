┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcDH1_1363
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcDH1_1363
----------------------------------
number of metabolites : 1949
number of reactions : 2750
number of genes : 1363

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2750 flux variables and 5109 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 24, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 13, 70, 14, 13, 14, 13, 13, 11, 11, 11, 13, 13, 14, 11, 11]
length(C_list) = 2
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 2, 3, 16, 16, 17, 16, 93, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 31, 11, 11, 11, 28]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [9, 2, 2, 16, 20, 17, 16, 17, 16, 17, 13, 13, 14, 13, 14, 13, 13, 16, 18, 47, 102, 14, 24, 14, 15, 17, 11, 12, 11, 11, 13, 13, 11, 11, 11, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 2, 16, 17, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 16, 13, 13, 18, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 16, 11, 12, 14, 106, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 17, 17, 18, 49, 22, 21, 17, 14, 14, 16, 14, 15, 14, 14, 15, 16, 14, 15, 14, 15, 14, 46, 11, 11, 11, 11, 15, 11, 11, 11, 16, 20, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 19, 17, 18, 17, 188, 17, 17, 14, 14, 15, 15, 65, 14, 14, 14, 15, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 11, 20]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 21, 4, 20, 16, 18, 16, 17, 16, 16, 13, 13, 194, 15, 30, 13, 13, 18, 14, 14, 21, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 13, 85, 15, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 3, 16, 16, 17, 19, 18, 16, 18, 13, 14, 14, 35, 17, 13, 13, 34, 13, 13, 14, 17, 13, 13, 14, 13, 48, 13, 13, 11, 11, 11, 17, 14, 11, 11, 11, 14, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 16, 16, 17, 16, 17, 16, 16, 13, 15, 14, 13, 14, 13, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 15, 15, 14, 15, 14, 14, 77, 11, 11, 11, 14, 11, 11, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 16, 17, 17, 16, 6, 16, 16, 196, 20, 14, 13, 4, 13, 13, 13, 14, 2, 13, 14, 14, 13, 3, 13, 13, 11, 11, 11, 11, 13, 11, 11, 11, 2, 36]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 17, 22]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 2, 4, 5, 5, 9, 24, 4, 10, 3, 3, 5, 4, 2, 8, 3, 4, 72]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 3, 6, 4, 7, 4, 3, 11, 3, 3, 4, 54, 53, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 3, 3, 6, 4, 2, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 4, 4, 4, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 4, 2, 13, 4, 3, 4, 3, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 5, 2, 2, 6, 4, 2, 9, 3, 6, 3, 4, 177, 24, 5, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 2, 7, 25, 2, 3, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785056586877
thermo_feasible = true
