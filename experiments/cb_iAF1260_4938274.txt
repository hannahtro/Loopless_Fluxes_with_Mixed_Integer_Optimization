ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260
----------------------------------
number of metabolites : 1668
number of reactions : 2382
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 12
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2382 flux variables and 4460 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 80, 2, 2, 3]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 4, 3, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 2, 2, 4, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 8, 7, 17, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [8, 2, 6, 8, 9, 3, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 3, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 11, 27]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [9, 22, 7, 6, 4, 9, 8, 10, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367009288755831
thermo_feasible = true
