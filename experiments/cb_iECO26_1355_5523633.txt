┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECO26_1355
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECO26_1355
----------------------------------
number of metabolites : 1965
number of reactions : 2780
number of genes : 1355

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2780 flux variables and 5169 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 17, 17, 18, 17, 19, 17, 17, 16, 14, 15, 14, 15, 14, 14, 14, 14, 14, 15, 14, 18, 14, 14, 12, 14, 12, 11, 15, 3, 11, 17, 11, 2, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 16, 19, 17, 16, 17, 16, 16, 13, 14, 14, 13, 14, 13, 13, 14, 13, 17, 13, 13, 18, 33, 14, 13, 14, 15, 11, 11, 13, 15, 13, 15, 13, 2, 11, 11, 13, 2, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 23, 15, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 2, 7, 11, 11, 11, 3, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 267, 28, 16, 16, 17, 17, 19, 19, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 171, 14, 13, 18, 11, 11, 11, 11, 13, 56, 15, 13, 2, 4, 12, 16, 15, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 20, 17, 18, 17, 23, 21, 17, 14, 14, 15, 38, 15, 14, 74, 16, 14, 26, 100, 14, 16, 14, 15, 14, 14, 14, 15, 12, 12, 12, 12, 77, 16, 12, 12, 8, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [9, 2, 2, 16, 16, 17, 16, 17, 16, 16, 13, 16, 14, 13, 16, 13, 13, 13, 14, 14, 16, 14, 13, 14, 13, 13, 15, 13, 11, 11, 11, 11, 16, 6, 6, 111, 11, 11, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 19, 20, 17, 17, 30, 16, 16, 13, 13, 17, 13, 14, 13, 13, 14, 14, 16, 18, 16, 13, 13, 14, 13, 14, 13, 14, 11, 11, 60, 16, 13, 7, 19, 11, 11, 11, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 40, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13, 11, 251, 11, 11, 6, 6, 11, 11, 11, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 16, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 17, 7, 6, 12, 11, 11, 2, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 20, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 20, 13, 15, 14, 13, 14, 13, 13, 13, 11, 11, 11, 11, 6, 7, 12, 11, 15, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 2, 10, 19, 19, 20, 20, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16, 11, 11, 11, 11, 24, 6, 11, 11, 14, 6, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 16, 16, 17, 16, 20, 16, 16, 13, 13, 15, 13, 14, 13, 13, 20, 14, 114, 13, 13, 14, 14, 33, 13, 61, 14, 11, 14, 11, 185, 13, 14, 13, 6, 6, 11, 11, 11, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 8, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 91, 14, 13, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 12, 11, 11, 6, 7, 12, 11, 11, 2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 14, 14, 177, 13, 13, 15, 13, 13, 13, 15, 122, 14, 13, 13, 17, 14, 11, 12, 11, 11, 13, 3, 11, 11, 11, 3, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 102, 13, 21, 14, 13, 13, 13, 15, 13, 14, 13, 13, 14, 11, 11, 11, 11, 10, 6, 11, 19, 11, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [7, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 21, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 15, 14, 75, 6, 12, 11, 13, 8, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 7, 6, 4, 6, 4, 3, 5, 4, 6, 6, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 2, 3, 15, 3, 4, 3, 4, 5, 2, 5, 8, 6, 4, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 3, 4, 5, 7, 5, 4, 14, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 4, 2, 61, 3, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 6, 4, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 3, 9, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 5, 6, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 3, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 24
termination = MathOptInterface.OPTIMAL
objective_value = 0.982478542731569
thermo_feasible = true
