ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iPC815
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iPC815
----------------------------------
number of metabolites : 1552
number of reactions : 1961
number of genes : 815

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 98
max_cuts = 39
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1961 flux variables and 3641 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 3, 2, 2, 2, 11, 2, 2, 4, 3, 3, 4, 8, 4, 21, 4]
length(C_list) = 18
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 3, 2, 3, 4, 38, 2, 5, 38, 9, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 4, 4, 6, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 5, 5, 6, 6, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 5, 12, 4, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 5
termination = MathOptInterface.OPTIMAL
objective_value = 0.2835584432432206
thermo_feasible = true
