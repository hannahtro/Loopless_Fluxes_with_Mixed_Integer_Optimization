┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260b
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260b
----------------------------------
number of metabolites : 1668
number of reactions : 2388
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 96
max_cuts = 48
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2388 flux variables and 4472 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 16, 15, 15, 2, 2, 11, 14, 10, 11, 11, 11, 11, 11, 16, 3, 38, 39, 38, 2, 2, 2, 3, 19, 18, 18, 18, 18, 2, 3, 6, 18, 18, 15, 31, 16, 15, 7, 3, 15, 15, 15, 2, 15, 15, 3, 16, 16, 17, 2]
length(C_list) = 48
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 2, 3, 7, 3, 4, 2, 3, 3, 167, 5, 2, 54, 7, 3, 7, 4, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 3, 2, 4, 5, 3, 4, 4, 7, 5, 6, 4, 4, 4, 4, 4, 8, 3, 4, 6, 4, 4, 4, 4, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 3, 6, 3, 5, 5, 4, 4, 4, 7, 6, 6, 13, 3, 4, 7, 5, 5, 4, 7, 4, 6, 8, 8, 19, 5, 8, 7, 5, 34, 3, 5, 15, 3, 5, 6, 2, 5, 3, 4, 4, 11, 4, 6, 4, 6, 209, 5, 5, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 15, 4, 8, 14, 9, 3, 3, 10]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 3, 4, 6, 4, 4, 4, 6, 4, 4, 4, 5, 6, 151, 5, 4, 8, 8, 4, 5, 5, 5, 13, 6, 4, 8, 6, 4, 6, 5, 6, 5, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4, 8, 5, 6, 4, 5, 6, 9, 6, 6, 6, 12, 6, 28]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 3, 6, 7, 6, 5, 3, 6, 6, 5, 14, 4, 4, 4, 5, 15, 4, 3, 4, 6, 4, 5, 7, 6, 6, 8, 6, 4, 4, 4, 4, 3, 7, 3, 6, 4, 4, 6, 5, 4, 4, 29, 5, 10, 5, 4, 5, 12]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 5, 3, 4, 6, 12, 3, 5, 5, 3, 4, 4, 7, 6, 7, 4, 4, 11, 3, 5, 5, 5, 2, 3, 21, 5, 4, 14, 12, 39, 3, 5, 9, 5, 4, 7, 6, 4, 5, 16, 4, 6, 16, 5, 16, 4, 3, 16, 7, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [13, 13, 3, 4, 8, 8, 4, 10, 10, 6, 10, 10, 10, 10, 12, 5, 17, 4, 8, 16, 9, 9, 3, 11, 8, 10, 16, 16, 6, 7, 9, 9, 8, 7, 6, 8, 10, 11, 10, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 13, 3, 149]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 6, 4, 5, 5, 155, 5, 4, 4, 4, 4, 6, 4, 4, 12]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367010443774286
thermo_feasible = true
