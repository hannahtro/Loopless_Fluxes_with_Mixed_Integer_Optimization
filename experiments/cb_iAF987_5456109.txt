ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF987
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF987
----------------------------------
number of metabolites : 1109
number of reactions : 1285
number of genes : 987

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 64
max_cuts = 6
(indicator, big_m) = (false, true)
BIG M ADDED
model with 1285 flux variables and 2473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 5, 3, 4, 7, 7, 14, 5, 8, 5, 57, 4, 4]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 60, 172, 5, 5, 15, 5, 7, 6, 5, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 16, 22, 12, 9, 7, 211, 225]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 25, 122, 6, 6, 10, 10, 6, 6, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 5
termination = MathOptInterface.OPTIMAL
objective_value = 0.046450564184756224
thermo_feasible = true
