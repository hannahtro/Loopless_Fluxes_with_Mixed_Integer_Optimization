┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcSMS35_1347
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcSMS35_1347
----------------------------------
number of metabolites : 1947
number of reactions : 2746
number of genes : 1347

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2746 flux variables and 5101 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 3, 6, 2, 2, 4, 3, 2, 9, 4, 4, 2, 2, 2, 5, 35, 4, 3, 3, 2, 2, 62, 3, 2, 5, 3, 4, 3, 2, 3, 3, 3, 2, 2, 6, 3, 3]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 3, 3, 3, 4, 2, 3, 3, 4, 3, 4, 10, 4, 4, 3, 4, 3, 4, 2, 4, 4, 3, 3, 2, 9, 4, 4, 5, 3, 4, 6, 6, 3, 4, 8, 5, 4, 108, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 5, 5, 2, 5, 4, 4, 4, 4, 4, 8, 134, 23, 18, 118, 5, 16, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 25, 3, 5, 3, 4, 4, 3, 86, 11, 7, 6, 6, 3, 4, 5, 7, 7, 6, 41, 7, 8, 108, 4, 9, 6, 7, 6, 7, 4, 38]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4, 4, 2, 4, 7, 8, 4, 26, 14, 3, 5, 5, 3, 5, 2, 5, 3, 8, 4, 5, 148, 4, 15, 3, 5, 4, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 86, 5, 15, 3, 4, 4, 4, 9, 8, 5, 3, 7, 40, 10, 12, 18, 49, 6, 7, 41, 4, 5, 4, 4, 6, 15, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 2, 2, 3, 3, 6, 6, 6, 40, 4, 4, 9, 7, 4, 9, 9, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 9, 4, 6, 4, 73, 4, 6, 112]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 7, 71, 7, 4, 6, 25, 28, 44, 7, 5, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 8, 6, 4, 9, 8, 9, 8, 4, 8, 16, 9, 8, 15, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 83, 4, 3, 5, 4, 5, 5, 6, 5, 5, 3, 8, 7, 6, 3, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660085
thermo_feasible = true
