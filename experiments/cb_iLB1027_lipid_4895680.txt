┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 10
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 66, 4, 8, 6, 4, 297, 3, 4, 10, 5, 7, 12, 3, 8, 4, 4, 28, 15, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 77, 35, 3, 3, 45, 3, 184, 3, 4, 32, 4, 3, 3, 9, 3, 4, 4, 20, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 18, 5, 3, 9, 4, 7, 32, 4, 5, 4, 4, 4, 7, 5, 6, 3, 20, 84, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 18, 4, 84, 10, 4, 8, 3, 3, 6, 4, 17, 10, 7, 4, 4, 3, 4, 20, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 4, 4, 4, 22, 5, 6, 4, 4, 7, 4, 4, 5, 5, 288, 4, 3, 3, 22, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 19, 4, 3, 11, 3, 5, 6, 4, 6, 48, 37, 4, 5, 10, 4, 4, 4, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 4, 88, 4, 547, 172, 4, 37, 5, 4, 4, 23, 5, 17, 4, 4, 4, 6, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 18, 4, 4, 4, 4, 5, 3, 4, 63, 4, 3, 23, 6, 4, 4, 4, 4, 36, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 52, 3, 65, 3, 4, 44, 4, 4, 4, 5, 4, 4, 4, 43, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 35, 4, 4, 77, 4, 9, 3, 13, 4, 4, 4, 64, 16, 63, 4, 3, 4, 24, 30, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 19, 4, 4, 6, 3, 5, 5, 4, 12, 4, 4, 4, 5, 4, 5, 4, 4, 36, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 19, 6, 4, 25, 4, 5, 4, 4, 30, 3, 4, 55, 6, 55, 3, 3, 182, 27, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 48, 4, 46, 4, 5, 305, 4, 624, 324, 4, 9, 4, 8, 4, 5, 4, 4, 4, 55, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 9, 4, 47, 4, 61, 50, 4, 32, 3, 4, 3, 5, 3, 3, 5, 4, 24, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 5, 5, 4, 3, 4, 5, 4, 4, 55, 3, 3, 4, 5, 4, 3, 5, 5, 46, 8, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 12, 3, 21, 4, 63, 3, 6, 61, 7, 61, 6, 3, 4, 5, 7, 4, 9, 95, 21, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 13, 3, 32, 13, 7, 33, 3, 364, 63, 13, 29, 3, 5, 9, 5, 4, 3, 5, 20, 7, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 13, 3, 3, 4, 4, 3, 4, 5, 75, 4, 3, 3, 4, 3, 233, 4, 5, 4, 3, 10, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 3, 4, 8, 5, 5, 5, 31, 3, 3, 3, 5, 3, 4, 8, 22, 9, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 6, 42, 37, 3, 5, 11, 3, 5, 4, 5, 9, 10, 5, 17, 5, 4, 3, 9, 13, 35, 4, 17]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 13, 4, 19, 52, 4, 4, 3, 5, 4, 4, 21, 4, 4, 4, 5, 5, 3, 3, 20, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 46, 3, 8, 34, 4, 27, 3, 4, 3, 5, 4, 4, 3, 3, 20, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 50, 4, 4, 58, 7, 5, 4, 4, 4, 4, 4, 4, 5, 8, 4, 3, 22, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 6, 14, 4, 3, 3, 35, 5, 5, 28, 4, 28, 11, 3, 7, 23, 3, 7, 9, 20, 8, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 34, 7, 45, 5, 5, 19, 3, 30, 3, 4, 5, 5, 4, 4, 3, 4, 71, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 3, 3, 30, 4, 6, 5, 4, 3, 5, 4, 3, 5, 4, 4, 3, 4, 22, 4, 25]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 8, 370, 33, 4, 4, 3, 4, 6, 26, 12, 25, 3, 3, 3, 5, 8, 3, 3, 4, 20, 27, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 3, 93, 19, 4, 6, 14, 6, 5, 41, 13, 40, 3, 6, 6, 175, 6, 4, 3, 4, 20, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 3, 438, 4, 4, 5, 206, 5, 820, 531, 4, 152, 8, 12, 197, 6, 4, 4, 4, 29, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 42, 3, 3, 4, 3, 5, 45, 3, 28, 3, 4, 3, 325, 4, 4, 4, 4, 20, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 3, 4, 3, 6, 4, 4, 3, 11, 3, 3, 7, 272, 4, 4, 4, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 18, 4, 4, 3, 4, 5, 4, 4, 58, 4, 3, 4, 5, 3, 4, 4, 5, 24, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [5, 20, 5, 3, 7, 3, 37, 3, 5, 32, 4, 31, 3, 40, 5, 4, 8, 4, 20, 3, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 11, 4, 4, 5, 3, 5, 23, 3, 4, 4, 4, 4, 8, 4, 3, 3, 16, 3, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 55, 6, 3, 54, 4, 5, 5, 3, 19, 3, 3, 4, 361, 353, 3, 11, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 18, 3, 6, 61, 3, 5, 34, 4, 66, 7, 4, 6, 5, 6, 11, 4, 3, 26, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 6, 56, 3, 5, 82, 4, 28, 4, 4, 15, 173, 15, 8, 11, 3, 22, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [6, 37, 3, 20, 6, 3, 9, 3, 9, 5, 4, 8, 3, 3, 6, 5, 5, 8, 55, 6, 20, 14, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 5, 7, 6, 3, 16, 361, 4, 7, 3, 6, 13, 6, 4, 6, 3, 3, 6, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 44, 3, 4, 67, 6, 346, 44, 3, 6, 6, 4, 3, 6, 4, 8, 3, 4, 57, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 4, 3, 4, 5, 6, 4, 3, 11, 5, 4, 4, 5, 248, 11, 4, 3, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 39, 4, 4, 4, 5, 34, 3, 4, 4, 4, 3, 5, 4, 4, 5, 4, 3, 17, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [5, 14, 4, 36, 19, 3, 4, 6, 5, 4, 4, 18, 3, 4, 5, 5, 4, 7, 4, 30, 182, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 7, 3, 30, 3, 4, 6, 35, 8, 23, 3, 4, 3, 5, 13, 6, 13, 4, 6, 8, 22, 187, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 4, 4, 4, 4, 6, 4, 4, 38, 3, 3, 4, 6, 4, 5, 3, 11, 22, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 6, 4, 4, 11, 4, 7, 3, 5, 28, 4, 8, 198, 6, 7, 4, 23, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 6, 13, 39, 4, 3, 3, 4, 7, 29, 9, 3, 3, 6, 4, 6, 6, 3, 7, 23, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 3, 6, 3, 36, 6, 6, 29, 3, 28, 13, 6, 8, 6, 8, 8, 6, 20, 3, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 17, 4, 4, 4, 3, 5, 3, 3, 18, 4, 4, 4, 68, 4, 4, 4, 7, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 33, 4, 4, 4, 4, 7, 4, 4, 25, 4, 5, 4, 9, 4, 3, 4, 4, 43, 4, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 3, 3, 4, 4, 3, 18, 4, 4, 4, 180, 4, 93, 5, 4, 4, 4, 3, 22, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 4, 3, 6, 6, 7, 3, 28, 4, 4, 6, 405, 10, 3, 3, 3, 20, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 101, 5, 3, 6, 7, 30, 4, 6, 37, 5, 30, 4, 3, 9, 6, 6, 6, 21, 51, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 72, 10, 3, 45, 4, 7, 34, 8, 4, 6, 4, 4, 17, 4, 8, 8, 3, 30, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 4, 3, 3, 3, 3, 6, 3, 3, 6, 3, 9, 634, 132, 5, 8, 3, 3, 20, 13, 18]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [8, 81, 6, 8, 3, 5, 11, 8, 6, 4, 7, 51, 6, 4, 53, 6, 4, 8, 10, 53, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 4, 4, 8, 25, 3, 5, 3, 31, 3, 6, 35, 4, 6, 6, 6, 52, 9, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 19, 4, 3, 4, 3, 6, 54, 4, 18, 3, 156, 5, 336, 4, 4, 4, 44, 6, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [13, 4, 11, 3, 4, 3, 8, 6, 6, 3, 6, 27, 8, 3, 13, 6, 12, 3, 3, 22, 5, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 18, 3, 4, 3, 3, 5, 4, 4, 4, 3, 4, 74, 4, 4, 3, 3, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 3, 3, 4, 4, 6, 4, 4, 3, 3, 3, 4, 5, 4, 3, 4, 3, 36, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [16, 4, 6, 6, 3, 4, 46, 4, 6, 3, 8, 4, 6, 3, 16, 4, 4, 3, 4, 20, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 8, 4, 6, 32, 4, 6, 29, 3, 50, 3, 6, 13, 12, 5, 4, 3, 26, 20, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 3, 3, 3, 3, 5, 54, 5, 4, 4, 3, 6, 4, 4, 4, 4, 37, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 22, 4, 3, 5, 3, 6, 4, 227, 73, 4, 7, 3, 11, 3, 43, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 3, 12, 18, 6, 6, 13, 6, 7, 4, 6, 7, 4, 6, 13, 6, 19, 8, 3, 6, 20, 11, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 18, 11, 3, 6, 3, 6, 7, 4, 4, 6, 3, 4, 6, 6, 7, 11, 9, 6, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 3, 4, 4, 7, 4, 4, 28, 3, 4, 3, 370, 4, 3, 4, 4, 20, 8, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 20, 4, 7, 3, 4, 5, 4, 7, 4, 4, 4, 3, 553, 3, 4, 4, 3, 550, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 3, 4, 3, 4, 118, 164, 3, 4, 4, 4, 3, 4, 9, 4, 4, 6, 4, 11, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 34, 3, 5, 3, 4, 57, 24, 3, 19, 4, 4, 3, 6, 4, 8, 29, 3, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 19, 3, 3, 3, 4, 7, 5, 4, 40, 3, 3, 7, 6, 3, 8, 10, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 17, 4, 18, 4, 3, 33, 4, 6, 5, 4, 23, 10, 8, 18, 6, 14, 8, 8, 3, 24, 3, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 6, 14, 4, 7, 13, 6, 24, 3, 3, 6, 8, 25, 3, 3, 20, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 3, 8, 4, 6, 5, 3, 3, 3, 7, 6, 8, 3, 4, 9, 4, 45, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 53, 4, 6, 3, 3, 6, 38, 3, 30, 3, 6, 12, 6, 12, 4, 8, 58, 8, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 6, 3, 6, 63, 3, 7, 62, 9, 64, 22, 3, 13, 10, 13, 128, 4, 3, 5, 10, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [45, 3, 4, 18, 4, 4, 3, 20, 51, 4, 3, 7, 3, 3, 3, 5, 3, 3, 3, 3, 20, 38, 13]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 60, 3, 3, 39, 4, 6, 47, 5, 24, 4, 4, 3, 258, 5, 3, 3, 22, 7, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 4, 6, 6, 3, 3, 27, 8, 3, 4, 5, 6, 4, 3, 4, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 53, 3, 3, 22, 6, 24, 54, 3, 25, 3, 8, 3, 5, 3, 3, 4, 5, 48, 83, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 15, 4, 3, 3, 4, 7, 41, 4, 26, 7, 4, 3, 7, 4, 4, 4, 3, 20, 5, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 6, 3, 4, 28, 6, 6, 24, 4, 3, 3, 8, 6, 8, 510, 4, 3, 19, 4, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 3, 4, 4, 6, 4, 4, 4, 4, 4, 4, 6, 3, 3, 3, 4, 6, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [25, 3, 5, 18, 4, 4, 4, 26, 6, 20, 4, 27, 4, 3, 4, 6, 3, 4, 4, 29, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 3, 22, 12, 4, 3, 24, 3, 3, 12, 8, 3, 130, 3, 45, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 18, 3, 4, 4, 159, 20, 8, 627, 4, 3, 6, 3, 6, 3, 22, 22, 4, 85]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 4, 3, 4, 6, 4, 3, 4, 16, 3, 4, 6, 4, 4, 3, 4, 4, 13, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 13, 5, 4, 4, 4, 6, 3, 4, 4, 4, 6, 3, 6, 6, 3, 3, 3, 4, 3, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 3, 3, 3, 3, 3, 104, 25, 4, 8, 4, 6, 3, 4, 4, 3, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 3, 4, 4, 4, 4, 5, 25, 5, 26, 3, 3, 4, 193, 3, 3, 3, 23, 31]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 20, 3, 9, 35, 3, 6, 3, 3, 29, 3, 4, 4, 7, 3, 6, 4, 4, 21, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 19, 19, 3, 22, 3, 513, 21, 3, 54, 3, 4, 4, 6, 4, 4, 4, 6, 22, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [3, 49, 3, 18, 4, 4, 79, 4, 5, 21, 4, 4, 4, 4, 38, 6, 3, 4, 20, 29, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 52, 4, 15, 3, 3, 8, 74, 4, 34, 21, 9, 50, 5, 52, 4, 455, 5, 38, 4, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 8, 3, 105, 4, 5, 4, 129, 4, 4, 3, 6, 4, 4, 266, 5, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 3, 6, 7, 3, 9, 154, 30, 4, 31, 4, 6, 7, 6, 3, 6, 12, 20, 7, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 13, 6, 3, 3, 6, 3, 4, 3, 3, 3, 283, 6, 4, 120, 4, 18, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 24, 3, 3, 3, 4, 48, 25, 4, 3, 4, 4, 4, 440, 4, 4, 3, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 59, 3, 3, 31, 3, 6, 50, 90, 30, 4, 4, 4, 6, 4, 4, 6, 37, 3, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 6, 3, 3, 4, 3, 5, 4, 3, 4, 4, 4, 5, 4, 5, 4, 3, 4, 21, 33]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 3, 3, 4, 42, 3, 5, 46, 3, 43, 4, 4, 4, 5, 3, 3, 4, 4, 50, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 45, 4, 3, 37, 4, 6, 39, 4, 34, 33, 4, 3, 6, 3, 4, 4, 3, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 4, 17, 38, 320, 6, 53, 3, 38, 3, 3, 3, 53, 6, 4, 3, 4, 4, 7, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 18, 4, 4, 3, 4, 7, 19, 3, 28, 3, 4, 4, 17, 4, 4, 4, 4, 23, 4, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 8, 39, 4, 7, 35, 6, 42, 4, 3, 3, 6, 3, 8, 417, 22, 7, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [8, 12, 4, 9, 3, 3, 5, 3, 7, 4, 3, 4, 4, 10, 3, 70, 5, 4, 3, 11, 4, 3, 13]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 17, 3, 3, 3, 5, 6, 15, 6, 14, 221, 127, 611, 6, 4, 4, 3, 4, 3, 4, 11]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 10, 4, 5, 4, 3, 6, 4, 3, 13, 3, 58, 4, 6, 3, 4, 4, 3, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 24, 6, 3, 3, 6, 3, 6, 6, 3, 19, 3, 4, 5, 6, 4, 3, 17, 135, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [18, 4, 3, 16, 3, 3, 4, 4, 6, 4, 3, 26, 3, 3, 3, 6, 3, 4, 3, 24, 3, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 4, 3, 7, 7, 3, 3, 3, 6, 5, 10, 3, 4, 4, 3, 3, 23, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 60, 3, 12, 6, 6, 5, 3, 6, 29, 5, 24, 6, 3, 11, 209, 6, 23, 3, 5, 51, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 3, 4, 4, 554, 4, 3, 15, 3, 4, 3, 5, 5, 12, 3, 4, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 15, 5, 4, 47, 3, 7, 25, 4, 24, 3, 3, 14, 515, 5, 4, 4, 46, 206, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 20, 3, 4, 26, 5, 5, 15, 3, 4, 7, 4, 5, 5, 3, 38, 46, 7, 66, 670, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 31, 4, 3, 4, 4, 6, 13, 3, 5, 3, 4, 4, 5, 5, 10, 3, 3, 16, 6, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 3, 3, 5, 3, 5, 66, 5, 50, 3, 4, 3, 5, 4, 3, 46, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [31, 6, 3, 17, 4, 3, 3, 4, 6, 4, 3, 20, 3, 5, 4, 6, 6, 4, 6, 5, 15, 11, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 18, 4, 6, 4, 3, 6, 24, 5, 4, 6, 8, 74, 8, 106, 4, 3, 36, 3, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 27, 4, 60, 17, 6, 71, 3, 59, 5, 13, 4, 9, 6, 8, 4, 71, 6, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 18, 6, 4, 3, 10, 6, 3, 4, 30, 4, 4, 7, 6, 3, 4, 3, 4, 24, 93, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 3, 3, 3, 6, 6, 4, 4, 4, 3, 4, 11, 7, 6, 8, 4, 6, 4, 6, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 5, 6, 490, 6, 538, 4, 3, 4, 4, 3, 10, 5, 3, 3, 3, 6, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 18, 3, 6, 15, 10, 6, 32, 8, 28, 3, 6, 56, 8, 56, 5, 3, 20, 20, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 18, 3, 3, 49, 3, 314, 20, 3, 3, 3, 3, 6, 8, 33, 6, 4, 19, 6, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 12, 3, 4, 3, 6, 4, 4, 6, 3, 5, 4, 4, 8, 7, 6, 69, 6, 3, 22, 7, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 16, 3, 3, 6, 4, 98, 3, 3, 3, 4, 104, 4, 6, 3, 4, 6, 3, 3, 8, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 6, 3, 3, 3, 4, 3, 292, 3, 4, 4, 5, 4, 4, 8, 3, 4, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 5, 489, 4, 6, 8, 4, 4, 3, 4, 3, 3, 8, 6, 3, 3, 3, 3, 3, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 8, 3, 6, 3, 3, 6, 54, 6, 64, 36, 8, 4, 6, 8, 21, 6, 43, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [5, 5, 11, 18, 4, 8, 11, 3, 6, 4, 3, 16, 4, 3, 6, 7, 4, 8, 6, 3, 4, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 5, 103, 3, 4, 5, 6, 4, 4, 3, 3, 4, 3, 5, 4, 3, 4, 20, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 5, 6, 8, 6, 3, 4, 6, 15, 6, 376, 13, 4, 9, 3, 7, 4, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 16, 4, 4, 8, 3, 41, 18, 3, 17, 3, 3, 4, 27, 4, 3, 5, 10, 74, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 4, 3, 4, 3, 6, 7, 3, 4, 34, 8, 6, 3, 6, 4, 4, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [6, 15, 236, 4, 3, 4, 4, 8, 4, 46, 7, 4, 8, 16, 7, 8, 507, 3, 5, 6, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 3, 4, 3, 4, 3, 158, 3, 3, 3, 3, 14, 5, 31, 4, 8, 6, 3, 6, 3, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 13, 3, 3, 4, 3, 5, 15, 3, 28, 4, 6, 15, 3, 5, 5, 4, 46, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 4, 4, 60, 4, 13, 4, 6, 3, 5, 4, 6, 5, 4, 3, 3, 22, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 32, 6, 3, 50, 3, 504, 24, 3, 111, 6, 4, 6, 3, 4, 6, 5, 9, 17, 12]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 3, 3, 3, 5, 4, 107, 3, 3, 3, 4, 89, 3, 6, 4, 3, 3, 5, 11]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 5, 5, 3, 29, 3, 16, 3, 4, 7, 4, 3, 4, 8, 4, 8, 7, 3, 20, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 6, 5, 7, 4, 3, 6, 4, 3, 10, 3, 8, 4, 7, 3, 4, 3, 20, 4, 10]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 3, 3, 51, 4, 6, 56, 3, 4, 3, 3, 10, 7, 3, 3, 3, 3, 18, 53, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [3, 22, 3, 3, 4, 4, 3, 5, 608, 3, 3, 56, 5, 3, 3, 6, 6, 3, 3, 8, 48, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 22, 5, 4, 4, 9, 6, 24, 11, 17, 3, 3, 4, 5, 6, 3, 3, 4, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 3, 4, 5, 3, 17, 3, 3, 3, 3, 13, 6, 7, 4, 3, 3, 3, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 18, 4, 3, 4, 3, 309, 19, 4, 5, 59, 10, 4, 6, 4, 3, 3, 4, 4, 33, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 14, 4, 3, 6, 6, 348, 3, 4, 3, 3, 20, 11, 11, 119, 110, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 17, 4, 24, 4, 10, 4, 4, 4, 4, 5, 9, 166, 4, 3, 4, 30, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [6, 14, 3, 18, 6, 6, 404, 9, 6, 3, 25, 90, 8, 115, 6, 8, 6, 3, 8, 19, 4, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 3, 3, 4, 4, 7, 5, 3, 8, 5, 4, 6, 7, 4, 4, 18, 32, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 4, 4, 5, 3, 7, 4, 3, 3, 3, 3, 7, 3, 8, 3, 3, 4, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 24, 3, 3, 3, 3, 7, 38, 6, 4, 4, 4, 7, 4, 4, 57, 11, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 8, 3, 3, 3, 7, 8, 4, 3, 4, 7, 4, 4, 49, 5, 3, 4, 5, 13, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [12, 5, 8, 4, 3, 3, 3, 3, 7, 4, 3, 3, 4, 3, 4, 7, 3, 4, 3, 4, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 6, 3, 7, 4, 3, 6, 9, 11, 31, 7, 6, 11, 43, 8, 4, 3, 6, 12, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 16, 3, 3, 3, 3, 7, 6, 3, 27, 6, 4, 69, 10, 72, 3, 4, 25, 6, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [6, 68, 4, 15, 3, 4, 4, 3, 7, 4, 4, 5, 4, 3, 4, 7, 4, 3, 5, 8, 4, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 18, 3, 5, 3, 4, 6, 21, 4, 3, 6, 3, 3, 6, 4, 4, 3, 20, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777570286
