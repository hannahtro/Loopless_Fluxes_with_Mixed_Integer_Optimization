ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 186
max_cuts = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2, 4, 6, 2, 4, 4, 2, 15, 190, 3, 4, 31, 5, 4, 8, 4, 3, 4, 2, 6, 5, 7, 16, 4, 4, 6, 5, 6, 2, 4, 3, 4, 5, 3]
length(C_list) = 62
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 4, 2, 11, 4, 52, 3, 12, 3, 3, 233, 17, 5, 4, 4, 2, 3, 4, 3, 4, 2, 52, 35, 9, 4, 3, 3, 2, 7, 4, 7, 3, 5, 2, 75, 3, 235, 85, 2, 169, 4, 11, 145, 4, 4, 4, 2, 7, 11, 5, 7, 11, 70, 3, 13, 15, 3, 15, 4, 4, 74, 5, 4, 7, 3, 6, 5, 4, 5, 3, 4, 4, 4, 18, 4, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 2, 2, 7, 5, 4, 4, 10, 3, 4, 3, 4, 3, 2, 4, 2, 4, 3, 4, 10, 5, 3, 2, 3, 7, 4, 4, 3, 2, 4, 15, 4, 5, 4, 2, 39, 6, 4, 4, 4, 4, 28, 3, 9, 3, 7, 3, 5, 301, 4, 22, 105, 5, 325, 3, 5, 4, 3, 7, 5, 279, 6, 8, 5, 3, 5, 2]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 3, 7, 4, 6, 6, 3, 5, 3, 2, 4, 7, 7, 3, 5, 2, 5, 4, 4, 3, 4, 4, 5, 2, 3, 5, 5, 4, 3, 4, 15, 4, 2, 3, 4, 4, 3, 4, 5, 13, 7, 7, 214, 5, 4, 5, 6, 4, 5, 3, 3, 6, 4, 3, 4, 4, 4, 4, 2, 3, 3, 5, 6, 3, 3, 6, 253, 5, 2, 4, 4, 5, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 154, 2, 3, 7, 3, 5, 10, 4, 3, 5, 3, 5, 3, 5, 4, 5, 8, 4, 5, 5, 4, 5, 5, 6, 5, 7, 6, 3, 5, 3, 5, 6, 2, 5, 3, 112, 9, 7, 5, 5, 7, 4, 3, 8, 6, 4, 7, 3, 6, 7, 4, 4, 4, 4, 4, 4, 4, 3, 7, 9, 4, 6, 4, 5, 9, 4, 5, 4, 3, 4, 58, 12, 4, 7, 6, 4, 7, 9, 14, 26, 2, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 4, 5, 4, 6, 4, 3, 5, 10, 6, 8, 11, 2, 3, 4, 9, 78, 5, 6, 7, 3, 4, 7, 5, 4, 4, 4, 4, 8, 4, 6, 7, 7, 6, 5, 7, 374, 8, 9, 5, 3, 7, 49, 5, 6, 4, 15, 8, 6, 7, 9, 5, 5, 5, 5, 4, 7, 8, 5, 53, 6, 3, 7, 14, 3, 5, 7, 4, 9, 4, 5, 3, 5, 4, 10, 4, 9, 6, 5, 9, 7, 3, 16, 4, 9, 5, 7, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 3, 4, 4, 7, 5, 5, 6, 5, 5, 5, 3, 8, 9, 13, 6, 4, 3, 6, 4, 5, 106, 3, 7, 4, 4, 5, 6, 6, 3, 9, 7, 10, 3, 4, 4, 6, 4, 15, 5, 4, 6, 168, 403, 6, 4, 7, 7, 5, 4, 6, 3, 5, 5, 5, 6, 3, 4, 8, 5, 6, 4, 6, 6, 5, 5, 4, 8, 6, 40, 257, 4, 3, 5, 5, 10, 4, 7, 7, 8, 5, 4, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 3, 4, 6, 5, 4, 3, 3, 5, 7, 4, 4, 6, 3, 3, 7, 20, 6, 504, 6, 12, 5, 7, 6, 8, 8, 6, 6, 11, 3, 8, 6, 2, 6, 7, 5, 27, 4, 16, 9, 4, 11, 5, 7, 3, 4, 5, 5, 7, 22, 5, 3, 6, 3, 4, 5, 5, 4, 7, 3, 4, 4, 4, 16, 5, 3, 5, 5, 5, 4, 3, 9, 4, 111, 7, 32]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 6, 4, 8, 8, 35, 10, 7, 8, 6, 4, 12, 19, 3, 11, 11, 7, 19, 3, 17, 6, 5, 7, 4, 4, 57, 4, 10, 6, 12, 5, 3, 10, 4, 10, 5, 4, 11, 4, 7, 8, 5, 7, 8, 4, 7, 7, 4, 4, 10, 14, 10, 16, 16, 16, 18, 18, 3, 18, 227, 8, 5, 156, 7, 5, 4, 6, 8, 11, 5, 9, 5, 9, 6, 4, 7, 3, 4, 4, 5, 4, 11, 9, 5, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 4, 4, 12, 4, 10, 3, 127, 4, 5, 3, 382, 6, 3, 4, 8, 3, 4, 3, 4, 3, 4, 4, 11, 8, 24, 4, 3, 3, 4, 4, 4, 3, 5, 4, 4, 8, 4, 11, 3, 9, 8, 3, 4, 5, 4, 5, 8, 5, 5, 102, 4, 13, 19, 12, 21, 13, 12, 7, 4, 9, 12, 4, 4, 3, 4, 4, 25, 10, 4, 4, 15, 8, 7, 5, 8, 15, 3, 4, 6, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [10, 140, 8, 9, 3, 4, 10, 4, 8, 4, 3, 196, 9, 9, 4, 6, 6, 4, 81, 3, 3, 5, 12, 4, 7, 10, 4, 4, 6, 23, 5, 4, 4, 9, 4, 8, 564, 7, 4, 11, 6, 5, 3, 4, 5, 7, 6, 10, 4, 4, 4, 10, 10, 8, 11, 4, 43, 109, 8, 15, 10, 6, 12, 6, 13, 12, 5, 4, 4, 153, 11, 5, 4, 11, 4, 4, 4, 4, 4, 5, 6, 4, 4, 19, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 3, 4, 4, 4, 8, 3, 8, 4, 24, 5, 4, 7, 4, 4, 9, 3, 6, 7, 14, 3, 3, 217, 4, 6, 4, 3, 5, 42, 3, 4, 7, 8, 6, 4, 5, 7, 5, 3, 4, 6, 4, 5, 10, 3, 4, 4, 8, 62, 7, 9, 12, 4, 8, 12, 8, 11, 4, 4, 3, 5, 4, 4, 3, 10, 4, 5, 3, 4, 4, 11, 3, 8, 303, 7, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [25, 3, 123, 8, 4, 7, 6, 8, 8, 6, 6, 3, 5, 6, 3, 6, 7, 9, 12, 4, 7, 3, 7, 7, 4, 92, 8, 6, 13, 5, 8, 5, 3, 4, 6, 4, 3, 7, 5, 5, 12, 8, 6, 6, 4, 4, 7, 3, 35, 8, 4, 3, 13, 6, 4, 13, 27, 4, 48, 20, 10, 77, 10, 22, 12, 24, 8, 12, 88, 5, 5, 4, 4, 6, 10, 108, 10, 8, 6, 3, 9, 8, 4, 30, 8, 19, 6, 3]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [16, 3, 6, 5, 9, 6, 11, 6, 8, 288, 163, 4, 6, 563, 4, 6, 5, 6, 7, 7, 3, 11, 4, 4, 65, 5, 7, 4, 4, 3, 8, 386, 6, 2, 6, 4, 4, 3, 4, 9, 3, 8, 3, 6, 8, 7, 4, 12, 4, 10, 4, 4, 9, 5, 14, 4, 10, 3, 5, 3, 4, 7, 15, 8, 16, 16, 42, 18, 27, 188, 4, 3, 4, 10, 21, 4, 7, 6, 4, 8, 8, 10, 11, 12, 47, 7, 7, 4, 86, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [12, 5, 5, 6, 3, 4, 4, 3, 9, 4, 4, 4, 3, 9, 4, 4, 3, 23, 13, 5, 196, 8, 5, 5, 14, 4, 4, 6, 3, 12, 13, 134, 5, 5, 4, 10, 102, 10, 5, 8, 3, 4, 8, 8, 10, 4, 11, 10, 6, 4, 5, 9, 193, 21, 7, 2, 4, 10, 4, 4, 4, 11, 6, 9, 4, 9, 4, 5, 7, 6, 9, 314, 8]
length(C_list) = 73
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 7, 4, 4, 6, 8, 3, 10, 5, 9, 6, 4, 4, 12, 3, 8, 7, 13, 8, 3, 5, 17, 10, 4, 5, 6, 4, 7, 4, 8, 2, 7, 4, 7, 4, 6, 13, 6, 66, 8, 106, 194, 6, 3, 3, 6, 4, 4, 5, 5, 4, 7, 21, 10, 102, 6, 103, 7, 4, 34, 3, 6, 11, 8, 8, 5, 57, 8, 4, 353, 6, 7, 6, 3, 217, 71, 10, 11, 6, 6, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 3, 26, 3, 4, 9, 4, 4, 8, 13, 5, 4, 5, 10, 6, 9, 11, 5, 9, 98, 7, 4, 5, 10, 12, 5, 6, 5, 4, 4, 7, 9, 4, 4, 6, 7, 6, 12, 6, 8, 3, 5, 5, 4, 12, 4, 6, 6, 8, 3, 11, 5, 4, 5, 5, 7, 10, 6, 8, 9, 7, 8, 5, 8, 12, 75, 13, 5, 12, 15, 6, 10, 12, 6, 4, 12, 4, 99, 11, 4, 4, 4, 4, 5, 3, 7, 137, 4, 7, 9, 5, 4, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 4, 7, 7, 4, 10, 8, 3, 5, 7, 5, 8, 9, 3, 7, 12, 7, 6, 4, 192, 6, 58, 10, 14, 7, 5, 3, 8, 12, 8, 7, 4, 7, 5, 5, 4, 8, 3, 5, 7, 11, 5, 4, 314, 31, 9, 4, 8, 5, 6, 4, 7, 31, 12, 19, 6, 4, 10, 15, 8, 18, 7, 9, 8, 14, 6, 9, 9, 14, 6, 4, 6, 15, 4, 55, 4, 7, 4, 3, 7, 4, 5, 5, 6, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [13, 3, 5, 3, 8, 3, 10, 3, 10, 9, 4, 7, 4, 3, 5, 4, 5, 6, 3, 4, 5, 4, 3, 10, 4, 5, 3, 5, 10, 6, 7, 8, 4, 8, 10, 122, 4, 8, 7, 11, 3, 5, 6, 36, 6, 4, 34, 3, 9, 8, 4, 6, 7, 16, 12, 3, 6, 9, 3, 11, 6, 6, 5, 3, 7, 11, 5, 5, 7, 4, 3, 4, 9, 5, 10, 7, 6, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 14, 12, 5, 6, 7, 10, 8, 7, 10, 236, 11, 7, 18, 18, 3, 8, 12, 9, 3, 3, 8, 29, 9, 3, 8, 4, 3, 9, 7, 73, 8, 20, 7, 8, 9, 5, 3, 10, 9, 3, 7, 7, 3, 8, 4, 6, 11, 9, 200, 8, 10, 10, 11, 7, 10, 8, 7, 16, 8, 364, 15, 10, 8, 21, 21, 22, 10, 4, 5, 12, 5, 10, 13, 51, 7, 6, 5, 4, 9, 10, 10, 5, 6, 6, 127, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [16, 3, 6, 7, 4, 4, 11, 11, 5, 3, 5, 10, 4, 8, 12, 3, 6, 6, 7, 7, 6, 5, 6, 3, 10, 6, 12, 9, 7, 5, 7, 8, 11, 4, 9, 6, 9, 5, 4, 4, 7, 7, 9, 8, 9, 10, 9, 7, 7, 11, 17, 7, 9, 20, 6, 4, 5, 9, 17, 8, 7, 27, 6, 12, 6, 6, 13, 8, 8, 15, 11, 10, 8, 11, 8, 7, 8, 3, 3, 9, 6, 7, 7, 14, 5, 5, 6, 8, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [20, 3, 4, 8, 7, 4, 8, 7, 8, 8, 4, 11, 7, 170, 10, 273, 16, 4, 4, 8, 5, 7, 8, 5, 12, 4, 5, 4, 7, 4, 9, 6, 9, 4, 10, 9, 6, 5, 12, 8, 4, 7, 5, 6, 7, 7, 7, 6, 4, 4, 8, 5, 6, 10, 24, 8, 6, 13, 203, 84, 97, 182, 16, 19, 36, 13, 21, 25, 19, 8, 8, 16, 68, 11, 9, 10, 19, 8, 242, 6, 5, 6, 8, 239, 3, 9, 8, 6, 4, 8, 24, 173, 84, 8, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 6, 10, 4, 11, 6, 10, 18, 8, 4, 4, 13, 8, 9, 11, 6, 6, 4, 7, 4, 4, 4, 5, 6, 3, 8, 4, 4, 28, 8, 7, 7, 6, 4, 51, 3, 4, 6, 10, 6, 141, 11, 5, 9, 12, 4, 10, 8, 5, 8, 8, 9, 8, 4, 4, 5, 11, 4, 9, 15, 4, 12, 5, 5, 4, 6, 10, 6, 7, 8, 4, 6, 9, 9, 4, 6, 7, 5, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [9, 22, 6, 8, 6, 4, 12, 3, 15, 7, 6, 4, 5, 6, 6, 3, 4, 5, 5, 6, 11, 5, 8, 7, 10, 159, 4, 7, 8, 5, 6, 10, 4, 9, 6, 9, 4, 4, 3, 237, 18, 20, 6, 58, 4, 43, 6, 7, 7, 3, 4, 4, 76, 17, 5, 9, 6, 127, 7, 10, 12, 4, 10, 4, 8, 6, 6, 6, 6, 147, 5, 4, 11, 5, 7, 10, 8, 8, 4, 8, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 7, 4, 5, 7, 46, 61, 6, 5, 4, 160, 9, 4, 18, 5, 8, 4, 35, 10, 213, 7, 6, 4, 7, 4, 4, 4, 4, 4, 8, 4, 13, 3, 4, 42, 9, 611, 4, 7, 12, 6, 59, 23, 6, 4, 252, 6, 5, 4, 6, 4, 104, 3, 11, 4, 7, 6, 7, 4, 4, 7, 3, 11, 12, 7, 8, 9, 70, 12, 4, 9, 9, 4, 4, 8, 8, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 195, 7, 3, 39, 8, 6, 7, 11, 4, 7, 462, 346, 9, 17, 6, 5, 6, 113, 3, 24, 11, 6, 93, 7, 5, 30, 6, 9, 436, 4, 5, 6, 5, 7, 6, 5, 62, 4, 5, 12, 8, 7, 16, 3, 6, 8, 6, 17, 4, 6, 6, 5, 6, 5, 7, 6, 6, 7, 4, 11, 7, 4, 5, 8, 6, 6, 13, 10, 11, 62, 6, 3, 4, 4, 6, 24, 6, 5, 8, 10, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 4, 5, 6, 8, 4, 6, 6, 5, 14, 7, 18, 7, 7, 7, 7, 11, 8, 4, 11, 8, 6, 5, 5, 5, 28, 4, 9, 3, 6, 5, 6, 4, 12, 4, 7, 9, 5, 6, 7, 8, 4, 5, 5, 6, 13, 3, 139, 5, 7, 9, 6, 4, 17, 8, 8, 4, 6, 5, 7, 5, 6, 371, 6, 3, 11, 6, 8, 6, 34, 24, 4, 5, 4, 5, 6, 12, 8, 76]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 7, 4, 5, 9, 4, 6, 5, 6, 6, 3, 4, 4, 4, 3, 9, 4, 4, 10, 7, 4, 6, 12, 3, 6, 10, 12, 4, 4, 10, 8, 9, 10, 4, 10, 9, 13, 7, 8, 8, 4, 6, 6, 3, 8, 7, 4, 8, 221, 5, 4, 10, 11, 5, 4, 7, 8, 7, 9, 8, 8, 6, 6, 4, 4, 8, 5, 6, 5, 4, 12, 9, 4, 5, 4, 12, 163, 5, 5, 10, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 5, 4, 7, 3, 40, 166, 7, 4, 3, 24, 8, 6, 7, 7, 5, 6, 6, 4, 4, 4, 4, 4, 14, 6, 10, 44, 4, 6, 4, 5, 6, 5, 10, 7, 11, 4, 4, 4, 6, 6, 4, 309, 6, 6, 47, 8, 40, 3, 13, 4, 8, 7, 5, 10, 12, 8, 6, 4, 6, 4, 5, 7, 5, 4, 4, 6, 8, 4, 4, 3, 12, 8, 4, 7, 3, 6, 4, 75, 10, 18, 6, 25, 113, 6, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 6, 7, 9, 7, 4, 7, 8, 8, 13, 6, 4, 14, 7, 8, 5, 10, 10, 11, 6, 4, 4, 3, 13, 9, 4, 8, 6, 8, 3, 8, 8, 9, 11, 15, 4, 3, 11, 9, 5, 8, 3, 19, 4, 6, 9, 6, 6, 13, 10, 6, 11, 7, 9, 4, 6, 3, 7, 3, 9, 8, 10, 15, 8, 12, 6, 4, 8, 7, 7, 5, 7, 9, 12, 23, 7, 3, 11, 11, 217, 161, 8, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 8, 13, 4, 9, 4, 7, 3, 5, 5, 4, 3, 6, 4, 9, 5, 5, 13, 9, 8, 7, 10, 8, 4, 7, 156, 6, 10, 8, 8, 7, 8, 23, 13, 10, 12, 8, 3, 7, 10, 4, 7, 7, 10, 6, 83, 6, 7, 4, 9, 7, 9, 9, 8, 9, 4, 9, 7, 8, 7, 8, 5, 4, 6, 10, 8, 7, 6, 8, 4, 9, 11, 8, 6, 9, 3, 10, 5, 120, 10, 12, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 41, 8, 6, 7, 11, 7, 3, 8, 6, 4, 4, 7, 5, 8, 8, 8, 9, 4, 8, 6, 6, 7, 5, 169, 7, 4, 4, 8, 4, 8, 7, 9, 5, 8, 4, 8, 8, 6, 124, 4, 4, 9, 7, 9, 8, 10, 7, 6, 9, 7, 3, 10, 9, 3, 10, 9, 5, 6, 14, 5, 9, 10, 6, 4, 38, 9, 4, 5, 10, 13, 4, 9, 4, 5, 55, 7, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 7, 4, 16, 10, 7, 7, 14, 15, 4, 26, 3, 10, 9, 14, 8, 8, 11, 11, 7, 6, 10, 8, 3, 7, 7, 15, 9, 8, 13, 7, 16, 7, 9, 13, 9, 10, 10, 3, 4, 8, 8, 15, 473, 10, 6, 16, 16, 9, 10, 6, 9, 6, 8, 7, 8, 178, 5, 34, 4, 8, 22, 24, 22, 12, 6, 8, 11, 10, 5, 13, 6, 8, 8, 101]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 8, 8, 2, 7, 4, 9, 10, 7, 10, 11, 9, 9, 9, 4, 14, 11, 10, 8, 2, 7, 6, 10, 4, 8, 10, 10, 6, 11, 4, 8, 4, 9, 8, 7, 5, 3, 11, 4, 9, 3, 7, 10, 13, 5, 12, 4, 6, 8, 8, 7, 4, 19, 7, 5, 9, 138, 9, 42, 8, 20, 13, 9, 9, 36, 8, 8, 31, 7, 8, 7, 12, 56, 7, 13, 34, 3, 8, 9, 100, 14, 6, 30, 8, 9, 19]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 7, 165, 7, 7, 28, 6, 124, 8, 10, 6, 7, 10, 100, 8, 3, 83, 10, 4, 19, 6, 7, 11, 8, 5, 8, 8, 6, 7, 2, 10, 10, 28, 82, 6, 8, 10, 7, 11, 13, 10, 9, 8, 195, 8, 21, 11, 10, 4, 13, 5, 4, 11, 8, 4, 6, 10, 6, 7, 3, 8, 6, 4, 11, 10, 9, 213, 5, 6, 109, 6, 7, 20, 53, 14, 16, 4, 8, 13, 4, 7, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 5, 3, 4, 4, 10, 7, 11, 13, 5, 24, 5, 12, 12, 6, 11, 8, 5, 3, 8, 6, 490, 6, 18, 12, 11, 9, 142, 8, 10, 4, 7, 6, 7, 8, 8, 6, 5, 4, 5, 3, 8, 8, 5, 10, 7, 5, 7, 6, 5, 9, 21, 4, 15, 183, 7, 7, 5, 22, 4, 10, 4, 16, 4, 7, 6, 5, 43, 7, 9, 12, 8, 244, 5, 9, 12, 5, 10, 10, 9, 7, 8, 12, 11, 9, 18]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 9, 11, 5, 7, 6, 12, 9, 9, 10, 7, 4, 16, 5, 8, 7, 4, 6, 9, 7, 13, 7, 2, 9, 6, 6, 15, 6, 10, 11, 4, 9, 12, 9, 10, 16, 2, 3, 7, 8, 4, 6, 7, 8, 4, 7, 5, 5, 7, 3, 13, 4, 4, 6, 5, 8, 4, 32, 158, 9, 32, 3, 9, 9, 6, 7, 5, 7, 7, 6, 9, 8, 14, 6, 6, 10, 7, 10, 7, 17, 11, 10, 10, 3, 212, 8, 386, 15, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 6, 6, 8, 4, 9, 6, 30, 225, 7, 8, 4, 7, 8, 5, 5, 6, 6, 7, 4, 8, 6, 10, 6, 7, 7, 7, 6, 4, 4, 7, 7, 6, 8, 8, 10, 4, 6, 3, 8, 9, 9, 8, 50, 3, 5, 6, 8, 6, 9, 8, 10, 5, 5, 8, 10, 3, 16, 6, 6, 6, 4, 4, 6, 10, 7, 4, 6, 5, 13, 4, 6, 6, 6, 12, 6, 6, 6, 7, 3, 4, 3, 8, 3, 21, 246, 6, 473, 9, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 5, 6, 10, 10, 3, 4, 3, 4, 16, 4, 6, 10, 5, 4, 7, 9, 5, 4, 5, 3, 4, 3, 8, 5, 5, 416, 7, 4, 8, 6, 6, 4, 3, 8, 4, 5, 5, 5, 24, 4, 8, 3, 4, 6, 12, 3, 10, 9, 4, 4, 14, 10, 4, 5, 4, 22, 6, 8, 9, 3, 6, 7, 6, 14, 8, 35, 7, 6, 9, 6, 165, 6, 6, 10, 5, 4, 7, 5, 4, 492, 552, 2, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 3, 6, 5, 4, 49, 5, 6, 6, 12, 4, 7, 7, 31, 6, 4, 4, 7, 4, 12, 5, 5, 7, 6, 6, 8, 7, 6, 4, 9, 5, 90, 4, 3, 6, 5, 3, 6, 3, 4, 6, 11, 7, 4, 3, 3, 7, 8, 12, 5, 5, 6, 4, 7, 6, 8, 5, 6, 4, 5, 3, 4, 7, 4, 5, 5, 6, 3, 5, 7, 10, 4, 3, 6, 25, 7, 8, 5, 4, 9, 27]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 20, 7, 6, 8, 8, 2, 6, 7, 9, 6, 4, 5, 3, 10, 6, 4, 4, 10, 3, 6, 6, 7, 6, 5, 5, 7, 4, 7, 6, 8, 7, 4, 5, 7, 28, 8, 3, 3, 4, 7, 7, 8, 7, 89, 251, 6, 8, 7, 7, 3, 7, 13, 6, 4, 14, 3, 191, 7, 8, 6, 10, 7, 240, 47, 5, 121, 6, 12, 21, 21, 4, 8, 3, 5, 7, 5, 5, 7, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [25, 7, 5, 6, 13, 45, 3, 6, 25, 9, 4, 18, 9, 24, 4, 8, 8, 6, 3, 7, 4, 11, 8, 10, 9, 9, 15, 4, 7, 5, 8, 6, 6, 8, 18, 9, 5, 9, 8, 9, 9, 6, 9, 20, 6, 44, 12, 10, 16, 7, 9, 11, 8, 21, 8, 7, 10, 8, 40, 12, 6, 47, 10, 3, 6, 5, 7, 4, 6, 6, 7, 9, 7, 7, 10, 8, 25, 26, 25, 10, 8, 233, 8, 10, 6, 8, 16, 382, 26, 10, 17]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [15, 3, 8, 3, 12, 5, 7, 6, 7, 4, 3, 15, 6, 8, 7, 7, 12, 29, 6, 9, 11, 12, 8, 12, 7, 7, 11, 14, 9, 4, 4, 7, 6, 4, 6, 7, 5, 6, 13, 8, 6, 7, 4, 3, 13, 5, 4, 6, 5, 10, 9, 11, 8, 4, 6, 6, 5, 13, 7, 7, 11, 3, 5, 8, 5, 6, 4, 11, 13, 5, 173, 6, 8, 10, 9, 16, 6, 20, 11, 13, 14, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [3, 11, 8, 7, 13, 5, 9, 7, 10, 4, 248, 4, 8, 6, 5, 6, 6, 3, 3, 7, 12, 8, 18, 8, 28, 34, 5, 5, 12, 9, 4, 7, 8, 9, 8, 5, 4, 9, 12, 6, 9, 8, 7, 5, 50, 17, 3, 7, 15, 65, 7, 21, 7, 7, 8, 6, 105, 9, 5, 12, 7, 7, 10, 7, 6, 10, 4, 8, 30, 11, 11, 7, 11, 11, 10, 10, 6, 6, 12, 17]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 40, 4, 6, 8, 5, 11, 6, 10, 6, 9, 6, 5, 6, 7, 8, 5, 6, 11, 4, 4, 8, 4, 7, 5, 11, 6, 7, 7, 6, 8, 6, 16, 13, 206, 4, 7, 7, 9, 18, 9, 6, 7, 4, 5, 10, 4, 104, 11, 9, 11, 7, 10, 9, 392, 5, 3, 10, 13, 8, 15, 6, 10, 18, 9, 10, 4, 12, 19, 11, 7, 3, 111, 9, 7, 5, 7, 6, 7, 4, 7, 17, 4, 9, 6, 13, 22, 7, 175, 8, 11, 9, 7, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [5, 78, 3, 5, 4, 7, 5, 7, 7, 8, 8, 352, 10, 8, 4, 13, 8, 9, 7, 6, 5, 5, 5, 9, 5, 11, 6, 7, 6, 9, 22, 6, 11, 7, 9, 3, 4, 216, 4, 7, 7, 6, 4, 7, 18, 5, 5, 8, 7, 8, 3, 6, 10, 8, 5, 16, 210, 6, 4, 9, 4, 4, 5, 8, 6, 4, 42, 7, 9, 15, 236, 8, 5, 5, 6, 8, 8, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 7, 6, 9, 11, 12, 10, 6, 6, 4, 9, 6, 7, 10, 4, 10, 6, 5, 6, 6, 9, 6, 5, 7, 11, 6, 8, 11, 6, 10, 5, 8, 6, 64, 6, 6, 4, 10, 124, 6, 9, 131, 5, 10, 9, 4, 11, 8, 241, 8, 9, 6, 6, 10, 8, 8, 7, 7, 8, 8, 10, 8, 9, 7, 13, 7, 10, 7, 8, 9, 9, 7, 336, 6, 17, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 9, 5, 6, 13, 7, 4, 4, 4, 4, 10, 6, 6, 9, 5, 7, 10, 2, 13, 5, 4, 5, 4, 12, 13, 9, 7, 8, 4, 8, 6, 9, 10, 28, 10, 15, 5, 4, 7, 7, 10, 8, 5, 3, 11, 9, 8, 11, 8, 19, 102, 8, 6, 6, 11, 5, 17, 6, 13, 8, 8, 6, 7, 12, 7, 9, 6, 4, 4, 5, 6, 9, 6, 8, 5, 5, 10, 15, 5, 9, 9, 72, 13, 5, 8, 9, 4, 12, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 3, 7, 5, 5, 8, 6, 8, 6, 15, 7, 7, 3, 5, 5, 8, 11, 6, 5, 5, 7, 16, 273, 5, 51, 4, 14, 4, 7, 5, 7, 8, 217, 9, 8, 8, 4, 5, 31, 8, 49, 6, 7, 383, 4, 7, 4, 5, 108, 6, 6, 7, 5, 7, 4, 8, 9, 13, 9, 7, 6, 6, 12, 7, 9, 7, 9, 14, 21, 7, 26, 5, 8, 10, 20, 13, 490, 28, 5, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 12, 10, 9, 6, 12, 4, 7, 11, 4, 8, 4, 13, 14, 8, 7, 12, 7, 10, 9, 7, 6, 22, 7, 3, 3, 10, 7, 6, 7, 11, 12, 6, 4, 14, 9, 7, 9, 5, 7, 7, 9, 7, 13, 9, 3, 10, 10, 3, 11, 7, 8, 6, 11, 9, 6, 7, 6, 7, 5, 8, 11, 7, 7, 10, 7, 14, 8, 9, 8, 4, 6, 10, 12, 6, 11, 5, 8, 10, 73, 9, 14, 4, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [9, 8, 5, 9, 9, 5, 8, 8, 7, 10, 5, 9, 6, 8, 15, 5, 6, 7, 7, 7, 320, 6, 7, 6, 8, 4, 362, 61, 4, 9, 7, 59, 8, 5, 10, 10, 5, 30, 8, 9, 9, 8, 8, 9, 8, 7, 10, 4, 9, 8, 9, 7, 10, 9, 8, 5, 9, 53, 7, 9, 7, 10, 8, 4, 10, 6, 8, 8, 15, 6, 6, 12, 8, 10, 6, 11, 3, 234, 4, 6, 7, 8, 9, 7, 6, 7, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 9, 6, 6, 8, 4, 8, 11, 7, 9, 10, 4, 8, 8, 5, 8, 8, 6, 8, 9, 201, 8, 7, 61, 8, 11, 7, 6, 9, 8, 8, 8, 4, 8, 8, 8, 8, 4, 7, 9, 5, 7, 8, 10, 7, 12, 3, 7, 8, 9, 6, 13, 9, 4, 13, 31, 8, 7, 10, 10, 9, 6, 30, 3, 8, 10, 7, 4, 7, 8, 16, 10, 7, 8, 9, 5, 9, 7, 8, 11, 9, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [7, 10, 80, 6, 9, 9, 10, 8, 14, 7, 7, 7, 6, 11, 10, 6, 7, 9, 4, 9, 9, 5, 372, 9, 8, 237, 9, 8, 73, 238, 8, 3, 10, 7, 3, 9, 7, 4, 8, 10, 11, 8, 10, 11, 12, 8, 8, 10, 6, 7, 9, 39, 7, 8, 20, 7, 8, 7, 12, 14, 6, 9, 6, 31, 22, 6, 6, 216, 9, 7, 13, 7, 11, 10, 168, 8, 281, 58, 12, 7, 22, 9, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 7, 4, 4, 5, 3, 7, 10, 9, 3, 7, 5, 7, 4, 9, 5, 8, 10, 6, 4, 9, 7, 29, 6, 9, 3, 8, 60, 10, 4, 6, 7, 7, 8, 7, 9, 10, 7, 9, 5, 11, 9, 21, 7, 10, 6, 37, 8, 5, 7, 5, 4, 5, 9, 8, 10, 6, 9, 7, 8, 10, 5, 11, 4, 10, 6, 4, 6, 13, 8, 10, 8, 8, 35, 5, 15, 12, 9, 17, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [13, 7, 5, 7, 8, 8, 12, 7, 22, 4, 9, 10, 7, 7, 5, 11, 9, 6, 7, 10, 12, 7, 5, 6, 7, 10, 9, 8, 10, 27, 8, 7, 13, 9, 4, 9, 4, 7, 4, 5, 14, 87, 9, 12, 8, 5, 19, 4, 4, 8, 13, 8, 21, 6, 18, 10, 7, 8, 16, 7, 4, 7, 5, 13, 174, 156, 13, 11, 12, 9, 8, 11, 11, 7, 7, 69, 9, 7, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 8, 4, 12, 4, 5, 10, 11, 16, 11, 8, 22, 3, 8, 10, 6, 13, 9, 8, 11, 7, 7, 10, 12, 5, 12, 15, 6, 8, 7, 11, 6, 8, 9, 9, 4, 9, 10, 18, 6, 15, 4, 171, 12, 7, 9, 325, 7, 10, 6, 6, 15, 5, 6, 8, 7, 9, 10, 7, 13, 8, 57, 8, 8, 22, 8, 8, 9, 6, 8, 8, 8, 14, 9, 7, 206, 12, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 11, 8, 3, 7, 7, 50, 4, 4, 5, 6, 11, 5, 22, 14, 8, 14, 7, 10, 9, 6, 8, 6, 13, 8, 9, 9, 5, 5, 5, 8, 9, 81, 13, 6, 24, 3, 14, 3, 10, 7, 8, 10, 7, 6, 4, 19, 7, 7, 13, 6, 10, 9, 7, 4, 6, 10, 8, 22, 4, 6, 3, 5, 10, 8, 11, 4, 4, 5, 11, 7, 11, 8, 9, 4, 15, 5, 10, 5, 5, 7, 8, 12, 7, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 9, 6, 11, 5, 8, 10, 8, 9, 5, 8, 6, 7, 7, 9, 7, 11, 8, 9, 9, 8, 8, 7, 7, 7, 7, 7, 8, 5, 4, 9, 7, 7, 9, 6, 109, 9, 6, 4, 8, 9, 8, 9, 8, 6, 14, 3, 6, 7, 7, 8, 7, 8, 6, 7, 6, 10, 7, 7, 12, 6, 8, 6, 5, 11, 7, 10, 12, 8, 11, 6, 11, 6, 12, 7, 6, 8, 10, 7, 9, 10, 6, 6, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 6, 6, 7, 9, 6, 5, 11, 6, 9, 4, 9, 7, 7, 9, 13, 21, 8, 10, 5, 11, 9, 8, 4, 8, 3, 4, 8, 12, 15, 7, 37, 4, 8, 6, 7, 7, 8, 6, 8, 10, 5, 10, 12, 4, 12, 11, 5, 8, 5, 9, 8, 9, 9, 7, 5, 9, 8, 8, 10, 8, 10, 7, 43, 11, 8, 8, 5, 111, 6, 9, 15, 11, 3, 6, 7, 4, 11, 10, 3, 6, 9, 11, 7, 10, 4, 7, 222, 493, 11, 9, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [11, 10, 8, 8, 4, 7, 12, 9, 12, 4, 11, 10, 9, 12, 6, 12, 6, 9, 3, 9, 7, 7, 3, 77, 6, 14, 14, 4, 13, 7, 5, 9, 13, 12, 7, 5, 11, 7, 118, 10, 7, 5, 8, 132, 9, 8, 6, 6, 9, 102, 6, 11, 10, 10, 11, 11, 8, 9, 11, 7, 10, 7, 10, 11, 9, 8, 9, 7, 4, 10, 9, 10, 11, 18, 8, 12, 6, 9, 12, 13, 6, 5, 7, 86, 3, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [12, 3, 8, 6, 8, 10, 8, 9, 4, 9, 12, 5, 5, 6, 8, 6, 7, 4, 7, 5, 7, 7, 48, 35, 7, 94, 5, 9, 5, 20, 3, 8, 12, 8, 8, 7, 9, 8, 14, 5, 10, 6, 8, 10, 4, 5, 30, 4, 8, 10, 9, 7, 5, 7, 7, 7, 12, 7, 6, 5, 6, 11, 6, 4, 3, 12, 10, 123, 5, 9, 8, 16, 4, 8, 7, 9, 4, 5, 8, 6, 8, 12, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [10, 8, 5, 7, 4, 7, 9, 5, 6, 6, 22, 8, 9, 6, 5, 8, 4, 7, 7, 6, 12, 7, 8, 10, 10, 4, 10, 9, 6, 7, 16, 9, 6, 10, 6, 8, 29, 8, 7, 14, 10, 10, 9, 4, 10, 10, 3, 4, 12, 434, 5, 270, 279, 4, 7, 12, 8, 5, 88, 154, 5, 9, 7, 11, 4, 48, 9, 7, 9, 114, 6, 4, 7, 7, 6, 10, 7, 9, 4, 6, 5, 12, 5, 10, 4, 99]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 8, 6, 5, 10, 8, 5, 11, 3, 4, 12, 8, 4, 6, 7, 7, 9, 8, 4, 8, 5, 261, 8, 5, 6, 7, 5, 5, 10, 8, 11, 52, 9, 11, 6, 6, 196, 11, 5, 3, 8, 4, 6, 6, 11, 5, 12, 7, 6, 7, 3, 56, 7, 5, 138, 42, 23, 31, 30, 8, 9, 5, 8, 9, 8, 49, 12, 6, 4, 6, 11, 10, 11, 8, 7, 5, 5, 8, 8, 7, 6, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 15, 4, 5, 4, 11, 4, 4, 4, 4, 5, 11, 4, 6, 12, 6, 4, 4, 14, 416, 15, 11, 5, 5, 4, 5, 7, 11, 4, 6, 16, 10, 5, 4, 9, 10, 7, 5, 12, 6, 3, 5, 5, 12, 4, 253, 5, 9, 6, 9, 4, 13, 7, 7, 8, 3, 5, 7, 18, 16, 149, 216, 5, 7, 3, 6, 7, 10]
length(C_list) = 70
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 7, 7, 7, 4, 11, 7, 8, 7, 7, 10, 4, 6, 8, 13, 7, 7, 8, 11, 10, 7, 17, 7, 7, 7, 8, 9, 6, 9, 7, 7, 7, 8, 390, 24, 9, 7, 38, 6, 47, 12, 6, 4, 16, 275, 7, 6, 8, 6, 6, 100, 31, 9, 33, 11, 16, 8, 6, 8, 27, 11, 4, 8, 9, 10, 7, 13, 55, 6, 10, 6, 9, 7, 6, 8, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 7, 8, 10, 9, 9, 6, 7, 9, 332, 7, 8, 11, 8, 6, 9, 13, 10, 11, 11, 5, 12, 9, 9, 7, 9, 12, 10, 10, 6, 10, 11, 214, 7, 158, 10, 12, 10, 10, 12, 5, 45, 10, 12, 14, 9, 8, 10, 8, 10, 5, 12, 7, 9, 9, 13, 7, 13, 9, 13, 8, 12, 13, 9, 13, 9, 19, 7, 3, 13, 8, 13, 6, 4, 22, 10, 3, 7, 14, 19, 10, 40, 8, 7, 446, 7, 285]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [25, 10, 6, 6, 11, 4, 15, 7, 4, 3, 6, 8, 5, 4, 4, 10, 9, 7, 8, 9, 7, 10, 20, 8, 5, 8, 8, 9, 16, 9, 9, 6, 9, 5, 6, 7, 6, 9, 8, 9, 7, 5, 8, 4, 6, 10, 9, 4, 7, 9, 10, 7, 9, 6, 7, 7, 4, 8, 7, 7, 10, 10, 8, 8, 8, 11, 7, 9, 7, 5, 5, 10, 6, 10, 5, 19]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [7, 114, 9, 8, 6, 5, 9, 11, 12, 7, 8, 9, 13, 3, 12, 8, 11, 8, 10, 8, 7, 10, 4, 10, 6, 7, 15, 9, 6, 5, 4, 15, 7, 6, 11, 26, 11, 9, 8, 8, 10, 9, 3, 113, 9, 5, 10, 10, 7, 8, 7, 6, 4, 8, 5, 4, 8, 7, 7, 7, 16, 13, 11, 11, 9, 10, 10, 6, 5, 6, 242, 16, 5, 8, 8, 86, 8, 8, 6, 8, 7, 11, 6, 8, 10, 9, 25]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [14, 9, 4, 19, 11, 10, 11, 235, 7, 9, 4, 10, 9, 7, 12, 10, 5, 7, 6, 9, 6, 10, 13, 4, 3, 4, 6, 164, 10, 5, 9, 6, 10, 7, 5, 3, 4, 6, 11, 6, 4, 8, 4, 5, 4, 6, 8, 140, 8, 6, 4, 10, 5, 7, 7, 5, 7, 13, 10, 8, 13, 11, 8, 9, 5, 7, 4, 7, 5, 6, 9, 9, 5, 3, 12, 4, 5, 8, 4, 10, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 6, 27, 13, 7, 9, 9, 6, 8, 5, 8, 13, 4, 6, 64, 13, 10, 25, 8, 4, 423, 7, 9, 6, 10, 18, 8, 7, 10, 12, 7, 5, 7, 7, 120, 10, 6, 5, 6, 6, 6, 7, 9, 10, 8, 9, 6, 13, 8, 5, 8, 7, 11, 6, 7, 16, 8, 12, 24, 10, 15, 5, 14, 8, 7, 3, 10, 8, 12, 12, 4, 15, 120, 9, 2, 113, 8, 10, 6, 11, 6, 9, 6, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 4, 14, 10, 10, 9, 9, 29, 7, 3, 9, 5, 7, 7, 12, 6, 8, 10, 7, 4, 2, 9, 8, 13, 84, 6, 4, 11, 7, 8, 5, 9, 10, 4, 10, 9, 8, 6, 6, 8, 9, 4, 11, 8, 8, 16, 6, 9, 6, 27, 10, 36, 5, 15, 6, 5, 10, 10, 9, 3, 11, 9, 8, 9, 10, 16, 4, 4, 9, 8, 9, 11, 7, 12, 9, 6, 9, 6, 10, 10, 13, 7, 8, 107, 8, 7, 9, 12, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 10, 12, 8, 6, 11, 8, 3, 13, 5, 10, 13, 33, 8, 5, 7, 4, 7, 5, 16, 8, 6, 8, 12, 12, 7, 11, 9, 7, 10, 5, 11, 9, 5, 11, 6, 6, 9, 6, 11, 3, 10, 12, 362, 7, 12, 5, 10, 9, 8, 4, 6, 197, 6, 8, 4, 7, 8, 8, 117, 8, 4, 11, 6, 9, 8, 5, 23, 11, 7, 12, 5, 10, 149, 4, 6, 8, 5, 11, 10, 7, 6, 7, 3, 4, 7, 6, 3, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 13, 9, 6, 7, 31, 5, 5, 14, 7, 6, 9, 11, 6, 5, 8, 12, 5, 7, 6, 7, 6, 5, 13, 8, 10, 10, 6, 4, 9, 15, 4, 9, 9, 14, 13, 8, 9, 7, 174, 6, 179, 7, 9, 9, 109, 10, 3, 36, 6, 6, 11, 7, 9, 163, 4, 7, 3, 4, 9, 7, 5, 7, 6, 4, 19, 8, 5, 10, 6, 4, 6, 3, 10, 7, 9, 208, 3, 9, 6, 30, 3, 33, 5, 50, 4, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 5, 9, 14, 400, 4, 9, 99, 6, 17, 13, 8, 7, 5, 10, 7, 281, 6, 4, 7, 7, 11, 6, 384, 3, 6, 30, 125, 10, 8, 7, 5, 4, 12, 4, 9, 11, 6, 9, 8, 6, 5, 5, 7, 14, 10, 5, 5, 8, 10, 17, 285, 8, 6, 9, 6, 8, 9, 14, 4, 5, 6, 10, 10, 4, 7, 13, 5, 8, 9, 7, 7, 7, 10, 6, 10, 10, 8, 7, 10, 7, 5, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 9, 8, 9, 4, 4, 4, 8, 4, 6, 7, 6, 10, 11, 6, 9, 4, 5, 10, 7, 3, 8, 7, 10, 4, 4, 9, 12, 8, 12, 4, 6, 7, 6, 8, 7, 10, 13, 11, 7, 6, 7, 9, 105, 8, 4, 8, 6, 6, 9, 5, 8, 7, 18, 4, 6, 6, 6, 6, 9, 8, 4, 3, 12, 9, 10, 5, 8, 7, 4, 7, 10, 8, 10, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 7, 260, 6, 4, 4, 5, 8, 5, 4, 4, 8, 6, 9, 6, 243, 4, 10, 6, 4, 5, 4, 9, 23, 8, 5, 3, 8, 7, 9, 11, 6, 4, 10, 6, 6, 8, 10, 7, 6, 5, 7, 18, 6, 8, 9, 12, 6, 6, 9, 6, 9, 4, 3, 4, 8, 4, 7, 6, 7, 10, 13, 8, 41, 4, 6, 7, 137, 7, 3, 7, 8, 7, 7, 8, 10, 6, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [6, 9, 8, 11, 11, 10, 7, 9, 7, 13, 6, 15, 10, 8, 7, 8, 11, 9, 7, 8, 10, 7, 6, 7, 8, 6, 7, 9, 10, 8, 4, 13, 11, 6, 6, 18, 9, 249, 8, 3, 9, 7, 9, 7, 10, 12, 12, 7, 3, 7, 10, 17, 7, 7, 8, 6, 11, 7, 10, 4, 11, 6, 6, 7, 6, 15, 15, 7, 9, 12, 13, 25, 17, 321, 9, 6, 11, 8, 7, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 8, 8, 39, 15, 6, 6, 7, 12, 8, 9, 10, 12, 8, 8, 6, 10, 4, 4, 9, 5, 6, 3, 13, 6, 6, 7, 9, 4, 6, 4, 12, 11, 8, 6, 7, 10, 161, 8, 7, 7, 9, 7, 4, 4, 4, 6, 8, 6, 5, 12, 8, 9, 13, 8, 148, 263, 9, 10, 6, 8, 6, 10, 16, 14, 8, 13, 9, 8, 7, 18, 19, 9, 7, 7, 10, 9, 14, 8, 247, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 6, 6, 7, 5, 7, 9, 8, 5, 11, 9, 5, 3, 7, 9, 10, 3, 6, 7, 513, 9, 7, 8, 10, 7, 5, 13, 12, 9, 9, 12, 17, 5, 6, 9, 5, 6, 6, 6, 6, 6, 8, 6, 9, 10, 9, 6, 8, 15, 6, 13, 5, 6, 10, 8, 11, 3, 8, 7, 9, 19, 4, 10, 8, 18, 11, 8, 77, 6, 42, 6, 13, 9, 8, 5, 8, 10, 4, 3, 32, 6, 11, 9, 10, 15]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 6, 2, 11, 6, 9, 8, 10, 12, 5, 7, 4, 6, 14, 4, 17, 6, 5, 9, 8, 7, 10, 7, 9, 7, 6, 6, 12, 4, 6, 6, 9, 5, 7, 7, 7, 6, 3, 7, 6, 7, 6, 6, 25, 11, 6, 6, 7, 9, 6, 6, 7, 31, 6, 12, 4, 6, 144, 3, 10, 7, 6, 8, 6, 7, 6, 7, 4, 7, 44, 6, 6, 69, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 3, 7, 7, 9, 11, 12, 7, 13, 4, 4, 8, 6, 5, 10, 9, 12, 4, 9, 12, 7, 6, 9, 159, 75, 9, 12, 10, 7, 4, 6, 11, 8, 4, 86, 3, 10, 9, 5, 10, 8, 9, 7, 4, 8, 4, 4, 8, 8, 10, 8, 9, 7, 8, 7, 9, 5, 13, 10, 7, 18, 9, 13, 8, 80, 4, 7, 12, 5, 4, 8, 4, 4, 11, 9, 11, 12, 8, 8, 8, 8, 4, 10, 8, 10, 8, 7, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [22, 8, 8, 6, 7, 5, 7, 12, 5, 8, 6, 3, 6, 6, 6, 6, 6, 9, 11, 6, 8, 8, 6, 5, 6, 13, 4, 6, 3, 6, 4, 6, 6, 11, 7, 9, 16, 6, 6, 6, 6, 10, 6, 8, 9, 5, 7, 10, 6, 9, 6, 6, 9, 34, 15, 6, 3, 11, 10, 6, 8, 7, 8, 8, 31, 10, 10, 8, 3, 5, 7, 9, 4, 14, 8, 138, 6, 6, 8, 10, 12, 10, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 5, 8, 4, 7, 13, 9, 4, 13, 26, 4, 4, 7, 400, 5, 5, 6, 7, 7, 6, 4, 8, 10, 7, 6, 8, 4, 7, 7, 10, 8, 4, 6, 7, 7, 10, 9, 9, 10, 4, 7, 4, 10, 7, 4, 9, 4, 12, 4, 4, 5, 6, 7, 6, 8, 12, 7, 8, 8, 9, 293, 9, 6, 11, 9, 6, 6, 6, 8, 10, 7, 18]
length(C_list) = 74
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [5, 11, 6, 5, 10, 9, 7, 7, 9, 6, 9, 8, 12, 6, 4, 7, 10, 9, 6, 5, 6, 5, 4, 12, 7, 6, 5, 4, 10, 61, 5, 6, 6, 5, 8, 9, 6, 4, 5, 3, 6, 3, 6, 10, 6, 8, 10, 174, 4, 4, 13, 4, 6, 5, 7, 14, 7, 5, 12, 6, 34, 5, 6, 10, 3, 7, 5, 6, 5, 13, 5, 5, 9, 6, 3, 7, 4, 4, 3, 5, 6, 4, 9, 5, 10, 5, 6, 30]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [5, 4, 89, 6, 4, 5, 9, 8, 7, 10, 6, 9, 7, 6, 4, 3, 7, 7, 7, 196, 8, 6, 4, 8, 56, 6, 4, 157, 9, 4, 8, 4, 7, 5, 6, 8, 5, 6, 5, 5, 5, 4, 229, 8, 8, 4, 8, 4, 4, 6, 5, 9, 8, 8, 8, 6, 6, 6, 7, 5, 6, 8, 7, 8, 6, 5, 8, 17, 8, 4, 6, 5, 12, 8, 5, 8, 6, 7, 10, 6, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 10, 6, 7, 9, 6, 5, 8, 8, 7, 8, 9, 8, 7, 9, 5, 4, 6, 4, 7, 8, 12, 4, 10, 4, 9, 4, 10, 5, 7, 7, 4, 7, 5, 13, 7, 9, 7, 5, 8, 8, 5, 11, 8, 6, 5, 3, 10, 7, 6, 9, 8, 8, 5, 9, 9, 15, 5, 23, 4, 8, 8, 9, 13, 13, 9, 6, 4, 10, 10, 4, 9, 5, 10, 9, 11, 9, 7, 7, 8, 9, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [18, 10, 6, 8, 6, 9, 6, 7, 8, 11, 11, 8, 22, 8, 6, 10, 9, 8, 7, 4, 5, 9, 10, 8, 8, 8, 9, 62, 3, 6, 15, 11, 14, 6, 7, 13, 11, 7, 9, 6, 9, 12, 8, 4, 8, 9, 3, 3, 6, 9, 6, 5, 11, 4, 10, 5, 217, 8, 16, 8, 6, 12, 7, 8, 4, 6, 11, 20, 9, 4, 5, 7, 8, 16, 12, 13, 7, 5, 7, 5, 9, 5, 5, 8, 4, 10, 13]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 8, 8, 6, 6, 10, 5, 3, 6, 8, 5, 9, 5, 7, 9, 7, 6, 6, 5, 6, 10, 12, 9, 8, 7, 13, 6, 5, 3, 7, 7, 6, 6, 8, 5, 9, 4, 26, 7, 11, 7, 5, 11, 7, 8, 7, 17, 7, 7, 16, 23, 11, 5, 8, 10, 12, 6, 8, 7, 4, 9, 6, 11, 6, 6, 13, 7, 10, 7, 11, 6, 11, 6, 7, 6, 6, 6, 9, 8, 7, 3, 6, 5, 7, 10, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 8, 5, 7, 6, 8, 6, 6, 8, 6, 6, 5, 6, 9, 4, 7, 4, 7, 8, 9, 5, 8, 14, 5, 9, 7, 6, 9, 7, 7, 8, 9, 7, 5, 8, 5, 8, 6, 5, 8, 5, 5, 7, 5, 6, 8, 6, 6, 4, 3, 10, 7, 7, 7, 5, 11, 8, 12, 9, 8, 25, 8, 102, 8, 6, 7, 6, 17, 11, 8, 6, 6, 8, 12, 11, 3, 14, 49, 8, 14, 7, 385, 478, 7, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [15, 10, 6, 7, 3, 6, 9, 11, 4, 9, 12, 11, 9, 9, 11, 7, 9, 5, 7, 6, 10, 10, 6, 127, 3, 7, 8, 8, 7, 7, 5, 7, 11, 6, 6, 5, 9, 10, 9, 11, 6, 5, 6, 3, 6, 8, 8, 7, 5, 7, 6, 6, 6, 165, 60, 4, 9, 10, 12, 6, 7, 8, 6, 10, 6, 5, 7, 8, 6, 6, 10, 11, 6, 7, 7, 6, 10, 7, 8, 5, 10, 10, 8, 8, 8, 8, 7, 9, 7, 10, 4, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [7, 7, 197, 7, 8, 68, 8, 8, 10, 4, 4, 6, 4, 8, 10, 7, 6, 8, 9, 4, 7, 7, 15, 8, 5, 7, 6, 7, 9, 8, 9, 4, 8, 12, 9, 11, 5, 9, 7, 4, 10, 4, 5, 8, 9, 14, 5, 4, 7, 8, 7, 6, 4, 8, 6, 7, 8, 8, 5, 6, 6, 6, 7, 7, 6, 9, 8, 7, 7, 3, 7, 7, 9, 5, 12, 3, 6, 9, 12, 11, 5, 8, 9, 10, 6, 9, 9, 5, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 6, 7, 6, 5, 7, 4, 5, 3, 7, 6, 58, 3, 5, 7, 4, 5, 7, 7, 489, 4, 8, 9, 7, 6, 3, 4, 7, 6, 23, 7, 4, 5, 3, 7, 54, 148, 9, 7, 8, 5, 4, 4, 5, 10, 9, 7, 8, 6, 6, 162, 5, 6, 5, 17, 4, 15, 7, 11, 6, 5, 9, 6, 6, 5, 12, 4, 7, 5, 6, 10, 9, 4, 8, 5, 7, 3]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [7, 4, 8, 6, 6, 7, 8, 5, 3, 4, 22, 4, 4, 80, 7, 4, 7, 5, 5, 7, 7, 7, 4, 4, 7, 3, 5, 3, 8, 6, 5, 13, 153, 8, 5, 5, 6, 3, 4, 7, 16, 8, 9, 11, 6, 9, 12, 4, 7, 4, 6, 6, 9, 8, 7, 6, 6, 4, 8, 8, 7, 6, 8, 6, 5, 6, 5, 5, 7, 9, 4, 7, 6, 28, 4, 7, 6, 32, 7, 3, 9, 5, 44, 6, 6, 7, 7, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 6, 5, 11, 13, 6, 4, 162, 6, 5, 6, 9, 6, 7, 7, 8, 6, 7, 6, 70, 6, 20, 8, 6, 354, 7, 5, 8, 7, 5, 5, 10, 8, 5, 7, 8, 5, 6, 7, 9, 9, 7, 10, 7, 6, 5, 7, 9, 6, 10, 4, 4, 6, 3, 11, 10, 4, 8, 8, 9, 7, 12, 8, 9, 5, 8, 8, 17, 4, 6, 10, 4, 7, 8, 6, 28, 6, 7, 6, 6, 11, 6, 4, 9, 6, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 9, 8, 4, 10, 6, 9, 6, 6, 6, 6, 4, 5, 7, 6, 9, 4, 8, 7, 5, 6, 305, 6, 7, 4, 5, 5, 4, 8, 7, 8, 7, 9, 3, 8, 9, 4, 5, 4, 68, 7, 5, 5, 3, 6, 6, 8, 3, 6, 8, 4, 8, 7, 10, 211, 4, 4, 5, 81, 9, 4, 12, 5, 5, 9, 4, 7, 25, 59, 6, 4, 8, 8, 5, 4, 10, 3, 6, 5, 5, 30, 9, 6, 6, 5, 5, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 7, 4, 4, 6, 6, 11, 9, 9, 4, 11, 6, 9, 6, 9, 7, 4, 8, 8, 6, 12, 17, 9, 7, 6, 5, 8, 6, 11, 6, 7, 4, 4, 5, 9, 7, 8, 11, 19, 9, 11, 7, 6, 5, 276, 6, 4, 59, 7, 145, 187, 8, 9, 10, 8, 6, 8, 6, 9, 15, 4, 7, 7, 9, 6, 9, 8, 7]
length(C_list) = 70
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 8, 8, 8, 7, 4, 12, 13, 5, 10, 12, 7, 6, 8, 3, 6, 23, 8, 60, 19, 6, 7, 6, 7, 8, 7, 5, 6, 6, 7, 6, 3, 6, 7, 6, 5, 22, 7, 6, 7, 6, 7, 4, 10, 5, 3, 9, 8, 3, 6, 7, 11, 8, 6, 56, 12, 8, 16, 11, 7, 10, 11, 7, 4, 8, 3, 6, 5, 3, 4]
length(C_list) = 72
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [25, 5, 7, 7, 12, 9, 10, 8, 7, 12, 7, 8, 157, 9, 7, 6, 54, 6, 8, 9, 6, 10, 12, 9, 8, 4, 11, 11, 9, 3, 6, 6, 6, 8, 7, 6, 4, 9, 4, 9, 6, 13, 7, 8, 6, 7, 6, 9, 5, 4, 12, 9, 11, 3, 8, 3, 9, 8, 17, 8, 10, 6, 7, 10, 11, 8, 9, 7, 8, 12, 8, 414, 6, 7, 7, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [10, 4, 7, 9, 15, 8, 11, 7, 5, 10, 12, 13, 4, 187, 293, 11, 5, 5, 4, 12, 9, 7, 10, 8, 14, 7, 10, 7, 7, 9, 10, 8, 9, 13, 405, 9, 5, 4, 6, 6, 9, 13, 6, 14, 7, 8, 28, 24, 7, 21, 7, 12, 9, 10, 5, 11, 8, 16, 10, 6, 10, 6, 10, 8, 12, 11, 10, 9, 8, 13, 9, 9, 9, 7, 7, 8, 4, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [23, 7, 10, 8, 7, 4, 8, 6, 15, 11, 10, 7, 3, 10, 11, 10, 8, 16, 8, 7, 9, 11, 10, 8, 5, 7, 11, 10, 3, 14, 8, 10, 14, 3, 14, 14, 11, 5, 5, 7, 8, 20, 8, 7, 7, 8, 11, 7, 9, 5, 7, 8, 9, 13, 306, 7, 22, 295, 4, 11, 6, 5, 7, 9, 5, 20, 4, 4, 14, 10, 7, 6, 9, 9, 4, 9, 9, 12, 8, 7, 3, 8, 8, 7, 7, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [5, 10, 12, 8, 12, 7, 14, 6, 108, 7, 8, 6, 7, 12, 10, 8, 3, 15, 9, 7, 8, 7, 9, 6, 9, 13, 8, 12, 7, 8, 10, 7, 7, 5, 10, 5, 7, 6, 6, 8, 6, 9, 14, 10, 7, 9, 3, 7, 9, 8, 8, 4, 4, 6, 6, 5, 7, 11, 16, 9, 8, 4, 7, 7, 7, 10, 8, 6, 11, 6, 8, 9, 7, 5, 6, 6, 8, 12, 145, 10, 9, 6, 4, 7, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 6, 7, 5, 4, 12, 9, 4, 7, 6, 7, 7, 7, 10, 4, 4, 4, 5, 8, 5, 7, 6, 6, 6, 7, 10, 7, 7, 7, 10, 7, 9, 6, 10, 8, 7, 5, 6, 243, 10, 5, 8, 8, 8, 9, 7, 11, 7, 8, 6, 9, 6, 7, 13, 7, 9, 9, 12, 9, 6, 12, 6, 7, 11, 7, 7, 6, 7, 9, 6]
length(C_list) = 72
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 8, 4, 7, 9, 9, 8, 3, 4, 9, 3, 6, 7, 4, 6, 6, 6, 9, 8, 16, 4, 6, 6, 5, 3, 6, 7, 3, 4, 8, 10, 10, 5, 6, 16, 203, 7, 9, 4, 6, 188, 10, 9, 9, 52, 8, 5, 13, 68, 4, 7, 6, 4, 11, 7, 8, 5, 9, 8, 5, 7, 11, 4, 8, 8, 4, 9, 24, 5, 4, 12, 138, 10, 8, 9, 7, 4, 9, 10, 3, 10, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 9, 7, 4, 9, 8, 7, 7, 7, 8, 4, 6, 9, 6, 10, 7, 10, 11, 8, 6, 7, 10, 6, 9, 5, 8, 8, 4, 8, 7, 8, 8, 7, 8, 8, 200, 11, 9, 7, 8, 6, 10, 7, 32, 7, 11, 10, 16, 7, 11, 6, 6, 5, 4, 11, 8, 7, 4, 9, 9, 12, 7, 7, 8, 9, 9, 9, 9, 8, 9, 6, 47, 8, 8, 6, 8, 9, 15, 8, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 5, 8, 6, 7, 6, 7, 8, 6, 5, 9, 7, 8, 5, 10, 6, 7, 120, 4, 9, 9, 6, 9, 5, 9, 9, 6, 9, 4, 9, 4, 4, 8, 7, 7, 7, 5, 8, 12, 9, 5, 9, 8, 7, 4, 6, 5, 8, 7, 5, 8, 8, 10, 5, 5, 6, 15, 7, 10, 51, 4, 8, 5, 12, 6, 10, 9, 7, 5, 7, 6, 7, 5, 7, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [5, 3, 24, 5, 10, 11, 3, 5, 6, 6, 6, 15, 4, 4, 9, 3, 6, 8, 7, 7, 20, 8, 3, 7, 6, 4, 6, 4, 10, 4, 7, 14, 6, 6, 12, 4, 8, 14, 4, 12, 8, 10, 7, 5, 8, 8, 6, 7, 6, 8, 18, 6, 8, 9, 7, 7, 7, 7, 6, 11, 6, 7, 8, 6, 7, 13]
length(C_list) = 66
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 10, 3, 8, 6, 7, 5, 8, 3, 6, 5, 6, 6, 6, 4, 16, 4, 4, 5, 6, 8, 4, 4, 6, 5, 7, 5, 7, 59, 13, 4, 4, 9, 7, 8, 7, 10, 48, 10, 4, 13, 5, 5, 9, 4, 7, 6, 3, 4, 6, 9, 4, 4, 10, 10, 7, 7, 7, 6, 8, 6, 75]
length(C_list) = 65
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 7, 9, 3, 10, 8, 7, 6, 11, 8, 9, 13, 8, 8, 8, 8, 8, 364, 13, 9, 11, 320, 8, 7, 11, 7, 9, 10, 9, 10, 9, 5, 8, 8, 10, 14, 5, 9, 6, 8, 10, 10, 8, 5, 7, 14, 6, 4, 8, 6, 6, 4, 7, 424, 17, 6, 8, 8, 10, 7, 7, 6, 9, 10, 3, 6, 8, 9, 9, 20, 7, 9, 14, 7, 6, 10, 8, 160]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [7, 6, 34, 14, 15, 9, 8, 8, 6, 11, 5, 9, 12, 12, 4, 3, 13, 12, 6, 6, 6, 12, 12, 6, 14, 8, 8, 9, 13, 58, 6, 13, 13, 8, 11, 18, 9, 12, 9, 14, 8, 12, 13, 5, 13, 7, 13, 18, 18, 8, 7, 10, 11, 6, 4, 6, 11, 14, 28, 12, 13, 5, 4, 7, 3, 5, 11, 9, 13, 10, 9, 5, 10, 11, 6, 5, 10, 12, 11, 9, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 9, 9, 7, 6, 11, 6, 7, 9, 10, 5, 4, 8, 8, 8, 9, 5, 9, 4, 264, 8, 11, 243, 5, 5, 7, 7, 119, 7, 8, 6, 8, 6, 4, 9, 10, 7, 6, 7, 5, 464, 9, 7, 7, 8, 8, 13, 8, 6, 6, 5, 9, 13, 65, 18, 10, 9, 7, 11, 6, 6, 19, 4, 6, 6, 7, 4, 9, 9, 7, 5, 12, 6, 6, 4, 6, 7, 9, 6, 9, 8, 6, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 7, 5, 5, 9, 4, 6, 5, 8, 5, 8, 6, 5, 7, 7, 7, 8, 55, 9, 10, 16, 9, 7, 6, 8, 7, 8, 10, 8, 7, 6, 7, 14, 7, 3, 9, 8, 7, 6, 5, 6, 6, 5, 4, 3, 5, 12, 5, 4, 5, 6, 8, 6, 7, 13, 4, 6, 8, 3, 5, 7, 6, 6, 4, 8, 15, 8, 7, 6, 6, 13, 4, 9, 38, 18, 9, 4, 3, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 4, 5, 5, 8, 7, 7, 7, 6, 12, 5, 8, 4, 3, 11, 4, 15, 14, 5, 6, 8, 7, 9, 7, 7, 7, 6, 4, 3, 11, 6, 11, 8, 6, 10, 9, 8, 6, 8, 7, 7, 8, 10, 5, 7, 10, 6, 6, 7, 9, 6, 10, 7, 299, 7, 18, 4, 7, 7, 6, 8, 9, 7, 8, 7, 9, 7, 4, 8, 5, 186, 7, 16, 4, 10, 7, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [14, 14, 10, 18, 7, 15, 8, 8, 9, 11, 6, 6, 19, 6, 13, 13, 6, 10, 11, 8, 9, 9, 14, 14, 9, 9, 7, 10, 10, 9, 10, 17, 14, 7, 13, 9, 7, 12, 14, 13, 7, 10, 12, 10, 12, 7, 5, 8, 12, 7, 6, 13, 14, 14, 7, 10, 10, 6, 5, 7, 10, 12, 7, 13, 63, 8, 11, 13, 7, 10, 7, 11, 9, 7, 9, 13, 27, 7, 8, 15, 12, 9, 14, 9, 10, 13, 10, 10, 8, 314, 8, 9, 15, 11, 11, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 21, 76, 10, 10, 10, 4, 10, 9, 9, 10, 9, 7, 12, 11, 6, 4, 8, 10, 9, 8, 11, 11, 4, 4, 6, 7, 8, 5, 4, 5, 10, 13, 5, 9, 6, 5, 7, 10, 63, 4, 9, 9, 12, 18, 3, 6, 44, 3, 10, 4, 6, 9, 12, 3, 5, 8, 16, 5, 13, 97, 5, 89, 10, 7, 6, 9, 254, 7, 11, 5, 35, 59, 9, 5, 10, 10, 10, 10, 8, 14, 9, 6, 7, 106]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 4, 6, 3, 7, 4, 4, 4, 39, 5, 3, 5, 3, 6, 4, 72, 4, 3, 6, 8, 4, 8, 4, 4, 8, 3, 5, 5, 5, 5, 5, 4, 7, 4, 7, 9, 13, 180, 4, 6, 4, 94, 31, 3, 6, 4, 5, 7, 5, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 9, 6, 5, 9, 13, 8, 9, 4, 8, 9, 9, 6, 12, 8, 7, 8, 10, 9, 8, 9, 6, 5, 6, 10, 11, 8, 9, 6, 6, 6, 6, 13, 6, 9, 14, 10, 10, 5, 6, 5, 6, 3, 16, 9, 5, 7, 7, 3, 10, 6, 8, 7, 11, 10, 8, 10, 4, 6, 8, 8, 5, 10, 8, 12, 26, 7, 11, 8, 9, 10, 7, 9, 8, 6, 8, 6, 6, 4, 460, 6, 10, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 8, 160, 10, 10, 7, 15, 9, 8, 9, 7, 14, 10, 15, 8, 10, 13, 10, 7, 11, 9, 10, 9, 7, 460, 10, 6, 11, 8, 9, 125, 9, 10, 8, 10, 4, 14, 6, 11, 11, 11, 9, 8, 10, 21, 10, 4, 10, 7, 7, 10, 8, 8, 6, 10, 145, 42, 6, 4, 7, 8, 12, 7, 9, 8, 9, 10, 11, 8, 10, 11, 11, 7, 10, 10, 10, 7, 10, 8, 10, 12, 11, 9, 12, 8, 10, 5, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [8, 8, 9, 12, 10, 11, 9, 6, 6, 9, 10, 10, 8, 7, 9, 6, 9, 10, 10, 7, 9, 8, 9, 14, 12, 12, 5, 6, 17, 10, 8, 11, 476, 12, 7, 9, 8, 6, 9, 4, 6, 164, 9, 5, 8, 7, 13, 10, 15, 8, 12, 11, 20, 8, 5, 5, 11, 130, 127, 7, 9, 4, 8, 6, 13, 3, 12, 6, 12, 11, 13, 7, 6, 7, 10, 12, 10, 13, 10, 5, 13, 10, 440, 6, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 12, 7, 7, 3, 7, 8, 6, 7, 5, 7, 7, 10, 7, 9, 10, 13, 4, 6, 4, 8, 5, 10, 9, 6, 7, 7, 9, 21, 5, 13, 10, 5, 7, 8, 9, 9, 9, 13, 20, 3, 10, 189, 11, 7, 7, 8, 11, 4, 9, 312, 13, 7, 7, 6, 6, 11, 8, 7, 7, 12, 9, 4, 6, 6, 11, 253, 11, 8, 24, 7, 5, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 11, 4, 4, 8, 30, 5, 7, 10, 7, 18, 3, 3, 7, 11, 6, 5, 15, 6, 5, 7, 8, 11, 10, 9, 7, 8, 15, 8, 4, 7, 4, 5, 7, 13, 10, 7, 6, 13, 4, 19, 5, 4, 3, 18, 20, 30, 9, 9, 9, 10, 5, 14, 9, 12, 9, 7, 9, 22, 4, 11, 9, 24, 6, 7, 7, 3, 7, 49, 10, 7, 5, 10, 9, 5, 4, 4, 7, 10, 9, 9, 9, 3]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 13, 16, 10, 6, 8, 8, 7, 8, 6, 6, 6, 538, 10, 11, 12, 10, 12, 9, 10, 11, 10, 7, 6, 5, 9, 4, 8, 7, 13, 13, 265, 7, 8, 103, 24, 8, 6, 3, 15, 8, 10, 60, 8, 10, 6, 8, 10, 10, 6, 13, 12, 8, 8, 7, 8, 7, 8, 13, 8, 10, 13, 5, 8, 11, 9, 10, 8, 7, 13, 16, 277, 13, 11, 156, 7, 11, 9, 8, 10, 11, 17, 10, 13, 7, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [13, 13, 6, 12, 8, 5, 9, 3, 7, 5, 9, 10, 3, 5, 19, 11, 12, 7, 9, 10, 4, 12, 8, 10, 9, 20, 5, 3, 11, 9, 5, 13, 11, 14, 13, 8, 11, 9, 10, 7, 14, 4, 4, 9, 18, 9, 6, 134, 12, 12, 11, 9, 21, 5, 9, 11, 21, 8, 12, 16, 11, 28, 4, 8, 9, 16, 13, 5, 10, 14, 115, 9, 12, 9, 18, 7, 9, 4, 8, 25, 12, 11, 9, 10, 8, 13, 8, 6, 10, 4, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [7, 13, 7, 4, 6, 10, 12, 16, 8, 13, 9, 11, 16, 14, 12, 9, 4, 11, 7, 13, 7, 4, 11, 37, 9, 13, 13, 7, 6, 9, 11, 16, 7, 12, 11, 9, 11, 7, 11, 23, 9, 4, 12, 12, 8, 6, 16, 15, 10, 13, 7, 11, 7, 7, 10, 7, 9, 12, 5, 8, 8, 7, 8, 9, 13, 8, 3, 9, 78, 13, 8, 11, 6, 9, 4, 15, 8, 11, 14, 7, 13, 13, 13, 12, 11, 9, 13, 11, 4, 8, 14, 9, 47, 18, 21, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [15, 14, 16, 6, 7, 9, 13, 12, 7, 8, 11, 10, 9, 9, 3, 10, 8, 10, 9, 13, 9, 12, 4, 7, 8, 7, 8, 13, 7, 12, 7, 6, 10, 8, 8, 7, 6, 8, 8, 7, 9, 10, 23, 9, 9, 8, 5, 6, 9, 9, 10, 9, 6, 10, 14, 13, 7, 8, 22, 6, 28, 15, 8, 9, 12, 9, 10, 12, 11, 9, 11, 8, 6, 8, 6, 6, 8, 12, 8, 10, 8, 8, 7, 9, 8, 10, 11, 9, 19, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 36, 4, 4, 8, 6, 4, 6, 10, 9, 8, 7, 4, 3, 8, 3, 4, 6, 7, 7, 6, 3, 4, 4, 8, 7, 4, 17, 7, 5, 7, 4, 8, 7, 6, 7, 12, 8, 8, 10, 12, 7, 6, 8, 81, 11, 11, 4, 117, 6, 20, 10, 5, 9, 6, 8, 7, 7, 7, 6, 9, 3, 6, 6, 4, 5, 7, 9, 9, 6, 4, 7, 8, 5, 8, 4, 7, 4, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [13, 14, 11, 5, 13, 9, 5, 9, 9, 8, 9, 7, 7, 11, 9, 7, 12, 5, 11, 4, 3, 76, 10, 6, 3, 8, 4, 21, 12, 8, 7, 5, 7, 9, 10, 112, 453, 7, 22, 5, 9, 5, 24, 7, 8, 4, 18, 9, 4, 9, 12, 13, 6, 4, 6, 7, 5, 7, 5, 19, 9, 6, 11, 27, 8, 4, 8, 17, 3, 8, 8, 8, 9, 53, 12, 13, 9, 11, 4, 18, 7, 5, 87, 10, 6, 5, 11, 4, 18, 11, 9, 14, 295, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 9, 6, 33, 10, 5, 7, 8, 8, 4, 7, 7, 5, 199, 8, 9, 10, 4, 4, 10, 6, 26, 5, 7, 9, 7, 9, 7, 16, 5, 13, 3, 127, 6, 23, 5, 6, 8, 4, 11, 9, 10, 9, 10, 12, 4, 7, 4, 6, 5, 10, 8, 5, 5, 10, 101, 8, 3, 7, 4, 7, 10, 12, 9, 6, 8, 11, 6, 11, 8, 531, 9]
length(C_list) = 74
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 6, 6, 6, 7, 5, 8, 4, 27, 7, 6, 5, 6, 5, 4, 4, 150, 5, 4, 7, 32, 5, 14, 7, 10, 9, 13, 14, 10, 10, 364, 3, 16, 4, 8, 15, 5, 13, 5, 6, 4, 7, 7, 15, 6, 3, 6, 15, 3, 13, 9, 8, 8, 4, 5, 27, 6, 5, 8, 10, 3, 16, 30, 188, 6]
length(C_list) = 67
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [13, 7, 7, 7, 10, 7, 8, 5, 9, 9, 8, 8, 8, 5, 5, 6, 5, 7, 14, 7, 7, 10, 5, 194, 50, 5, 10, 9, 7, 7, 7, 8, 8, 5, 10, 6, 9, 7, 8, 4, 9, 8, 141, 7, 6, 6, 6, 6, 10, 8, 5, 10, 8, 11, 10, 5, 10, 8, 12, 6, 10, 4, 6, 24, 7, 6, 7, 19, 16, 5, 5, 7, 8, 7, 10, 7, 21, 7, 7, 13, 28, 21, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 12, 5, 5, 5, 3, 5, 5, 5, 7, 5, 5, 4, 10, 5, 4, 51, 11, 5, 7, 5, 8, 6, 6, 5, 5, 7, 19, 7, 6, 5, 7, 10, 14, 12, 11, 10, 6, 7, 9, 9, 5, 6, 6, 7]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [2, 7, 6, 9, 5, 4, 8, 7, 3, 7, 6, 6, 8, 8, 9, 12, 4, 9, 8, 9, 7, 8, 6, 8, 6, 4, 6, 8, 22, 44, 9, 6, 8, 4, 4, 6, 7, 12, 8, 7, 7, 10, 6, 5, 8, 8, 8, 7, 9, 8, 7, 7, 29, 7, 10, 7, 10, 12, 8, 5, 81, 6, 5, 8, 20, 4, 6, 6, 23, 19, 14, 12, 5, 4, 9, 6, 5, 4, 8, 8, 7, 7, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [11, 8, 7, 6, 145, 11, 12, 9, 12, 6, 9, 7, 12, 5, 10, 9, 6, 4, 11, 47, 7, 11, 10, 11, 10, 10, 10, 9, 7, 10, 50, 22, 4, 4, 11, 13, 8, 199, 8, 6, 13, 10, 15, 11, 10, 6, 12, 9, 12, 5, 7, 169, 17, 14, 7, 128, 10, 14, 13, 5, 238, 15, 6, 5, 9, 13, 11, 8, 4, 12, 13, 10, 11, 11, 11, 202, 8, 11, 13, 11, 8, 4, 10, 9, 12, 47, 12, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 9, 52, 9, 7, 7, 7, 8, 8, 11, 7, 9, 4, 4, 4, 11, 5, 6, 9, 12, 7, 9, 10, 5, 4, 4, 6, 7, 8, 4, 12, 7, 6, 5, 9, 12, 5, 5, 6, 6, 6, 8, 7, 4, 11, 7, 6, 3, 6, 6, 5, 4, 8, 6, 6, 5, 9, 4, 6, 4, 9, 6, 5, 6, 9, 9, 17, 5, 6, 10, 4, 4, 7, 10, 4, 7, 9, 136, 78, 8, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 18, 12, 12, 12, 9, 7, 9, 9, 9, 13, 3, 10, 6, 9, 18, 13, 18, 5, 41, 4, 8, 7, 11, 3, 27, 3, 11, 11, 4, 11, 8, 10, 12, 13, 12, 5, 9, 3, 21, 18, 9, 8, 6, 12, 4, 25, 10, 10, 10, 10, 4, 11, 12, 13, 5, 14, 6, 17, 11, 29, 6, 17, 6, 11, 5, 10]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [3, 36, 8, 8, 2, 6, 13, 11, 8, 10, 84, 23, 11, 12, 9, 6, 6, 5, 19, 8, 11, 6, 9, 9, 7, 11, 4, 4, 11, 4, 5, 47, 13, 10, 9, 9, 6, 11, 9, 12, 150, 47, 9, 6, 9, 6, 5, 39, 9, 6, 8, 23, 5, 19, 4, 7, 4, 7, 8, 8, 9, 9, 10, 11, 13, 8, 5, 7, 11, 19, 14, 7, 18, 15, 15, 24, 4, 9, 13, 18, 8, 6, 8, 5, 5, 7, 4]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [16, 9, 13, 17, 19, 16, 10, 15, 10, 13, 14, 6, 10, 15, 12, 10, 13, 13, 3, 20, 13, 25, 13, 13, 15, 3, 146, 18, 15, 15, 19, 2, 15, 5, 13, 7, 13, 8, 14, 14, 15, 6, 14, 16, 15, 13, 4, 5, 8, 9, 27, 481, 13, 4, 16, 4, 10, 27, 15, 10, 12, 12, 15, 6, 9, 9, 5, 7, 21, 14, 16, 13, 13, 140, 10, 10, 13, 5, 58, 15, 15, 13, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [30, 14, 22, 16, 14, 16, 14, 6, 161, 19, 15, 6, 23, 7, 4, 14, 14, 4, 147, 4, 23, 16, 14, 13, 94, 6, 14, 5, 378, 5, 3, 4, 14, 5, 6, 100, 5, 5, 19, 5, 14, 5, 6, 14, 5, 23, 7, 16, 5, 4, 37, 171, 7, 37, 20, 15, 12, 4, 21, 5, 15, 82, 91, 4, 14, 5, 4, 6, 26, 5, 17, 7, 29, 15, 9, 83, 5, 5, 17, 21, 9, 15, 15, 16, 4, 4, 7, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [26, 169, 8, 11, 10, 7, 9, 9, 9, 9, 11, 9, 10, 12, 12, 11, 10, 231, 11, 10, 11, 11, 11, 10, 10, 10, 11, 10, 11, 9, 12, 12, 11, 11, 7, 9, 10, 11, 10, 8, 9, 10, 7, 12, 10, 10, 10, 10, 113, 4, 18, 37, 17, 36, 7, 10, 10, 10, 158, 10, 13, 10, 5, 10, 22, 8, 328, 11, 11, 12, 10, 8, 8, 9, 11, 10, 10, 7, 10, 9, 7, 10, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [23, 8, 4, 31, 13, 9, 10, 322, 8, 11, 8, 14, 4, 16, 10, 13, 18, 9, 10, 4, 7, 9, 5, 10, 4, 7, 10, 10, 7, 5, 5, 9, 11, 6, 9, 7, 8, 40, 10, 11, 8, 11, 13, 10, 9, 7, 6, 13, 43, 13, 12, 6, 9, 21, 9, 14, 9, 9, 20, 18, 9, 12, 22, 5, 19, 9, 7, 10, 10]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 5, 5, 10, 4, 5, 22, 4, 4, 4, 4, 5, 4, 7, 4, 4, 4, 4, 4, 5, 5, 6, 4, 4, 6, 10, 9, 5, 4, 7, 6, 10, 8, 10, 3, 15, 4, 10, 4, 13, 6, 5, 13, 6, 6, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 15, 6, 4, 10, 17, 139, 11, 11, 10, 12, 4, 15, 4, 4, 12, 17, 15, 10, 4, 13, 12, 4, 18, 8, 16, 14, 8, 11, 15, 5, 19, 9, 10, 14, 14, 16, 11, 29, 35, 16, 18, 144, 10, 19, 12, 4, 9, 20, 20, 10, 15, 5, 12, 197, 16, 14, 13, 10, 19, 11, 9, 18, 12, 11, 15, 9, 10, 3, 14, 17, 10, 19, 16, 22, 10, 14, 17, 4, 20, 13, 9, 6, 11, 13, 10, 16, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 15, 13, 16, 10, 6, 11, 11, 9, 99, 10, 11, 14, 16, 10, 10, 12, 13, 11, 15, 16, 9, 14, 14, 36, 11, 12, 10, 15, 10, 17, 10, 138, 16, 13, 98, 15, 16, 15, 18, 14, 10, 6, 17, 12, 11, 15, 10, 11, 18, 12, 11, 11, 13, 16, 6, 11, 12, 17, 11, 11, 16, 9, 18, 14, 11, 14, 13, 16, 20, 12, 16, 14, 20, 22, 24, 12, 11, 10, 19, 10, 392, 10, 16, 14, 8, 9, 4, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 16, 12, 7, 15, 10, 9, 16, 27, 10, 14, 17, 11, 12, 11, 12, 10, 14, 12, 12, 16, 18, 14, 12, 7, 4, 13, 12, 14, 12, 18, 11, 13, 16, 5, 10, 4, 3, 4, 12, 7, 16, 15, 4, 11, 13, 13, 11, 12, 10, 4, 19, 10, 12, 10, 10, 10, 13, 10, 10, 10, 12, 10, 7, 25, 22, 13, 26, 26, 17, 13, 14, 9, 7, 10, 13, 11, 10, 9, 12, 6, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [9, 9, 9, 8, 11, 9, 9, 9, 10, 10, 14, 12, 10, 10, 9, 8, 8, 7, 13, 13, 7, 7, 292, 9, 10, 9, 10, 11, 8, 10, 6, 8, 9, 7, 10, 11, 18, 12, 7, 11, 9, 3, 5, 9, 9, 8, 10, 10, 14, 12, 7, 10, 8, 10, 8, 7, 11, 9, 309, 223, 9, 8, 9, 13, 9, 10, 10, 10, 9, 9, 7, 10, 9, 9, 4, 6, 10, 10, 8, 9, 12, 8, 7, 10, 12, 11, 9, 12, 9, 11, 10, 8, 7, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [20, 22, 132, 4, 7, 8, 8, 9, 9, 10, 7, 5, 10, 14, 21, 7, 11, 9, 9, 10, 8, 9, 6, 9, 9, 9, 10, 10, 21, 23, 4, 12, 9, 10, 8, 12, 9, 9, 8, 25, 7, 8, 11, 6, 23, 8, 11, 9, 10, 7, 10, 10, 10, 14, 299, 9, 8, 9, 8, 10, 22, 6, 11, 10, 8, 5, 8, 11, 9, 7, 8, 8, 9, 10, 11, 4, 9, 24, 8, 7, 10, 16]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [11, 3, 8, 5, 4, 8, 6, 9, 9, 6, 9, 11, 4, 8, 7, 4, 6, 8, 9, 8, 6, 5, 14, 5, 5, 6, 8, 12, 8, 7, 10, 12, 7, 11, 10, 9, 4, 9, 14, 4, 11, 41, 6, 36, 10, 399, 8, 7, 9, 21, 8, 4, 8, 5, 25, 10, 6, 11, 9, 8, 4, 4, 25]
length(C_list) = 63
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [7, 9, 4, 8, 4, 4, 6, 4, 12, 7, 11, 9, 13, 5, 10, 5, 9, 26, 6, 5, 7, 332, 18, 13, 16, 8, 8, 18, 6, 10, 6, 9, 7, 6, 15, 4, 11, 21, 5, 10, 19, 9, 12, 8, 7, 48, 6, 4, 210, 9, 9, 24, 7, 10, 13, 18, 6, 23, 11, 9, 5, 215, 9, 10, 5, 595, 9, 7, 14, 6, 6, 14, 14, 39, 8, 6, 6, 8, 18, 5, 194, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 7, 8, 4, 6, 11, 246, 43, 5, 439, 18, 11, 9, 7, 7, 8, 5, 7, 8, 3, 11, 7, 6, 7, 4, 6, 6, 126, 5, 18, 4, 6, 11, 5, 5, 9, 9, 9, 9, 7, 11, 6, 4, 7, 5, 6, 51, 7, 25, 4, 8, 9, 8, 10, 6, 4, 27, 15, 6, 7, 4, 9, 10, 64, 6, 11, 9, 10, 10, 8, 6, 5, 7, 19, 4, 9, 9, 11, 14, 8, 5, 6, 5, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [14, 7, 4, 6, 4, 14, 24, 16, 35, 14, 26, 33, 3, 6, 7, 12, 6, 11, 8, 11, 10, 13, 11, 10, 8, 7, 16, 8, 10, 9, 7, 8, 97, 6, 8, 5, 8, 7, 8, 14, 12, 38, 15, 5, 522, 5, 12, 16, 14, 16, 8, 16, 16, 22, 12, 62, 8, 157, 10, 11, 13, 14, 9, 6, 10, 14, 9, 7, 7, 7, 8, 10, 12, 4, 12, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [10, 9, 6, 13, 6, 15, 10, 10, 8, 8, 29, 7, 6, 10, 9, 5, 11, 6, 12, 4, 7, 4, 5, 184, 6, 16, 14, 6, 10, 14, 6, 20, 5, 5, 4, 15, 287, 12, 15, 8, 8, 14, 9, 9, 13, 10, 7, 10, 6, 10, 38, 11, 4, 147, 9, 7, 29, 19, 8, 14, 7, 8, 4, 6, 7, 15, 4, 17, 256, 4, 186, 162, 13, 65, 8, 16, 22, 9, 8, 11, 8, 39, 23, 9, 5]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [16, 7, 8, 5, 9, 10, 4, 12, 8, 9, 4, 7, 71, 4, 6, 3, 9, 6, 15, 4, 8, 6, 4, 8, 6, 7, 4, 7, 5, 4, 6, 5, 8, 9, 27, 7, 5, 19, 13, 7, 4, 9, 7, 9, 7, 6, 7, 9, 6, 9, 741, 23, 6, 8, 14, 6, 7, 11, 35, 10, 6, 18, 6, 9, 6, 5, 7, 205, 9, 4, 7, 4, 5, 10, 9, 8, 8, 11, 15, 12, 3, 15, 7, 6, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [5, 12, 8, 10, 8, 5, 36, 333, 11, 10, 9, 8, 10, 215, 547, 9, 8, 11, 9, 18, 8, 12, 9, 8, 219, 7, 14, 5, 10, 8, 10, 11, 10, 11, 9, 4, 9, 15, 3, 19, 10, 302, 3, 10, 9, 8, 10, 6, 9, 10, 11, 5, 10, 9, 8, 9, 48, 9, 8, 10, 8, 10, 16, 211, 8, 4, 438, 18, 9, 9, 255, 24, 8, 4, 130, 19, 17, 7, 29, 22, 24, 9, 14, 19, 12, 7, 9, 20, 8, 15, 6, 12, 13, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [4, 20, 9, 16, 7, 8, 6, 7, 18, 6, 10, 6, 7, 7, 8, 10, 4, 10, 6, 9, 8, 577, 211, 11, 6, 8, 13, 8, 12, 8, 4, 7, 9, 6, 9, 4, 9, 8, 7, 6, 8, 7, 9, 9, 9, 8, 6, 8, 13, 7, 8, 8, 7, 11, 8, 10, 12, 37, 13, 10, 8, 7, 6, 24, 9, 14, 7, 9, 10, 9, 8, 11, 3, 7, 9, 10, 143, 11, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [16, 6, 8, 10, 7, 9, 7, 13, 6, 9, 10, 7, 9, 4, 55, 7, 6, 11, 4, 10, 8, 10, 9, 7, 6, 61, 7, 11, 8, 10, 12, 7, 7, 7, 11, 7, 4, 12, 10, 7, 8, 7, 7, 13, 12, 6, 7, 8, 10, 9, 13, 6, 10, 13, 5, 7, 10, 4, 10, 10, 6, 5, 12, 10, 5, 11, 6, 9, 9, 7, 10, 12, 11, 29, 7, 9, 7, 10, 9, 9, 8, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [11, 6, 9, 6, 10, 10, 7, 7, 5, 5, 6, 10, 13, 8, 6, 11, 16, 7, 6, 11, 13, 16, 8, 6, 7, 6, 9, 10, 8, 6, 6, 428, 9, 8, 6, 6, 9, 7, 55, 13, 6, 13, 12, 96, 9, 9, 7, 13, 95, 10, 8, 49, 8, 7, 49, 11, 8, 12, 11, 16, 10, 56, 9, 10, 8, 7, 15, 15, 9, 6, 19, 7, 9, 10, 7, 13, 7, 15, 13, 161, 10, 9, 9, 9, 14, 11, 9, 9, 14, 7]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [14, 8, 10, 11, 8, 17, 9, 8, 7, 7, 4, 7, 8, 12, 9, 29, 16, 7, 8, 7, 9, 39, 12, 6, 17, 9, 7, 15, 12, 14, 13, 17, 13, 16, 5, 6, 8, 18, 10, 257, 16, 18, 14, 6, 7, 9, 8, 10, 13, 7, 12, 3, 3, 16, 8, 5, 13, 5, 10, 9, 229, 12, 8, 9, 11, 7, 9, 10, 14, 10, 6, 11, 7, 7, 4, 5, 17, 18, 15, 16, 14, 14, 10, 15, 5, 8, 10, 9, 9, 9, 7, 6, 21, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 5, 5, 8, 7, 13, 5, 4, 9, 5, 4, 7, 12, 15, 11, 6, 8, 8, 9, 8, 12, 5, 11, 8, 14, 10, 8, 9, 7, 3, 12, 10, 6, 4, 13, 8, 5, 9, 8, 6, 15, 5, 596, 6, 11, 361, 13, 24, 9, 9, 7, 4, 10, 5, 13, 12, 8, 13, 10, 7, 61, 12, 8, 11, 29, 12, 7, 14, 9, 10, 7, 12, 9, 10, 8, 7, 7, 9, 9, 9, 559]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [21, 10, 8, 6, 9, 15, 3, 11, 5, 6, 9, 7, 18, 6, 8, 6, 5, 36, 9, 15, 4, 5, 7, 10, 5, 11, 6, 8, 16, 23, 7, 25, 10, 39, 14, 16, 15, 7, 10, 5, 13, 8, 9, 16, 6, 9, 7, 11, 7, 11, 59, 9, 3, 21, 8, 7, 8, 7, 7, 16, 5, 16, 16, 10, 10, 14, 16, 16, 6, 6, 9, 8, 214, 17, 12, 16, 6, 6, 30, 13, 6, 4, 11, 16, 29, 17, 16, 5, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [19, 10, 9, 11, 13, 11, 9, 18, 9, 11, 7, 17, 10, 11, 12, 10, 10, 9, 9, 8, 14, 11, 10, 9, 7, 12, 11, 10, 11, 11, 11, 9, 7, 13, 245, 10, 10, 10, 11, 7, 8, 9, 10, 8, 11, 11, 10, 11, 9, 18, 9, 12, 15, 10, 8, 10, 9, 6, 4, 221, 9, 10, 12, 10, 11, 7, 9, 9, 9, 10, 10, 7, 8, 8, 7, 7, 12, 252, 8, 6, 17, 13, 7, 7, 17, 12, 10, 9, 8, 9, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 7, 8, 12, 6, 6, 7, 9, 10, 6, 9, 12, 9, 76, 9, 5, 6, 11, 23, 9, 14, 11, 4, 6, 10, 8, 8, 8, 5, 12, 10, 11, 8, 11, 13, 10, 11, 11, 5, 6, 7, 9, 7, 12, 10, 8, 7, 7, 8, 10, 12, 8, 11, 11, 6, 10, 10, 9, 12, 11, 7, 7, 14, 4, 10, 11, 7, 9, 28, 195, 120, 7, 6, 6, 7, 4, 13, 5, 72, 10, 9, 9, 7, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [5, 7, 390, 5, 8, 8, 9, 9, 10, 61, 5, 8, 6, 10, 9, 7, 11, 4, 6, 4, 67, 8, 14, 6, 6, 6, 9, 9, 12, 8, 5, 9, 3, 17, 10, 6, 9, 13, 6, 6, 8, 10, 4, 7, 239, 12, 3, 358, 4, 11, 5, 7, 7, 8, 10, 16, 9, 9, 10, 6, 9, 12, 7, 4, 233, 5, 13, 10, 8]
length(C_list) = 69
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 13, 12, 17, 4, 16, 9, 9, 10, 11, 21, 5, 4, 11, 5, 24, 5, 4, 5, 5, 4, 4, 19, 5, 10, 5, 12, 5, 10, 9, 24, 4, 4, 87, 16, 4, 4, 4, 25, 11, 7, 4, 10, 9, 10, 20, 14, 4, 4, 5, 5, 5, 15, 14, 38, 422, 24, 18, 15, 4, 14, 8, 16, 4, 4, 4, 11, 5, 117, 6, 3, 4, 9, 201, 4, 11, 9, 5, 35, 4, 89, 4, 10, 13, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [5, 13, 7, 17, 13, 16, 5, 7, 7, 17, 18, 16, 14, 14, 6, 17, 13, 6, 12, 18, 14, 15, 6, 15, 7, 8, 19, 15, 9, 16, 16, 5, 16, 7, 17, 16, 15, 7, 21, 16, 15, 16, 15, 15, 16, 14, 7, 15, 15, 14, 16, 14, 14, 10, 9, 15, 15, 16, 8, 14, 322, 13, 12, 7, 18, 17, 14, 15, 83, 18, 13, 15, 17, 20, 9, 46, 17, 11, 15, 15, 14, 19, 15, 16, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 6, 11, 7, 7, 8, 12, 10, 4, 11, 11, 7, 9, 8, 8, 4, 9, 8, 88, 14, 12, 9, 8, 7, 11, 12, 9, 7, 9, 15, 15, 17, 11, 14, 16, 17, 14, 7, 15, 17, 6, 15, 7, 15, 16, 14, 13, 15, 18, 12, 18, 8, 6, 15, 9, 13, 10, 13, 10, 7, 222, 12, 6, 35, 11, 14, 8, 9, 5, 30, 10, 10, 6, 20, 18, 8, 42, 7, 15, 5, 9, 9, 17]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[6, 9, 285, 10, 10, 11, 8, 10, 8, 14, 4, 14, 9, 10, 4, 11, 7, 8, 8, 11, 7, 18, 8, 5, 7, 10, 10, 8, 7, 11, 8, 10, 11, 12, 155, 10, 12, 13, 30, 9, 13, 10, 10, 10, 10, 8, 7, 10, 6, 7, 9, 10, 8, 12, 11, 8, 10, 11, 7, 11, 12, 8, 6, 13, 21, 18, 10, 12, 9, 12, 8, 11, 9, 11, 10, 9, 12, 10, 7, 10, 7, 7, 10, 3, 13, 9, 8, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [14, 8, 8, 9, 15, 8, 12, 12, 10, 12, 6, 11, 9, 10, 5, 9, 10, 6, 7, 11, 10, 11, 10, 8, 13, 13, 13, 11, 10, 8, 9, 12, 10, 12, 11, 10, 10, 9, 15, 11, 11, 14, 10, 10, 9, 10, 10, 6, 10, 10, 11, 9, 5, 10, 39, 12, 10, 8, 7, 13, 9, 12, 10, 11, 9, 10, 11, 7, 25, 8, 8, 10, 26, 11, 45, 9, 6, 9, 10, 112, 6, 11, 10, 15, 13, 9, 139]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 8, 8, 6, 8, 7, 7, 8, 10, 6, 6, 6, 7, 8, 8, 10, 16, 5, 9, 9, 7, 7, 7, 5, 8, 7, 8, 7, 4, 4, 10, 4, 6, 8, 4, 9, 4, 11, 11, 5, 10, 8, 13, 6, 8, 4, 8, 9, 7, 8, 14, 6, 7, 6, 13, 3, 8, 10, 10, 9, 13, 6, 5, 91, 9, 16, 6, 7, 10, 16, 10, 38]
length(C_list) = 74
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [6, 8, 537, 7, 9, 13, 8, 17, 8, 7, 8, 7, 20, 7, 12, 7, 7, 8, 8, 4, 7, 9, 19, 5, 9, 8, 9, 14, 8, 13, 12, 6, 7, 8, 8, 11, 9, 7, 9, 28, 10, 8, 6, 7, 26, 7, 7, 16, 15, 7, 9, 9, 8, 6, 16, 9, 16, 7, 4, 18, 9, 13, 9, 7, 14, 427, 8, 9, 12, 10, 9, 7, 7, 5, 7, 7, 8, 7, 15, 8, 8, 12]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 9, 9, 4, 6, 8, 6, 9, 5, 8, 7, 8, 8, 7, 3, 11, 9, 9, 5, 9, 4, 7, 7, 7, 8, 10, 12, 9, 10, 12, 5, 20, 8, 17, 7, 6, 8, 8, 8, 8, 10, 11, 7, 8, 7, 8, 11, 39, 7, 9, 7, 14, 7, 11, 8, 22, 7, 6, 5, 9, 7, 8, 9, 7, 6, 7, 260, 6, 9, 29, 8, 9, 9, 8, 7, 7, 13, 9, 7, 81, 9, 11, 8, 3, 9]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [7, 5, 9, 11, 7, 304, 3, 8, 6, 81, 9, 11, 3, 12, 11, 5, 10, 11, 11, 11, 10, 10, 12, 16, 7, 9, 9, 6, 7, 102, 12, 72, 8, 8, 9, 9, 5, 9, 8, 7, 6, 9, 3, 9, 8, 9, 7, 4, 12, 6, 11, 9, 4, 10, 9, 8, 8, 7, 7, 8, 5, 4, 4, 6, 9, 11, 22, 6, 10, 7, 8, 10, 9, 5, 6, 9, 6, 10, 9, 9, 10, 6, 12, 10, 9, 6]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 10, 10, 18, 9, 4, 9, 10, 33, 10, 7, 10, 6, 8, 11, 6, 9, 10, 7, 11, 10, 7, 7, 6, 9, 12, 7, 12, 7, 8, 7, 13, 6, 10, 7, 8, 7, 10, 10, 7, 9, 6, 6, 7, 79, 4, 10, 12, 8, 8, 8, 9, 7, 8, 21, 10, 10, 12, 9, 7, 8, 11, 8, 11, 9, 7, 10, 5, 6, 9, 9, 7, 20, 6, 7, 9, 16, 7, 10, 7, 47, 8, 9, 12, 6, 128, 10]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [5, 10, 8, 6, 12, 7, 11, 6, 6, 12, 10, 6, 6, 8, 14, 8, 10, 7, 9, 5, 8, 8, 7, 8, 9, 9, 7, 7, 7, 4, 7, 6, 6, 9, 11, 7, 8, 12, 10, 9, 17, 9, 6, 9, 12, 11, 10, 16, 13, 6, 4, 6, 4, 7, 9, 14, 5, 10, 10, 8, 10, 11, 7, 6, 15, 10, 8, 14, 7, 11, 8, 6, 9, 9, 5, 6, 6, 10, 485, 9, 6, 9, 13]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [13, 14, 12, 16, 14, 6, 6, 7, 5, 5, 12, 8, 15, 16, 16, 6, 9, 13, 20, 17, 16, 4, 10, 15, 7, 15, 8, 12, 7, 14, 18, 13, 5, 7, 3, 16, 14, 17, 23, 12, 17, 13, 12, 17, 6, 13, 3, 12, 18, 5, 6, 8, 5, 16, 7, 7, 4, 17, 100, 7, 15, 6, 6, 7, 4, 4, 6, 85, 9, 6, 22, 16, 19, 16, 54, 7, 14, 7, 4, 4, 6, 184, 16, 16, 4, 16, 16, 6, 19, 6, 4, 10, 16]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [7, 6, 13, 6, 12, 15, 7, 14, 12, 8, 13, 16, 15, 7, 7, 7, 8, 14, 12, 6, 5, 13, 6, 15, 7, 13, 12, 6, 7, 20, 8, 8, 9, 7, 14, 8, 14, 8, 14, 13, 13, 8, 30, 9, 7, 7, 15, 7, 8, 5, 15, 6, 8, 15, 11, 9, 16, 12, 7, 7, 15, 9, 9, 260, 15, 9, 15, 5, 14, 289, 14, 11, 13, 14, 8, 7, 12, 20, 16, 7, 9, 8]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [7, 6, 7, 7, 11, 6, 6, 6, 8, 9, 6, 149, 10, 12, 9, 9, 12, 5, 7, 15, 13, 6, 6, 8, 8, 242, 9, 7, 92, 15, 6, 9, 6, 9, 8, 10, 8, 3, 8, 7, 6, 8, 8, 7, 10, 9, 10, 7, 8, 13, 14, 15, 10, 10, 32, 30, 12, 10, 11, 10, 7, 39, 9, 7, 11, 5, 9, 12, 8, 30, 11, 9, 7, 13, 5, 17, 8, 8, 6, 8, 7, 6, 10, 9, 13, 228, 11, 9, 81, 10, 14]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [2, 9, 9, 8, 6, 16, 12, 8, 7, 19, 3, 276, 7, 5, 11, 9, 9, 4, 14, 15, 12, 6, 8, 9, 15, 119, 100, 3, 6, 16, 62, 7, 9, 13, 15, 7, 5, 12, 9, 7, 10, 54, 6, 7, 8, 6, 3, 7, 11, 9, 31, 8, 12, 282, 10, 19]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 4, 6, 6, 4, 7, 7, 13, 6, 10, 7, 8, 6, 8, 8, 10, 7, 241, 4, 7, 5, 4, 161, 6, 8, 10, 10, 5, 6, 13, 3, 12, 12, 9, 10, 7, 6, 154, 10, 4, 9, 8, 7, 9, 8, 8, 9, 7, 311, 6, 5, 33, 9, 9, 8, 90, 10, 10, 9, 10, 380, 6, 9, 4, 6, 14, 11, 4, 10, 11, 5, 10, 32, 8, 12, 7, 11, 8, 12, 9, 4, 10, 10, 6, 11, 11]
length(C_list) = 75
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
