┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iY75_1357
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iY75_1357
----------------------------------
number of metabolites : 1953
number of reactions : 2759
number of genes : 1358

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2759 flux variables and 5127 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 3, 16, 16, 17, 16, 20, 16, 71, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 2, 11, 11, 11, 11, 11, 11, 2, 2, 7, 2, 4, 2, 2]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 8, 2, 11, 11, 11, 11, 11, 11, 2, 3, 7, 3, 6, 7, 4, 2, 2, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 11, 14, 14, 3, 23, 11, 11, 11, 11, 11, 11, 2, 2, 7, 2, 6, 3, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 6, 16, 16, 17, 17, 17, 16, 16, 13, 13, 14, 14, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 2, 11, 11, 11, 11, 11, 11, 2, 3, 7, 2, 3, 72]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [14, 6, 16, 16, 17, 29, 17, 16, 18, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 3, 6, 11, 13, 11, 11, 11, 11, 3, 6, 7, 7, 3, 7, 7, 6, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 19, 97, 24, 19, 20, 19, 19, 16, 16, 17, 16, 17, 30, 23, 16, 16, 17, 16, 17, 11, 16, 16, 7, 5, 11, 11, 11, 11, 11, 11, 3, 7, 7, 7, 6, 4, 3, 7, 6, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 10, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 7, 6, 11, 11, 11, 11, 11, 11, 11, 7, 19, 6, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 16, 16, 17, 16, 17, 16, 28, 23, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 4, 6, 11, 11, 11, 11, 11, 11, 7, 6, 7, 6, 3, 21, 6, 3, 3, 6, 7, 6, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 49, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 300, 14, 14, 6, 6, 11, 66, 11, 11, 11, 11, 6, 2, 7, 12, 6, 20, 7, 6, 35, 6, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 16, 16, 17, 16, 17, 18, 16, 13, 13, 14, 26, 14, 13, 13, 13, 13, 39, 13, 14, 11, 13, 13, 7, 2, 11, 18, 12, 11, 11, 11, 6, 7, 9, 6, 6, 6, 3, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 16, 17, 16, 19, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 14, 14, 11, 13, 13, 6, 8, 11, 11, 11, 11, 11, 15, 4, 28, 7, 10, 6, 6, 6, 11, 9, 6, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 8, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 21, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 6, 11, 11, 12, 11, 11, 11, 9, 3, 7, 6, 6, 7, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 17, 17, 18, 17, 102, 17, 17, 14, 14, 15, 14, 16, 14, 14, 14, 35, 15, 14, 15, 11, 14, 14, 6, 27, 11, 11, 16, 12, 12, 11, 3, 7, 7, 7, 3, 6, 6, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 7, 6, 11, 11, 11, 11, 11, 11, 6, 6, 7, 6, 6, 6, 7, 3, 7, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 16, 51, 17, 17, 17, 17, 18, 14, 13, 26, 13, 16, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 13, 6, 11, 11, 11, 11, 12, 11, 6, 6, 7, 11, 6, 6, 6, 9, 7, 6, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 10, 2, 2, 2, 3, 2, 2, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 17, 16, 17, 16, 16, 13, 38, 14, 13, 14, 13, 13, 13, 13, 14, 16, 14, 11, 14, 13, 5, 11, 11, 11, 11, 11, 11, 21, 7, 6, 15, 10, 102, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 2, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.982478507628238
thermo_feasible = true
