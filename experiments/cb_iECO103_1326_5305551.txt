┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECO103_1326
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECO103_1326
----------------------------------
number of metabolites : 1958
number of reactions : 2758
number of genes : 1327

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2758 flux variables and 5125 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [9, 2, 11, 12, 11, 11, 11, 14, 11, 2, 16, 16, 17, 16, 19, 16, 16, 2, 3, 2, 4, 14, 2, 13, 3, 2, 3, 17, 13, 2, 2, 9, 3, 6, 4, 14, 2, 3, 3, 7, 13, 38, 14, 41, 7, 39, 15, 2, 38, 40, 14, 40, 9, 9, 9, 2, 13, 9, 10, 10]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 2, 5, 2, 3, 3, 6, 6, 4, 2, 16, 3, 9, 10, 4, 3, 3, 3, 4, 6, 4, 4, 2, 4, 3, 3]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 5, 4, 15, 3, 6, 5, 160, 7, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 14, 5, 3, 4, 62, 151, 4, 4, 2, 4, 5, 6, 8, 40]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 4, 5, 4, 2, 4, 4, 5, 2, 4, 10, 5, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 43, 3, 6, 90, 2, 3, 4, 5, 4, 4, 4, 48, 4, 7, 5, 12, 14]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 6, 10, 5, 15, 2, 2, 4, 16, 10, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 6, 3, 26, 62, 3, 9, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 9, 26, 5, 78, 7, 4, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 3, 6, 6, 6, 4, 9, 6, 11, 5, 7, 4, 4, 6, 4, 5, 3, 2, 6, 7, 5, 6, 5, 9, 4, 6, 3, 5, 26, 4, 4, 4, 5, 4, 5, 23, 4, 6, 6, 5, 9, 4, 6, 16, 4, 3, 6, 4, 11, 4, 7, 6, 4, 7, 7, 7, 5, 3, 5, 7, 5, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 9, 14, 215]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 18, 7, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 12, 5, 12, 12, 5, 4, 4, 4, 18, 4, 4, 5, 4, 4, 4, 5, 3, 4, 4, 5, 7, 3, 7, 2, 6, 5, 9, 4, 5, 4, 4, 5, 5, 5, 3, 3, 4, 17, 11, 4, 4, 5, 4, 4, 4, 6, 6, 6, 19, 7, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 5, 4, 7, 4, 4, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 5, 9, 5, 5, 5, 4, 5, 7, 101, 7, 4, 3, 5, 3, 6, 8, 4, 5, 7, 4, 15, 6, 6, 5, 8, 6, 3, 4, 5, 5, 3, 4, 3, 6, 11, 13, 6, 5, 4, 4, 6, 2, 6, 12, 5, 7, 3, 6, 3, 5, 4, 4, 3, 5, 5, 3, 5, 5, 225, 10, 4]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 151, 6, 5, 4, 5, 69, 4, 3, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [17, 3, 6, 3, 12, 5, 6, 4, 4, 4, 6, 197, 5, 3, 5, 7, 4, 4, 4, 5, 4, 37, 5, 4, 4, 5, 5, 4, 5, 4, 4, 3, 6, 12, 5, 4, 5, 6, 4, 5, 7, 7, 7, 27, 6, 4, 6, 7, 4, 18]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 5, 4, 7, 13, 5, 7, 15, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 8, 6, 16, 14, 15, 6, 18, 13, 7, 104, 20, 19, 6, 19, 6, 7, 6, 6, 6, 11, 6, 8, 6, 7, 6, 6, 6, 29, 7, 10, 6, 12, 7, 6, 19, 6, 9, 6, 7, 5, 13, 6, 12, 11, 11, 11, 12, 12]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 11, 11, 11, 9, 11, 9, 9, 14, 16, 15, 16, 15, 14, 14, 4, 6, 6, 6, 4, 4, 11, 5, 5, 6, 5, 4, 11, 4, 5, 6, 6, 9, 6, 4, 4, 4, 14, 6, 14, 13, 39, 6, 12, 8, 37, 5, 37, 6, 11, 6, 36, 38, 16, 38, 5, 6, 6, 9, 7, 7, 63, 11, 5, 7, 8, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 6, 56]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 21
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785242206606
thermo_feasible = true
