ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
max_cuts = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [15, 6, 3, 3, 2, 7, 11, 2, 13, 3, 8, 2, 6, 15, 8, 29, 5, 2, 5, 5, 3, 5, 7, 4, 4, 2, 2, 7, 3, 95, 2, 7, 7, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 3, 35, 3, 7, 2, 4, 3, 9, 4, 2, 7, 4, 4, 6, 5, 4, 2, 3, 5, 2, 2, 7, 3, 2, 447]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 11, 5, 7, 3, 4, 3, 3, 5, 4, 3, 2, 4, 6, 4, 4, 177, 9, 4, 4, 3, 4, 7, 309, 7, 6, 5, 3, 5, 151, 278]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 4, 6, 4, 4, 10, 7, 4, 4, 4, 3, 5, 5, 4, 3, 5, 3, 4, 3, 32, 20, 29, 7, 7, 4, 7, 4, 4, 4, 4, 3, 5, 7, 5, 6, 6, 2, 6, 117]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 4, 4, 4, 7, 10, 4, 51, 4, 7, 5, 4, 5, 3, 29, 6, 5, 5, 5, 5, 6, 5, 4, 6, 8, 5, 8, 6, 9, 4, 11, 5, 5, 7, 6, 4, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 251, 6, 4, 5, 5, 4, 7, 4, 5, 22, 5, 15, 7, 4, 7, 11, 4, 4, 5, 28, 5, 5, 7, 6, 4, 4, 3, 3, 4, 8, 4, 2, 3, 11, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 11, 5, 7, 4, 7, 3, 4, 9, 7, 3, 7, 4, 5, 4, 8, 11, 6, 3, 9, 4, 9, 6, 4, 3, 5, 4, 3, 4, 4, 8, 11, 3, 6, 4, 7, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 8, 334, 3, 4, 4, 5, 2, 3, 4, 4, 4, 3, 3, 4, 3, 4, 3, 4, 4, 7, 23, 3, 9, 4, 9, 4, 4, 9, 13, 5, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 9, 3, 4, 4, 4, 5, 4, 15, 12, 4, 6, 3, 3, 3, 4, 4, 3, 2, 4, 4, 9, 19, 11, 5, 4, 4, 4, 3, 6, 8, 4, 3, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [12, 3, 6, 4, 9, 6, 7, 4, 4, 4, 4, 4, 2, 4, 8, 6, 6, 3, 4, 4, 6, 6, 6, 3, 87, 6, 6, 3, 11, 2, 14, 508]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [24, 3, 11, 8, 7, 6, 9, 4, 12, 8, 3, 4, 197, 6, 19, 7, 10, 108, 12, 7, 8, 176, 6, 4, 7, 6, 3, 5, 7, 17, 4, 4, 9, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 3, 9, 4, 6, 10, 6, 4, 3, 4, 3, 7, 7, 4, 9, 7, 5, 6, 4, 6, 10, 4, 7, 13, 6, 8, 8, 4, 5, 2, 7, 216, 4, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [29, 9, 11, 7, 5, 7, 5, 3, 4, 4, 4, 3, 4, 102, 6, 4, 8, 8, 3, 126, 3, 3, 8, 4, 4, 9, 5, 4, 9, 3, 5, 7, 5, 4, 4, 3, 5, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 3, 3, 4, 3, 4, 6, 5, 6, 12, 6, 3, 5, 5, 5, 5, 4, 6, 4, 2, 3, 3, 5, 3, 168, 5, 4, 4, 5, 5, 5, 5, 8, 3, 7, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 5, 10, 5, 10, 5, 4, 7, 8, 8, 4, 3, 9, 4, 6, 11, 5, 3, 3, 6, 14, 4, 3, 6, 14, 4, 4, 56, 5, 3, 5, 5, 10, 5, 4, 10, 8, 5, 4, 7, 3, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 7, 6, 4, 5, 7, 7, 5, 2, 3, 3, 43, 5, 12, 22, 3, 3, 4, 5, 3, 15, 21, 3, 6, 4, 209, 4, 5, 4, 3, 2, 6, 9, 5, 3, 5, 4, 4, 3, 9, 15]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 3, 209, 4, 5, 4, 4, 5, 6, 4, 3, 4, 8, 5, 5, 11, 100, 6, 5, 6, 4, 24, 3, 3, 20, 6, 5, 111, 7, 364, 6, 8, 344, 4, 4, 3, 3, 216, 5, 4, 4, 4, 4, 3]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 3, 30, 5, 6, 3, 7, 7, 4, 11, 4, 16, 4, 3, 3, 3, 3, 5, 4, 4, 5, 12, 6, 4, 4, 4, 4, 4, 8, 4, 4, 3, 4, 3, 4, 4, 4, 5, 4, 9, 4, 3, 3]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 6, 5, 3, 3, 3, 247, 3, 17, 3, 9, 6, 4, 4, 3, 7, 6, 6, 2, 7, 3, 5, 436, 3, 7, 73, 8, 5, 4, 3, 4, 6, 3, 11, 5, 7, 4, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 7, 5, 3, 8, 3, 4, 5, 4, 4, 8, 3, 3, 47, 11, 3, 5, 9, 7, 4, 5, 4, 4, 5, 8, 4, 4, 5, 3, 6, 6, 3, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [14, 5, 9, 4, 4, 4, 8, 6, 10, 6, 3, 3, 12, 22, 6, 4, 4, 3, 8, 7, 3, 3, 3, 11, 7, 4, 6, 5, 6, 7, 9, 4, 7, 45, 9, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [15, 5, 8, 4, 6, 3, 8, 28, 10, 8, 8, 7, 12, 13, 10, 4, 6, 6, 5, 4, 21, 4, 4, 3, 8, 8, 5, 5, 4, 44, 4, 4, 4, 4, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 26, 5, 7, 9, 6, 8, 8, 10, 9, 11, 4, 7, 13, 4, 268, 5, 6, 11, 16, 3, 4, 4, 21, 7, 9, 9, 8, 8, 3, 25, 7, 6, 6, 4, 7, 18, 36, 8, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 3, 7, 3, 4, 8, 4, 11, 4, 4, 12, 12, 358, 4, 8, 5, 6, 7, 8, 4, 4, 10, 363, 6, 14, 8, 9, 4, 4, 335, 3, 6, 3, 176]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 158, 7, 6, 6, 218, 4, 19, 3, 10, 7, 3, 14, 4, 4, 8, 8, 6, 4, 3, 72, 6, 5, 3, 7, 3, 5, 4, 5, 5, 3, 6, 52, 4, 5, 10, 3, 5, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 7, 10, 8, 8, 3, 12, 10, 4, 10, 6, 8, 6, 12, 7, 11, 3, 15, 6, 10, 6, 8, 5, 34, 9, 4, 5, 6, 7, 6, 8, 8, 5, 3, 11, 7, 9, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 4, 134, 6, 6, 4, 6, 7, 3, 5, 9, 4, 9, 6, 7, 6, 6, 6, 5, 9, 6, 6, 6, 5, 3, 4, 10, 6, 4, 6, 8, 4, 11, 6, 4, 3, 3, 5, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 4, 44, 6, 7, 20, 4, 6, 8, 13, 3, 6, 6, 11, 4, 10, 4, 6, 7, 8, 5, 4, 8, 4, 4, 5, 8, 9, 4, 4, 6, 3, 11, 4, 3, 6, 200, 4, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 3, 9, 7, 8, 3, 8, 8, 18, 17, 8, 3, 8, 6, 27, 14, 3, 8, 10, 7, 9, 4, 4, 9, 9, 5, 90, 3, 6, 14, 4, 13, 4, 23, 7, 4, 3, 5, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [6, 3, 13, 9, 5, 7, 8, 4, 16, 503, 8, 7, 10, 4, 9, 10, 6, 7, 6, 8, 8, 353, 8, 238, 8, 12, 3, 11, 10, 6, 8, 9, 8, 5, 6, 13, 6, 52, 8, 9, 7, 8, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [11, 3, 9, 7, 6, 4, 5, 9, 11, 5, 8, 7, 12, 10, 33, 6, 7, 7, 8, 7, 3, 9, 9, 6, 4, 8, 4, 7, 7, 8, 8, 9, 8, 11, 4, 7, 3, 7, 15]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [16, 3, 40, 4, 4, 9, 7, 12, 7, 4, 3, 3, 7, 4, 3, 8, 291, 7, 4, 10, 9, 7, 45, 4, 7, 3, 4, 3, 5, 10, 6, 10, 4, 4, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [11, 3, 34, 7, 4, 3, 6, 4, 4, 8, 4, 6, 4, 10, 4, 4, 15, 4, 6, 6, 7, 9, 6, 10, 6, 4, 5, 75, 6, 4, 6, 4, 40, 5, 6, 101, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 6, 10, 8, 8, 15, 3, 5, 8, 8, 7, 21, 3, 7, 6, 6, 4, 8, 4, 6, 7, 13, 14, 4, 6, 6, 3, 4, 6, 4, 4, 3, 9, 4, 36, 11, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [12, 5, 159, 10, 4, 8, 6, 7, 3, 8, 9, 9, 12, 9, 13, 3, 7, 3, 9, 6, 8, 22, 7, 4, 6, 8, 6, 6, 5, 5, 4, 6, 6, 6, 5, 4, 197, 95]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 7, 3, 7, 8, 6, 4, 8, 6, 4, 18, 9, 4, 3, 15, 5, 4, 5, 484, 4, 5, 5, 5, 7, 9, 9, 11, 7, 9, 7, 7, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 3, 3, 5, 8, 4, 4, 5, 6, 7, 4, 4, 3, 4, 7, 11, 5, 3, 7, 4, 7, 9, 7, 6, 10, 4, 7, 4, 7, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 8, 12, 12, 6, 12, 3, 5, 6, 5, 14, 6, 11, 8, 47, 5, 6, 3, 7, 7, 3, 12, 12, 2, 7, 4, 3, 4, 8, 4, 7, 4, 12, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [24, 3, 3, 7, 4, 4, 4, 4, 7, 8, 6, 5, 4, 3, 4, 5, 4, 7, 3, 4, 4, 8, 24, 4, 9, 8, 5, 3, 5, 6, 8, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 4, 7, 3, 4, 4, 7, 2, 8, 11, 6, 7, 7, 10, 4, 3, 6, 5, 9, 5, 61, 8, 6, 5, 36, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [3, 3, 9, 4, 3, 6, 7, 6, 4, 6, 7, 16, 7, 8, 4, 8, 5, 4, 7, 8, 8, 6, 620, 58, 10, 5, 9, 7, 370, 6, 4, 6, 4, 11, 5, 20, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 6, 5, 7, 7, 7, 7, 5, 6, 11, 31, 6, 10, 4, 9, 8, 8, 8, 10, 8, 6, 8, 2, 4, 4, 38, 7, 6, 6, 11, 5, 8, 7, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 6, 8, 5, 3, 3, 15, 9, 10, 5, 6, 3, 10, 9, 18, 6, 10, 44, 9, 3, 6, 9, 6, 2, 3, 7, 8, 5, 6, 411, 7, 13, 4, 4, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 9, 8, 7, 4, 11, 6, 8, 8, 9, 8, 8, 3, 36, 7, 7, 5, 10, 6, 3, 10, 7, 9, 3, 6, 7, 4, 6, 136, 8, 5, 9, 9, 15, 244]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 6, 4, 5, 6, 5, 8, 3, 3, 6, 5, 7, 7, 8, 6, 9, 12, 10, 4, 6, 3, 4, 8, 3, 166, 10, 14, 11, 4, 9, 3, 5, 9, 4, 9, 5, 4, 10, 8, 7, 10, 11]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 5, 6, 12, 3, 6, 4, 8, 4, 12, 8, 3, 3, 6, 5, 11, 427, 6, 39, 7, 14, 6, 8, 8, 8, 4, 10, 9, 4, 9, 7, 5, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [7, 3, 161, 4, 9, 4, 5, 7, 9, 8, 5, 483, 5, 154, 8, 4, 3, 5, 25, 6, 8, 4, 5, 54, 4, 9, 9, 5, 4, 10, 12, 5, 4, 6, 7, 4, 8, 336, 20]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 5, 12, 8, 12, 12, 9, 10, 7, 7, 7, 7, 9, 4, 7, 7, 5, 9, 2, 10, 5, 5, 6, 8, 5, 8, 8, 8, 3, 7, 11, 4, 115, 10, 4, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 4, 7, 9, 8, 7, 6, 7, 6, 7, 15, 6, 12, 4, 4, 10, 145, 7, 5, 8, 7, 8, 251, 8, 83, 7, 9, 6, 7, 7, 3, 4, 4, 6, 3, 6, 3, 3]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 10, 5, 4, 6, 10, 5, 7, 9, 3, 3, 6, 9, 3, 7, 9, 5, 10, 6, 3, 7, 11, 6, 8, 8, 18, 5, 4, 8, 3, 11, 7, 5, 10, 7, 10, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 7, 18, 4, 12, 10, 6, 7, 8, 10, 4, 11, 7, 5, 3, 10, 9, 4, 9, 10, 4, 82, 10, 72, 10, 5, 6, 5, 10, 6, 9, 6, 8, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [10, 7, 8, 5, 11, 5, 10, 5, 8, 4, 3, 3, 4, 6, 3, 5, 8, 10, 7, 6, 10, 3, 7, 7, 4, 85, 5, 7, 4, 199, 239, 8, 9, 6, 5, 6, 4, 8, 10, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [20, 9, 7, 4, 8, 7, 5, 5, 8, 9, 10, 3, 8, 8, 5, 5, 5, 4, 7, 8, 7, 8, 8, 6, 516, 10, 6, 8, 9, 6, 5, 7, 3, 3, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 9, 7, 5, 12, 5, 10, 11, 9, 6, 8, 5, 7, 2, 9, 4, 11, 10, 11, 10, 8, 8, 7, 7, 9, 4, 10, 5, 10, 4, 6, 358, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 6, 5, 5, 5, 9, 8, 8, 6, 7, 11, 25, 3, 6, 5, 4, 4, 8, 11, 4, 4, 9, 9, 4, 4, 5, 4, 13, 4, 6, 146, 12, 5, 36, 5, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 8, 11, 6, 8, 5, 11, 40, 34, 7, 7, 8, 8, 7, 8, 5, 7, 5, 4, 6, 4, 9, 13, 8, 4, 11, 12, 10, 301, 9, 5, 11, 5, 10, 5, 8, 4, 4, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 13, 7, 9, 4, 7, 8, 8, 4, 4, 7, 5, 7, 8, 4, 10, 5, 6, 8, 8, 47, 269, 11, 9, 5, 8, 8, 7, 9, 11, 4, 6, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 7, 4, 10, 4, 4, 4, 3, 4, 6, 11, 162, 9, 11, 8, 5, 6, 8, 6, 5, 3, 4, 3, 6, 4, 11, 4, 4, 9, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [10, 13, 6, 7, 7, 7, 11, 7, 9, 5, 62, 33, 4, 4, 7, 6, 9, 6, 11, 5, 12, 6, 4, 7, 9, 15, 17, 7, 9, 11, 6, 8, 6, 2, 9, 9, 9, 41, 8, 8, 26, 4, 6, 16]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [30, 13, 5, 10, 4, 3, 5, 322, 4, 7, 13, 7, 4, 4, 3, 12, 6, 9, 179, 6, 6, 25, 5, 4, 13, 5, 5, 10, 7, 13, 11, 8, 5, 4, 5, 4, 5, 6, 48]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 10, 10, 4, 7, 4, 7, 6, 6, 4, 7, 4, 5, 4, 8, 4, 4, 8, 9, 3, 7, 12, 5, 8, 7, 11, 4, 13, 6, 4, 7, 4, 8, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 8, 4, 12, 5, 8, 3, 4, 12, 8, 12, 8, 6, 5, 9, 9, 9, 7, 9, 8, 10, 5, 6, 11, 3, 11, 3, 8, 3, 10, 5, 12, 9, 7, 8, 8, 10, 8, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [16, 3, 6, 6, 4, 6, 3, 3, 4, 11, 3, 6, 8, 7, 4, 5, 9, 11, 4, 12, 17, 9, 5, 3, 6, 131, 8, 23, 9, 4, 4, 4, 8, 6, 4, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 11, 9, 9, 9, 6, 12, 5, 4, 3, 7, 8, 6, 9, 6, 7, 4, 10, 5, 11, 26, 11, 6, 4, 7, 4, 8, 410, 4, 8, 12, 9, 6, 4, 8, 4, 9, 5, 104, 6, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [10, 5, 9, 10, 5, 8, 7, 9, 8, 9, 4, 8, 9, 4, 4, 44, 5, 7, 5, 7, 7, 7, 6, 4, 7, 7, 10, 3, 12, 10, 8, 9, 6, 8, 8, 11, 4, 7, 6, 127, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [13, 7, 6, 3, 7, 3, 32, 11, 9, 5, 7, 4, 4, 8, 4, 13, 8, 10, 9, 9, 9, 17, 12, 5, 10, 4, 437, 7, 14, 8, 12, 5, 4, 11, 9, 7, 7, 9, 7, 10, 9, 7, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [14, 11, 10, 5, 5, 6, 10, 4, 16, 20, 9, 10, 5, 16, 5, 4, 8, 6, 4, 12, 4, 12, 191, 16, 9, 10, 9, 5, 5, 18, 115, 10, 8, 7, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [9, 3, 7, 7, 3, 4, 3, 6, 6, 4, 4, 4, 3, 12, 10, 8, 4, 5, 4, 4, 10, 11, 5, 4, 7, 7, 6, 9, 20, 5, 6, 8, 7, 10, 105, 8, 6, 8, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [12, 3, 9, 5, 15, 9, 6, 3, 5, 8, 12, 10, 16, 9, 4, 7, 7, 11, 5, 5, 9, 10, 5, 6, 8, 2, 9, 13, 10, 7, 13, 8, 10, 10, 11, 5, 7, 6, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [13, 14, 7, 5, 352, 8, 6, 7, 4, 4, 4, 4, 5, 8, 12, 43, 3, 11, 8, 10, 19, 4, 8, 8, 7, 5, 5, 7, 15, 7, 6, 8, 5, 5, 7, 80]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 9, 4, 6, 11, 7, 20, 6, 3, 8, 11, 8, 5, 6, 4, 4, 5, 6, 8, 4, 15, 4, 6, 4, 10, 8, 8, 5, 7, 8, 6, 6, 10, 9, 6, 9, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [11, 123, 5, 6, 7, 6, 14, 7, 6, 323, 6, 4, 6, 6, 8, 7, 9, 6, 39, 6, 14, 7, 7, 413, 5, 7, 74, 5, 11, 8, 8, 5, 9, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 7, 6, 7, 7, 4, 8, 3, 8, 6, 7, 8, 3, 10, 11, 9, 7, 7, 11, 4, 9, 9, 14, 7, 8, 8, 7, 8, 6, 3, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [5, 6, 10, 6, 10, 8, 7, 7, 7, 236, 96, 5, 13, 8, 6, 6, 9, 7, 6, 7, 8, 10, 4, 15, 5, 11, 8, 6, 7, 14, 8, 8, 6, 15, 6, 7, 4, 9, 6, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [11, 3, 5, 8, 4, 8, 10, 6, 5, 4, 104, 100, 7, 6, 17, 9, 8, 6, 12, 4, 5, 6, 8, 5, 6, 5, 5, 13, 4, 4, 6, 9, 6, 9, 3, 14, 8, 13, 3, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [15, 4, 5, 10, 5, 4, 8, 3, 11, 5, 5, 16, 3, 8, 4, 6, 5, 6, 6, 9, 7, 9, 7, 6, 9, 9, 10, 7, 6, 124, 6, 8, 6, 8, 14, 5, 5, 5, 10, 4, 4, 5, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [5, 7, 10, 5, 4, 7, 9, 14, 5, 10, 7, 3, 9, 8, 8, 8, 4, 8, 5, 6, 4, 6, 8, 5, 12, 8, 8, 6, 9, 3, 6, 13, 8, 5, 10, 6, 6, 7, 256]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 16, 6, 6, 8, 7, 6, 7, 4, 9, 8, 7, 6, 6, 3, 10, 6, 8, 5, 7, 9, 6, 9, 3, 7, 4, 8, 6, 4, 6, 8, 6, 4, 5, 4, 4, 4, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [26, 3, 7, 10, 7, 4, 10, 261, 4, 14, 8, 19, 4, 7, 8, 7, 8, 5, 21, 5, 5, 6, 9, 7, 104, 11, 16, 3, 7, 32, 452, 5, 4, 7, 4, 8, 7, 10, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 6, 5, 3, 8, 7, 9, 6, 7, 7, 10, 5, 34, 4, 10, 11, 3, 9, 9, 6, 8, 7, 5, 106, 12, 7, 6, 5, 4, 6, 11, 8, 5, 6, 10, 8, 5, 8, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 7, 3, 7, 7, 5, 12, 7, 6, 4, 11, 10, 13, 6, 7, 6, 10, 24, 12, 6, 7, 5, 7, 7, 10, 9, 7, 9, 5, 7, 8, 5, 3, 9, 5, 6, 7, 14, 4, 11, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 9, 3, 7, 7, 5, 10, 5, 11, 8, 8, 7, 5, 12, 8, 18, 4, 6, 6, 6, 3, 5, 8, 7, 7, 7, 4, 4, 4, 9, 7, 6, 9, 6, 8, 425, 9, 10, 6, 6, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [2, 4, 8, 9, 5, 8, 13, 8, 4, 4, 170, 15, 6, 12, 12, 13, 8, 4, 8, 3, 7, 6, 4, 8, 8, 7, 14, 7, 9, 4, 6, 7, 9, 9, 6, 5, 4, 9, 5, 6, 6, 12, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [3, 8, 182, 8, 8, 4, 8, 9, 6, 7, 12, 59, 14, 4, 8, 3, 13, 5, 7, 4, 8, 7, 5, 9, 4, 3, 4, 5, 9, 6, 8, 4, 3, 4, 5, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 7, 9, 4, 13, 16, 10, 7, 9, 11, 10, 12, 21, 7, 8, 7, 96, 9, 10, 6, 5, 7, 12, 5, 22, 8, 9, 6, 4, 4, 8, 93, 8, 6, 9, 7, 6, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [5, 10, 6, 8, 10, 11, 7, 8, 5, 6, 8, 10, 4, 9, 12, 6, 4, 8, 12, 16, 7, 8, 11, 11, 368, 4, 4, 12, 9, 4, 8, 11, 5, 5, 20, 10, 165, 5, 7, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [2, 164, 4, 7, 5, 7, 10, 11, 14, 13, 12, 9, 11, 11, 11, 7, 6, 11, 7, 6, 7, 11, 6, 6, 7, 11, 7, 6, 6, 5, 7, 5, 50, 6, 14, 6, 9, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 8, 6, 4, 8, 10, 4, 13, 6, 7, 4, 5, 7, 19, 12, 4, 4, 6, 6, 4, 10, 5, 4, 42, 55, 42, 9, 4, 4, 5, 12, 6, 6, 6, 7, 9, 7, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 6, 8, 8, 9, 8, 9, 15, 15, 9, 10, 8, 6, 10, 360, 9, 11, 12, 4, 17, 4, 12, 6, 8, 12, 11, 6, 11, 5, 15, 4, 644, 6, 51, 4, 13]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [19, 7, 10, 4, 6, 19, 16, 8, 4, 5, 19, 21, 7, 14, 3, 12, 14, 12, 17, 13, 4, 3, 15, 5, 11, 10, 12, 15, 5, 8, 7, 7, 4, 4, 4, 13, 11, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 3, 10, 5, 426, 4, 3, 7, 172, 8, 9, 4, 9, 11, 4, 7, 4, 8, 13, 6, 8, 7, 16, 7, 3, 9, 13, 6, 6, 11, 8, 9, 6, 7, 7, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 6, 8, 6, 8, 11, 6, 18, 5, 11, 6, 12, 20, 6, 9, 4, 4, 10, 7, 6, 9, 9, 6, 13, 6, 13, 9, 8, 13, 6, 9, 10, 6, 4, 6, 5, 5, 6, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [6, 13, 11, 10, 10, 9, 6, 13, 9, 7, 15, 6, 6, 5, 6, 9, 4, 9, 5, 5, 5, 10, 8, 5, 216, 268, 10, 12, 15, 6, 8, 4, 4, 6, 7, 17, 8, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [9, 10, 4, 5, 11, 25, 3, 6, 5, 6, 5, 67, 7, 9, 8, 20, 9, 4, 5, 6, 10, 13, 4, 14, 8, 17, 9, 114, 3, 14, 5, 10, 41, 5, 11, 12, 160]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [19, 8, 5, 5, 6, 4, 11, 13, 9, 173, 8, 20, 5, 4, 4, 9, 5, 19, 11, 17, 20, 5, 7, 4, 5, 4, 9, 6, 3, 40, 6, 252, 12, 10, 6, 11, 260, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 7, 11, 7, 5, 7, 12, 19, 5, 6, 3, 7, 4, 4, 8, 4, 5, 10, 7, 7, 6, 6, 7, 6, 6, 14, 5, 14, 4, 14, 11, 3, 4, 14, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [5, 14, 9, 11, 6, 11, 15, 12, 6, 7, 4, 8, 6, 15, 4, 4, 8, 7, 5, 6, 12, 7, 14, 9, 6, 5, 221, 9, 3, 4, 14, 4, 4, 4, 8, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 10, 11, 6, 9, 69, 64, 8, 11, 8, 12, 4, 14, 7, 150, 15, 8, 10, 13, 20, 5, 15, 10, 12, 12, 9, 4, 9, 10, 11, 10, 10, 11, 9, 10, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [10, 15, 17, 10, 10, 4, 8, 4, 11, 7, 9, 8, 5, 7, 11, 49, 13, 10, 6, 4, 8, 12, 19, 9, 5, 12, 7, 9, 13, 4, 3, 7, 6, 9, 8, 8, 28, 10, 9, 9, 8, 13, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [7, 12, 9, 9, 7, 8, 4, 17, 9, 13, 4, 14, 11, 5, 7, 103, 4, 24, 6, 6, 9, 8, 5, 4, 8, 11, 5, 7, 4, 103, 4, 15, 9, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [16, 10, 5, 8, 7, 6, 8, 7, 8, 264, 8, 7, 10, 7, 9, 6, 17, 11, 4, 6, 5, 18, 11, 11, 5, 77, 5, 5, 5, 7, 3, 8, 6, 7, 8, 10, 4, 4, 7, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 5, 10, 6, 6, 13, 10, 9, 5, 8, 55, 12, 4, 5, 9, 526, 6, 6, 13, 8, 8, 8, 50, 3, 15, 3, 15, 64, 10, 5, 5, 9, 6, 3, 3, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [9, 4, 6, 8, 7, 6, 8, 12, 7, 7, 17, 7, 10, 7, 7, 7, 109, 4, 4, 6, 7, 4, 5, 8, 8, 6, 25, 9, 6, 10, 7, 5, 10, 9, 10, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [10, 7, 116, 6, 10, 9, 11, 11, 6, 5, 10, 9, 10, 11, 4, 8, 8, 7, 7, 7, 10, 8, 10, 6, 7, 6, 7, 7, 7, 13, 11, 4, 10, 5, 10, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 9, 12, 7, 7, 10, 7, 10, 4, 11, 6, 8, 12, 4, 4, 5, 8, 10, 10, 11, 440, 7, 22, 6, 12, 8, 6, 6, 10, 7, 10, 8, 6, 7, 10, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 119, 8, 10, 7, 6, 8, 9, 8, 11, 11, 3, 7, 7, 7, 9, 8, 3, 12, 4, 3, 8, 17, 3, 8, 7, 10, 11, 16, 50, 10, 7, 8, 7, 10, 7, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [7, 11, 16, 5, 4, 8, 5, 290, 13, 9, 6, 9, 3, 8, 25, 7, 6, 59, 4, 8, 94, 8, 10, 18, 7, 4, 13, 6, 4, 8, 6, 4, 8, 3, 10, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 7, 6, 6, 8, 8, 4, 11, 3, 10, 8, 6, 8, 7, 4, 6, 7, 5, 3, 5, 7, 7, 5, 5, 5, 7, 7, 14, 3, 7, 7, 222, 10, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [20, 5, 260, 7, 8, 8, 20, 7, 7, 10, 282, 9, 5, 8, 10, 12, 7, 6, 9, 38, 10, 5, 7, 11, 549, 7, 3, 107, 8, 9, 10, 10, 6, 9, 6, 15, 4, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [20, 9, 3, 324, 6, 8, 5, 4, 11, 6, 15, 7, 8, 3, 4, 3, 9, 7, 10, 16, 8, 14, 6, 6, 10, 9, 3, 11, 6, 3, 18, 7, 9, 36]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 6, 4, 7, 6, 7, 4, 7, 4, 7, 8, 5, 4, 4, 6, 6, 6, 4, 5, 7, 8, 6, 3, 5, 7, 7, 4, 4, 4, 6, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 8, 4, 5, 9, 6, 8, 6, 12, 22, 8, 5, 6, 5, 14, 4, 7, 5, 8, 9, 4, 4, 9, 5, 9, 8, 5, 6, 10, 7, 8, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 7, 4, 7, 6, 11, 8, 10, 19, 7, 7, 3, 7, 3, 6, 9, 83, 15, 13, 6, 7, 10, 99, 8, 3, 11, 14, 3, 4, 8, 3, 6, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [27, 6, 6, 5, 4, 6, 4, 13, 8, 6, 5, 4, 3, 10, 4, 4, 4, 6, 5, 6, 4, 6, 10, 11, 4, 9, 6, 6, 3, 8, 10, 8, 8, 5, 5, 9, 9, 5, 5, 303, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 6, 8, 9, 4, 7, 5, 7, 5, 8, 8, 6, 7, 4, 8, 7, 7, 4, 4, 7, 5, 5, 7, 6, 6, 6, 6, 3, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 6, 6, 4, 7, 4, 4, 4, 3, 16, 6, 10, 6, 7, 9, 8, 7, 11, 5, 5, 6, 5, 6, 10, 6, 42, 7, 11, 6, 5, 5, 8, 7, 6, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 9, 48, 4, 5, 7, 4, 10, 5, 7, 11, 5, 7, 6, 6, 10, 8, 22, 8, 8, 5, 7, 8, 7, 4, 6, 8, 9, 127, 6, 5, 5, 6, 4, 26, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 12, 7, 13, 8, 11, 3, 3, 6, 4, 6, 5, 16, 5, 6, 9, 7, 9, 4, 7, 19, 13, 8, 15, 4, 4, 5, 18, 3, 8, 4, 8, 18, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [3, 9, 6, 10, 6, 10, 7, 11, 10, 9, 9, 294, 7, 3, 11, 6, 10, 22, 10, 10, 10, 5, 4, 4, 3, 390, 9, 5, 9, 10, 6, 7, 10, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [9, 9, 8, 6, 11, 10, 11, 10, 9, 7, 7, 10, 3, 4, 7, 8, 5, 9, 7, 12, 4, 132, 5, 11, 4, 9, 9, 13, 8, 7, 6, 8, 4, 30, 9, 6, 3, 2]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [16, 16, 6, 6, 8, 11, 6, 14, 15, 25, 9, 7, 17, 5, 15, 7, 8, 4, 12, 12, 4, 15, 417, 5, 6, 6, 6, 17, 20, 5, 11, 16, 8, 7, 27, 22, 5, 8, 15, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [6, 12, 16, 8, 16, 13, 9, 6, 10, 6, 9, 15, 5, 11, 6, 13, 4, 4, 9, 9, 9, 11, 13, 13, 10, 6, 10, 13, 10, 11, 7, 7, 11, 14, 125, 9, 8, 10, 11, 10, 6, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [8, 11, 8, 18, 13, 28, 11, 10, 12, 9, 7, 8, 6, 9, 15, 9, 8, 8, 4, 8, 19, 8, 12, 8, 8, 9, 9, 10, 10, 12, 10, 15, 10, 12, 15, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [12, 8, 8, 4, 10, 8, 6, 12, 6, 7, 8, 12, 7, 9, 4, 8, 6, 3, 11, 4, 10, 32, 260, 44, 9, 10, 6, 6, 7, 6, 7, 7, 10, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 3, 5, 8, 5, 5, 6, 5, 16, 11, 9, 6, 8, 8, 6, 4, 19, 5, 5, 8, 6, 6, 5, 9, 12, 6, 11, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [15, 7, 5, 6, 13, 9, 4, 5, 4, 7, 10, 6, 5, 7, 10, 5, 22, 7, 5, 13, 7, 11, 7, 8, 8, 6, 6, 7, 6, 11, 17, 6, 11, 6, 11, 10, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 8, 6, 6, 4, 13, 9, 9, 7, 5, 6, 7, 7, 6, 7, 6, 11, 6, 8, 5, 10, 12, 8, 9, 6, 13, 4, 11, 5, 7, 8, 5, 9, 27]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [6, 10, 4, 12, 5, 5, 8, 8, 3, 7, 3, 4, 6, 11, 9, 6, 7, 9, 5, 4, 7, 11, 4, 5, 11, 5, 5, 5, 5, 6, 6, 5, 5, 3, 3, 3, 3, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [8, 8, 9, 5, 10, 9, 6, 9, 5, 8, 5, 10, 7, 7, 8, 10, 7, 4, 11, 10, 7, 10, 8, 3, 9, 8, 7, 7, 7, 5, 80, 42, 21, 6, 14, 10, 7, 9, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 5, 5, 6, 9, 6, 5, 5, 9, 10, 7, 9, 6, 10, 7, 5, 5, 10, 10, 33, 6, 6, 5, 4, 309, 4, 4, 20, 7, 13, 5, 6, 4, 6, 6, 9, 7, 5, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 10, 7, 6, 7, 155, 9, 7, 7, 7, 11, 4, 12, 8, 10, 5, 6, 7, 4, 9, 4, 67, 12, 9, 6, 7, 8, 9, 10, 6, 11, 6, 4, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [2, 8, 5, 6, 4, 11, 15, 10, 11, 4, 7, 13, 9, 10, 7, 8, 3, 16, 12, 9, 8, 6, 8, 8, 7, 10, 8, 7, 9, 8, 7, 7, 8, 8, 12, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 6, 6, 11, 10, 10, 8, 12, 8, 7, 7, 12, 15, 8, 9, 9, 9, 4, 11, 8, 3, 9, 9, 7, 6, 7, 9, 10, 9]
length(C_list) = 31
termination_sub = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [10, 7, 6, 5, 7, 4, 7, 11, 5, 6, 15, 4, 6, 9, 7, 4, 11, 5, 5, 13, 5, 7, 7, 3, 479, 19, 4, 9, 6, 5, 10, 4, 3, 6, 8, 7, 4, 3]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 5, 3, 4, 4, 8, 9, 6, 4, 8, 10, 5, 5, 7, 12, 9, 5, 6, 5, 5, 7, 4, 6, 5, 9, 9, 7, 4, 311, 7, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [4, 14, 7, 3, 4, 4, 7, 9, 9, 7, 5, 3, 10, 9, 7, 4, 4, 10, 10, 110, 10, 104, 7, 7, 7, 10, 6, 11, 41, 7, 7, 7, 8, 11, 5, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [19, 7, 5, 3, 5, 8, 8, 14, 11, 9, 4, 7, 9, 8, 9, 7, 13, 5, 4, 15, 13, 4, 228, 4, 11, 8, 9, 8, 10, 5, 7, 6, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 9, 9, 9, 8, 4, 5, 4, 11, 11, 4, 11, 4, 7, 16, 8, 10, 28, 6, 5, 3, 5, 5, 6, 5, 4, 6, 5, 78, 10, 9, 4, 9, 9, 3, 10, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [14, 9, 7, 8, 4, 6, 7, 6, 7, 9, 10, 8, 5, 11, 9, 6, 7, 5, 9, 3, 6, 8, 74, 7, 3, 4, 4, 8, 5, 9, 5, 7, 418, 5, 5, 5, 7, 4, 4, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 3, 11, 3, 6, 8, 19, 15, 16, 8, 5, 7, 32, 4, 5, 4, 7, 4, 8, 4, 4, 9, 13, 5, 7, 10, 3, 10, 9, 6, 11, 4, 9, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [5, 13, 4, 21, 5, 5, 3, 7, 9, 15, 15, 7, 6, 9, 9, 3, 14, 6, 10, 10, 6, 3, 4, 7, 4, 8, 6, 6, 4, 11, 6, 8, 15, 7, 7, 281, 8, 9, 6, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [16, 7, 7, 5, 8, 9, 8, 9, 4, 6, 96, 11, 11, 8, 11, 8, 10, 19, 9, 6, 8, 3, 4, 9, 46, 9, 4, 12, 7, 7, 6, 10, 289, 6, 4, 19, 5, 6, 14, 7, 10, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [16, 8, 8, 7, 5, 10, 10, 6, 11, 6, 9, 9, 3, 14, 11, 8, 8, 22, 5, 10, 13, 6, 14, 10, 32, 10, 6, 5, 8, 5, 15, 42, 12, 12, 13, 4, 14, 11, 7, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [11, 6, 7, 4, 7, 10, 7, 6, 8, 4, 4, 7, 9, 6, 5, 4, 10, 305, 8, 130, 9, 3, 9, 9, 11, 9, 5, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [3, 16, 6, 7, 8, 9, 7, 11, 18, 12, 13, 7, 7, 7, 6, 9, 6, 11, 6, 12, 5, 13, 9, 5, 10, 9, 8, 15, 13, 6, 7, 6, 5, 9, 8, 8, 10, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [15, 8, 6, 2, 9, 8, 30, 30, 11, 8, 9, 10, 9, 8, 9, 9, 7, 11, 14, 7, 8, 9, 8, 8, 167, 9, 11, 9, 6, 26, 30, 8, 13, 5, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 9, 11, 8, 6, 6, 7, 122, 4, 7, 8, 7, 4, 15, 9, 4, 9, 6, 6, 6, 7, 4, 10, 9, 7, 9, 16, 6, 6, 4, 5, 8, 8, 6, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 4, 4, 4, 10, 142, 20, 5, 9, 4, 4, 7, 4, 6, 7, 16, 9, 9, 9, 14, 6, 28, 271, 8, 3, 10, 5, 7, 35, 4, 5, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 12, 10, 10, 9, 12, 3, 12, 7, 8, 7, 8, 11, 9, 11, 10, 9, 4, 311, 6, 8, 10, 3, 10, 10, 12, 15, 9, 5, 5, 6, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [12, 7, 10, 7, 11, 10, 8, 7, 10, 10, 9, 10, 8, 6, 8, 10, 8, 8, 10, 7, 52, 20, 7, 10, 8, 6, 8, 8, 8, 8, 8, 8, 8, 6, 13]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 10, 5, 10, 8, 7, 7, 9, 9, 9, 13, 6, 9, 11, 7, 6, 10, 7, 9, 9, 7, 4, 12, 17, 6, 9, 8, 8, 3, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [14, 13, 6, 5, 6, 6, 6, 9, 6, 9, 9, 4, 6, 6, 7, 8, 9, 9, 10, 7, 4, 3, 650, 80, 6, 6, 6, 5, 7, 5, 5, 7, 9, 9, 6, 97, 8, 5, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 339, 4, 10, 3, 6, 4, 3, 4, 4, 6, 8, 7, 12, 6, 9, 12, 10, 4, 8, 9, 5, 7, 10, 11, 34, 4, 14, 8, 16, 7, 11, 10, 4, 8, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [11, 8, 9, 12, 10, 5, 8, 6, 6, 4, 4, 9, 5, 7, 4, 5, 6, 7, 7, 4, 5, 304, 4, 7, 3, 10, 4, 5, 4, 71, 9, 7, 10, 5, 10, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [33, 10, 5, 8, 7, 7, 7, 5, 230, 4, 10, 15, 8, 16, 3, 10, 25, 9, 8, 8, 7, 6, 11, 8, 7, 10, 16, 7, 9, 9, 9, 16, 11, 7, 81, 8, 11, 8, 20, 10, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [3, 19, 4, 3, 7, 7, 6, 5, 9, 3, 4, 6, 7, 8, 450, 9, 4, 8, 4, 4, 24, 531, 7, 9, 4, 8, 12, 8, 59, 6, 10, 6, 3, 5, 6, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 6, 329, 7, 10, 7, 6, 6, 13, 9, 8, 8, 13, 8, 8, 8, 9, 7, 10, 4, 6, 5, 4, 7, 12, 4, 11, 10, 17, 10, 10, 8, 10, 5, 9, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 8, 7, 7, 10, 12, 6, 11, 12, 7, 539, 8, 5, 8, 10, 10, 4, 9, 3, 10, 9, 10, 10, 5, 15, 9, 9, 6, 9, 6, 3, 3, 4, 4, 12, 12, 51, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [18, 9, 8, 9, 6, 11, 10, 8, 8, 10, 11, 8, 8, 8, 10, 6, 11, 8, 9, 8, 7, 8, 9, 11, 12, 8, 10, 8, 144, 17, 7, 11, 6, 9, 9, 12, 9, 8, 11, 5, 9, 11, 8, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [3, 8, 7, 9, 13, 16, 7, 7, 8, 7, 16, 5, 10, 7, 10, 5, 7, 9, 23, 9, 7, 6, 7, 8, 10, 14, 7, 6, 8, 8, 3, 10, 182, 25, 7, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 12, 8, 5, 10, 5, 5, 4, 10, 8, 9, 13, 11, 10, 9, 6, 10, 6, 462, 8, 9, 7, 29, 4, 7, 11, 6, 10, 4, 5, 12, 7, 7, 4, 4, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 10, 4, 8, 4, 9, 10, 13, 10, 9, 10, 12, 8, 9, 7, 11, 106, 13, 6, 4, 8, 7, 7, 7, 6, 8, 7, 7, 4, 5, 9, 6, 9, 8, 12, 9, 14, 9, 5, 8, 10, 12]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [16, 8, 5, 5, 5, 7, 5, 6, 5, 5, 9, 6, 9, 5, 13, 6, 15, 8, 11, 5, 363, 7, 5, 5, 11, 10, 9, 6, 5, 9, 4, 5, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 6, 7, 9, 5, 9, 5, 9, 8, 5, 5, 9, 10, 10, 9, 5, 9, 6, 14, 5, 8, 8, 7, 8, 9, 6, 369, 10, 7, 5, 9, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [7, 11, 8, 13, 11, 10, 8, 11, 6, 6, 6, 13, 4, 6, 8, 10, 8, 11, 9, 3, 6, 98, 6, 10, 12, 10, 6, 7, 9, 10, 9, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [12, 9, 5, 5, 4, 3, 7, 8, 7, 12, 6, 6, 9, 14, 8, 9, 50, 9, 8, 3, 40, 10, 7, 4, 10, 4, 11, 7, 9, 7, 9, 7, 227, 8, 8, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 10, 8, 14, 6, 15, 7, 4, 69, 18, 5, 6, 13, 10, 6, 5, 11, 6, 10, 12, 8, 9, 6, 6, 7, 4, 12, 7, 12, 8, 6, 10, 9, 6, 8, 119, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 9, 11, 9, 14, 12, 16, 6, 6, 6, 18, 6, 9, 4, 14, 6, 14, 437, 430, 7, 7, 7, 8, 10, 8, 6, 9, 6, 6, 9, 6, 6, 6, 11, 15, 7, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [4, 4, 227, 6, 8, 7, 7, 6, 7, 6, 6, 7, 6, 12, 4, 7, 4, 10, 113, 9, 4, 5, 12, 4, 5, 6, 6, 6, 9, 22, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [21, 12, 5, 8, 6, 13, 7, 3, 6, 11, 4, 4, 5, 7, 357, 6, 50, 9, 4, 11, 6, 4, 9, 21, 7, 19, 266, 7, 6, 11, 6, 3, 10, 26, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [21, 10, 334, 4, 10, 7, 6, 4, 7, 8, 9, 7, 7, 12, 6, 4, 7, 4, 6, 10, 6, 5, 4, 9, 15, 4, 7, 4, 7, 10, 6, 6, 19, 4, 11]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [23, 7, 12, 6, 6, 15, 8, 6, 12, 4, 10, 8, 9, 6, 11, 9, 4, 10, 30, 6, 6, 5, 6, 11, 13, 9, 6, 9, 12, 9, 6, 10, 6, 9, 14]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [5, 10, 7, 10, 3, 11, 11, 9, 7, 17, 10, 9, 10, 10, 15, 7, 12, 15, 9, 9, 10, 3, 4, 13, 13, 11, 9, 13, 8, 13, 93, 7, 8, 13, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [6, 10, 8, 11, 5, 6, 6, 5, 12, 11, 6, 15, 4, 11, 17, 9, 9, 34, 13, 4, 13, 13, 11, 7, 8, 7, 4, 6, 10, 13, 41, 6, 13, 12, 6, 12, 12, 6, 13, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [12, 5, 8, 5, 4, 11, 7, 6, 8, 9, 6, 3, 5, 7, 6, 26, 8, 8, 7, 7, 5, 6, 9, 9, 5, 9, 7, 5, 5, 10, 10, 7, 6, 4, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 6, 5, 8, 5, 7, 4, 5, 8, 5, 57, 11, 6, 6, 4, 4, 6, 6, 3, 6, 9, 8, 287, 8, 7, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [15, 9, 10, 9, 4, 16, 4, 4, 4, 10, 7, 10, 6, 10, 11, 5, 4, 4, 4, 4, 11, 11, 7, 15, 63, 9, 5, 9, 11, 10, 14, 8, 6, 6, 5, 15]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 8, 8, 4, 6, 8, 4, 5, 6, 5, 62, 6, 6, 7, 5, 11, 5, 6, 5, 4, 6, 7, 10, 15, 7, 5, 6, 8, 3, 6, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 5, 5, 8, 7, 7, 6, 6, 6, 4, 7, 5, 10, 6, 6, 47, 7, 4, 5, 7, 6, 5, 6, 4, 6, 7, 3, 7, 6, 10, 47, 39]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [7, 13, 6, 5, 11, 13, 6, 14, 11, 388, 10, 6, 10, 8, 6, 12, 7, 5, 9, 13, 11, 11, 11, 10, 18, 5, 11, 8, 6, 6, 4, 14, 18, 5, 4, 17, 5, 9, 4, 6, 11, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [11, 10, 9, 4, 6, 9, 8, 6, 6, 7, 9, 10, 6, 11, 8, 7, 7, 7, 8, 6, 5, 11, 5, 9, 11, 6, 238, 6, 6, 5, 6, 5, 72, 4, 7, 55, 5, 12, 12, 12, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 11, 8, 11, 6, 4, 6, 6, 7, 6, 7, 5, 6, 6, 6, 6, 6, 3, 11, 12, 6, 13, 17, 9, 7, 4, 7, 4, 11, 5, 6, 8, 5, 6, 10, 5, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [10, 4, 7, 5, 4, 7, 8, 10, 4, 9, 7, 5, 6, 9, 6, 5, 18, 11, 4, 7, 15, 10, 7, 7, 9, 9, 4, 6, 57, 5, 8, 4, 14, 7, 5, 7, 4, 5, 8, 155, 4, 7, 11, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [8, 10, 99, 5, 10, 9, 6, 5, 4, 9, 9, 137, 9, 9, 7, 10, 8, 4, 9, 7, 7, 11, 5, 7, 4, 7, 4, 6, 8, 8, 8, 7, 6, 7, 48, 6, 9, 5, 11]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [5, 5, 18, 12, 13, 9, 14, 5, 5, 14, 7, 8, 6, 11, 8, 9, 14, 8, 8, 8, 7, 7, 7, 5, 7, 6, 11, 234, 4, 6, 3, 10, 14, 8, 7, 4, 8, 8, 7, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 5, 6, 7, 7, 8, 5, 7, 4, 5, 5, 4, 7, 8, 23, 12, 6, 8, 7, 4, 5, 7, 10, 3, 5, 23, 6, 7, 4, 6, 7, 6, 5, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [3, 371, 5, 9, 8, 7, 4, 6, 7, 6, 7, 6, 7, 10, 8, 9, 5, 8, 3, 6, 7, 6, 9, 6, 8, 5, 5, 5, 5, 10, 9, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 4, 12, 22, 8, 5, 10, 10, 10, 6, 6, 9, 11, 7, 7, 8, 12, 5, 8, 5, 6, 11, 9, 11, 6, 7, 4, 10, 9, 10, 9, 7, 4, 10, 11, 7, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
