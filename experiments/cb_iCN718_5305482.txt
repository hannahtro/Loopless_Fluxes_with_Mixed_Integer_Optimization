┌ Warning: master problem cannot be solved
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:486
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCN718
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCN718
----------------------------------
number of metabolites : 888
number of reactions : 1015
number of genes : 709

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 51
max_cuts = 20
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1015 flux variables and 1902 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [1, 3, 7, 4, 5, 7, 58, 3, 3, 3, 4, 2, 3, 7, 4, 6, 10]
length(C_list) = 17
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 1, 3, 4, 6, 39, 9, 105, 10, 12, 10, 6, 10, 5, 5, 11, 11, 53, 4, 10]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
termination_master = MathOptInterface.INFEASIBLE
BoundsError((missing, Any[1.3135912923645512, 1.31359129236455], Any[1.3135912923645512, 1.31359129236455], missing, missing, missing, missing, missing, 0.08830904960632324, MathOptInterface.INFEASIBLE, 2, Any[(Any[], Any[809], 1), (Any[291, 662], Any[], 2), (Any[521, 525], Any[701], 3), (Any[228], Any[17, 69], 3), (Any[44], Any[761, 762], 3), (Any[22, 748], Any[747], 3), (Any[63, 291, 662], Any[], 3), (Any[166, 631], Any[94, 164], 4), (Any[134, 141, 649], Any[121], 4), (Any[39, 134], Any[17, 121], 4), (Any[44, 60, 198], Any[14, 53], 5), (Any[44, 60, 198, 382], Any[14, 53], 6), (Any[166, 323, 363, 544, 631], Any[94, 164], 7), (Any[44, 60, 198, 315, 552], Any[14, 53], 7), (Any[36, 67, 73, 141, 649], Any[69, 237], 7), (Any[44, 60, 708, 813], Any[49, 53, 61, 641, 656, 760], 10), (Any[34, 40, 43, 44, 55, 60, 73, 74, 86, 88, 114, 116, 122, 127, 128, 130, 142, 178, 198, 221, 225, 232, 235, 315, 323, 334, 343, 344, 348, 457, 458, 460, 461, 521, 525, 552, 640, 720, 772, 774, 777, 780, 822, 836, 837], Any[37, 38, 53, 79, 94, 105, 123, 237, 240, 633, 701, 718, 724], 58), (Any[809], Any[], 1), (Any[761, 762], Any[44], 3), (Any[94, 164], Any[166, 631], 4), (Any[350, 761, 762], Any[44], 4), (Any[14, 53], Any[44, 60, 198], 5), (Any[761, 762], Any[44, 721, 862], 5), (Any[94, 164], Any[44, 166, 631], 5), (Any[14, 53], Any[44, 60, 153, 198], 6), (Any[708, 813, 839], Any[377, 656, 855], 6), (Any[49, 53, 61, 404, 641, 760], Any[44, 60, 424], 9), (Any[49, 53, 61, 641, 737, 740, 760], Any[44, 60, 660], 10), (Any[49, 53, 61, 127, 381, 641, 650, 760], Any[44, 60], 10), (Any[49, 53, 61, 141, 641, 649, 760], Any[44, 60, 660], 10), (Any[49, 53, 61, 641, 760, 854], Any[44, 60, 660, 855], 10), (Any[36, 73, 80, 708, 722, 813], Any[69, 237, 656, 706, 721], 11), (Any[39, 49, 53, 61, 641, 760, 854], Any[44, 60, 660, 855], 11), (Any[14, 43, 62, 143, 675, 712, 747, 826], Any[22, 713, 715, 748], 12), (Any[7, 14, 20, 53, 73, 116, 174, 233, 252, 382, 413, 650, 710, 722, 730, 740, 754, 756, 763, 765, 818, 819, 826], Any[42, 44, 60, 67, 68, 71, 153, 155, 198, 250, 326, 330, 645, 704, 706, 721], 39), (Any[5, 10, 12, 13, 19, 49, 53, 61, 64, 75, 100, 116, 154, 204, 220, 221, 225, 233, 235, 241, 303, 304, 381, 382, 404, 490, 519, 524, 641, 643, 652, 653, 708, 742, 747, 760, 761, 791, 813, 860], Any[44, 60, 67, 69, 166, 237, 240, 256, 424, 628, 631, 663, 833], 53), (Any[2, 4, 6, 14, 31, 34, 35, 40, 43, 53, 59, 66, 72, 73, 74, 80, 90, 94, 109, 110, 114, 116, 118, 135, 140, 142, 143, 144, 148, 150, 161, 164, 167, 176, 179, 189, 204, 211, 221, 235, 303, 305, 306, 308, 309, 324, 328, 356, 357, 385, 400, 409, 413, 414, 419, 544, 614, 638, 639, 646, 649, 666, 674, 679, 685, 708, 712, 714, 743, 744, 792, 794, 797, 804, 813, 824, 825, 826, 834, 860, 861], Any[37, 38, 60, 79, 147, 153, 155, 158, 163, 166, 170, 256, 270, 280, 316, 329, 489, 592, 631, 633, 645, 660, 706, 840], 105)], Any[3.873533010482788, 2.313249111175537, 0.05823016166687012], Any[0.021358966827392578, 0.004343986511230469], Any[3.3448851108551025, 0.26053714752197266]), 16)
