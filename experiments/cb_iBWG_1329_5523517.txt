┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iBWG_1329
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iBWG_1329
----------------------------------
number of metabolites : 1949
number of reactions : 2741
number of genes : 1329

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 11, 11, 11, 11, 11, 11, 11, 3, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 3, 16, 16, 55, 2, 2, 7]
length(C_list) = 7
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 11, 11, 11, 11, 11, 11, 11, 17, 17, 18, 17, 18, 17, 17, 14, 21, 20, 14, 15, 14, 14, 14, 14, 54, 3, 3, 2, 14, 15]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 12, 17, 11, 91, 32, 12, 11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 17, 27, 13, 14, 13, 13, 2, 22, 13, 53, 3, 13, 14, 34, 15, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 2, 6, 12, 11, 11, 19, 12, 12, 12, 2, 2, 40, 16, 17, 16, 17, 16, 16, 14, 19, 14, 13, 14, 13, 13, 7, 13, 13, 54, 6, 6, 13, 13, 128, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 12, 11, 11, 63, 11, 11, 11, 5, 16, 16, 19, 16, 17, 16, 16, 14, 13, 14, 13, 14, 13, 13, 5, 19, 34, 55, 13, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 11, 11, 11, 11, 11, 11, 11, 3, 5, 16, 16, 7, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 13, 53, 7, 4, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 14, 12, 12, 15, 12, 13, 12, 20, 20, 21, 33, 21, 20, 20, 17, 17, 18, 17, 23, 17, 17, 6, 17, 17, 25, 4, 2, 20, 22, 29]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [14, 4, 6, 13, 23, 12, 19, 12, 12, 13, 4, 17, 17, 18, 19, 28, 17, 17, 14, 14, 15, 14, 15, 14, 14, 4, 14, 14, 55, 4, 15, 14, 31, 14, 15, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 11, 11, 11, 11, 11, 11, 11, 6, 3, 43, 16, 16, 17, 16, 17, 16, 16, 109, 13, 14, 13, 14, 13, 13, 13, 13, 53, 6, 6, 11, 13, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 35, 11, 11, 11, 11, 11, 11, 2, 6, 16, 16, 17, 16, 17, 16, 16, 13, 25, 14, 13, 14, 13, 13, 7, 111, 13, 54, 6, 6, 14, 13, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 12, 12, 12, 12, 13, 13, 12, 9, 2, 20, 20, 3, 21, 20, 21, 20, 20, 17, 17, 18, 17, 50, 18, 17, 18, 17, 25, 6, 68, 18, 19, 18, 18, 19, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 11, 11, 20, 11, 11, 11, 11, 2, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 21, 13, 35, 53, 6, 287, 15, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 11, 11, 11, 11, 11, 11, 11, 4, 16, 16, 21, 16, 51, 16, 16, 13, 13, 14, 13, 14, 13, 13, 2, 13, 13, 56, 10, 7, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 12, 11, 11, 11, 11, 11, 11, 8, 20, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 13, 53, 7, 13, 15, 22, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 7, 45, 60, 11, 11, 11, 11, 11, 11, 115, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 13, 13, 53, 7, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 11, 9, 9, 9, 9, 11, 8, 12, 7, 8, 10, 10, 10, 18, 14, 8, 11, 10, 9, 10, 10, 11, 10, 10, 17, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 6, 5, 2, 7, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 17, 2, 3, 2, 2, 30, 4, 6, 3, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [8, 6, 12, 12, 12, 12, 12, 12, 12, 3, 17, 23, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 15, 14, 23, 7, 9, 15, 15, 28, 14, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 11, 4, 5, 5, 29, 6, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 232, 5, 12, 7, 7, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 67, 9, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 5, 6, 5, 69]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 4, 4, 8, 37]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785071096978
thermo_feasible = true
