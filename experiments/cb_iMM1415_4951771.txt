┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 186
max_cuts = 19
(indicator, big_m) = (false, true)
BIG M ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 3, 3, 4, 7, 9, 125, 18, 4, 4, 4, 3, 4, 3, 5, 8, 3, 3, 2, 3, 3, 4, 4, 3, 3, 4, 56, 5, 5, 239, 2, 3, 352, 454, 4, 3, 4, 2, 51, 3, 3, 6, 3, 4, 9, 3, 8, 11, 8, 5, 4, 7, 10, 4, 3, 17, 2, 9, 121, 124, 10, 3, 3, 9, 4, 5, 4, 73, 14, 2, 6, 4, 5]
length(C_list) = 19
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 3, 4, 3, 3, 3, 9, 4, 3, 5, 4, 3, 2, 6, 3, 3, 5, 4, 4, 12, 2, 2, 461, 5, 3, 12, 4, 3, 4, 280, 473, 4, 4, 464, 6, 4, 4, 5, 65, 9, 4, 8, 4, 8, 8, 5, 6, 3, 19, 7, 4, 4, 8, 10, 4, 9, 4, 4, 5, 4, 4, 4, 3, 444, 3, 4, 4, 4, 9, 2, 127, 4, 4, 3, 7, 15, 20, 139, 4, 3, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 4, 4, 7, 6, 10, 4, 5, 4, 11, 4, 4, 3, 24, 6, 4, 6, 4, 3, 7, 37, 4, 4, 3, 2, 4, 4, 5, 2, 2, 4, 4, 2, 3, 5, 4, 4, 4, 3, 4, 4, 40, 4, 3, 4, 5, 3, 16, 17, 3, 4, 10, 3, 4, 7, 4, 368, 10, 37, 11, 40, 4, 17, 15, 3, 6, 3, 3, 4, 3, 4, 7, 4, 5, 7, 4, 2, 4, 4, 24, 4, 3, 2, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 11, 4, 4, 7, 3, 9, 150, 4, 4, 3, 11, 4, 4, 5, 4, 3, 5, 4, 5, 8, 7, 4, 5, 9, 4, 7, 4, 5, 4, 7, 11, 4, 3, 4, 3, 4, 3, 4, 8, 5, 4, 4, 4, 19, 13, 4, 4, 8, 3, 4, 7, 3, 3, 4, 7, 9, 4, 9, 4, 11, 11, 3, 5, 11, 171, 4, 4, 4, 11, 7, 6, 5, 9, 3, 59, 4, 4, 4, 5, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 9, 5, 3, 7, 3, 71, 4, 4, 4, 3, 11, 78, 3, 4, 7, 7, 4, 9, 86, 5, 10, 4, 13, 16, 5, 6, 4, 7, 4, 2, 7, 7, 7, 4, 4, 8, 8, 10, 6, 86, 4, 13, 5, 21, 8, 5, 2, 4, 4, 8, 8, 582, 30, 2, 8, 4, 3, 5, 7, 17, 9, 9, 9, 2, 11, 6, 8, 11, 11, 10, 10, 10, 4, 4, 11, 11, 4, 5, 5, 6, 6, 4, 135, 6, 9, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [12, 3, 6, 4, 8, 10, 8, 8, 4, 243, 9, 7, 7, 7, 11, 563, 8, 12, 47, 5, 5, 181, 8, 10, 6, 7, 5, 4, 4, 41, 5, 8, 6, 68, 2, 7, 14, 5, 9, 9, 10, 19, 6, 5, 10, 13, 10, 13, 3, 3, 8, 11, 5, 6, 5, 5, 8, 4, 16, 7, 9, 8, 15, 129, 36, 361, 7, 32, 8, 9, 5, 15, 9, 12, 5, 513, 6, 8, 8, 9, 7, 5, 15, 9, 8, 4, 8, 46, 9, 8, 4, 6, 3, 5, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 314, 9, 4, 6, 8, 4, 10, 2, 7, 6, 12, 5, 4, 40, 2, 4, 5, 4, 4, 3, 3, 9, 4, 5, 39, 6, 4, 4, 13, 4, 7, 5, 3, 8, 7, 190, 10, 6, 7, 5, 5, 4, 4, 4, 3, 4, 3, 8, 4, 3, 5, 189, 4, 10, 10, 96, 12, 4, 8, 4, 12, 7, 3, 8, 4, 5, 7, 5, 7, 4, 6, 9, 4, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [21, 3, 9, 4, 4, 4, 388, 5, 10, 2, 2, 17, 12, 4, 8, 6, 5, 4, 6, 7, 7, 4, 167, 4, 3, 4, 5, 6, 4, 5, 4, 6, 4, 4, 5, 382, 4, 19, 4, 10, 2, 6, 13, 4, 4, 4, 6, 5, 135, 4, 11, 4, 8, 29, 10, 10, 6, 15, 4, 7, 12, 4, 45, 4, 4, 7, 6, 3, 107, 98, 4, 109, 44, 7, 10, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [7, 4, 11, 9, 5, 10, 5, 11, 200, 3, 2, 5, 13, 2, 5, 9, 11, 5, 5, 8, 6, 5, 5, 4, 19, 3, 40, 2, 6, 11, 8, 5, 3, 7, 3, 6, 4, 2, 5, 8, 6, 500, 5, 4, 2, 4, 3, 5, 5, 13, 3, 11, 11, 5, 4, 6, 9, 3, 102, 10, 11, 11, 5, 374, 5, 6, 4, 13, 11, 4, 33, 6, 106, 6, 3, 43, 9, 6, 5, 5, 6, 12, 10, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 2, 5, 6, 4, 6, 4, 2, 6, 5, 4, 16, 6, 6, 6, 4, 6, 4, 7, 3, 6, 5, 246, 5, 5, 5, 5, 7, 4, 5, 5, 8, 3, 15, 4, 9, 5, 8, 5, 8, 6, 5, 6, 4, 6, 6, 16, 4, 200, 5, 8, 6, 5, 7, 53, 7, 3, 3, 6, 5, 6, 4, 4, 6, 5, 7, 6, 5, 29, 3, 3, 12, 22, 24, 3, 328, 3, 21, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 7, 5, 5, 14, 3, 4, 3, 5, 3, 5, 6, 5, 4, 2, 3, 4, 4, 2, 3, 23, 3, 5, 5, 3, 6, 6, 3, 4, 2, 4, 4, 6, 3, 4, 5, 3, 4, 4, 3, 5, 6, 4, 5, 6, 34, 3, 10, 6, 3, 3, 4, 4, 4, 3, 4, 3, 12, 3, 5, 5, 4, 3, 4, 3, 4, 4, 5, 4, 4, 6, 4, 6, 4, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 7, 3, 3, 6, 3, 5, 5, 5, 3, 6, 2, 4, 5, 4, 5, 9, 2, 2, 5, 4, 3, 5, 4, 4, 4, 7, 4, 8, 3, 6, 5, 3, 4, 5, 4, 4, 8, 4, 254, 13, 5, 4, 3, 4, 3, 5, 3, 4, 4, 4, 4, 5, 4, 5, 4, 4, 32, 3, 3, 4, 3, 4, 5, 5, 5, 5, 5, 40]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 3, 94, 4, 4, 3, 6, 4, 4, 5, 5, 4, 7, 3, 6, 5, 4, 2, 3, 4, 5, 4, 4, 6, 3, 5, 6, 6, 4, 4, 5, 17, 3, 7, 4, 5, 3, 7, 12, 17, 6, 371, 96, 5, 3, 4, 5, 7, 4, 4, 6, 4, 6, 7, 4, 5, 4, 7, 4, 3, 5, 5, 6, 3, 5, 7, 8, 7, 5, 11, 5, 297, 4, 3, 7, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 6, 4, 6, 9, 3, 5, 3, 5, 6, 6, 3, 4, 5, 3, 4, 4, 4, 5, 35, 3, 3, 107, 5, 5, 6, 7, 5, 3, 4, 5, 6, 6, 5, 7, 4, 3, 3, 6, 5, 5, 4, 7, 172, 21, 4, 7, 17, 74, 6, 4, 6, 4, 4, 6, 5, 7, 6, 6, 5, 5, 7, 4, 5, 4, 6, 18, 6, 4, 6, 3, 4, 4, 5, 4, 3, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 4, 7, 6, 7, 3, 4, 6, 5, 5, 5, 6, 4, 172, 5, 8, 5, 4, 5, 4, 4, 5, 6, 5, 4, 4, 4, 5, 29, 4, 5, 6, 3, 5, 16, 7, 12, 4, 7, 5, 7, 94, 7, 16, 5, 5, 5, 6, 8, 5, 6, 4, 7, 7, 6, 6, 7, 4, 6, 5, 22, 4, 84, 6, 9, 26, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 6, 4, 6, 5, 7, 5, 6, 2, 8, 4, 6, 5, 5, 5, 5, 4, 10, 4, 3, 4, 4, 4, 6, 5, 5, 6, 5, 4, 8, 4, 4, 4, 11, 8, 4, 8, 4, 6, 322, 5, 4, 4, 3, 5, 4, 3, 8, 4, 4, 7, 4, 3, 6, 6, 4, 4, 6, 5, 5, 6, 6, 4, 4, 7, 5, 7, 5, 5, 7, 204, 7, 5, 4, 3, 4, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 5, 5, 7, 5, 3, 8, 4, 4, 6, 3, 4, 5, 2, 6, 5, 4, 5, 4, 6, 5, 5, 3, 6, 4, 4, 3, 7, 4, 5, 3, 15, 6, 7, 5, 5, 4, 3, 4, 4, 5, 6, 4, 6, 5, 5, 5, 54, 16, 78, 5, 6, 5, 5, 8, 4, 5, 5, 5, 5, 5, 5, 4, 6, 7, 3, 484, 4, 4, 4, 6, 6, 5, 6, 6, 6, 4, 5, 5, 7, 6, 4, 8, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 6, 7, 5, 3, 4, 6, 4, 46, 5, 4, 5, 4, 3, 5, 4, 6, 50, 6, 6, 3, 5, 5, 6, 334, 6, 8, 3, 4, 44, 6, 4, 5, 5, 7, 4, 15, 8, 5, 4, 69, 6, 6, 5, 5, 7, 5, 7, 11, 6, 5, 4, 6, 6, 5, 5, 5, 4, 5, 6, 4, 4, 8, 4, 4, 6, 5, 4, 7, 5, 4, 6, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 4, 6, 7, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 5, 3, 8, 7, 4, 6, 5, 4, 7, 6, 4, 6, 7, 7, 457, 4, 4, 5, 4, 5, 4, 5, 5, 6, 5, 5, 5, 6, 4, 3, 5, 4, 4, 5, 5, 6, 8, 6, 7, 22, 4, 5, 6, 3, 6, 5, 5, 4, 4, 4, 5, 5, 58, 4, 7, 7, 5, 6, 6, 4, 4, 7, 11, 6, 20, 4, 11, 4, 4, 6, 4, 6, 10, 4, 5, 4, 4, 5, 23, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 6, 6, 8, 4, 6, 122, 4, 5, 5, 4, 5, 116, 4, 3, 3, 5, 4, 5, 4, 48, 4, 5, 182, 6, 5, 4, 4, 4, 3, 3, 11, 5, 4, 8, 4, 6, 14, 7, 6, 6, 5, 5, 4, 5, 5, 43, 12, 38, 9, 6, 4, 5, 3, 4, 6, 6, 5, 4, 6, 4, 7, 4, 4, 5, 4, 4, 3, 40, 5, 4, 6, 4, 4, 4, 6, 6, 4, 5, 7, 6, 4, 7, 5, 4, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 6, 7, 6, 5, 5, 8, 5, 6, 6, 6, 7, 6, 4, 6, 7, 7, 5, 7, 5, 5, 6, 5, 8, 3, 4, 137, 4, 8, 4, 9, 7, 5, 6, 7, 12, 7, 4, 4, 13, 314, 6, 137, 5, 7, 5, 6, 4, 4, 4, 5, 4, 5, 5, 4, 7, 22, 4, 7, 4, 4, 4, 6, 4, 6, 3, 7, 5, 5, 5, 6, 4, 5, 7, 6, 8, 5, 3, 6, 4, 26, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 5, 6, 4, 5, 5, 5, 3, 5, 3, 7, 5, 4, 5, 5, 3, 7, 6, 20, 5, 4, 5, 7, 4, 4, 6, 5, 9, 6, 7, 5, 6, 5, 5, 6, 7, 5, 9, 6, 5, 11, 4, 4, 3, 4, 24, 6, 4, 18, 6, 4, 6, 5, 4, 6, 4, 3, 3, 4, 5, 6, 5, 6, 6, 9, 8, 4, 5, 10, 95, 4, 4, 5, 4, 4, 6, 4, 7, 4, 6, 5, 48, 6, 4, 5, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 5, 4, 4, 6, 242, 4, 5, 4, 4, 5, 4, 6, 5, 4, 6, 5, 5, 4, 3, 4, 4, 20, 4, 5, 6, 4, 5, 4, 4, 5, 35, 4, 4, 15, 4, 6, 6, 5, 7, 7, 8, 4, 5, 6, 5, 10, 5, 3, 5, 4, 4, 6, 5, 6, 5, 6, 9, 21, 4, 4, 5, 4, 7, 7, 6, 250, 6, 5, 6, 4, 50, 5, 5, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 4, 6, 5, 5, 6, 5, 5, 17, 4, 4, 5, 12, 4, 4, 5, 6, 5, 6, 5, 6, 7, 4, 4, 4, 8, 3, 4, 7, 6, 5, 5, 3, 5, 3, 5, 6, 7, 6, 6, 4, 71, 11, 5, 5, 4, 7, 6, 4, 5, 5, 5, 10, 4, 6, 6, 7, 6, 4, 3, 5, 7, 4, 5, 5, 4, 5, 4, 8, 5, 28, 5, 5, 7, 4, 4, 6, 5, 4, 155, 5, 9, 5, 4, 9, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 6, 5, 5, 7, 12, 5, 6, 5, 4, 4, 4, 6, 5, 7, 6, 5, 5, 6, 7, 5, 4, 9, 7, 6, 6, 4, 7, 8, 5, 7, 4, 4, 598, 8, 5, 4, 8, 3, 5, 3, 5, 4, 5, 100, 4, 6, 5, 6, 7, 4, 6, 4, 4, 7, 4, 4, 4, 6, 5, 7, 20, 7, 4, 4, 5, 5, 4, 6, 6, 179, 52, 7, 5, 4, 7, 4, 7, 4, 6, 5, 6, 5, 5, 10, 4, 5, 5, 6, 10, 24]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5, 6, 4, 4, 4, 7, 4, 4, 4, 4, 274, 4, 4, 4, 6, 3, 6, 5, 4, 5, 4, 5, 4, 8, 349, 4, 4, 110, 4, 4, 12, 4, 5, 5, 5, 4, 5, 5, 4, 6, 4, 5, 5, 5, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 57, 4, 7, 7, 4, 5, 4, 5, 6, 6, 4, 4, 5, 7, 6, 5, 5, 4, 6, 7, 6, 9, 6, 7, 5, 4, 7, 8, 5, 4, 5, 5, 6, 6, 6, 5, 7, 5, 7, 4, 5, 4, 4, 5, 4, 4, 31, 5, 4, 9, 4, 5, 5, 5, 5, 8, 3, 6, 9, 5, 6, 5, 5, 6, 5, 7, 6, 4, 5, 6, 5, 20, 4, 4, 6, 5, 6, 4, 8, 4, 6, 18, 100, 3, 4, 83, 4, 6, 5, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 3, 5, 5, 7, 9, 6, 14, 5, 5, 5, 4, 4, 4, 5, 6, 6, 5, 6, 14, 4, 8, 6, 5, 4, 6, 5, 6, 5, 6, 4, 5, 5, 15, 7, 7, 5, 5, 6, 15, 17]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 5, 3, 6, 5, 5, 3, 6, 5, 4, 5, 5, 5, 6, 4, 6, 4, 3, 5, 7, 5, 6, 5, 6, 4, 5, 7, 5, 4, 4, 3, 5, 3, 8, 9, 7, 7, 8, 5, 6, 4, 3, 7, 23, 5, 6, 5, 7, 10, 4, 4, 4, 7, 5, 5, 96, 5, 3, 4, 6, 5, 5, 5, 6, 5, 6, 5, 5, 6, 6, 4, 7, 4, 5, 6, 6, 6, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 4, 4, 5, 5, 4, 4, 4, 4, 5, 3, 4, 6, 5, 5, 3, 5, 5, 4, 4, 408, 3, 6, 6, 4, 5, 6, 38, 4, 4, 5, 389, 5, 6, 5, 7, 4, 8, 4, 6, 5, 3, 5, 5, 5, 154, 4, 4, 6, 4, 4, 11, 4, 4, 6, 6, 4, 5, 6, 4, 5, 7, 6, 7, 5, 4, 32, 34]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 13, 3, 5, 4, 5, 20, 7, 6, 9, 5, 6, 8, 6, 5, 5, 4, 4, 6, 4, 4, 7, 18, 4, 7, 7, 6, 8, 5, 6, 5, 6, 5, 5, 6, 4, 5, 5, 9, 8, 6, 8, 4, 10, 6, 136, 170, 9, 25, 4, 6, 10, 6, 7, 5, 6, 7, 7, 6, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 3, 19, 5, 4, 4, 4, 3, 3, 4, 5, 4, 8, 4, 4, 264, 5, 98, 110, 3, 6, 9, 5, 5, 5, 5, 5, 4, 353, 4, 5, 4, 12, 9, 4, 6, 4, 4, 5, 5, 5, 5, 5, 4, 4, 5, 4, 5, 4, 4, 5, 5, 6, 32, 5, 7, 5, 3, 36]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 6, 3, 4, 3, 3, 5, 3, 4, 405, 4, 4, 3, 3, 6, 4, 5, 4, 4, 6, 4, 5, 5, 7, 5, 31, 6, 5, 7, 161, 4, 5, 5, 4, 4, 6, 103, 39, 5, 4, 4, 3, 6, 8, 7, 6, 3, 5, 7, 5, 3, 5, 4, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [9, 4, 6, 11, 5, 5, 4, 3, 3, 4, 3, 4, 4, 3, 3, 3, 5, 5, 9, 5, 8, 5, 3, 5, 3, 4, 4, 3, 4, 4, 4, 70, 11, 4, 4, 4, 5, 41, 247, 17, 3, 9, 4, 6, 4, 3, 6, 5, 4, 10, 5, 5, 4, 5, 6, 8, 4, 6, 7, 5, 3, 4, 5, 32]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 3, 16, 3, 6, 4, 4, 4, 14, 5, 5, 3, 7, 3, 6, 3, 9, 4, 4, 31, 3, 5, 5, 4, 6, 4, 3, 7, 113, 51, 7, 6, 4, 13, 30, 6, 5, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 35
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
