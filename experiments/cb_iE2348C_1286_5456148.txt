┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iE2348C_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iE2348C_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2703
number of genes : 1287

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 135
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2703 flux variables and 5015 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 4, 4, 2, 2, 2, 2, 4, 2, 4, 2, 3, 2, 2, 2, 3, 4, 3, 13, 3, 3, 2, 2, 3, 3, 137, 17, 3, 2, 2, 3, 5, 3, 5, 4, 4, 3, 3, 3, 5, 3, 16, 14]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 2, 3, 3, 3, 5, 2, 3, 2, 3, 2, 3, 6, 4, 3, 3, 67, 4, 4, 3, 3, 3, 7, 4, 4, 7, 5, 3, 30, 9, 4, 5, 4, 3, 4, 4, 5, 5, 4, 13, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 4, 4, 2, 2, 4, 5, 2, 3, 4, 4, 5, 6, 3, 3, 3, 6, 109, 4, 4, 6, 42, 7, 6, 6, 10, 45]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 3, 4, 5, 3, 4, 3, 6, 4, 4, 4, 5, 4, 4, 6, 4, 4, 6, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 4, 15, 3, 4, 3, 8, 6, 6, 5, 48, 82, 4, 10, 4, 43, 4, 7, 5, 40]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 3, 2, 2, 2, 2, 4, 4, 5, 2, 10, 4, 2, 4, 4, 4, 4, 4, 6, 5, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 4, 3, 3, 10, 129, 3, 7, 5, 91, 7, 9, 4, 3, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 158, 4, 3, 4, 4, 7, 8, 4, 4, 4, 4, 5, 9, 4, 6, 9, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 5, 8, 10, 6, 9, 3, 9, 14, 10, 11, 9, 13, 8, 9, 8, 8, 12, 8, 8, 6, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 6, 6, 7, 17, 6, 9, 6, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 10, 10, 9, 5, 5, 5, 5, 5, 6, 8, 7, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 156, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784520810358
thermo_feasible = true
