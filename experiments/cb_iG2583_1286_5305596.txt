ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iG2583_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iG2583_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2704
number of genes : 1283

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 135
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2704 flux variables and 5017 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 17, 11, 11, 99, 11, 11, 16, 16, 13, 14, 15, 20, 16, 14, 13, 13, 13, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 13, 7, 2, 2, 2, 2, 7, 2, 3, 2, 7, 4, 2, 38, 2, 2, 2, 7, 38, 39, 9, 41, 9, 9, 9, 9, 10, 6, 3, 31, 9, 12, 10, 3]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 3, 5, 3, 38, 4, 3, 2, 3, 2, 7, 3, 3, 4, 3, 97, 2, 4, 94, 4, 6, 6, 16, 3, 6, 7, 5, 4, 59, 3, 5, 3]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 2, 3, 3, 3, 27, 4, 4, 5, 4, 3, 3, 4, 5, 7, 5, 5, 5, 3, 8, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 3, 2, 2, 4, 3, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 7, 186, 6, 6, 9, 6, 17, 116, 6, 11, 6, 7, 9]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 5
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784901024927
thermo_feasible = true
