┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECO103_1326
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECO103_1326
----------------------------------
number of metabolites : 1958
number of reactions : 2758
number of genes : 1327

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2758 flux variables and 5125 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [9, 2, 11, 12, 11, 11, 11, 14, 11, 2, 16, 16, 17, 16, 19, 16, 16, 2, 3, 2, 4, 14, 2, 13, 3, 2, 3]
length(C_list) = 10
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 11, 12, 11, 11, 11, 12, 16, 16, 17, 17, 17, 16, 16, 4, 2, 4, 23, 2, 14, 14, 2, 4, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 14, 15, 11, 11, 11, 11, 16, 17, 17, 16, 17, 16, 16, 6, 2, 2, 2, 14, 15, 4, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 11, 11, 11, 17, 17, 18, 17, 18, 17, 17, 4, 3, 2, 3, 2, 14, 14, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 15, 11, 238, 13, 11, 11, 11, 16, 16, 17, 16, 17, 20, 16, 3, 6, 3, 8, 7, 14, 6, 13, 8, 3, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 9, 11, 11, 226, 11, 11, 11, 11, 16, 29, 41, 25, 17, 16, 16, 3, 6, 5, 7, 6, 6, 2, 13, 7, 3, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 6, 19, 13, 15, 11, 13, 359, 13, 16, 19, 17, 18, 17, 16, 16, 6, 6, 3, 18, 3, 15, 3, 2, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 7, 11, 11, 49, 13, 13, 11, 11, 16, 16, 17, 16, 17, 16, 16, 6, 7, 3, 6, 6, 6, 4, 13, 6, 7, 7, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 10, 11, 11, 13, 11, 12, 11, 11, 16, 16, 17, 16, 17, 41, 16, 6, 7, 3, 6, 5, 14, 2, 13, 8, 7, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 16, 11, 11, 11, 11, 11, 19, 19, 20, 21, 20, 19, 19, 6, 7, 6, 6, 3, 7, 6, 17, 134, 12]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 11, 11, 11, 11, 11, 11, 19, 19, 20, 19, 20, 19, 19, 8, 6, 6, 7, 6, 6, 7, 16, 6, 6, 6, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 24, 7, 2, 4, 4, 2, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 5, 6, 5, 7, 23, 72]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 3, 2, 2, 72]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 21, 2, 4, 3, 5, 4, 6, 4, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785817237609
thermo_feasible = true
