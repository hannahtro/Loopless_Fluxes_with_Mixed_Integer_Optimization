ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAM_Pc455
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAM_Pc455
----------------------------------
number of metabolites : 907
number of reactions : 1074
number of genes : 455

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 21
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1074 flux variables and 2043 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 6, 4, 3, 6, 4, 6, 4, 4, 5]
length(C_list) = 11
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 4, 3, 5, 3, 2]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 3, 3, 5, 4, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 7, 4, 5, 4, 5, 6, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 3, 3, 4, 4, 7, 3, 3, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 7, 3, 3, 6, 3, 4, 4, 3, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 4, 6, 6, 4, 4, 8, 7, 8, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 5, 5, 4, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 2, 4, 4, 6, 4, 5, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 6, 6, 3, 3, 104, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 3, 10, 4, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.6587010617860086
thermo_feasible = true
