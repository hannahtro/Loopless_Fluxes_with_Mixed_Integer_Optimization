┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI39_1322
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI39_1322
----------------------------------
number of metabolites : 1953
number of reactions : 2721
number of genes : 1321

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5050 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 3, 2, 11, 11, 114, 11, 11, 11, 17, 11, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 11, 14, 2, 41, 2, 10, 9, 2, 11, 9, 13]
length(C_list) = 32
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 2, 2, 2, 2, 2, 4, 2, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 2, 3, 5, 3, 3, 8, 3, 4, 3, 4, 3, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 68, 2, 5, 103, 31, 3, 4, 2, 4, 4, 3, 4, 2, 13]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 5, 2, 4, 2, 4, 2, 71]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 5, 5, 97, 6, 9, 3, 2, 30, 111, 4, 2, 3, 4, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 5, 3, 4, 21, 4, 4, 3, 5, 4, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 4, 7, 4, 5, 42]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 2, 2, 11, 300]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 4, 4, 13, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 2, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [20, 6, 4, 6, 4, 3, 12, 7, 3, 5, 6, 6, 5, 14, 8, 15, 8, 7, 7, 7, 8, 6, 5, 6, 8, 6, 7, 8, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 11, 11, 11, 11, 11, 19, 11, 6, 178, 17, 16, 17, 16, 16, 9, 9, 9, 9, 10, 14, 9, 7, 9, 12, 16]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [9, 6, 7, 3, 5, 2, 4, 4, 7, 133, 5, 3, 3, 5, 3, 175, 6, 4, 6, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 6, 60, 4, 9, 4, 9, 6, 4, 16, 5, 14, 5, 5, 14, 6, 7, 9, 8, 8, 6, 4, 4, 8, 8, 36, 7, 7, 11, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 3, 12, 33, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 4, 4, 8, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 8, 4, 4, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 4, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.9828410353940226
thermo_feasible = true
