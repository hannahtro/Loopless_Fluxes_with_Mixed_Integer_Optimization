ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
max_cuts = 59
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8]
length(C_list) = 42
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 5, 3, 7, 11, 4, 3, 81, 179, 104, 147, 4, 111, 33, 4, 11, 6, 18, 8, 4, 5, 5, 19, 4, 7, 5, 4, 8, 12, 3, 11, 8, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 5, 3, 3, 3, 3, 4, 3, 60, 5, 9, 3, 10, 3, 3, 3, 3, 9, 4, 17, 72, 10, 4, 4, 22, 5, 3, 4, 3, 230, 5, 4, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 179, 10, 7, 6, 6, 176, 10, 4, 4, 4, 7, 6, 17, 254, 3, 4, 99, 4, 6, 3, 6, 5, 5, 8, 6, 3, 7, 5, 7, 6, 5, 5, 4, 4, 467, 7, 4, 4, 6, 4, 3, 4, 4, 7, 6, 3, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 158, 3, 6, 3, 4, 5, 7, 5, 7, 11, 7, 7, 5, 5, 4, 119, 12, 5, 188, 4, 4, 7, 4, 3, 10, 11, 7, 3, 5, 4, 3, 3, 16, 4, 4, 5, 4, 33, 11, 7, 38]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 249, 5, 4, 4, 3, 8, 4, 6, 3, 5, 13, 5, 270, 7, 315, 35, 4, 6, 159, 3, 5, 3, 14, 9, 8, 10, 8, 12, 12, 6, 4, 4, 8, 59, 5, 130, 246, 52, 16, 6, 214, 9, 15, 4, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 3, 7, 6, 7, 8, 3, 4, 5, 12, 5, 5, 14, 7, 5, 360, 180, 46, 46, 5, 4, 62, 4, 30, 4, 10, 4, 10, 7, 8, 4, 4, 208, 4, 18, 5, 10, 5, 3, 3, 10, 5, 5, 5, 62, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 8, 5, 8, 9, 10, 193, 51, 4, 3, 8, 23, 4, 4, 9, 4, 5, 4, 3, 4, 4, 8, 162, 4, 5, 3, 7, 10, 5, 4, 13, 6, 342, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 5, 5, 3, 4, 3, 7, 97, 257, 4, 6, 4, 6, 6, 208, 17, 4, 13, 11, 11, 5, 5, 8, 4, 208, 34, 4, 265, 3, 5, 36, 421, 8, 19, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 24, 5, 8, 9, 4, 3, 5, 5, 7, 4, 8, 8, 4, 293, 3, 7, 261, 9, 192, 4, 6, 4, 4, 38, 7, 4, 5, 6, 5, 5, 9, 10, 49, 5, 7, 17, 211, 5, 93, 6, 5, 6, 7, 7, 55]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 3, 5, 4, 4, 4, 4, 7, 4, 7, 4, 5, 10, 317, 4, 18, 62, 11, 105, 6, 4, 6, 5, 5, 4, 5, 5, 7, 65, 3, 6, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [15, 5, 4, 4, 4, 6, 5, 4, 6, 343, 6, 6, 8, 4, 3, 4, 7, 4, 4, 11, 4, 10, 69, 10, 6, 8, 21, 7, 3, 6, 5, 28, 148, 5, 4, 5, 4, 403, 204, 5, 5, 3, 3]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 3, 9, 8, 7, 7, 3, 9, 6, 6, 4, 5, 61, 6, 6, 7, 9, 7, 5, 5, 7, 9, 4, 5, 7, 97, 359, 11, 5, 4, 63, 4, 6, 6, 7, 4, 5, 7, 5, 5, 7, 6, 4, 6, 13, 367, 4, 82, 7, 6, 4, 6, 5]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 4, 4, 4, 4, 7, 5, 9, 5, 4, 28, 4, 3, 255, 3, 4, 4, 5, 261, 6, 9, 4, 9, 40, 6, 8, 8, 6, 5, 4, 5, 10, 149, 147, 5, 9, 3, 49, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [11, 98, 124, 39, 9, 6, 6, 4, 7, 4, 18, 223, 23, 153, 4, 11, 6, 6, 4, 4, 6, 7, 5, 5, 21, 8, 4, 5, 94, 5, 10, 6, 5, 5, 8, 4, 4, 5, 5, 5, 9, 17, 7, 5, 5, 7, 5, 144, 7]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 8, 5, 4, 5, 345, 6, 3, 5, 4, 4, 9, 4, 3, 4, 4, 6, 6, 5, 5, 4, 13, 8, 5, 36, 3, 9, 7, 6, 6, 7, 5, 6, 8, 68, 6, 39]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 5, 3, 8, 8, 5, 4, 7, 4, 5, 4, 8, 8, 7, 4, 6, 8, 9, 9, 6, 6, 4, 5, 4, 7, 4, 20, 14, 5, 4, 17, 5, 4, 4, 4, 51, 9, 10, 7, 6, 5, 8, 10, 5, 12, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 3, 7, 16, 8, 6, 14, 6, 4, 5, 7, 68, 8, 11, 16, 9, 8, 4, 4, 5, 4, 9, 7, 7, 4, 10, 6, 9, 4, 7, 10, 4, 60, 5, 4, 4, 158, 7, 8, 8, 10, 10, 7, 6, 7, 16]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 156, 8, 9, 8, 3, 4, 4, 7, 4, 5, 232, 5, 4, 4, 6, 389, 5, 12, 4, 6, 6, 8, 4, 5, 10, 4, 7, 4, 5, 4, 4, 5, 113, 4, 9, 6, 7, 8, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 8, 3, 4, 6, 27, 6, 6, 226, 74, 4, 28, 8, 12, 5, 5, 15, 10, 4, 9, 303, 11, 7, 126, 6, 26, 8, 3, 5, 6, 28, 6, 5, 29, 5, 6, 6, 5, 6, 7, 5, 5, 36, 4, 8, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 7, 18, 4, 4, 4, 9, 5, 8, 9, 5, 149, 7, 6, 4, 5, 4, 4, 6, 6, 4, 10, 8, 12, 15, 47, 10, 6, 9, 6, 4, 42, 4, 4, 7, 4, 8, 5, 4, 5, 5, 10, 68, 6, 5, 6, 23]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 6, 8, 9, 4, 8, 4, 6, 4, 49, 181, 8, 4, 8, 172, 4, 4, 3, 4, 4, 96, 5, 6, 6, 7, 4, 6, 8, 8, 8, 5, 10, 6, 89, 76, 4, 9, 8, 13, 6, 6, 4, 8, 10, 5, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 6, 3, 10, 6, 7, 6, 4, 4, 5, 4, 4, 5, 10, 4, 4, 5, 6, 4, 9, 4, 5, 5, 14, 10, 5, 7, 4, 4, 5, 17, 9, 4, 120, 155, 4, 7, 5, 5, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 4, 4, 5, 4, 4, 6, 238, 5, 5, 4, 6, 8, 4, 8, 5, 4, 5, 4, 5, 5, 20, 8, 18, 4, 5, 6, 4, 6, 5, 4, 4, 5, 5, 8, 5, 8, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 10, 18, 4, 4, 8, 9, 8, 4, 4, 4, 23, 4, 4, 4, 7, 4, 6, 5, 7, 4, 13, 4, 8, 4, 188, 7, 75, 8, 4, 8, 6, 7, 8, 61, 4, 15, 7, 152, 4, 3, 9, 7, 3, 12, 6, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 202, 10, 6, 34, 5, 6, 4, 4, 7, 8, 61, 6, 14, 8, 13, 4, 6, 47, 4, 4, 4, 9, 8, 4, 4, 5, 5, 9, 4, 8, 12, 7, 8, 5, 5, 4, 6, 17, 7, 6, 3, 6, 5, 5, 3]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 7, 6, 4, 7, 11, 4, 4, 54, 10, 132, 5, 4, 4, 8, 4, 5, 4, 4, 9, 11, 7, 4, 115, 9, 5, 10, 4, 12, 56, 7, 7, 9, 10, 10, 10, 7, 9, 5, 10, 5, 5, 4, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
termination = MathOptInterface.INFEASIBLE
objective_value = 0.010689973084811042
