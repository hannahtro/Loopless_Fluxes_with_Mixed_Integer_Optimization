WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982476 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound -0.982473 is larger than the objective of the primal solution -0.982476. The solution might not be optimal.
WARNING: Dual bound 0.982435 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAPECO1_1312
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAPECO1_1312
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1313

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 2, 3, 3, 2, 12, 2, 4, 3, 3, 3, 3, 2, 3, 2, 3, 6, 3, 4, 2, 3, 3, 4, 2, 3, 2, 2, 2, 7, 12, 254, 3, 3, 4, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 5, 2, 3, 3, 3, 4, 4, 4, 3, 4, 5, 4, 4, 2, 4, 4, 3, 3, 4, 4, 4, 3, 2, 2, 3, 4, 4, 4, 5, 6, 3, 4, 4, 3, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 4, 3, 5, 4, 2, 4, 3, 4, 5, 5, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 6, 65, 5, 5, 6, 4, 8, 46, 5, 9, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 5, 5, 5, 3, 6, 3, 7, 4, 4, 3, 5, 5, 4, 8, 8, 52, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 2, 2, 5, 6, 2, 4, 86, 89, 3, 70, 6, 7, 5, 23, 28, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 2, 6, 6, 9, 6, 7, 2, 2, 6, 6, 6, 7, 29, 8, 7, 25, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 3, 5, 4, 3, 102, 4, 56, 4, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 20, 4, 4, 4, 4, 8, 3, 5, 43, 3, 8, 10, 19, 6, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 12, 4, 16, 13, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 5, 3, 4, 4, 95, 5, 4, 6, 5, 3, 4, 5, 4, 4, 5, 5, 4, 6, 6, 5, 7, 199, 6, 6, 5, 6, 6, 6, 7, 94, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 61, 14, 199, 15, 3, 4, 6, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 3, 4, 4, 11, 17, 5, 11, 20, 11, 5, 14, 12, 11, 14, 11, 14, 15, 14, 15, 16, 113, 14, 17, 14, 11, 11, 17, 11, 5, 12, 5, 7, 5, 7, 8, 9, 8, 8, 9, 7, 5, 4, 4, 4, 7, 5, 4, 5, 4, 4, 6, 6, 4, 5, 94, 5, 4, 7, 4, 7, 7, 7, 5, 5, 6, 4, 5, 12, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 9, 9, 9, 9, 9, 241, 4, 11, 12, 11, 12, 11, 4, 265, 11, 11, 14, 104, 42, 15, 14, 15, 12, 11, 12, 11, 14, 14, 11, 11, 11, 4, 17, 38, 13, 11, 5, 4, 4, 7, 11, 31, 7, 7, 8, 8, 7, 7, 5, 3, 6, 5, 7, 5, 7, 6, 11, 4, 4, 4, 4, 5, 7, 10, 118, 37, 39, 37, 3, 5, 6, 6, 4, 4, 4, 12, 3, 125, 5, 4, 36, 4, 43, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 9, 6, 12, 9, 9, 9, 9, 9, 5, 5, 5, 5, 11, 12, 11, 12, 11, 4, 9, 11, 16, 11, 15, 14, 14, 15, 14, 15, 13, 13, 14, 15, 14, 11, 12, 11, 6, 12, 5, 9, 4, 5, 7, 4, 8, 7, 7, 7, 8, 8, 7, 7, 5, 4, 5, 4, 4, 7, 3, 9, 4, 4, 4, 5, 6, 7, 4, 9, 6, 13, 6, 6, 4, 38, 5, 5, 4, 5, 4, 4, 4, 7, 6, 5, 5, 5, 3, 4, 6, 7, 7, 5, 5, 6, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 9, 9, 9, 9, 9, 9, 9, 4, 5, 11, 12, 11, 12, 11, 5, 11, 11, 11, 4, 14, 11, 14, 15, 14, 15, 11, 12, 11, 12, 11, 14, 14, 11, 11, 12, 11, 7, 12, 5, 4, 5, 7, 12, 5, 7, 7, 30, 8, 8, 7, 12, 5, 4, 4, 5, 4, 5, 7, 5, 5, 5, 5, 5, 5, 5, 26, 11, 4, 4, 8, 5, 5, 4, 3, 5, 5, 4, 11, 5, 5, 4, 4, 5, 4, 5, 5, 5, 6, 5, 4, 4, 8, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 7, 6, 10, 9, 9, 10, 57, 7, 3, 3, 9, 14, 9, 10, 9, 4, 6, 11, 9, 9, 14, 9, 14, 15, 14, 15, 10, 16, 14, 9, 5, 10, 3, 10, 3, 3, 4, 3, 5, 4, 5, 163, 5, 5, 6, 9, 5, 5, 3, 6, 21, 5, 28, 5, 5, 6, 90, 9, 5, 3, 3, 5, 3, 5, 196, 5, 39, 5, 3, 5, 3, 5, 5, 6, 5, 4, 5, 4, 4, 5, 198, 4, 4, 3, 4, 5, 3, 5, 80]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 7, 7, 8, 7, 8, 9, 10, 9, 5, 6, 6, 6, 6, 10, 14, 10, 10, 11, 7, 9, 9, 10, 15, 9, 15, 15, 15, 16, 9, 10, 11, 10, 14, 15, 11, 12, 9, 5, 9, 5, 13, 5, 2, 3, 10, 4, 5, 6, 6, 5, 291, 7, 8, 7, 3, 7, 5, 5, 4, 6, 126, 4, 4, 5, 5, 5, 4, 3, 7, 5, 5, 5, 6, 5, 4, 6, 4, 3, 5, 84, 3, 4, 4, 4, 4, 6, 5, 5, 39, 6, 8, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 9, 6, 9, 9, 9, 9, 11, 9, 3, 4, 11, 12, 5, 11, 12, 11, 11, 11, 20, 14, 11, 14, 15, 25, 17, 123, 14, 14, 11, 5, 11, 37, 13, 5, 4, 4, 7, 13, 8, 8, 7, 7, 8, 8, 7, 7, 9, 5, 4, 4, 4, 4, 7, 4, 7, 7, 4, 5, 101, 9, 5, 5, 8, 36, 37, 36, 6, 5, 3, 4, 4, 4, 5, 4, 5, 6, 4, 4, 5, 35, 5, 5, 4, 5, 7, 4, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 20, 6, 10, 10, 13, 18, 10, 10, 6, 5, 12, 13, 12, 13, 12, 5, 3, 13, 12, 12, 6, 17, 12, 15, 16, 15, 16, 15, 20, 15, 12, 13, 13, 12, 6, 13, 6, 6, 6, 5, 8, 6, 5, 8, 8, 10, 9, 9, 8, 8, 6, 6, 8, 5, 5, 8, 7, 5, 6, 5, 6, 6, 7, 6, 11, 6, 10, 6, 5, 7, 8, 5, 5, 6, 5, 5, 6, 12, 6, 7, 7, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 9, 9, 9, 9, 9, 9, 13, 5, 5, 16, 12, 5, 11, 12, 11, 9, 11, 12, 11, 7, 14, 11, 14, 15, 14, 15, 11, 11, 14, 14, 11, 11, 12, 11, 8, 13, 4, 9, 4, 7, 6, 9, 7, 8, 7, 8, 8, 7, 7, 5, 5, 5, 336, 9, 7, 5, 5, 5, 139, 4, 45, 4, 5, 4, 17, 6, 11, 5, 101, 5, 4, 5, 38, 4, 5, 5, 8, 7, 4, 5, 8, 5, 4, 5, 5, 11, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 9, 9, 9, 9, 9, 9, 9, 6, 5, 11, 12, 11, 12, 11, 4, 11, 11, 11, 15, 11, 14, 15, 14, 15, 14, 14, 45, 11, 5, 12, 6, 4, 4, 5, 7, 7, 17, 7, 8, 8, 7, 7, 5, 5, 4, 4, 12, 7, 23, 7, 5, 7, 58, 4, 5, 6, 9, 6, 5, 5, 5, 19, 163, 6, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 3, 5, 10, 10, 18, 10, 10, 10, 10, 4, 10, 11, 10, 11, 10, 10, 10, 10, 15, 10, 15, 16, 15, 16, 15, 15, 4, 10, 4, 11, 4, 17, 4, 6, 6, 4, 4, 6, 6, 6, 7, 7, 6, 6, 4, 216, 4, 6, 6, 6, 4, 5, 8, 31, 6, 6, 6, 4, 4, 47, 4, 55, 3, 6, 5, 6, 4, 4, 6, 4, 5, 5, 5, 3, 5, 4, 5, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 11, 12, 11, 12, 11, 11, 11, 5, 15, 47, 13, 14, 13, 7, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 14, 14, 13, 16, 16, 13, 13, 7, 13, 4, 14, 8, 5, 10, 4, 7, 286, 9, 10, 10, 10, 11, 9, 5, 5, 5, 10, 12, 9, 4, 5, 4, 50, 6, 12, 48, 5, 8, 7, 5, 7, 4, 5, 4, 4, 4, 13, 4, 5, 10, 111, 4, 4, 4, 5, 6, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 9, 9, 9, 9, 9, 9, 9, 7, 11, 12, 7, 11, 12, 11, 11, 11, 11, 14, 11, 14, 15, 14, 15, 14, 14, 5, 12, 4, 19, 6, 5, 4, 10, 7, 4, 6, 7, 7, 7, 8, 8, 7, 7, 8, 5, 8, 9, 8, 8, 7, 8, 209, 17, 5, 7, 4, 4, 11, 6, 4, 11, 5, 7, 5, 5, 6, 5, 8, 9, 7, 5, 6, 33, 10, 7, 7, 6, 9, 5, 4, 158, 95, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [14, 6, 6, 9, 9, 9, 9, 9, 9, 9, 11, 17, 5, 14, 12, 12, 5, 11, 11, 11, 14, 11, 14, 16, 14, 17, 11, 14, 11, 11, 14, 14, 11, 11, 12, 11, 39, 12, 6, 6, 8, 4, 13, 6, 9, 7, 7, 7, 8, 8, 9, 8, 5, 5, 4, 10, 5, 9, 6, 9, 8, 4, 4, 4, 4, 4, 8, 38, 38, 37, 6, 8, 7, 6, 5, 6, 5, 3, 5, 14, 148, 4, 4, 7, 6, 36, 6, 7, 4, 55, 128, 211, 12, 12, 12, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 9, 9, 9, 13, 9, 9, 10, 4, 11, 12, 6, 11, 13, 12, 9, 15, 11, 22, 18, 11, 14, 15, 14, 15, 11, 12, 11, 14, 17, 11, 11, 4, 11, 37, 12, 8, 6, 4, 4, 7, 22, 7, 7, 14, 8, 11, 7, 7, 4, 4, 5, 6, 7, 4, 7, 4, 6, 5, 6, 4, 8, 4, 4, 4, 6, 36, 38, 37, 6, 8, 6, 4, 8, 6, 5, 5, 4, 5, 7, 4, 8, 7, 38, 6, 4, 5, 4, 5, 4, 5, 4, 4, 15, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [12, 5, 5, 11, 5, 9, 15, 9, 9, 9, 9, 6, 6, 5, 4, 12, 12, 173, 11, 12, 11, 11, 11, 15, 10, 14, 12, 14, 15, 15, 21, 19, 26, 398, 12, 11, 14, 14, 11, 11, 11, 4, 11, 4, 12, 6, 4, 7, 7, 9, 10, 7, 10, 7, 7, 8, 8, 7, 7, 11, 5, 5, 5, 8, 5, 7, 6, 6, 6, 5, 6, 6, 4, 7, 6, 6, 8, 6, 7, 4, 123, 6, 12, 4, 4, 4, 5, 8, 8, 8, 4, 5, 6, 9, 7, 9, 7, 12, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [42, 4, 5, 8, 8, 9, 9, 43, 17, 9, 4, 10, 13, 12, 4, 8, 11, 12, 12, 11, 11, 11, 15, 12, 14, 15, 14, 15, 11, 15, 58, 11, 14, 14, 11, 12, 11, 38, 12, 7, 6, 7, 5, 7, 4, 4, 7, 9, 8, 143, 8, 7, 8, 7, 7, 4, 4, 6, 7, 6, 79, 8, 6, 6, 4, 3, 7, 4, 3, 6, 37, 38, 37, 6, 4, 6, 5, 8, 4, 6, 6, 5, 6, 8, 10, 5, 36, 10, 9, 131, 9, 7, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 5, 3, 4, 4, 5, 4, 5, 5, 4, 5, 6, 4, 5, 6, 5, 4, 9, 25, 21, 8, 6, 67, 9, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [13, 5, 9, 8, 8, 9, 8, 9, 8, 9, 6, 5, 8, 6, 12, 13, 10, 11, 13, 11, 3, 11, 11, 11, 14, 11, 14, 15, 15, 33, 11, 19, 12, 14, 14, 11, 6, 12, 4, 6, 5, 7, 3, 6, 7, 12, 7, 8, 8, 7, 7, 6, 8, 4, 9, 4, 7, 7, 4, 6, 8, 10, 6, 4, 5, 4, 5, 4, 4, 4, 6, 8, 8, 7, 4, 4, 3, 4, 4, 2, 5, 6, 4, 4, 4, 9, 3, 3, 6, 5, 8, 5, 6, 12, 4, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 10, 10, 10, 10, 10, 10, 10, 7, 9, 85, 10, 16, 10, 11, 10, 8, 10, 10, 10, 15, 10, 15, 16, 15, 16, 25, 12, 10, 11, 13, 16, 15, 41, 5, 10, 7, 11, 6, 6, 7, 3, 6, 6, 3, 6, 6, 6, 7, 7, 6, 6, 23, 4, 6, 4, 6, 6, 6, 5, 5, 4, 202, 15, 8, 5, 15, 4, 4, 7, 8, 7, 5, 5, 5, 7, 4, 6, 5, 6, 7, 5, 7, 4, 10, 4, 5, 4, 4, 4, 4, 5, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 8, 8, 8, 8, 8, 8, 8, 3, 11, 11, 10, 11, 10, 6, 10, 10, 10, 15, 10, 15, 16, 15, 16, 10, 11, 11, 18, 15, 10, 10, 10, 6, 22, 4, 11, 3, 7, 341, 6, 3, 5, 6, 6, 6, 7, 7, 6, 6, 4, 4, 4, 8, 6, 4, 3, 4, 5, 4, 5, 7, 11, 4, 4, 5, 3, 10, 6, 5, 4, 5, 4, 12, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 8, 9, 8, 8, 8, 8, 8, 11, 13, 4, 11, 12, 11, 12, 11, 13, 14, 11, 14, 102, 14, 15, 12, 14, 14, 11, 14, 11, 12, 36, 38, 12, 6, 6, 4, 8, 7, 4, 4, 7, 7, 7, 8, 8, 29, 7, 7, 7, 6, 3, 4, 8, 5, 3, 5, 6, 9, 9, 7, 5, 37, 38, 37, 4, 4, 8, 8, 4, 4, 8, 7, 6, 6, 4, 5, 6, 4, 8, 36, 6, 4, 6, 4, 5, 4, 5, 9, 11, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [11, 4, 9, 8, 8, 8, 8, 8, 8, 11, 12, 3, 11, 12, 11, 14, 11, 11, 14, 11, 17, 15, 14, 15, 11, 12, 11, 14, 14, 131, 11, 11, 11, 5, 11, 9, 12, 3, 4, 6, 7, 7, 5, 9, 7, 7, 7, 23, 9, 7, 7, 16, 5, 7, 4, 6, 7, 4, 3, 3, 11, 4, 7, 6, 6, 3, 5, 6, 8, 3, 8, 9, 13, 6, 43, 5, 6, 5, 6, 5, 6, 7, 4, 4, 5, 6, 5, 5, 6, 9, 5, 17, 5, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 11, 10, 11, 11, 11, 11, 11, 125, 11, 12, 4, 11, 12, 12, 11, 11, 12, 17, 11, 17, 19, 17, 18, 11, 17, 17, 11, 12, 11, 41, 13, 5, 5, 6, 9, 5, 4, 11, 5, 5, 6, 6, 6, 6, 5, 8, 10, 4, 7, 5, 5, 7, 7, 4, 5, 7, 5, 5, 7, 8, 40, 43, 40, 7, 5, 63, 9, 69, 6, 4, 7, 6, 8, 4, 10, 10, 10, 39, 7, 5, 12, 8, 6, 7, 9, 5, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 9, 9, 8, 8, 9, 8, 8, 10, 11, 10, 11, 10, 10, 10, 10, 12, 10, 12, 4, 12, 13, 10, 11, 12, 12, 10, 10, 10, 4, 10, 4, 11, 7, 5, 6, 5, 3, 5, 8, 3, 4, 4, 3, 22, 5, 4, 8, 5, 4, 3, 6, 6, 128, 25, 6, 7, 122, 5, 3, 7, 4, 21, 4, 58, 8, 5, 3, 6, 6, 8, 5, 23, 6, 4, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 10, 9, 9, 10, 10, 10, 10, 5, 6, 3, 9, 13, 5, 283, 16, 9, 10, 11, 9, 12, 9, 5, 15, 13, 15, 10, 9, 10, 15, 14, 9, 9, 9, 10, 10, 14, 8, 10, 5, 8, 5, 4, 3, 4, 3, 4, 5, 14, 8, 14, 4, 7, 8, 6, 4, 10, 8, 7, 6, 7, 6, 7, 4, 6, 4, 4, 5, 4, 6, 5, 3, 6, 7, 5, 18, 4, 4, 5, 3, 4, 6, 5, 5, 4, 4, 31, 4, 4, 5, 46, 10, 5, 30, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 8, 8, 8, 8, 9, 8, 8, 11, 30, 34, 151, 10, 5, 10, 10, 10, 12, 10, 29, 16, 11, 306, 10, 11, 10, 22, 14, 12, 12, 138, 4, 10, 12, 11, 11, 4, 5, 5, 6, 5, 13, 4, 13, 9, 8, 12, 7, 6, 6, 11, 4, 6, 3, 7, 5, 6, 6, 8, 6, 7, 7, 7, 3, 4, 10, 4, 5, 10, 8, 4, 5, 9, 9, 5, 127, 15, 5, 6, 12, 6, 10, 8, 6, 6, 5, 4, 5, 5, 5, 9, 6, 8, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [11, 10, 5, 8, 8, 8, 8, 9, 8, 8, 6, 10, 12, 10, 12, 10, 10, 10, 10, 5, 12, 10, 11, 13, 11, 13, 11, 11, 11, 13, 12, 12, 10, 6, 11, 6, 4, 6, 8, 8, 5, 2, 13, 12, 13, 12, 12, 7, 4, 6, 4, 7, 4, 5, 4, 5, 7, 6, 4, 4, 4, 6, 5, 6, 7, 19, 4, 6, 8, 4, 5, 4, 6, 5, 13, 6, 6, 4, 5, 6, 6, 9, 3, 5, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [14, 4, 11, 8, 8, 8, 8, 8, 8, 8, 11, 10, 11, 10, 11, 10, 15, 10, 10, 10, 11, 10, 7, 6, 12, 13, 10, 11, 10, 4, 12, 10, 10, 11, 10, 11, 10, 6, 11, 15, 3, 8, 7, 4, 4, 12, 4, 13, 12, 12, 7, 6, 4, 25, 4, 4, 4, 15, 6, 5, 4, 6, 6, 5, 4, 3, 5, 4, 6, 5, 3, 4, 3, 5, 115, 5, 5, 5, 10, 8, 4, 7, 9, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 9, 9, 9, 9, 9, 9, 9, 10, 11, 10, 11, 10, 6, 10, 10, 10, 13, 10, 12, 12, 13, 17, 14, 13, 10, 10, 7, 15, 6, 6, 4, 4, 76, 5, 10, 13, 14, 13, 13, 13, 6, 5, 3, 15, 4, 5, 7, 6, 4, 7, 5, 3, 8, 5, 7, 5, 7, 5, 5, 5, 4, 7, 5, 12, 7, 5, 5, 12, 5, 4, 6, 9, 5, 8, 4, 5, 7, 5, 10, 7, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 8, 8, 8, 8, 8, 8, 8, 11, 14, 10, 11, 10, 11, 12, 10, 10, 10, 11, 10, 12, 15, 15, 13, 10, 12, 13, 10, 32, 4, 12, 3, 4, 6, 12, 6, 7, 12, 13, 12, 112, 12, 25, 4, 14, 10, 6, 12, 3, 13, 4, 4, 4, 3, 13, 5, 4, 4, 6, 12, 6, 4, 5, 17, 11, 3, 4, 13, 4, 3, 5, 4, 4, 5, 6, 7, 4, 4, 6, 7, 5, 6, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 8, 8, 9, 8, 8, 9, 8, 6, 10, 11, 10, 11, 10, 6, 10, 10, 106, 6, 11, 10, 4, 14, 12, 13, 12, 11, 16, 8, 5, 10, 11, 10, 5, 30, 12, 26, 9, 12, 7, 5, 5, 6, 13, 12, 13, 8, 4, 12, 4, 6, 9, 8, 101, 6, 6, 4, 4, 4, 4, 13, 6, 16, 6, 5, 12, 8, 5, 7, 5, 6, 10, 5, 6, 6, 10, 11, 4, 5, 4, 4, 5, 5, 11, 6, 4, 10, 11, 5, 5, 20, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [7, 11, 12, 11, 10, 10, 10, 14, 10, 11, 4, 9, 10, 10, 6, 9, 10, 9, 9, 9, 9, 13, 9, 14, 16, 14, 15, 14, 4, 183, 10, 9, 11, 11, 7, 5, 7, 6, 14, 10, 3, 14, 15, 7, 8, 14, 7, 6, 6, 6, 6, 4, 7, 5, 4, 10, 4, 6, 5, 39, 3, 4, 6, 5, 4, 4, 6, 10, 4, 8, 4, 6, 4, 14, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 9, 8, 8, 8, 8, 8, 8, 11, 12, 11, 12, 11, 4, 11, 75, 11, 12, 11, 11, 14, 13, 14, 11, 11, 12, 12, 14, 11, 11, 11, 7, 11, 5, 12, 5, 5, 4, 5, 13, 12, 5, 14, 4, 14, 13, 13, 13, 7, 3, 6, 3, 9, 6, 4, 8, 7, 4, 6, 10, 7, 4, 3, 6, 5, 4, 5, 5, 4, 9, 7, 3, 4, 19, 9, 7, 7, 6, 4, 16, 7, 6, 5, 8, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 11, 14, 8, 12, 8, 8, 30, 5, 14, 10, 11, 11, 12, 10, 6, 10, 4, 10, 11, 10, 12, 9, 11, 13, 10, 11, 12, 4, 4, 6, 10, 6, 11, 4, 13, 6, 7, 8, 5, 13, 12, 13, 10, 12, 12, 7, 16, 4, 9, 5, 4, 7, 5, 36, 5, 5, 5, 5, 27, 5, 6, 7, 4, 11, 6, 5, 6, 5, 195, 5, 8, 4, 5, 5, 6, 4, 5, 68, 5, 8, 5, 13, 5, 6, 5, 6, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 8, 8, 8, 8, 8, 8, 8, 9, 10, 9, 11, 9, 9, 9, 9, 15, 9, 15, 5, 14, 16, 40, 12, 10, 13, 14, 10, 19, 9, 9, 124, 7, 5, 4, 7, 15, 9, 17, 17, 15, 16, 5, 16, 15, 17, 10, 5, 7, 18, 11, 11, 4, 5, 227, 12, 16, 136, 21, 5, 8, 29, 4, 4, 10, 7, 13, 11, 18, 7, 39, 8, 9, 15, 10, 6, 21, 12, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [12, 7, 8, 8, 8, 8, 8, 85, 8, 8, 7, 11, 12, 11, 12, 11, 5, 11, 11, 12, 11, 11, 11, 15, 16, 15, 14, 5, 12, 17, 11, 12, 11, 8, 16, 6, 6, 7, 9, 14, 6, 11, 15, 14, 7, 8, 9, 14, 7, 8, 10, 6, 10, 4, 6, 9, 9, 57, 4, 8, 3, 6, 8, 7, 6, 35, 8, 5, 5, 7, 7, 5, 13, 6, 7, 8, 7, 4, 4, 8, 26, 17, 3, 6, 6, 9, 4, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [6, 5, 10, 9, 8, 8, 8, 8, 8, 8, 11, 4, 5, 4, 9, 10, 9, 10, 9, 7, 10, 9, 19, 4, 13, 9, 14, 16, 14, 15, 14, 14, 11, 9, 4, 12, 4, 10, 8, 11, 7, 6, 15, 4, 10, 15, 14, 18, 14, 14, 7, 17, 4, 14, 5, 7, 8, 11, 7, 11, 4, 8, 6, 3, 8, 4, 7, 4, 7, 7, 5, 6, 5, 6, 7, 6, 7, 6, 10, 7, 4, 5, 5, 9, 6, 6, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 125, 5, 8, 9, 9, 120, 13, 8, 7, 3, 4, 10, 11, 4, 10, 11, 10, 6, 11, 10, 10, 11, 13, 6, 14, 11, 14, 11, 13, 5, 10, 11, 13, 10, 6, 11, 4, 3, 4, 3, 4, 13, 41, 13, 4, 15, 12, 7, 7, 6, 6, 4, 4, 12, 6, 4, 8, 12, 4, 4, 4, 4, 3, 11, 3, 7, 4, 13, 11, 4, 11, 14, 12, 5, 6, 5, 9, 4, 6, 6, 5, 4, 4, 3, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 8, 10, 8, 8, 8, 11, 11, 8, 11, 9, 119, 10, 10, 10, 72, 9, 4, 9, 19, 9, 26, 16, 13, 15, 9, 9, 9, 22, 17, 9, 12, 9, 10, 10, 11, 4, 16, 15, 12, 15, 9, 14, 14, 4, 61, 15, 14, 9, 6, 6, 7, 7, 19, 12, 7, 8, 14, 5, 15, 15, 7, 7, 10, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [15, 4, 28, 12, 9, 11, 9, 9, 9, 9, 11, 12, 11, 12, 11, 14, 11, 11, 11, 16, 11, 14, 16, 14, 15, 14, 4, 4, 11, 4, 12, 6, 8, 4, 13, 14, 11, 4, 5, 14, 15, 8, 14, 18, 5, 4, 43, 16, 9, 5, 14, 6, 22, 8, 10, 10, 5, 4, 7, 6, 17, 12, 4, 4, 13, 3, 5, 15, 8, 7, 18, 3, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [10, 7, 6, 8, 13, 12, 74, 12, 8, 12, 12, 11, 9, 10, 7, 9, 11, 9, 4, 10, 9, 15, 9, 27, 16, 13, 15, 10, 16, 14, 9, 7, 10, 9, 15, 11, 4, 13, 11, 4, 14, 6, 15, 14, 15, 3, 12, 11, 27, 4, 151, 4, 4, 13, 15, 4, 17, 15, 19, 14, 6, 4, 6, 6, 5, 6, 13, 6, 6, 4, 5, 7, 9, 4, 6, 14, 14, 15, 17, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 14, 10, 10, 10, 15, 10, 10, 4, 10, 11, 10, 11, 10, 11, 10, 10, 15, 10, 14, 16, 15, 16, 123, 15, 10, 7, 10, 7, 11, 5, 5, 3, 4, 14, 4, 4, 5, 5, 7, 5, 3, 11, 7, 7, 5, 6, 6, 4, 5, 4, 6, 7, 7, 8, 4, 4, 4, 4, 6, 3, 4, 3, 6, 5, 5, 4, 316]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 3, 31, 11, 10, 19, 10, 10, 10, 10, 10, 11, 10, 11, 10, 19, 11, 10, 11, 15, 10, 14, 16, 18, 16, 12, 71, 12, 12, 14, 6, 10, 10, 7, 10, 15, 11, 32, 14, 28, 7, 17, 17, 13, 6, 21, 13, 15, 6, 6, 7, 6, 17, 14, 30, 21, 20, 14, 19, 8, 15, 4, 23, 20, 46, 16, 23, 8, 7, 25, 14, 27, 25, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 4, 4, 8, 8, 8, 9, 10, 8, 6, 18, 12, 11, 5, 10, 11, 10, 5, 10, 10, 10, 12, 20, 11, 13, 11, 61, 10, 13, 12, 10, 31, 10, 5, 15, 6, 16, 13, 5, 12, 13, 12, 13, 12, 12, 13, 8, 18, 6, 14, 11, 7, 9, 4, 5, 13, 22, 5, 6, 14, 5, 4, 6, 4, 18, 6, 13, 5, 6, 13, 10, 6, 7, 9, 9, 4, 7, 11, 6, 8, 5, 6, 45, 6, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [12, 4, 9, 10, 14, 10, 9, 10, 10, 13, 10, 14, 7, 29, 12, 5, 11, 12, 11, 11, 5, 11, 14, 11, 14, 17, 14, 15, 14, 12, 11, 15, 11, 14, 12, 11, 11, 13, 11, 14, 11, 6, 12, 4, 11, 10, 9, 13, 8, 13, 14, 15, 14, 14, 14, 13, 4, 14, 11, 8, 8, 12, 13, 8, 6, 12, 14, 7, 4, 12, 14, 6, 6, 14, 14, 13, 14, 8, 17, 15, 8, 6, 13, 14, 5, 6, 5, 5, 16, 17, 6, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [14, 4, 6, 9, 14, 12, 9, 11, 11, 9, 11, 5, 4, 4, 16, 17, 14, 15, 16, 4, 14, 9, 14, 79, 14, 19, 19, 14, 20, 15, 4, 21, 17, 5, 16, 5, 16, 5, 15, 17, 7, 8, 65, 18, 19, 18, 4, 19, 26, 4, 7, 4, 6, 65, 4, 6, 3, 5, 223, 4, 5, 11, 5, 4, 20, 6, 6, 9, 4, 4, 5, 4, 4, 4, 5, 6, 22, 4, 4, 5, 9, 6, 6, 14, 16, 12, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [14, 33, 4, 12, 12, 24, 11, 11, 11, 9, 3, 15, 13, 14, 13, 14, 13, 13, 34, 17, 13, 7, 15, 18, 19, 17, 17, 75, 17, 52, 13, 13, 15, 13, 4, 14, 9, 15, 16, 7, 17, 16, 17, 16, 16, 6, 15, 9, 7, 17, 6, 17, 15, 16, 16, 5, 10, 14, 16, 15, 5, 15, 6, 14, 15, 15, 7, 16, 6, 15, 9, 21, 16, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 21, 21, 21, 21, 21, 21, 3, 44, 21, 22, 21, 23, 21, 5, 21, 70, 21, 42, 21, 35, 37, 36, 36, 22, 22, 45, 40, 21, 22, 21, 7, 25, 4, 6, 26, 6, 25, 110, 24, 8, 40, 4, 6, 6, 6, 26, 10, 17, 8, 5, 6, 8, 5, 8, 181, 7, 6, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 6, 5, 4, 4, 15, 4, 8, 4, 11, 4, 4, 5, 6, 5, 9, 7, 10, 10, 10, 14, 5, 6, 8, 5, 11, 21, 11, 82, 8, 6, 10, 9, 5, 8, 10, 6, 12, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [9, 9, 4, 6, 10, 10, 17, 16, 11, 10, 7, 45, 9, 11, 9, 15, 9, 9, 9, 9, 14, 9, 18, 19, 14, 15, 10, 10, 15, 5, 13, 9, 3, 10, 4, 7, 13, 9, 18, 15, 15, 15, 10, 14, 14, 13, 10, 10, 7, 13, 28, 9, 7, 15, 9, 13, 6, 12, 7, 12, 5, 9, 8, 6, 15, 5, 7, 7, 8, 9, 9, 9, 16, 9, 11, 5, 6, 12, 9, 5, 8, 7, 98, 11, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 7, 6, 8, 6, 16, 7, 8, 8, 5, 5, 11, 9, 10, 11, 5, 10, 76, 8, 18, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 4, 12, 8, 8, 8, 8, 8, 8, 8, 3, 9, 33, 9, 10, 9, 5, 9, 9, 14, 9, 20, 8, 14, 15, 10, 15, 8, 12, 5, 17, 14, 4, 10, 11, 7, 8, 4, 14, 10, 4, 15, 15, 6, 14, 17, 7, 9, 13, 11, 7, 10, 6, 15, 5, 8, 6, 3, 6, 10, 4, 2, 6, 17, 4, 7, 6, 7, 5, 11, 10, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [7, 2, 4, 10, 10, 11, 29, 10, 10, 10, 11, 12, 11, 12, 11, 3, 12, 11, 11, 6, 11, 12, 9, 13, 15, 14, 4, 11, 5, 16, 12, 4, 14, 20, 14, 7, 14, 15, 13, 14, 13, 15, 178, 13, 7, 7, 27, 8, 9, 146, 4, 13, 5, 21, 20, 6, 4, 36, 8, 14, 21, 13, 5, 14, 12, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 10, 12, 10, 10, 10, 10, 10, 10, 4, 13, 14, 11, 12, 11, 10, 12, 11, 11, 9, 158, 4, 16, 14, 15, 11, 12, 12, 16, 14, 14, 21, 11, 12, 4, 11, 39, 12, 5, 22, 6, 3, 5, 15, 14, 15, 14, 5, 19, 6, 14, 16, 14, 6, 4, 8, 4, 4, 6, 4, 12, 5, 6, 14, 37, 38, 37, 6, 8, 7, 12, 4, 5, 5, 10, 24, 5, 37, 7, 16, 5, 7, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [3, 25, 5, 5, 20, 20, 21, 20, 20, 20, 20, 21, 78, 21, 21, 12, 20, 5, 20, 120, 20, 25, 27, 26, 26, 29, 20, 20, 25, 25, 11, 20, 50, 21, 16, 19, 16, 6, 19, 26, 23, 26, 23, 4, 6, 11, 26, 5, 5, 6, 5, 7, 74, 7, 19, 19, 6, 8, 49, 50, 49, 12, 6, 14, 5, 19, 7, 48, 17, 6, 15, 20, 10, 130, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [10, 19, 42, 8, 8, 8, 8, 8, 8, 12, 12, 9, 10, 12, 9, 10, 9, 9, 9, 9, 22, 9, 9, 14, 22, 14, 15, 11, 14, 9, 84, 9, 9, 101, 10, 10, 14, 12, 14, 10, 13, 15, 14, 15, 10, 12, 9, 11, 15, 9, 9, 12, 11, 11, 24, 9, 24, 9, 30, 10, 12, 8, 33, 17, 11, 16, 9, 11, 12, 24, 10, 8, 24, 9, 10, 9, 10, 11, 28, 8, 9, 32, 12, 9, 21, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 7, 10, 9, 7, 8, 7, 7, 6, 7, 17, 7, 5, 17, 8, 79, 16, 5, 10, 8, 22, 21, 6, 19, 9, 17, 6, 17, 9, 8, 8, 8, 17, 17, 15, 17, 6, 6, 24, 6, 13, 5, 8, 5, 20, 7, 7, 15, 7, 6, 6, 11, 8, 54, 7, 9, 7, 4, 6, 6, 7, 6, 6, 8, 6, 7, 10, 21, 7, 13, 11, 7, 7, 8, 14, 6, 20, 8, 10, 8, 9, 7, 6, 6, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 4, 27, 190, 10, 10, 10, 10, 10, 10, 4, 11, 12, 5, 11, 12, 11, 15, 11, 167, 11, 12, 11, 13, 12, 14, 17, 14, 58, 12, 11, 4, 11, 12, 4, 24, 14, 4, 14, 4, 17, 18, 30, 18, 14, 4, 6, 4, 8, 6, 9, 14, 6, 4, 15, 6, 13, 6, 21, 13, 8, 5, 6, 17, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [8, 8, 12, 6, 14, 7, 9, 11, 14, 12, 6, 8, 9, 10, 11, 10, 9, 140, 7, 12, 12, 10, 12, 12, 36, 11, 11, 22, 12, 13, 7, 13, 11, 13, 42, 12, 19, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [14, 6, 4, 10, 10, 11, 10, 10, 10, 10, 11, 13, 11, 15, 18, 6, 11, 39, 11, 14, 11, 13, 16, 13, 16, 12, 11, 12, 11, 14, 15, 11, 12, 11, 6, 23, 7, 4, 6, 6, 14, 5, 5, 15, 14, 15, 15, 14, 15, 7, 5, 5, 5, 4, 15, 11, 11, 5, 4, 10, 7, 4, 13, 4, 5, 15, 6, 6, 7, 5, 4, 7, 11, 4, 6, 19, 20, 15, 13, 6, 5, 21, 13, 23, 4, 6, 8, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 11, 8, 11, 5, 12, 12, 6, 3, 7, 6, 6, 5, 4, 10, 9, 7, 11, 11, 7, 9, 7, 4, 15, 8, 4, 5, 8, 7, 8, 6, 6, 6, 4, 9, 6, 16, 4, 6, 5, 10, 6, 10, 13, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 3, 4, 3, 18, 4, 4, 5, 5, 4, 5, 167, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 8, 5, 16, 5, 4, 12, 3, 12, 8, 4, 12, 5, 10, 3, 12, 16, 6, 21, 4, 7, 10, 14, 4, 12, 6, 234, 5, 3, 12, 13, 6, 15, 15, 6, 6, 5, 6, 4, 24, 14, 4, 7, 4, 13, 22, 7, 6, 6, 6, 4, 21, 6, 6, 6, 13, 8, 7, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [16, 5, 5, 9, 10, 10, 12, 4, 4, 6, 14, 5, 6, 12, 12, 5, 5, 11, 5, 7, 11, 13, 15, 6, 6, 5, 12, 6, 12, 12, 15, 4, 151, 13, 19, 11, 12, 13, 12, 13, 6, 5, 6, 14, 7, 12, 15, 19, 7, 14, 5, 17, 6, 10, 7, 11, 7, 19, 7, 23, 14, 6, 12, 7, 12, 7, 8, 5, 6, 6, 5, 11, 15, 6, 10, 6, 15, 54, 5, 6, 7, 5, 6, 17, 5, 15, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [5, 7, 63, 8, 13, 7, 9, 6, 8, 9, 8, 10, 8, 22, 7, 15, 12, 11, 15, 6, 18, 13, 8, 12, 8, 12, 9, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [13, 21, 6, 8, 8, 8, 15, 9, 61, 8, 9, 10, 9, 10, 9, 14, 73, 9, 9, 24, 10, 25, 4, 19, 21, 11, 25, 24, 9, 11, 14, 9, 6, 10, 6, 15, 8, 26, 12, 3, 5, 4, 13, 13, 12, 12, 25, 4, 14, 4, 5, 10, 11, 9, 4, 3, 5, 10, 6, 4, 11, 13, 33, 4, 5, 6, 39, 4, 24, 10, 4, 6, 11, 48, 5, 6, 7, 39, 10, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 75, 7, 11, 11, 11, 11, 11, 11, 11, 7, 13, 13, 12, 13, 12, 4, 12, 20, 12, 14, 12, 14, 16, 14, 18, 12, 13, 5, 5, 12, 14, 38, 12, 5, 13, 5, 13, 4, 4, 7, 7, 129, 14, 4, 16, 49, 16, 15, 5, 15, 23, 7, 7, 9, 4, 5, 5, 146, 15, 4, 18, 6, 5, 12, 4, 8, 5, 4, 5, 14, 13, 5, 7, 6, 5, 8, 7, 11, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [5, 8, 3, 18, 5, 13, 22, 13, 9, 12, 13, 7, 4, 5, 11, 9, 13, 33, 77, 9, 15, 9, 15, 29, 18, 118, 12, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 10, 28, 5, 10, 8, 7, 9, 12, 7, 68, 6, 8, 66, 5, 81, 6, 10, 98, 11, 11, 9, 9, 5, 9, 47, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [5, 4, 13, 4, 12, 23, 23, 13, 22, 23, 16, 11, 5, 10, 11, 10, 10, 86, 33, 6, 10, 13, 15, 13, 14, 10, 19, 11, 13, 24, 10, 11, 10, 30, 11, 6, 7, 15, 16, 15, 14, 15, 13, 14, 16, 16, 4, 15, 12, 13, 13, 11, 14, 15, 13, 11, 5, 18, 8, 15, 22, 4, 11, 12, 23, 13, 23, 12, 6, 4, 15, 7, 11, 12, 12, 12, 12, 12, 12, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 16, 24, 13, 7, 24, 4, 15, 10, 13, 10, 11, 10, 10, 4, 10, 7, 10, 12, 14, 13, 14, 11, 31, 4, 10, 22, 11, 4, 13, 11, 9, 15, 5, 12, 15, 13, 14, 18, 16, 27, 180, 12, 4, 12, 4, 15, 13, 13, 12, 23, 13, 7, 16, 15, 12, 5, 5, 12, 23, 22, 28, 10, 24, 4, 20, 17, 52, 11, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 15, 17, 14, 14, 19, 12, 13, 15, 13, 12, 12, 12, 14, 14, 11, 15, 16, 13, 17, 14, 12, 18, 12, 14, 14, 16, 3, 15, 13, 61, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 5, 4, 5, 7, 5, 5, 5, 9, 11, 12, 11, 12, 11, 12, 4, 11, 5, 11, 12, 15, 13, 15, 6, 4, 11, 7, 11, 4, 12, 7, 13, 5, 3, 9, 14, 15, 5, 5, 6, 4, 4, 7, 5, 10, 13, 5, 5, 4, 5, 16, 6, 5, 6, 5, 5, 262, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 21, 4, 13, 6, 4, 12, 11, 10, 32, 5, 11, 12, 11, 10, 19, 10, 12, 12, 10, 15, 17, 13, 17, 13, 213, 13, 12, 7, 7, 8, 10, 5, 11, 4, 21, 18, 15, 14, 6, 5, 14, 13, 14, 15, 5, 6, 12, 13, 14, 4, 14, 12, 12, 4, 15, 7, 13, 7, 6, 5, 4, 13, 4, 24, 5, 10, 9, 8, 5, 10, 13, 12, 24, 6, 5, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 17, 5, 5, 5, 18, 5, 7, 34, 5, 234, 5, 5, 5, 6, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [11, 4, 18, 7, 15, 19, 13, 14, 12, 13, 12, 13, 12, 14, 14, 4, 16, 23, 12, 14, 17, 14, 16, 15, 9, 63, 12, 12, 4, 12, 24, 13, 4, 14, 15, 7, 14, 20, 16, 15, 15, 27, 14, 15, 15, 6, 21, 15, 14, 47, 18, 15, 17, 7, 16, 7, 6, 20, 26, 13, 19, 14, 105, 19, 6, 30, 14, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 9, 20, 10, 11, 106, 16, 8, 15, 18, 15, 15, 6, 15, 5, 15, 32, 29, 13, 20, 15, 17, 16, 5, 8, 10, 15, 6, 16, 13, 9, 272, 18, 23, 14, 5, 7, 9, 19, 9, 5, 10, 25, 3, 9, 27, 5, 39, 18, 5, 11, 47, 12, 30, 4, 13, 15, 21, 11, 9, 9, 21, 18, 4, 11, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 4, 6, 5, 9, 5, 8, 5, 6, 8, 43, 180, 7, 8, 6, 7, 7, 6, 7, 6, 7, 14, 142, 7, 7, 5, 51, 6, 16, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
MIS problem not feasible
MIS problem not feasible
MIS problem not feasible
MIS problem not feasible
MIS problem not feasible
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[3, 4, 56, 4, 24, 4, 5, 4, 4, 59, 15, 10, 21, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [8, 4, 14, 83, 5, 6, 5, 10, 9, 5, 5, 9, 5, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 3, 6, 28, 20, 9, 34, 17, 7, 7, 7, 7, 8, 7, 8, 48, 7, 5, 9, 9, 31, 5, 45, 7, 8, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 5, 10, 6, 9, 5, 9, 16, 5, 5, 5, 84, 23, 3, 139, 11, 5, 5, 7, 7, 36, 5, 10, 7, 20, 5, 6, 31, 9, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 4, 29, 4, 5, 5, 15, 4, 6, 7, 19, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 5, 56, 23, 5, 15, 4, 12, 15, 11, 17, 11, 9, 23, 4, 11, 11, 31, 8, 12, 15, 11, 12, 12, 5, 5, 12, 11, 4, 11, 5, 13, 10, 16, 14, 5, 9, 13, 7, 14, 15, 7, 20, 4, 6, 14, 7, 23, 6, 9, 13, 40, 5, 24, 157, 7, 4, 6, 5, 12, 6, 7, 6, 11, 34, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 8, 4, 8, 13, 8, 9, 10, 28, 8, 10, 10, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [12, 8, 20, 14, 5, 11, 7, 16, 8, 11, 13, 11, 12, 11, 11, 26, 11, 12, 12, 11, 14, 15, 14, 15, 12, 11, 12, 6, 10, 11, 11, 6, 11, 13, 12, 7, 14, 4, 204, 167, 5, 17, 219, 18, 14, 15, 18, 7, 11, 19, 4, 18, 8, 10, 18, 8, 4, 6, 6, 8, 8, 8, 13, 7, 32, 6, 12, 5, 12, 17, 6, 4, 9, 7, 11, 4, 7, 13, 8, 10, 5, 16, 12, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 98
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660053
thermo_feasible = true
