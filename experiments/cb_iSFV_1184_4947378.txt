ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSFV_1184
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSFV_1184
----------------------------------
number of metabolites : 1917
number of reactions : 2621
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2621 flux variables and 4851 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 5, 2, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 46, 13, 13, 2, 14, 13, 14, 13, 13, 13, 14, 13, 16]
length(C_list) = 21
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 4, 3, 2, 2]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 3, 3, 2, 5, 5, 3, 3, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 13, 4, 3, 4, 5, 3, 4, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 2, 6, 3, 4, 7, 4, 10, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 6, 2, 2, 4, 4, 2, 4, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 6, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 21, 3, 2, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 9, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.893857796895907
thermo_feasible = true
