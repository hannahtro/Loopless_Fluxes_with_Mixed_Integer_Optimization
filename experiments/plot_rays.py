import matplotlib.pyplot as plt    
import matplotlib.patches as patches

def plot_rays(rays, optimal_solution, relaxed_solution, xmin=-20, xmax=20, ymin=-20, ymax=20):

    fig, ax = plt.subplots() # figsize=(10, 10)
    ticks_frequency = 1
    ax.set(xlim=(xmin-1, xmax+1), ylim=(ymin-1, ymax+1), aspect='equal')

    # Create 'x' and 'y' labels placed at the end of the axes
    ax.set_xlabel('G')
    ax.set_ylabel('v')

    # S set upper left
    rect = patches.Rectangle((xmin, 0), -xmin-1, ymax, linewidth=1, edgecolor='b', facecolor='b', alpha=0.2, label='thermodynamical feasible region')
    ax.add_patch(rect)

    # S set lower right
    rect = patches.Rectangle((1, ymin), xmax-1, -ymin, linewidth=1, edgecolor='b', facecolor='b', alpha=0.2)
    ax.add_patch(rect)

    # S-free set upper right
    rect = patches.Rectangle((-1, 0), xmax+1, ymax, linewidth=1, edgecolor='orange', facecolor='orange', alpha=0.3, label='S-free set')
    ax.add_patch(rect)

    # S-free set lower left
    rect = patches.Rectangle((xmin, ymin), xmax+1, -ymin, linewidth=1, edgecolor='orange', facecolor='orange', alpha=0.3)
    ax.add_patch(rect)

    # rays 
    for (idx, r) in enumerate(rays): 
    # r = [0.0, -2.766883564129036]
        if not (r[0] == 0 and r[1] == 0):
            print(r)
            ax.plot([relaxed_solution[0], relaxed_solution[0] + r[0]], [relaxed_solution[1], relaxed_solution[1] + r[1]], 'bo', linestyle='dotted')

    plt.plot(optimal_solution[0], optimal_solution[1], 'ro', label="optimal solution") 
    plt.plot(relaxed_solution[0], relaxed_solution[1], 'ro', color='cornflowerblue', label="relaxed solution") 

    fig.legend(loc='center', bbox_to_anchor=(0.52, -0.05), ncol=2)

    plt.savefig("plots/rays.pdf", format="pdf", bbox_inches="tight")


# rays = [(-0.0, -2.766883564129036),(-0.0, 0.6493593016164836),(-0.0, 0.4697417218458748),(-0.0, -0.5302582781541254),(-0.0, -0.5751626730967776),(-0.0, -0.32643407586021667),(-0.0, -1.0),(-0.0, -0.0),(-0.0, -0.044904394942652436),(-0.0, -1.0225526296483862e-16),(-0.0, -1.4853538832114723),(-0.0, -1.5181549668924752),(-0.0, -1.5630593618351267),(-0.0, -1.293632992179213),(-0.0, -1.3834417820645173),(-0.0, 0.730573630344086),(-0.0, 0.685669235401434),(-0.0, -3.838736361319684e-18),(-0.0, 0.6614626128781332),(-0.0, -0.0),(-0.0, -1.5142745419233836e-16),(-0.0, -0.5181549668924756),(-0.0, -0.0),(-0.0, -0.5181549668924756),(-0.0, -0.5181549668924752),(-0.0, 0.4818450331075247),(-0.0, -1.7668835641290375),(-0.0, 0.0449043949426514),(-0.0, -0.8117879590716897),(-0.0, 1.30564745083527e-16),(-0.0, -1.1468164960896057),(-0.0, -0.7426769416057364),(-0.0, -0.7875813365483887),(-0.0, 0.9101912101146955),(-0.0, -1.0812143287276028),(-0.0, -1.0812143287276028),(-0.0, -1.191720891032259),(-0.0, -0.7875813365483891),(-0.0, -2.003508850103948),(-0.0, -0.7875813365483891),(-0.0, -0.012103311261650354),(-0.0, -1.2038242022939085),(-0.0, -1.2936329921792133),(-0.0, -0.06911101746595276),(-0.0, -0.48535388321147266),(-0.0, -1.0812143287276028),(-0.0, 0.032801083681002756),(-0.0, -1.179617579770608),(-0.0, -0.7996846478100387),(-0.0, -0.8445890427526905),(-0.0, -2.359235159541216),(-0.0, -1.4853538832114723),(-0.0, -4.540668907754647e-17),(-0.0, -4.540668907754647e-17),(-0.0, -0.1589198073512572),(-0.0, -0.6200670680394303),(-0.0, -1.5630593618351272),(-0.0, -1.60796375677778),(-0.0, -1.5423615894157758),(-0.0, -0.3178396147025144),(-0.0, 0.044904394942652234),(-0.0, -0.0),(-0.0, -2.766883564129036),(-0.0, -0.2936329921792132),(-0.0, -0.38344178206451734),(-0.0, -0.1589198073512572),(-0.0, -1.5423615894157758),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-1.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, -0.0),(-0.0, 0.7754780252867385),(-0.0, -0.17961757977060885),(-0.0, -0.17961757977060885),(-0.0, -0.17961757977060885),(-0.0, -0.1347131848279567),(-0.0, -0.04490439494265171),(-0.0, 1.1917208910322592),(-0.0, 0.787581336548389),(-0.0, 0.8445890427526905),(-0.0, 1.60796375677778),(-0.0, 2.766883564129036),(-0.0, 0.38344178206451734),(-0.0, 2.766883564129036),(-0.0, -0.4697417218458748),(-0.0, 0.5751626730967776),(-0.0, 1.5630593618351267),(-0.0, 1.3834417820645173)]

# optimal_solution = [1.0, -29.175827135565818]
# relaxed_solution = [0.0, -29.175827135565793]

# xmin, xmax, ymin, ymax = -3.5, 3.5, -35, -25
# plot_rays(rays, optimal_solution=optimal_solution, relaxed_solution=relaxed_solution, xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)

rays = [(0.0, -0.0), (0.0, -0.0), (0.0, -0.0), (0.0, -0.0), (0.0, -1.0), (0.0, -0.0), (0.0, -0.0), (-1.0, -0.0)]
xmin, xmax, ymin, ymax = -5, 5, -2, 35
plot_rays(rays, xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, optimal_solution=[2.0, 0], relaxed_solution=[0, 30])