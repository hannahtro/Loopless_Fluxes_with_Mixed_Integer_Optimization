ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSbBS512_1146
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSbBS512_1146
----------------------------------
number of metabolites : 1910
number of reactions : 2591
number of genes : 1147

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2591 flux variables and 4791 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 16, 16, 17, 20, 17, 16, 16, 13, 13, 14, 22, 148, 13, 13, 11, 95, 13, 11, 11, 11, 14, 11, 13, 13, 14, 13, 15, 13, 11, 13, 15]
length(C_list) = 3
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 6, 9, 16, 16, 18, 17, 17, 16, 16, 13, 13, 15, 13, 18, 31, 13, 11, 11, 14, 11, 12, 15, 35, 13, 11, 18, 13, 14, 13, 14, 13, 95, 14, 13, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 16, 16, 17, 16, 17, 16, 19, 16, 13, 16, 27, 14, 13, 13, 26, 11, 11, 14, 14, 14, 11, 11, 11, 172, 13, 14, 13, 14, 13, 11, 14, 13, 319]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 15, 15, 13, 13, 11, 12, 13, 11, 15, 11, 14, 11, 14, 13, 14, 13, 14, 13, 114, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 2, 16, 16, 17, 17, 17, 16, 16, 14, 13, 14, 14, 14, 13, 13, 13, 11, 12, 13, 11, 11, 11, 76, 12, 14, 13, 14, 13, 15, 13, 11, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 16, 16, 17, 16, 116, 16, 19, 13, 13, 20, 13, 14, 13, 15, 21, 13, 14, 11, 12, 11, 13, 11, 13, 13, 14, 13, 28, 13, 11, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 16, 16, 17, 16, 17, 16, 18, 13, 13, 14, 13, 14, 13, 13, 134, 13, 11, 11, 11, 11, 13, 13, 14, 13, 14, 13, 11, 13, 115]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 17, 16, 17, 16, 17, 17, 16, 13, 13, 14, 60, 14, 13, 13, 14, 11, 11, 13, 11, 11, 13, 14, 14, 11, 52, 37, 15, 20, 14, 18, 11, 16, 13, 13, 14, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 16, 16, 18, 16, 18, 16, 16, 13, 13, 14, 13, 14, 14, 13, 11, 11, 11, 11, 11, 13, 11, 13, 13, 14, 13, 14, 13, 11, 13]
AssertionError("!(isempty(C_list_filtered))")
