┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI1_1343
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI1_1343
----------------------------------
number of metabolites : 1968
number of reactions : 2765
number of genes : 1343

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2765 flux variables and 5139 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 12, 2, 6, 2, 15, 2, 5, 7, 29, 6, 2, 15, 8, 9, 3, 2, 17, 11, 24, 57, 9, 3, 47, 16, 4, 4]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 3, 2, 4, 4, 188, 2, 4, 3, 2, 124, 2, 3, 3, 4, 109, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 6, 4, 2, 7, 2, 4, 3, 4, 3, 22, 3, 7, 2, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 6, 8, 3, 3, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 9, 4, 7, 17, 8, 7, 29, 14, 10, 10, 6, 4, 5, 12, 8, 8, 5, 4, 5, 6, 8, 14, 5, 4, 6, 16, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 2, 8, 4, 3, 4, 3, 6, 4, 5, 3, 5, 4, 48, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 2, 2, 4, 2, 79, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 3, 2, 209, 2, 28, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 4, 8, 7, 5, 4, 5, 4, 8, 15, 7, 8, 7, 7, 5, 13, 4, 9, 4, 4, 8, 6, 5, 15, 3, 12, 4, 4, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 3, 4, 3, 3, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 4, 6, 5, 10, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 34, 4, 3, 4, 9, 4, 4, 179, 4, 6, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 43, 6, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 56, 6, 5, 6, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 6, 4, 5, 8, 6, 4, 20, 4, 4, 5, 5, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 20.522225721947187
thermo_feasible = true
