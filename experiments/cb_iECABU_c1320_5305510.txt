┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECABU_c1320
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECABU_c1320
----------------------------------
number of metabolites : 1942
number of reactions : 2731
number of genes : 1320

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2731 flux variables and 5071 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 13, 13, 13, 13, 17, 13, 14, 2, 12, 11, 3, 2, 7, 11, 11, 11, 11, 11, 2, 2, 2, 2, 5, 2, 3, 7, 17, 16, 17, 16, 17, 16, 16, 13, 13, 4, 4, 10, 15]
length(C_list) = 40
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 2, 5, 2, 4, 3, 7, 3, 3, 2, 3, 3, 4, 174, 3, 2, 4, 5, 4, 4, 3, 5, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 2, 2, 6, 3, 4, 4, 6, 10, 7, 2, 4, 10, 8, 102]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 7, 3, 3, 3, 5, 5, 2, 2, 3, 4, 2, 8, 20, 5, 4, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 4, 3, 3, 4, 3, 4, 4, 4, 3, 4, 3, 102]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 2, 3, 5, 5, 33]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 2, 86, 3, 10, 8, 7, 3, 4, 2, 8, 6, 2]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 3, 3, 19, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 21, 3, 7, 3, 3, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 4, 72, 4, 5, 7, 191, 4, 94, 26, 5, 5, 10, 4, 7, 16]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [18, 5, 6, 6, 7, 4, 4, 5, 6, 6, 3, 10, 11, 4, 5, 4, 9, 6, 12, 6, 6, 5, 6, 6, 4, 6, 6, 6, 6, 6, 252, 14, 6, 7, 6, 6, 5, 6, 6, 6, 7, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 3, 5, 4, 4, 6, 6, 5, 17, 4, 8, 4, 4, 6, 7, 4, 4, 5, 4, 4, 6, 4, 23, 6, 4, 5, 4, 10, 4, 5, 4, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 4, 3, 5, 7, 4, 7, 9, 8, 5, 4, 6, 7, 6, 6, 54, 5, 3, 3, 3, 4, 134, 6, 6, 7, 3, 5, 4, 27, 6, 5, 87, 7, 4, 5, 6, 4, 7, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 4, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 5, 7, 227]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 9, 2, 3, 4, 18, 3, 6, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 3, 5, 10, 8, 15, 8, 37, 15, 21, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785284206052
thermo_feasible = true
