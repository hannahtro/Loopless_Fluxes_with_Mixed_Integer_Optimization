┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iE2348C_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iE2348C_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2703
number of genes : 1287

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 81
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2703 flux variables and 5015 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 13, 2, 4, 2, 2, 11, 76, 13, 14, 13, 15, 19, 9, 14, 13, 13, 24, 25, 24, 24, 25, 2, 2, 6, 2, 2, 3, 3, 25, 2, 2, 3, 10, 3, 23, 17, 24, 23, 23, 2, 2, 2, 5, 39, 42, 6, 94, 39, 8]
length(C_list) = 51
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 2, 2, 25, 7, 2, 3, 3, 5, 3, 3, 29, 5, 4, 3, 3, 2, 5, 4, 3, 4, 3, 3, 187]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 4, 4, 12, 2, 2, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 3, 3, 2, 3, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 72, 2, 20, 6, 31, 5, 76, 3, 26, 44]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 5, 5, 4, 12, 55, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 4, 25, 3, 4, 19, 51, 67, 7, 4, 15, 4, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 6, 25, 3, 6, 7, 38, 44]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 153, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 4, 5, 6, 8, 11, 133, 4, 9, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 6, 4, 4, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 4, 11, 5, 4, 4, 6, 6, 5, 7, 11, 2, 11, 11, 11, 12, 11, 7, 12, 11, 11, 2, 24, 23, 22, 23, 4, 4, 4, 4, 6, 4, 4, 3, 4, 4, 3, 22, 6, 4, 7, 5, 4, 10, 5, 8, 4, 7, 57, 15, 24, 22, 21, 5, 3, 4, 4, 4, 4, 44, 4, 50, 17, 65, 6]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 7, 13, 6, 3, 7, 4, 6, 3, 5, 10, 4, 90, 6, 4, 8, 8, 6, 4, 4, 4, 7, 4, 4, 4, 4, 4, 6, 6, 11, 10, 9, 4, 4, 4, 6, 5, 6, 7, 4, 12, 4, 5, 6, 4, 5, 6, 4, 4, 6, 6, 4, 4, 7, 4, 6, 6, 5, 7, 6, 18]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 4, 10, 3, 3, 4, 27, 4, 9, 4, 4, 24, 9, 10, 9, 6, 114, 9, 9, 25, 26, 25, 25, 26, 4, 4, 5, 3, 3, 27, 29, 8, 5, 4, 25, 30, 4, 4, 4, 123, 4, 10, 4, 3, 24, 12, 25, 24, 24, 293, 3, 5, 4, 15, 9, 64, 6, 11, 176, 5, 2, 251]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785414871366
thermo_feasible = true
