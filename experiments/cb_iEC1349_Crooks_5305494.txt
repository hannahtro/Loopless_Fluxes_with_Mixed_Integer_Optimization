┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1349_Crooks
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1349_Crooks
----------------------------------
number of metabolites : 1946
number of reactions : 2756
number of genes : 1349

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5168 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 11, 11, 11, 11, 11, 18, 17, 17, 2, 20, 20, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 249, 106, 14, 2, 3, 9, 39, 4, 2, 10, 2, 2, 3, 6, 9, 9, 10, 3, 2, 9, 14, 15, 10, 15, 6, 3, 7, 44, 41, 2, 2, 2, 3, 2, 37, 19, 4, 38, 38, 39, 2, 3]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 5, 3, 4, 3, 3, 5, 2, 9, 4, 5, 4, 6, 5, 107, 14, 2, 9, 4, 3, 3, 12, 5, 6, 2, 4, 3, 2, 2, 4, 15]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 16, 12, 12, 12, 12, 12, 12, 18, 18, 18, 18, 18, 18, 18, 15, 15, 160, 15, 15, 15, 17, 15, 15, 15, 15, 15, 15, 107, 15, 15, 15, 15, 15, 17, 15, 15, 4, 2, 8, 40, 5, 3, 11, 3, 10, 10, 10, 4, 15, 62, 6, 9, 5, 100, 4, 8, 58, 4, 38, 14, 39, 57, 44, 40, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 12, 2, 9, 4, 3, 2, 2, 10, 5, 5, 10, 5, 2, 3, 11, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 4, 5, 129, 6, 4, 5, 4, 16, 4, 4, 93]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 5, 5, 9, 4, 5, 5, 4, 7, 10, 251, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 6, 6, 4, 20, 4, 6, 2, 26, 4, 6, 4, 3, 4, 3, 3, 4, 4, 6, 5, 5, 4, 9, 5, 7, 4, 5, 5, 3, 4, 4, 6, 5, 4, 6, 4, 69, 4, 5, 4, 3, 9, 10, 7, 6, 12, 10, 4, 108, 5, 8, 5, 7, 5, 4, 2, 5, 5, 11, 5, 2, 4, 6, 6, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 13, 10, 6, 7, 3, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 7, 4, 6, 4, 11, 4, 4, 4, 6, 7, 4, 4, 18, 8, 10, 76]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 19, 102, 3, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 25, 5, 3, 21, 4, 5, 8, 6, 6, 9, 8, 5, 20, 6, 5, 5, 60, 9, 7, 5]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 4, 5, 4, 14, 4, 4, 4, 5, 62, 219, 5, 6, 6, 6, 21, 6, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 33, 82, 5, 5, 5, 8, 17, 5, 7, 107, 6, 54, 12, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 5, 4, 5, 4, 6, 8, 25, 10, 6, 10, 3, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 16, 4, 7, 4, 6, 7, 63, 4, 6, 46, 8, 5, 6, 14, 126, 5, 7, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 7, 10, 11, 11, 11, 11, 144, 149, 11, 11, 39, 17, 4, 17, 17, 17, 18, 14, 15, 30, 7, 19, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 4, 14, 14, 14, 14, 14, 14, 8, 14, 14, 14, 4, 4, 5, 7, 5, 10, 84, 10, 9, 9, 9, 6, 9, 15, 11, 9, 24, 5, 6, 18, 5, 8, 77, 10, 5, 10, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 125, 51, 4, 91, 6, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 6, 4, 7, 33, 7, 6, 68, 3, 9, 5, 69, 11, 3, 125, 5, 57, 5, 26]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 113, 4, 4, 4, 115, 5, 5, 7, 5, 7, 7, 42, 11, 7, 12, 6, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 5, 7, 5, 8, 7, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.9865789531350593
thermo_feasible = true
