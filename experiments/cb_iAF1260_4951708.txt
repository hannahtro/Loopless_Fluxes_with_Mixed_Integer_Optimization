ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260
----------------------------------
number of metabolites : 1668
number of reactions : 2382
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 119
max_cuts = 12
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2382 flux variables and 4460 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 80, 2, 2, 3, 2, 3, 3, 3, 3, 3, 2, 4, 72, 4, 3, 3, 4, 3, 2, 9, 7, 25, 3, 15, 5, 3]
length(C_list) = 12
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 4, 4, 3, 3, 3, 7, 4, 5, 6, 4, 5, 5, 4, 5, 5, 35, 5, 5, 4, 2, 5, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 3, 3, 6, 7, 4, 5, 3, 6, 8, 9, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 4, 7, 13, 4, 4, 4, 135, 12]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 4
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367009388648834
thermo_feasible = true
