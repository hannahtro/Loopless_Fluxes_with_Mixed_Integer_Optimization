┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECOK1_1307
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECOK1_1307
----------------------------------
number of metabolites : 1941
number of reactions : 2729
number of genes : 1304

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2729 flux variables and 5067 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 2, 2, 2, 2, 2, 3, 2, 4, 4, 4, 2, 3, 3, 3, 2, 5, 2, 3, 4, 3, 3, 5, 4, 3, 2, 3, 3, 3, 4, 6, 4, 2, 4, 3, 5, 17]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 4, 3, 3, 3, 4, 3, 9, 3, 3, 4, 4, 2, 3, 2, 4, 5, 4, 3, 3, 3, 5, 4, 3, 4, 2, 17, 4, 4, 4, 4, 3, 2, 2, 4, 3, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 3, 5, 4, 5, 5, 4, 5, 6, 5, 3, 4, 4, 4, 4, 3, 4, 6, 4, 3, 3, 3, 4, 4, 5, 23, 7, 4, 87, 4, 4, 5, 13, 7, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 12, 5, 4, 3, 3, 3, 4, 4, 4, 3, 4, 5, 5, 5, 8, 6, 5, 4, 3, 4, 9, 4, 37, 4, 11, 4, 5, 6, 204, 6, 6, 6, 43, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 3, 5, 2, 4, 31, 5, 6, 7, 5, 6, 5, 5, 3, 3, 4, 11, 6, 8, 3, 6, 7, 6, 19, 28, 17, 10, 68, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 2, 2, 2, 5, 2, 4, 2, 33, 4, 4, 2, 4, 6, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 5, 144, 4, 6, 9, 7, 5, 5, 178, 177]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 5, 4, 13, 8, 6, 7, 7, 6, 12, 7, 8, 5, 5, 5, 5, 28, 6, 5, 12, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 3, 3, 2, 3, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 6, 5, 7, 5, 9, 7, 7, 5, 6, 75]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 5, 8, 8, 18, 5, 6, 12, 4, 6, 5, 60, 5, 4, 43, 21, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 8, 3, 7, 8, 41, 4, 5, 6, 11, 4, 44, 134]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 5, 4, 4, 4, 5, 46, 5, 9, 215, 6, 17, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 7, 11, 5, 5, 5, 9, 14, 5, 5, 5, 39]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 6, 4, 5, 7, 4, 9, 4, 8, 10, 73, 14, 102, 8, 5, 10, 8, 84, 8, 11, 10, 10, 153, 8, 10, 24, 3, 9, 10, 5, 7, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 7, 7, 4, 8, 6, 6, 8, 4, 47, 8, 8, 9, 5, 8, 4, 157, 44, 11, 12, 13, 8, 8, 10, 10, 7, 19, 8, 9, 143, 34, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660071
thermo_feasible = true
