┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC55989_1330
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC55989_1330
----------------------------------
number of metabolites : 1953
number of reactions : 2756
number of genes : 1330

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 3, 4, 2, 2, 2, 2, 3, 3, 2, 29, 2, 2, 2, 3, 3, 2, 3, 4, 2, 4, 4, 3, 4, 3, 3, 2, 4, 4, 4, 4, 3, 4, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 2, 2, 3, 4, 4, 3, 2, 3, 4, 4, 4, 4, 3, 3, 3, 4, 3, 4, 4, 4, 3, 4, 5, 3, 6, 4, 3, 4, 3, 3, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 20, 4, 3, 3, 4, 4, 3, 3, 4, 5, 4, 7, 5, 4, 4, 3, 4, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 5, 4, 2, 4, 6, 5, 4, 3, 3, 5, 4, 2, 4, 7, 5, 2, 4, 5, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 6, 2, 6, 145, 7, 7, 6, 9, 11, 41, 2, 6, 12, 2, 7, 11, 4, 7, 81, 27, 8, 194, 3, 7, 6, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 7, 3, 5, 4, 4, 6, 4, 4, 52, 8, 6, 4, 5, 4, 67, 64, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 2, 6, 4, 5, 4, 3, 4, 4, 4, 84, 10, 33, 5, 6, 6, 8, 9, 4, 10, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 5, 2, 4, 8, 3, 6, 5, 43, 7, 5, 43, 4, 23, 4, 6, 4, 79, 8, 6, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 7, 13, 5, 4, 106, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 4, 3, 2, 4, 11, 4, 4, 32, 6, 3, 9, 8, 5, 48, 11, 8, 5, 5, 13, 6, 12, 5, 21, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 30, 232, 188, 5, 7, 10, 6, 103, 104, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 2, 14, 4, 10, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386659582
thermo_feasible = true
