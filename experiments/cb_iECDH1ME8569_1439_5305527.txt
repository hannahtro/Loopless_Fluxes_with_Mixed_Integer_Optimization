┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECDH1ME8569_1439
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECDH1ME8569_1439
----------------------------------
number of metabolites : 1950
number of reactions : 2755
number of genes : 1439

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2755 flux variables and 5119 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 38, 14, 13, 13, 3, 3, 3, 4, 11, 13, 4, 13, 14, 13, 14, 2, 6, 3, 13, 13, 16, 2, 4, 2, 4, 2, 2, 2, 2, 3, 5, 2, 7, 144, 7, 7, 39, 40, 2, 40, 4, 9, 9, 9, 9]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 6, 3, 2, 2, 2, 2, 3, 2, 2, 3, 3, 31, 5, 5, 4, 4, 2, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 3, 6, 2, 6, 8, 47, 51, 5, 4, 2, 12, 5, 5, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 2, 5, 4, 2, 291, 2, 4, 2, 3, 4, 10, 4, 15, 5, 4, 4, 6, 5, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 12, 11, 11, 26, 60, 2, 16, 16, 19, 16, 22, 18, 16, 13, 13, 14, 13, 38, 14, 14, 161, 73, 14, 15, 25, 13, 3, 13, 20, 21, 13, 15, 9, 6, 6, 13, 13, 13, 32, 140, 14, 3, 6, 7, 39, 7, 39, 40, 6, 40, 4, 7, 24, 17, 9, 9]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 3, 3, 4, 6, 3, 5, 59, 8, 6, 7, 6, 7, 5, 6, 37, 7, 5, 33, 18, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 3, 5, 11, 4, 4, 154, 5, 6, 5, 4, 7, 6, 5, 5, 4, 8, 6, 5, 15]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 7, 4, 8, 5, 5, 4, 5, 5, 7, 4, 4, 13]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 3, 8, 6, 4, 4, 11, 7, 6, 45, 10, 10, 122, 15, 7, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 44, 6, 4, 4, 4, 4, 4, 6, 4, 4, 5, 4, 4, 5, 4, 36, 21, 21, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 5, 8, 4, 6, 3, 4, 4, 4, 5, 3, 6, 4, 5, 4, 4, 6, 5, 5, 3, 11, 4, 4, 4, 7, 3, 5, 6, 5, 6, 6, 4, 4, 4, 6, 5, 7, 4, 6, 4, 7, 4, 5, 5, 95, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [20, 6, 6, 9, 6, 11, 12, 6, 6, 14, 7, 6, 6, 34, 4, 9, 6, 6, 4, 10, 7, 6, 6, 4, 4, 6, 6, 4, 5, 6, 4, 6, 6, 7, 4, 12, 4, 9, 108, 4, 19, 102, 18, 5, 107, 49, 4, 6, 4, 107, 5, 6, 10, 7, 13, 5, 4, 7, 78, 5, 6, 4, 12, 5, 4, 8, 11, 6, 9, 35, 4, 5, 7, 7, 7, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 8, 4, 5, 4, 5, 5, 4, 87, 5, 4, 5, 12, 81, 74, 6, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 8, 6, 6, 6, 7, 7, 11, 7, 9, 10, 8, 7, 158, 9, 18, 5, 4, 7, 11, 7, 12, 12]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 5, 7, 7, 6, 5, 9, 8, 3, 14, 3, 3, 3, 12, 4, 3, 6, 3, 8, 23, 21, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 39, 6, 158, 6, 5, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 11, 6, 13, 12, 12, 12, 12, 12, 12, 17, 17, 18, 17, 5, 18, 17, 14, 130, 15, 14, 38, 7, 14, 25, 14, 9, 61, 15, 6, 13, 12, 12, 14, 11, 14, 15, 15, 9, 37, 11, 4, 9, 14, 14, 14, 4, 8, 15, 6, 10, 6, 40, 6, 12, 9, 39, 5, 8, 39, 40, 4, 40, 37, 20, 10, 11, 10, 10]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 5, 3, 5, 4, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 16, 4, 3, 9, 15, 4, 9, 4, 4, 8, 3, 6, 4, 5, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785410723239
thermo_feasible = true
