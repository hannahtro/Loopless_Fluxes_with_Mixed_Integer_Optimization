┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iETEC_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iETEC_1333
----------------------------------
number of metabolites : 1962
number of reactions : 2756
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 41
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 2, 11, 11, 11, 90, 11, 11, 11, 16, 16, 17, 16, 20, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 16]
length(C_list) = 30
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 2, 11, 11, 11, 19, 17, 11, 11, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 156, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 40, 3, 2, 9, 2, 3, 4, 2, 2, 5, 2, 4, 2, 3, 2, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 11, 11, 11, 11, 11, 11, 11, 17, 17, 18, 24, 18, 17, 17, 14, 14, 15, 14, 15, 157, 14, 19, 29, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 6, 3, 2, 5, 4, 2, 23, 3, 21, 3, 4, 8, 4, 7, 54, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 3, 2, 2, 2, 10, 4, 14, 5, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 8, 6, 5, 4, 4, 3, 3, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 3, 2, 3, 8, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 2, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 6, 3, 2, 2, 7, 5, 6, 2, 5, 2, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 106]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 147, 5, 5, 4, 4, 5, 4, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 4, 5, 4, 4, 3, 13, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 7, 32]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 17]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785410723216
thermo_feasible = true
