┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iNRG857_1313
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iNRG857_1313
----------------------------------
number of metabolites : 1943
number of reactions : 2735
number of genes : 1311

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 109
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 17, 18, 17, 19, 17, 17, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 11, 14, 14, 15, 14, 15, 4, 14, 14, 2, 2, 2, 7, 17, 2, 2, 3, 2, 2, 26, 2, 3, 2, 4, 2, 2]
length(C_list) = 46
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 6, 2, 3, 4, 6, 4, 3, 2, 2, 3, 5, 2, 3, 3, 3, 3, 172, 24, 3, 3, 4, 3, 25, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 2, 3, 3, 2, 3, 4, 2, 4, 3, 7, 4, 4, 2, 3, 4, 22, 2, 6, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 4, 2, 3, 3, 4, 3, 4, 4, 2, 3, 6, 122, 4, 6, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 5, 4, 4, 5, 4, 4, 5, 4, 3, 4, 4, 4, 6, 4, 5, 4, 4, 4, 9, 5, 5, 3, 4, 10]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 5, 3, 2, 3, 3, 19, 8, 4, 23, 71, 6, 4, 6, 2, 2]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 19, 16, 15, 18, 17, 81, 13, 12, 13, 12, 13, 6, 12, 13, 15, 10, 10, 10, 7, 10, 10, 10, 13, 12, 12, 13, 17, 13, 6, 7, 2, 12, 12, 12, 8, 7, 7, 15, 7, 6, 7, 2, 6, 6, 6, 13, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 17, 18, 17, 18, 23, 17, 14, 14, 15, 16, 16, 14, 15, 124, 13, 12, 83, 15, 12, 14, 13, 12, 12, 14, 169, 14, 17, 14, 15, 9, 3, 64, 14, 14, 15, 16, 57, 82, 9, 17, 6, 9, 5, 9, 10, 8, 174, 5, 8, 5, 5, 7, 16]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 3, 4, 6, 4, 4, 10, 69, 5, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 5, 26]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785410723348
thermo_feasible = true
