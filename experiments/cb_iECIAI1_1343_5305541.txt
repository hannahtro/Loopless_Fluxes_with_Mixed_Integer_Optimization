┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI1_1343
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI1_1343
----------------------------------
number of metabolites : 1968
number of reactions : 2765
number of genes : 1343

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 111
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2765 flux variables and 5139 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 12, 2, 6, 2, 15, 2, 5, 7, 29, 6, 2, 15, 8, 9, 3, 2, 17, 11, 24, 57, 9, 3, 47, 16, 4, 4, 3, 12, 7, 47, 6, 49, 3, 47, 2, 10, 7, 15, 7, 50, 10, 4, 16, 12, 47, 55, 49, 8, 15, 52, 8, 4, 7, 46]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 2, 3, 5, 6, 3, 3, 3, 9, 31, 7, 8, 4, 14, 10, 3, 8, 2, 15, 3, 4, 2, 8, 6, 9, 6, 15, 145, 3, 10, 36, 14, 6, 8, 146, 10, 15, 5, 7, 7, 157, 42]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 3, 2, 87, 4, 3, 2, 2, 3, 22, 3, 69, 3, 4, 4, 4, 4, 88, 263, 7, 7, 5, 4, 176, 4, 5, 46, 4, 3, 85, 207, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 36, 3, 3, 5, 2, 8, 3, 2, 6, 11, 33, 11, 6, 3, 2, 5, 3, 30, 99]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 4, 13, 4, 4, 62, 5, 4, 4, 3, 7, 4, 5, 12, 12, 4, 5, 7, 6, 5, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 3, 2, 10, 175, 17, 8, 14, 2, 2, 3, 4, 3, 10, 3, 3, 196]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 7, 8, 7, 14, 7, 4, 7, 9, 12, 8, 16, 9, 11, 7, 9, 7, 15, 7, 12, 8, 10, 54, 19, 7, 14, 7, 8, 8, 120, 8, 7, 7, 56, 55, 7, 8, 13, 8, 16, 10, 76, 190, 4, 7, 180, 59, 10, 8, 208, 10, 9, 61, 7, 17, 55, 9, 10, 15, 23, 11, 8, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 7, 2, 11, 8, 25, 5, 4, 49, 4, 7, 4, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 11, 15, 50]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 2, 130, 7, 4, 8, 4, 64, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 20.522225678440062
thermo_feasible = true
