ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 112
max_cuts = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2, 4, 6, 2, 4, 4, 2, 15, 190, 3, 4, 31, 5, 4]
length(C_list) = 42
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 5, 2, 11, 3, 14, 2, 2, 8, 4, 16, 6, 18, 2, 7, 3, 2, 2, 4, 7, 5, 165, 6, 4, 3, 3, 2, 4, 4, 6, 9, 7, 2, 2, 8, 3, 7, 4, 4, 7, 4, 7, 3, 3, 12, 3, 8, 4, 4]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 7, 62, 10, 2, 2, 4, 3, 6, 6, 9, 5, 4, 6, 2, 6, 5, 4, 5, 5, 4, 9, 5, 4, 3, 5, 5, 4, 2, 4, 4, 4, 2, 2, 3, 5, 71, 13, 5, 6, 5, 3, 15, 4, 4, 4, 11, 6, 8, 8, 7, 12]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 5, 118, 5, 4, 3, 6, 7, 3, 4, 4, 9, 8, 4, 3, 10, 9, 7, 5, 5, 3, 8, 6, 3, 4, 4, 5, 8, 9, 2, 5, 7, 5, 7, 6, 6, 4, 8, 3, 6, 7, 8, 7, 6, 6, 8, 10, 8, 5, 10, 4, 7, 6, 122, 9, 9, 6]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [15, 9, 73, 9, 5, 9, 13, 8, 44, 2, 10, 7, 7, 18, 9, 11, 8, 14, 3, 5, 165, 11, 4, 4, 187, 7, 2, 10, 7, 5, 11, 8, 4, 7, 11, 8, 2, 7, 5, 7, 3, 10, 8, 5, 6, 28, 8, 10, 9, 53, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 3, 2, 5, 8, 4, 10, 9, 4, 3, 7, 12, 6, 3, 4, 37, 3, 22, 3, 8, 10, 5, 5, 3, 3, 146, 4, 5, 7, 4, 7, 3, 4, 3, 4, 5, 11, 14, 3, 3, 6, 4, 3, 6, 4, 3, 7, 77, 4, 56, 4, 4, 5, 5, 6, 341]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 4, 4, 3, 204, 5, 3, 24, 7, 4, 4, 3, 8, 4, 4, 11, 3, 3, 7, 5, 4, 3, 4, 4, 3, 6, 5, 3, 4, 4, 5, 5, 5, 4, 3, 6, 4, 8, 14, 7, 4, 4, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 4, 7, 4, 4, 12, 8, 7, 11, 8, 7, 4, 6, 7, 4, 9, 7, 5, 10, 13, 7, 10, 13, 10, 5, 10, 8, 6, 11, 8, 6, 9, 4, 10, 20, 5, 5, 8, 6, 8, 4, 4, 10, 8, 4, 5, 4, 7, 8, 10, 8, 6, 12, 8, 5]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 10, 4, 5, 3, 4, 8, 4, 9, 7, 4, 10, 6, 8, 4, 3, 8, 8, 4, 2, 143, 10, 5, 5, 8, 8, 6, 8, 5, 11, 2, 3, 4, 5, 8, 4, 4, 4, 4, 13, 5, 7, 7, 5, 9, 4, 5, 4, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 7, 9, 11, 33, 5, 4, 4, 7, 4, 4, 3, 12, 6, 7, 5, 7, 5, 4, 5, 4, 14, 85, 4, 5, 4, 4, 4, 3, 5, 8, 4, 6, 2, 6, 4, 3, 6, 7, 4, 5, 10, 12, 12, 3, 4, 4, 5, 9, 4, 11, 7, 5, 71, 4, 8, 5, 4, 4]
length(C_list) = 61
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 3, 6, 15, 10, 3, 9, 5, 4, 9, 6, 4, 78, 4, 3, 7, 4, 8, 4, 6, 13, 5, 6, 6, 6, 4, 11, 27, 13, 9, 4, 5, 7, 7, 5, 3, 11, 4, 11, 8, 6, 5, 6, 3, 5, 6, 5, 5, 5, 7, 6, 8, 9, 7, 8, 10]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 7, 6, 9, 3, 13, 6, 179, 3, 4, 4, 3, 23, 8, 6, 6, 3, 8, 4, 5, 3, 6, 6, 8, 4, 94, 8, 42, 4, 5, 5, 39, 6, 13, 9, 8, 3, 6, 4, 5, 3, 8, 4, 8, 6, 5, 3, 3, 5, 100, 6, 7, 9, 4, 6, 6]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 3, 6, 3, 3, 5, 5, 7, 5, 7, 9, 3, 4, 10, 4, 3, 5, 3, 6, 5, 3, 4, 7, 3, 3, 3, 4, 6, 12, 3, 10, 3, 3, 3, 4, 143, 3, 5, 4, 3, 6, 5, 5, 6, 3, 4, 8, 3, 6, 5, 8, 26, 5]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 6, 3, 5, 7, 3, 287, 6, 6, 3, 7, 7, 4, 8, 4, 4, 4, 5, 7, 5, 7, 6, 5, 11, 6, 5, 9, 3, 2, 7, 4, 4, 4, 3, 5, 15, 4, 4, 3, 6, 10, 6, 5, 212, 11, 5, 7, 13, 8, 5, 4, 3, 4]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 9, 8, 4, 3, 9, 4, 5, 6, 3, 4, 7, 8, 4, 6, 7, 3, 6, 5, 6, 3, 235, 32, 3, 7, 6, 437, 5, 8, 3, 6, 6, 3, 8, 17, 6, 5, 9, 5, 8, 4, 3, 6, 226, 245, 58, 8, 6, 8, 6, 10, 3, 4, 7, 10]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 5, 5, 3, 8, 6, 4, 7, 5, 5, 3, 3, 4, 7, 4, 9, 4, 4, 4, 3, 3, 7, 10, 4, 6, 7, 91, 4, 5, 9, 6, 12, 3, 4, 5, 3, 5, 8, 449, 7, 4, 3, 135, 8, 3, 5, 8, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 5, 10, 3, 7, 6, 6, 4, 5, 6, 3, 6, 8, 11, 4, 5, 6, 7, 5, 3, 7, 9, 3, 6, 10, 8, 10, 7, 7, 5, 6, 5, 3, 29, 4, 8, 6, 14, 4, 5, 4, 12, 3, 6, 5, 3, 14, 3, 8, 3, 178, 6, 3]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 5, 3, 4, 3, 6, 22, 14, 4, 5, 9, 6, 4, 6, 3, 8, 6, 3, 8, 3, 10, 3, 4, 5, 5, 3, 5, 9, 7, 4, 9, 49, 6, 5, 4, 4, 17, 9, 16, 6, 8, 7, 5, 5, 38, 4, 4, 5, 5, 4, 3, 8]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 9, 17, 8, 3, 5, 4, 6, 4, 4, 5, 6, 17, 3, 7, 4, 7, 6, 6, 17, 4, 4, 3, 7, 3, 6, 210, 5, 3, 5, 4, 7, 3, 6, 3, 5, 9, 6, 6, 6, 4, 5, 8, 4, 4, 3, 6, 4, 8, 4, 4, 6]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 3, 26, 8, 5, 4, 5, 9, 10, 3, 5, 6, 8, 5, 9, 9, 5, 19, 68, 3, 31, 4, 3, 6, 6, 10, 4, 4, 7, 3, 7, 3, 10, 6, 4, 8, 4, 6, 6, 8, 7, 6, 9, 5, 8, 14, 5, 7, 3, 7]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 6, 8, 6, 7, 12, 4, 17, 7, 7, 6, 11, 4, 9, 7, 6, 3, 25, 7, 6, 6, 5, 7, 8, 8, 45, 6, 12, 7, 9, 8, 3, 7, 8, 6, 7, 5, 7, 7, 3, 9, 6, 10, 8, 40, 28, 9, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 10, 4, 10, 9, 7, 10, 63, 8, 10, 6, 12, 8, 7, 8, 8, 7, 4, 8, 6, 4, 9, 13, 4, 3, 5, 10, 10, 6, 5, 10, 2, 5, 5, 8, 9, 81, 9, 19, 59, 10, 7, 5, 58, 6, 9, 15, 8, 4, 8, 13, 3, 9, 12, 187]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 6, 7, 313, 4, 11, 6, 10, 10, 12, 487, 16, 9, 4, 225, 13, 4, 8, 5, 5, 8, 3, 3, 225, 3, 6, 4, 3, 5, 7, 8, 8, 185, 6, 4, 5, 8, 10, 9, 9, 11, 5, 12, 12, 14, 9, 7, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [8, 40, 5, 4, 18, 5, 7, 5, 7, 9, 9, 7, 2, 3, 7, 4, 6, 7, 13, 6, 6, 6, 5, 7, 236, 9, 138, 10, 4, 6, 8, 4, 8, 108, 8, 3, 6, 9, 7, 6, 6, 17, 8, 8, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 10, 8, 3, 8, 4, 8, 11, 53, 5, 8, 4, 6, 14, 10, 9, 6, 7, 7, 14, 39, 5, 5, 33, 7, 37, 11, 8, 8, 4, 9, 6, 5, 8, 7, 8, 10, 11, 8, 12, 7, 8, 5, 11, 3, 7, 11]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 9, 4, 8, 7, 4, 10, 9, 6, 8, 10, 11, 3, 5, 8, 5, 6, 11, 11, 4, 11, 6, 255, 9, 10, 6, 5, 7, 8, 10, 6, 9, 11, 7, 6, 7, 11, 20, 12, 8, 10, 11, 6, 7, 7, 12, 4, 6, 5, 8, 7, 4, 7, 4, 6, 6]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [9, 7, 14, 10, 7, 3, 8, 11, 6, 4, 11, 7, 6, 8, 207, 11, 17, 5, 9, 8, 7, 4, 6, 8, 7, 7, 7, 10, 6, 5, 6, 9, 9, 11, 9, 7, 8, 8, 11, 10, 13, 9, 26, 6, 88, 7, 10, 4, 3, 7, 9, 8]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [10, 7, 375, 10, 11, 5, 3, 7, 15, 7, 10, 11, 9, 8, 8, 5, 10, 18, 7, 6, 7, 4, 11, 7, 4, 7, 7, 6, 9, 10, 11, 3, 7, 210, 6, 8, 7, 11, 5, 7, 13, 2, 9, 4, 4, 24, 8, 4, 24, 8, 7, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 149, 4, 5, 6, 3, 8, 6, 5, 12, 4, 9, 4, 15, 4, 7, 5, 8, 7, 5, 13, 6, 48, 6, 121, 9, 144, 10, 5, 7, 7, 9, 5, 4, 9, 8, 11, 7, 7, 4, 10, 349, 8, 7, 8, 5, 7, 11, 54, 8, 7, 25]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 5, 4, 4, 3, 5, 4, 5, 8, 6, 4, 3, 4, 3, 222, 4, 7, 7, 8, 11, 10, 5, 8, 9, 5, 8, 6, 7, 6, 5, 5, 6, 4, 85, 6, 3, 6, 9, 8, 4, 8, 7, 3, 9, 9, 20]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 6, 8, 4, 3, 9, 10, 6, 11, 6, 11, 2, 16, 8, 4, 12, 3, 7, 5, 6, 4, 84, 419, 4, 9, 8, 9, 7, 10, 10, 9, 7, 6, 9, 8, 9, 9, 4, 7, 3, 9, 8, 23, 10, 5, 4, 9, 49, 240, 13, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [7, 40, 5, 11, 4, 4, 5, 157, 7, 9, 7, 59, 4, 5, 3, 6, 24, 6, 4, 6, 6, 4, 10, 5, 5, 3, 5, 5, 4, 10, 8, 7, 7, 4, 8, 7, 8, 8, 6, 16, 7, 6, 8, 4, 8, 11, 5, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 8, 9, 5, 5, 4, 3, 4, 4, 5, 8, 4, 3, 4, 6, 5, 4, 5, 6, 4, 116, 3, 4, 5, 3, 11, 6, 4, 6, 6, 3, 5, 4, 3, 3, 8, 5, 9, 6, 4, 4, 4, 5, 5, 7, 5]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [14, 5, 9, 3, 4, 4, 6, 5, 8, 4, 3, 6, 4, 7, 4, 5, 4, 4, 6, 4, 6, 4, 4, 30, 4, 6, 5, 4, 6, 5, 6, 5, 6, 10, 6, 11, 317, 5, 4, 6, 6, 6, 9, 12, 6, 6, 3, 6, 8, 46, 4, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 6, 8, 4, 4, 6, 7, 4, 6, 4, 4, 5, 6, 6, 7, 10, 4, 316, 11, 65, 7, 4, 4, 7, 17, 6, 4, 8, 8, 8, 4, 3, 4, 11, 4, 8, 7, 9, 4, 6, 16, 7, 6, 4, 7]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [15, 6, 8, 5, 4, 7, 288, 5, 10, 5, 5, 9, 11, 7, 4, 5, 4, 3, 7, 8, 3, 8, 12, 422, 8, 4, 5, 7, 4, 5, 4, 6, 5, 9, 7, 3, 6, 3, 8, 4, 29, 11, 7, 4, 6, 5, 93, 7, 4, 5, 10]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 6, 5, 5, 9, 3, 9, 5, 6, 5, 8, 4, 5, 4, 8, 5, 8, 4, 5, 4, 5, 6, 12, 8, 10, 13, 6, 28, 9, 4, 51, 4, 9, 6, 3, 35, 5, 12, 6, 7, 5, 5, 11, 7, 3, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 7, 215, 4, 5, 4, 13, 12, 9, 4, 8, 5, 4, 8, 7, 11, 6, 5, 5, 6, 8, 5, 8, 5, 6, 7, 8, 3, 6, 18, 15, 7, 23, 9, 10, 3, 7, 41, 4, 4, 5, 5, 9, 5, 7, 5, 7, 7, 11, 6, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 14, 7, 4, 7, 10, 7, 4, 8, 4, 11, 6, 9, 5, 7, 3, 8, 10, 11, 6, 14, 8, 10, 6, 9, 13, 7, 5, 4, 3, 8, 4, 7, 6, 6, 3, 3, 9, 6, 5, 9, 10, 5, 10, 4, 9, 8, 9, 7, 6, 6, 7, 10, 7]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 10, 8, 5, 6, 3, 8, 8, 9, 4, 7, 9, 10, 7, 3, 4, 7, 7, 5, 9, 224, 7, 6, 10, 7, 6, 6, 10, 6, 7, 10, 10, 9, 6, 3, 7, 4, 3, 5, 6, 10, 8, 9, 6, 3, 4, 5, 6, 10, 10]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [14, 8, 10, 8, 10, 8, 9, 8, 9, 5, 8, 3, 11, 6, 10, 10, 13, 12, 5, 10, 8, 6, 3, 10, 7, 7, 8, 13, 9, 9, 7, 8, 7, 7, 6, 6, 7, 5, 6, 6, 7, 4, 5, 4, 10, 242, 22, 6, 52, 2]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [10, 62, 6, 14, 4, 4, 6, 9, 11, 12, 10, 12, 7, 11, 11, 10, 7, 4, 8, 6, 8, 10, 8, 10, 4, 5, 11, 13, 6, 10, 7, 11, 13, 9, 7, 10, 10, 3, 9, 6, 6, 8, 16, 12, 56, 102, 9, 7, 4, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [8, 9, 5, 4, 7, 4, 10, 6, 3, 10, 9, 51, 10, 9, 30, 10, 7, 6, 5, 4, 4, 8, 5, 11, 12, 49, 8, 5, 19, 6, 87, 5, 14, 4, 5, 6, 17, 7, 5, 8, 7, 13, 6, 3, 7, 8, 9, 4, 7, 8, 13, 17, 11, 121, 4, 13]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 6, 13, 2, 4, 5, 5, 7, 11, 6, 3, 7, 4, 8, 596, 3, 11, 6, 8, 8, 6, 8, 4, 8, 11, 7, 9, 265, 9, 9, 11, 3, 38, 9, 5, 4, 6, 3, 9, 7, 9, 8, 6, 6, 8, 6, 3, 5, 4, 5, 11, 5, 16]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [17, 82, 163, 4, 56, 5, 7, 7, 5, 4, 8, 9, 9, 5, 4, 130, 5, 3, 14, 47, 5, 8, 5, 4, 7, 5, 5, 4, 6, 7, 4, 4, 9, 7, 10, 9, 290, 7, 6, 11, 162, 10, 43, 4, 7, 6, 9, 10, 3, 5, 12, 4]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 36, 7, 9, 29, 7, 6, 5, 7, 3, 9, 4, 7, 8, 5, 6, 19, 6, 13, 4, 9, 5, 8, 11, 4, 12, 8, 13, 11, 4, 511, 8, 12, 12, 90, 7, 6, 5, 7, 10, 12, 7, 3, 6, 3, 5, 10, 7, 20, 5, 3, 8, 9, 3, 8, 3]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 3, 6, 8, 7, 7, 6, 7, 3, 3, 8, 9, 15, 4, 21, 7, 3, 3, 4, 11, 4, 621, 332, 6, 8, 4, 12, 12, 8, 4, 4, 8, 4, 4, 87, 4, 8, 17, 6, 6, 4, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 4, 4, 7, 6, 4, 7, 6, 10, 4, 4, 10, 4, 4, 4, 49, 61, 6, 5, 5, 23, 8, 12, 5, 8, 4, 3, 135, 5, 5, 5, 11, 9, 4, 4, 3, 262, 13, 5, 6, 28, 82, 3]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 9, 6, 5, 8, 9, 6, 459, 6, 10, 16, 7, 4, 4, 7, 4, 4, 6, 8, 8, 7, 4, 3, 9, 8, 7, 8, 13, 4, 13, 10, 5, 4, 7, 7, 10, 11, 19, 10, 5, 4, 4, 7, 7, 4, 10, 8, 5]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 7, 3, 42, 7, 10, 6, 8, 8, 6, 11, 2, 8, 7, 6, 8, 19, 6, 7, 9, 10, 6, 6, 8, 7, 8, 6, 10, 34, 6, 11, 8, 9, 5, 6, 10, 10, 9, 7, 6, 6, 10, 7, 6, 8, 7, 9, 11, 7, 7, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [15, 7, 10, 10, 25, 4, 10, 6, 8, 4, 4, 7, 9, 7, 9, 8, 8, 8, 3, 11, 7, 5, 8, 9, 7, 7, 8, 8, 9, 6, 11, 10, 7, 7, 8, 7, 13, 4, 11, 9, 7, 8, 7, 7, 12, 26, 14, 8, 5, 13, 6, 7]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 8, 6, 384, 11, 8, 78, 109, 9, 9, 3, 8, 12, 12, 8, 5, 5, 4, 4, 4, 4, 3, 4, 5, 356, 12, 8, 7, 4, 5, 8, 4, 8, 11, 6, 9, 11, 8, 7, 10, 6, 7, 6, 5, 7, 31, 4, 8, 110, 6, 7, 7, 5, 7]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 10, 7, 5, 7, 4, 4, 44, 6, 7, 7, 7, 9, 3, 4, 4, 7, 4, 6, 380, 8, 4, 6, 18, 5, 5, 5, 4, 4, 438, 6, 9, 5, 4, 5, 9, 7, 6, 7, 12, 3, 6, 7, 77, 174, 10, 16, 8, 8, 10]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 5, 5, 5, 5, 7, 6, 9, 5, 359, 9, 9, 3, 8, 10, 4, 13, 6, 5, 6, 4, 7, 34, 4, 7, 10, 101, 12, 8, 8, 4, 3, 5, 6, 8, 6, 5, 5, 5, 13, 4, 4, 9, 3, 5, 6, 10, 5, 8, 4, 3, 76, 5]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 6, 9, 10, 6, 10, 8, 7, 4, 10, 52, 6, 5, 14, 16, 8, 5, 5, 7, 9, 6, 8, 6, 4, 4, 6, 9, 5, 15, 9, 6, 11, 6, 7, 7, 6, 6, 11, 6, 6, 5, 9, 8, 8, 6, 6, 6, 14, 12, 4, 29, 6, 9, 12]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 8, 10, 6, 4, 9, 10, 12, 12, 7, 11, 9, 6, 7, 7, 6, 162, 6, 13, 5, 10, 8, 17, 8, 7, 7, 8, 7, 6, 4, 8, 9, 7, 9, 7, 7, 4, 8, 9, 13, 7, 6, 8, 9, 7, 13, 3, 4, 4, 4, 8, 6, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 9, 14, 2, 3, 6, 8, 5, 8, 96, 9, 10, 30, 5, 4, 66, 11, 6, 4, 8, 6, 9, 4, 7, 6, 4, 5, 11, 10, 78, 9, 6, 7, 49, 6, 9, 8, 4, 4, 11, 4, 6, 6, 12, 9, 3, 14, 13, 6, 8, 9, 9, 13, 9, 10, 3, 4, 7]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 12, 5, 7, 10, 8, 6, 6, 7, 6, 8, 6, 5, 7, 7, 9, 17, 5, 3, 4, 6, 10, 6, 7, 33, 6, 6, 7, 12, 9, 5, 6, 4, 6, 12, 3, 6, 6, 7, 8, 4, 4, 8, 19, 4, 4, 4, 8, 4, 18, 7, 6, 7, 4, 9]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 7, 13, 3, 6, 13, 17, 12, 7, 4, 19, 8, 4, 27, 214, 10, 7, 10, 4, 4, 8, 9, 4, 11, 136, 5, 13, 8, 11, 155, 8, 4, 240, 4, 4, 7, 4, 7, 7, 4, 4, 7, 11, 5, 27, 12, 7, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 7, 8, 8, 6, 6, 8, 11, 6, 13, 6, 318, 5, 19, 9, 5, 5, 7, 8, 16, 120, 7, 8, 10, 5, 6, 9, 14, 4, 5, 9, 19, 8, 27, 6, 5, 10, 8, 5, 9, 10, 7, 11, 4, 5, 19, 11, 5, 3, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [6, 6, 10, 12, 3, 12, 7, 13, 8, 9, 4, 15, 10, 11, 20, 11, 57, 6, 10, 5, 5, 4, 3, 5, 7, 7, 5, 10, 84, 7, 15, 5, 6, 8, 8, 10, 10, 5, 18, 4, 6, 7, 11, 9, 4, 10, 7, 6, 10, 7, 77, 3, 74, 11]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 5, 3, 8, 17, 24, 6, 3, 4, 32, 7, 28, 24, 4, 7, 7, 4, 4, 7, 5, 4, 4, 7, 5, 12, 3, 11, 4, 6, 5, 7, 10, 8, 211, 10, 57, 7, 6, 6, 78, 6, 4, 9, 11, 10, 14, 7, 6, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [10, 3, 10, 10, 7, 7, 5, 7, 7, 7, 7, 9, 627, 11, 8, 323, 9, 9, 33, 4, 9, 9, 7, 6, 10, 513, 6, 5, 4, 9, 3, 9, 3, 11, 9, 8, 4, 10, 4, 12, 4, 14, 9, 6, 16, 8, 9, 4, 10, 10, 7, 5, 10, 6, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [12, 6, 10, 4, 12, 4, 7, 25, 3, 6, 13, 8, 13, 3, 3, 15, 4, 94, 5, 5, 9, 7, 9, 12, 6, 7, 26, 6, 110, 5, 7, 12, 6, 11, 11, 5, 5, 5, 19, 5, 12, 7, 7, 10, 7, 7, 10, 13, 3, 9, 7]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 4, 7, 7, 7, 5, 402, 10, 5, 4, 10, 9, 6, 9, 6, 11, 4, 6, 5, 8, 38, 6, 5, 9, 7, 7, 3, 4, 8, 4, 19, 5, 5, 7, 4, 54, 4, 5, 4, 3, 5, 10, 5, 4, 4, 8, 10, 11, 6, 8, 10, 7, 3]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 7, 5, 9, 8, 12, 308, 327, 4, 9, 13, 5, 15, 257, 8, 7, 46, 3, 3, 3, 4, 3, 5, 7, 4, 3, 12, 6, 6, 4, 5, 7, 6, 4, 3, 4, 3, 5, 10, 7, 13, 7, 6, 5, 4, 5, 68, 6, 6, 4, 8, 8, 102, 8, 8, 5, 9, 6, 11]
length(C_list) = 61
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 10, 279, 5, 5, 4, 409, 7, 233, 4, 9, 8, 12, 29, 84, 4, 43, 9, 283, 4, 6, 5, 27, 8, 131, 4, 3, 8, 21, 5, 6, 4, 6, 9, 6, 7, 298, 9, 13, 6, 7, 5, 5, 5, 5, 3, 5, 7, 19, 4, 3, 11, 4, 29]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 7, 8, 7, 9, 4, 7, 8, 10, 7, 9, 7, 4, 11, 10, 8, 8, 10, 9, 10, 6, 10, 11, 7, 10, 7, 10, 5, 9, 5, 5, 8, 6, 8, 122, 5, 10, 6, 7, 7, 17, 6, 9, 7, 7, 39, 15, 7, 11, 8, 10, 8, 6, 9, 8, 5, 7, 5, 7, 9]
length(C_list) = 62
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 12, 7, 7, 10, 9, 6, 6, 6, 6, 7, 216, 7, 11, 3, 5, 18, 7, 4, 7, 9, 10, 11, 4, 9, 11, 9, 82, 8, 5, 13, 6, 6, 5, 7, 7, 6, 15, 7, 11, 10, 10, 10, 9, 7, 6, 6, 349, 4, 8, 8, 7, 10, 8, 6, 7, 9, 8, 12, 58]
length(C_list) = 62
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [6, 15, 8, 7, 6, 10, 10, 11, 9, 9, 10, 6, 7, 3, 6, 8, 8, 11, 13, 8, 9, 7, 7, 5, 10, 8, 11, 32, 3, 6, 12, 7, 11, 28, 13, 9, 5, 7, 8, 237, 9, 7, 12, 11, 7, 4, 7, 12, 7, 4, 5, 10, 9, 6, 199, 11, 7, 9, 9, 11, 10, 12]
length(C_list) = 62
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 8, 14, 7, 8, 6, 8, 3, 10, 4, 10, 9, 4, 9, 10, 13, 8, 7, 9, 3, 7, 7, 7, 7, 7, 12, 31, 46, 5, 14, 11, 3, 7, 8, 14, 7, 6, 8, 8, 9, 6, 5, 8, 6, 6, 25, 28, 10, 9, 6, 8, 4]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 6, 7, 4, 9, 4, 6, 10, 9, 9, 5, 7, 5, 14, 10, 4, 6, 4, 10, 18, 10, 7, 4, 7, 7, 5, 10, 15, 8, 7, 303, 7, 7, 7, 8, 4, 9, 7, 6, 5, 9, 6, 6, 6, 31, 15, 6, 11, 6, 10, 8, 3, 9]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 7, 10, 6, 9, 5, 10, 8, 7, 6, 15, 8, 10, 9, 6, 4, 7, 4, 11, 10, 10, 10, 6, 12, 5, 6, 5, 14, 10, 8, 9, 9, 11, 13, 9, 13, 15, 9, 8, 12, 103, 10, 7, 8, 25, 8, 172, 93, 7, 49, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 8, 8, 6, 8, 8, 5, 44, 12, 6, 6, 9, 7, 9, 6, 9, 5, 9, 7, 14, 6, 7, 7, 7, 4, 6, 7, 11, 7, 8, 9, 4, 8, 10, 99, 5, 6, 5, 8, 6, 10, 7, 8, 7, 86, 10, 9, 6, 7, 8, 65]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [11, 9, 11, 8, 6, 3, 4, 7, 14, 11, 8, 8, 6, 6, 6, 9, 4, 8, 7, 8, 9, 11, 9, 7, 9, 13, 6, 8, 8, 4, 10, 7, 15, 15, 8, 10, 9, 12, 7, 6, 6, 7, 7, 12, 10, 11, 8, 10, 9, 9, 8, 8, 7, 11, 5, 5, 12, 4, 8, 10]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 49, 7, 10, 10, 3, 12, 4, 14, 6, 8, 10, 14, 5, 8, 6, 9, 3, 8, 7, 7, 11, 11, 5, 7, 7, 7, 10, 9, 6, 11, 8, 9, 36, 10, 10, 7, 8, 7, 11, 11, 11, 10, 10, 3, 7, 11, 11, 10, 3, 6, 7, 6, 8]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 7, 6, 7, 4, 4, 9, 7, 5, 8, 5, 11, 4, 5, 17, 7, 4, 4, 7, 37, 10, 462, 5, 6, 7, 4, 6, 14, 8, 184, 13, 7, 7, 9, 6, 14, 5, 5, 10, 10, 8, 8, 7, 12, 277, 8, 9, 8, 9, 10]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 11, 5, 9, 9, 304, 4, 5, 7, 8, 7, 6, 4, 8, 9, 9, 9, 6, 8, 8, 5, 7, 8, 9, 10, 3, 7, 13, 11, 8, 12, 7, 25, 90, 18, 8, 8, 6, 8, 14, 21, 8, 5, 3, 299, 12, 6, 3, 6, 7, 9, 9, 6, 9, 39, 7, 7, 8, 3, 7]
length(C_list) = 62
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 9, 4, 4, 4, 8, 11, 9, 7, 6, 8, 8, 10, 9, 3, 10, 8, 4, 6, 6, 8, 6, 3, 6, 10, 9, 3, 27, 7, 7, 9, 3, 8, 3, 5, 7, 74, 5, 4, 5, 14, 7, 6, 4, 10, 55, 6, 7, 4, 25, 7, 8, 69, 13]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [9, 8, 5, 10, 3, 8, 8, 10, 9, 8, 11, 7, 8, 7, 9, 6, 4, 4, 7, 8, 6, 9, 9, 11, 9, 8, 9, 6, 4, 4, 3, 10, 4, 10, 9, 4, 7, 3, 9, 8, 8, 6, 4, 6, 6, 7, 11, 6, 6, 4, 9, 11, 9]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 7, 5, 9, 8, 9, 4, 10, 9, 12, 6, 8, 7, 13, 7, 8, 7, 5, 5, 7, 8, 5, 9, 7, 10, 5, 4, 4, 9, 8, 6, 8, 7, 6, 9, 13, 14, 13, 6, 3, 9, 7, 8, 11, 10, 10, 7, 9, 7, 9, 4, 10, 10, 14]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 7, 3, 7, 9, 7, 9, 19, 6, 8, 8, 89, 9, 7, 9, 12, 288, 12, 4, 7, 14, 7, 8, 7, 7, 9, 7, 9, 6, 8, 9, 8, 10, 10, 10, 8, 11, 10, 7, 3, 9, 7, 4, 5, 7, 5, 6, 9, 8, 7, 7, 10, 9, 8]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 12, 7, 5, 4, 9, 4, 76, 9, 3, 10, 5, 4, 12, 6, 8, 8, 3, 5, 9, 7, 6, 80, 9, 10, 8, 4, 6, 4, 11, 5, 11, 3, 9, 11, 6, 9, 9, 4, 6, 9, 7, 50, 9, 43, 10, 10, 8, 9, 13, 9]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [10, 5, 5, 7, 4, 7, 3, 5, 6, 7, 8, 4, 10, 6, 4, 8, 12, 127, 6, 6, 8, 3, 6, 6, 16, 13, 7, 14, 6, 3, 3, 5, 10, 3, 4, 8, 8, 5, 107, 10, 5, 13, 12, 12, 9, 5, 7, 5, 5, 10, 11]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 11, 3, 3, 4, 7, 3, 3, 8, 13, 5, 3, 10, 8, 9, 5, 4, 8, 3, 5, 16, 6, 5, 8, 9, 214, 5, 8, 11, 5, 6, 4, 7, 468, 8, 4, 8, 8, 8, 6, 7, 38, 224, 4, 4, 5, 3, 8, 114, 11, 7, 4, 8, 5, 8, 5, 6, 6, 9, 6, 9]
length(C_list) = 61
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 8, 4, 5, 4, 4, 7, 5, 12, 9, 6, 8, 10, 9, 5, 13, 12, 15, 10, 3, 5, 10, 9, 13, 14, 12, 74, 9, 6, 5, 9, 9, 5, 10, 14, 4, 12, 11, 7, 4, 13, 5, 4, 9, 4, 10, 12, 11, 7, 6, 3, 4, 4, 16, 7, 71]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [20, 5, 8, 9, 6, 9, 9, 10, 9, 9, 10, 8, 9, 9, 4, 6, 5, 9, 5, 4, 4, 258, 10, 385, 9, 9, 32, 7, 9, 18, 7, 7, 6, 4, 9, 6, 7, 8, 4, 12, 5, 7, 4, 143, 6, 127, 92, 6, 10, 9, 13, 12, 11, 10, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [11, 6, 7, 6, 168, 7, 12, 19, 15, 5, 7, 7, 14, 36, 186, 7, 62, 22, 36, 35, 7, 9, 4, 6, 4, 264, 11, 7, 6, 6, 7, 9, 7, 6, 7, 72, 6, 9, 13, 6, 12, 12, 10, 5, 15, 258, 8, 6, 8, 10, 7, 6, 6, 7, 8, 8, 63, 8, 7, 10, 10, 12, 10, 72, 11, 10]
length(C_list) = 66
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [18, 13, 8, 4, 8, 4, 19, 22, 3, 5, 5, 7, 4, 5, 24, 8, 6, 7, 83, 12, 7, 10, 5, 8, 9, 4, 8, 4, 21, 5, 8, 12, 13, 45, 12, 9, 11, 6, 4, 10, 12, 7, 8, 6, 3, 5, 9, 6, 8, 21]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [9, 10, 3, 7, 6, 6, 9, 10, 26, 6, 3, 10, 8, 154, 8, 12, 19, 10, 7, 9, 144, 4, 4, 6, 5, 17, 8, 8, 7, 10, 9, 5, 6, 7, 8, 23, 9, 8, 6, 4, 7, 6, 8, 6, 10, 186, 6, 113, 4, 9, 8, 10, 3, 3]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 7, 10, 12, 11, 7, 15, 5, 7, 7, 15, 10, 9, 6, 15, 7, 7, 7, 8, 7, 11, 10, 5, 10, 9, 7, 7, 18, 4, 6, 8, 7, 6, 14, 11, 5, 5, 13, 24, 21, 10, 8, 7, 7, 5, 11, 7, 4, 8, 14]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [17, 5, 22, 11, 9, 4, 4, 5, 5, 9, 7, 7, 6, 4, 10, 6, 6, 22, 5, 474, 6, 6, 7, 10, 8, 7, 511, 6, 3, 7, 10, 8, 3, 4, 7, 12, 9, 48, 4, 7, 7, 18, 6, 4, 4, 4, 7, 3, 8, 4, 9, 30, 5, 21, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 9, 183, 5, 10, 4, 4, 10, 8, 9, 10, 4, 8, 13, 8, 13, 18, 26, 3, 9, 8, 10, 12, 9, 8, 8, 7, 5, 6, 11, 8, 6, 39, 3, 6, 13, 8, 6, 5, 5, 4, 8, 11, 9, 4, 5, 5, 8, 10, 8, 8, 7, 9, 10, 6, 77]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 7, 7, 3, 7, 10, 6, 8, 7, 8, 12, 5, 9, 9, 14, 10, 9, 14, 7, 7, 6, 6, 8, 6, 3, 19, 16, 7, 8, 8, 11, 4, 9, 4, 6, 7, 12, 8, 14, 7, 13, 44, 4, 10, 10, 10, 6, 6, 15, 8, 10, 16, 9]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 14, 4, 22, 12, 5, 7, 7, 4, 12, 4, 4, 6, 6, 10, 5, 6, 6, 4, 4, 8, 3, 7, 5, 4, 13, 7, 8, 5, 8, 7, 4, 8, 106, 4, 4, 7, 11, 34, 7, 5, 5, 11, 9, 5, 5, 11, 6, 5, 5, 10, 9, 21, 6, 8, 9]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 3, 7, 11, 10, 11, 8, 10, 8, 6, 10, 9, 12, 6, 9, 4, 4, 9, 3, 4, 13, 5, 12, 3, 12, 5, 4, 5, 8, 11, 5, 8, 16, 7, 6, 8, 14, 6, 6, 6, 9, 4, 9, 8, 12, 9, 5, 5, 6, 4, 6, 4, 4, 523, 16, 9]
length(C_list) = 58
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [2, 7, 5, 8, 10, 12, 9, 11, 4, 8, 11, 19, 25, 6, 5, 10, 8, 6, 6, 7, 10, 5, 8, 5, 6, 8, 8, 9, 5, 14, 9, 8, 11, 6, 13, 10, 9, 8, 5, 7, 3, 14, 4, 10, 7, 7, 10, 4, 8, 6, 4, 6, 6, 3, 12, 6, 49, 10, 6, 5]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [29, 9, 5, 6, 8, 12, 10, 11, 8, 8, 4, 8, 6, 8, 8, 6, 15, 8, 8, 10, 5, 9, 6, 8, 10, 6, 15, 7, 11, 4, 4, 12, 451, 6, 6, 7, 7, 8, 4, 21, 9, 7, 6, 13, 8, 23, 6, 26, 21, 21, 6, 17, 6, 12, 10, 8, 4, 4, 11, 6]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [8, 10, 32, 10, 8, 9, 9, 11, 10, 6, 5, 9, 10, 11, 10, 42, 10, 13, 9, 11, 11, 7, 9, 5, 12, 8, 8, 7, 9, 17, 62, 33, 10, 13, 7, 12, 24, 5, 5, 8, 10, 5, 11, 24, 9, 30, 8, 7, 11, 12, 3, 10, 11]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [10, 9, 8, 9, 9, 10, 12, 10, 7, 11, 10, 8, 11, 9, 5, 8, 62, 10, 11, 8, 10, 7, 8, 10, 10, 10, 9, 6, 8, 7, 24, 10, 10, 9, 5, 17, 55, 14, 6, 7, 8, 7, 149, 7, 54, 14, 55, 10, 12, 12, 7, 31, 8, 11, 32, 8, 11]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 8, 6, 11, 10, 6, 6, 7, 11, 9, 8, 7, 7, 4, 6, 9, 6, 19, 39, 8, 32, 4, 10, 7, 8, 5, 9, 16, 9, 7, 64, 11, 10, 10, 6, 6, 5, 3, 8, 7, 4, 7, 10, 9, 7, 3, 9, 23, 10, 10, 10, 7, 13, 4, 8]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 3, 8, 7, 10, 6, 13, 4, 6, 8, 5, 9, 8, 10, 11, 5, 5, 4, 29, 14, 9, 6, 4, 8, 8, 4, 9, 6, 4, 9, 8, 7, 6, 4, 14, 5, 4, 14, 8, 12, 11, 8, 15, 5, 5, 4, 13, 10, 12, 11, 9]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [53, 33, 6, 4, 3, 6, 7, 6, 44, 3, 4, 73, 5, 11, 101, 6, 9, 7, 5, 8, 6, 5, 4, 4, 6, 7, 6, 8, 7, 7, 7, 8, 6, 6, 91, 6, 6, 3, 4, 134, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [34, 9, 7, 7, 6, 11, 12, 8, 7, 15, 8, 19, 13, 12, 5, 8, 4, 8, 17, 7, 6, 13, 5, 6, 7, 5, 7, 4, 5, 5, 12, 5, 9, 7, 125, 40, 9, 6, 4, 10, 4, 6, 7, 12, 7, 8, 10, 16, 17, 9, 27, 52, 52, 33, 52, 4, 4]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 3, 7, 6, 8, 8, 8, 8, 3, 12, 12, 4, 7, 5, 64, 12, 13, 6, 3, 6, 4, 7, 7, 12, 9, 10, 9, 9, 10, 13, 8, 7, 13, 7, 9, 6, 4, 11, 8, 11, 29, 19, 10, 10, 4, 9, 9, 6, 11, 8, 5, 9]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [5, 22, 5, 8, 9, 5, 4, 4, 8, 10, 6, 6, 6, 5, 90, 6, 5, 4, 8, 6, 8, 10, 4, 26, 5, 5, 8, 13, 6, 3, 5, 26, 12, 7, 4, 7, 6, 5, 7, 13]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [6, 5, 11, 4, 6, 5, 6, 6, 10, 4, 6, 9, 12, 8, 8, 9, 8, 10, 4, 8, 4, 6, 8, 6, 4, 54, 8, 8, 5, 7, 7, 6, 8, 6, 6, 6, 4, 6, 5, 7, 79, 9, 10, 7, 6, 4, 14, 7, 4, 9, 10, 8, 7, 4, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 10, 10, 5, 6, 12, 6, 12, 13, 6, 10, 7, 8, 6, 15, 9, 6, 9, 4, 9, 3, 7, 11, 5, 8, 7, 183, 3, 5, 6, 8, 5, 9, 11, 8, 9, 13, 9, 20, 9, 5, 3, 4, 13, 9, 15, 5, 11, 7, 6, 4, 5]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 7, 9, 5, 12, 7, 7, 7, 9, 5, 6, 5, 4, 4, 5, 7, 8, 9, 5, 6, 8, 429, 9, 6, 6, 9, 10, 6, 12, 7, 9, 9, 5, 7, 7, 77, 15, 7, 9, 3, 6, 9, 4, 5, 11, 6, 4, 11, 6, 5, 13, 6, 11, 4, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[8, 7, 8, 7, 12, 11, 10, 11, 8, 10, 9, 7, 6, 5, 8, 8, 8, 3, 8, 8, 8, 566, 8, 9, 10, 6, 12, 445, 5, 12, 11, 8, 437, 6, 11, 7, 7, 6, 9, 9, 5, 9, 27, 3, 8, 9, 8, 15, 4, 9, 11, 9, 7, 9, 8, 11]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 9, 7, 8, 7, 9, 7, 8, 4, 8, 7, 12, 7, 5, 7, 11, 8, 9, 8, 6, 8, 7, 449, 16, 7, 6, 3, 4, 9, 54, 3, 10, 7, 9, 7, 8, 13, 6, 7, 8, 7, 7, 7, 170, 12, 7, 9, 10, 8, 7, 12, 11, 50, 8]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 5, 7, 4, 5, 5, 17, 17, 17, 6, 18, 14, 7, 322, 372, 3, 19, 6, 5, 8, 87, 5, 16, 7, 8, 120, 11, 5, 125, 9, 15, 15, 14, 10, 7, 4, 10, 8, 9, 7, 7, 7, 4, 4, 7, 6, 5]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [16, 12, 12, 9, 30, 8, 16, 9, 12, 11, 3, 13, 4, 5, 6, 5, 8, 7, 10, 4, 5, 10, 7, 11, 6, 3, 12, 6, 4, 6, 9, 8, 5, 7, 4, 6, 10, 12, 6, 9, 14, 8, 9, 3, 6, 11, 5, 5, 5, 5, 11, 7, 9, 3, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 7, 6, 9, 7, 8, 11, 4, 3, 3, 6, 6, 8, 9, 9, 4, 5, 4, 7, 6, 5, 11, 7, 9, 7, 5, 7, 386, 11, 11, 7, 5, 8, 5, 9, 7, 8, 9, 5, 9, 3, 7, 10, 9, 8, 7, 4, 11, 7, 6, 9, 6, 5, 6]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [6, 8, 11, 9, 8, 10, 9, 16, 13, 11, 9, 9, 9, 6, 11, 9, 9, 9, 10, 9, 12, 4, 7, 10, 8, 4, 10, 5, 13, 10, 10, 9, 9, 5, 10, 7, 7, 10, 12, 12, 7, 6, 18, 10, 10, 7, 9, 9, 3, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [18, 9, 8, 5, 9, 5, 4, 7, 7, 12, 8, 6, 7, 7, 8, 12, 3, 7, 4, 8, 8, 8, 11, 5, 10, 5, 172, 10, 22, 9, 4, 10, 8, 11, 6, 8, 8, 10, 17, 7, 9, 6, 5, 4, 5, 9, 6, 6, 8, 8, 7, 7]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [21, 4, 7, 7, 4, 11, 10, 5, 4, 20, 8, 7, 17, 4, 26, 14, 10, 16, 8, 16, 4, 20, 21, 6, 7, 11, 10, 8, 9, 13, 123, 7, 3, 6, 8, 8, 8, 8, 9, 12, 10, 12, 17, 6, 3, 8, 9, 13, 14, 7, 10, 14]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 11, 8, 8, 4, 8, 8, 4, 10, 3, 13, 6, 10, 6, 10, 9, 4, 5, 6, 3, 6, 8, 7, 7, 8, 233, 21, 14, 8, 4, 12, 10, 10, 6, 11, 5, 11, 6, 8, 11, 3, 12, 6, 36, 3, 6, 5, 11, 6, 178, 12, 5, 11, 20]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 5, 5, 8, 6, 8, 7, 62, 10, 6, 10, 6, 7, 6, 5, 5, 4, 9, 6, 3, 9, 8, 7, 4, 8, 8, 4, 8, 7, 6, 5, 115, 5, 5, 11, 22, 9, 8, 6, 5, 10, 4, 7, 4, 6, 10, 44]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 7, 8, 5, 4, 6, 8, 13, 9, 11, 9, 9, 7, 13, 5, 8, 13, 4, 4, 3, 5, 12, 3, 146, 12, 6, 12, 8, 9, 5, 9, 12, 6, 6, 6, 16, 4, 357, 12, 13, 4, 5, 4, 12, 11, 9, 9, 5, 5, 4, 13, 4, 7, 10]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 9, 3, 10, 5, 9, 3, 11, 5, 8, 5, 5, 8, 5, 7, 7, 6, 19, 10, 4, 6, 5, 9, 12, 4, 4, 7, 6, 4, 9, 6, 8, 3, 7, 12, 30, 8, 17, 5, 11, 3, 14, 6, 6, 9, 8, 13, 95, 10, 9, 4, 6, 13, 3, 35, 10, 5, 8, 7]
length(C_list) = 61
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 14, 17, 13, 6, 5, 4, 7, 4, 3, 8, 11, 9, 6, 15, 6, 5, 4, 8, 5, 7, 8, 14, 14, 5, 29, 4, 33, 13, 3, 15, 18, 13, 74, 6, 7, 20, 10, 4, 6, 9, 7, 18, 13, 4, 7, 5, 5, 9, 10, 8, 14, 6, 98]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 6, 4, 7, 9, 3, 9, 5, 5, 7, 4, 3, 5, 6, 5, 5, 6, 47, 4, 4, 3, 4, 8, 6, 6, 8, 281, 4, 5, 7, 7, 8, 6, 5, 5, 9, 8, 9, 8, 301, 10, 10, 3, 8, 12, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 4, 7, 8, 11, 4, 11, 3, 6, 8, 6, 5, 6, 9, 4, 8, 5, 6, 46, 7, 4, 5, 5, 7, 45, 6, 5, 7, 6, 3, 5, 3, 5, 4, 8, 7, 10, 4, 5, 7, 7, 5, 7, 22, 6, 8, 4, 4, 5, 9, 176, 5, 8, 5]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [31, 3, 8, 7, 4, 10, 7, 12, 5, 6, 10, 4, 27, 4, 14, 3, 23, 8, 55, 9, 4, 8, 421, 5, 6, 8, 8, 4, 3, 5, 9, 7, 5, 11, 4, 4, 10, 5, 9, 4, 5, 10, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [7, 13, 15, 7, 13, 150, 5, 9, 8, 4, 15, 8, 7, 13, 8, 11, 16, 6, 5, 6, 4, 14, 5, 8, 9, 7, 5, 13, 5, 13, 12, 12, 9, 7, 6, 5, 14, 5, 3, 4, 250, 15, 4, 10, 4, 83, 15, 78, 10, 10, 4, 14]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 3, 8, 7, 8, 7, 8, 9, 5, 5, 8, 7, 8, 10, 7, 5, 5, 5, 10, 7, 6, 11, 9, 5, 3, 9, 14, 8, 5, 9, 6, 166, 8, 4, 7, 4, 8, 3, 7, 2, 6, 13, 5, 3, 20, 6, 3, 11, 4, 10, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [12, 12, 5, 6, 4, 13, 6, 10, 3, 6, 6, 8, 4, 12, 3, 8, 5, 6, 7, 8, 48, 10, 4, 6, 7, 10, 6, 7, 3, 625, 7, 6, 5, 11, 6, 5, 12, 5, 6, 5, 4, 8, 6, 3, 5]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 6, 3, 5, 7, 7, 7, 6, 12, 234, 4, 4, 4, 12, 6, 4, 6, 5, 8, 5, 4, 6, 4, 4, 9, 8, 4, 5, 4, 5, 4, 7, 4, 8, 7, 6, 3, 9, 4, 7, 6, 6, 4, 6, 2, 8, 9, 8, 9, 48]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [6, 12, 105, 6, 7, 7, 7, 8, 12, 6, 10, 12, 9, 5, 3, 8, 5, 7, 7, 5, 9, 5, 7, 12, 12, 7, 4, 14, 63, 5, 15, 3, 12, 75, 13, 8, 7, 6, 9, 3, 9, 4, 7, 4, 5, 14, 6, 7, 14, 8, 5, 5, 4, 6, 8, 12, 6, 4, 12, 10]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [7, 12, 6, 11, 8, 7, 7, 13, 7, 7, 11, 11, 8, 12, 10, 7, 11, 6, 5, 13, 4, 6, 5, 8, 10, 6, 5, 12, 9, 6, 9, 6, 7, 15, 6, 12, 6, 5, 4, 12, 11, 5, 8, 12, 7, 10, 6, 9, 8, 7, 10, 4, 13, 7, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [5, 13, 8, 9, 9, 5, 3, 4, 7, 6, 4, 13, 8, 8, 8, 8, 8, 7, 4, 10, 8, 289, 3, 11, 268, 4, 8, 8, 6, 9, 9, 7, 8, 7, 114, 8, 15, 7, 5, 9, 12, 9, 8, 6, 13, 26, 8, 13, 12, 13, 12, 6]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 14, 7, 7, 5, 4, 5, 5, 8, 258, 5, 7, 9, 6, 4, 11, 5, 8, 7, 475, 8, 3, 4, 7, 7, 5, 7, 4, 4, 7, 8, 8, 6, 7, 6, 3, 7, 6, 6, 6, 5, 10, 3, 6, 4, 7, 5, 40]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 5, 5, 5, 10, 7, 3, 6, 6, 4, 6, 4, 15, 4, 3, 5, 5, 7, 5, 4, 253, 8, 6, 5, 10, 7, 5, 4, 8, 8, 10, 8, 8, 6, 6, 4, 5, 5, 3, 7, 7, 8, 5, 10, 7, 8, 4, 7, 5, 4, 7, 3, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 7, 4, 6, 4, 8, 4, 9, 4, 6, 6, 5, 6, 7, 5, 8, 7, 9, 7, 6, 6, 5, 7, 7, 6, 4, 9, 8, 7, 6, 7, 7, 7, 7, 7, 7, 28, 7, 9, 6, 7, 8, 10, 9, 7, 390, 9, 8, 8, 9, 9]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [5, 3, 10, 6, 8, 8, 5, 8, 6, 6, 6, 4, 5, 6, 9, 8, 8, 300, 4, 5, 8, 6, 7, 4, 4, 5, 8, 5, 3, 5, 4, 8, 8, 4, 8, 7, 143, 5, 5, 6, 3, 8, 103, 8, 7, 8, 197, 8, 6, 8]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 8, 7, 8, 8, 6, 7, 6, 7, 4, 8, 9, 10, 4, 6, 5, 5, 4, 8, 7, 3, 5, 9, 12, 8, 6, 4, 6, 8, 8, 9, 3, 192, 9, 5, 4, 6, 5, 8, 12, 7, 32, 6, 7, 7]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [22, 5, 6, 4, 3, 7, 6, 7, 8, 6, 7, 6, 6, 5, 9, 9, 6, 5, 7, 6, 7, 7, 7, 6, 5, 5, 6, 7, 9, 7, 7, 7, 12, 5, 5, 5, 4, 6, 5, 6, 8, 5, 7, 5, 6, 4, 7, 8, 7, 7, 4, 7, 6, 6, 9, 6]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [21, 8, 4, 13, 13, 9, 4, 7, 10, 6, 7, 10, 6, 30, 10, 8, 142, 7, 24, 10, 6, 6, 18, 9, 8, 10, 5, 5, 14, 7, 10, 9, 5, 11, 7, 4, 32, 13, 4, 8, 9, 7, 9, 13, 6, 6, 9, 7, 6, 5, 6, 43, 5, 4, 8, 11]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 316, 11, 16, 3, 10, 10, 10, 11, 11, 8, 32, 7, 10, 4, 10, 8, 5, 4, 9, 5, 10, 12, 308, 10, 10, 9, 11, 35, 12, 6, 12, 9, 16, 6, 9, 9, 11, 10, 10, 17, 4, 12, 9, 10, 8, 10, 9, 13, 8, 7, 6, 9, 10, 10, 12, 10, 8, 9]
length(C_list) = 61
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 10, 14, 11, 8, 7, 5, 11, 9, 9, 3, 11, 10, 10, 8, 11, 7, 11, 8, 9, 10, 9, 10, 6, 7, 9, 6, 10, 11, 207, 10, 11, 35, 14, 12, 11, 6, 10, 12, 10, 11, 7, 11, 12, 11, 14, 14, 7, 11, 9, 11, 6, 8, 8]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 5, 67, 11, 10, 17, 11, 6, 12, 11, 14, 4, 12, 10, 17, 95, 5, 12, 6, 4, 4, 4, 11, 3, 4, 17, 12, 17, 11, 3, 11, 6, 14, 14, 11, 12, 11, 11, 11, 17, 6, 5, 12, 16, 10, 11, 14, 10, 10, 4, 4, 15, 15, 19, 6, 5, 12]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 6, 7, 7, 9, 11, 3, 144, 4, 8, 3, 5, 18, 8, 6, 6, 6, 5, 6, 9, 11, 8, 4, 4, 5, 8, 4, 17, 6, 338, 5, 6, 11, 6, 7, 5, 6, 5, 80, 61, 6, 10, 3, 9, 6, 8, 6, 7, 17, 208, 9, 6, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 20, 7, 10, 10, 11, 9, 6, 7, 4, 13, 7, 5, 8, 7, 9, 6, 5, 60, 7, 8, 11, 7, 6, 6, 9, 8, 8, 13, 7, 7, 11, 9, 10, 11, 7, 10, 7, 11, 6, 7, 19, 8, 9, 10, 6, 6, 7, 8, 11, 6, 54, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 6, 6, 7, 4, 38, 7, 8, 7, 4, 6, 6, 8, 6, 4, 7, 21, 5, 3, 4, 9, 5, 5, 7, 7, 8, 5, 4, 7, 126, 4, 10, 6, 9, 7, 7, 6, 6, 10, 8, 8, 6, 80, 8, 20, 14, 8, 10, 9]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 11, 7, 11, 9, 5, 9, 6, 15, 15, 8, 7, 13, 6, 4, 8, 9, 7, 4, 16, 8, 8, 4, 9, 12, 6, 22, 7, 9, 6, 12, 13, 8, 6, 14, 6, 8, 5, 7, 58, 80, 18, 3, 10, 57, 39]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 5, 6, 5, 6, 7, 23, 23, 24, 4, 8, 4, 7, 7, 7, 6, 3, 4, 3, 6, 3, 12, 6, 8, 3, 4, 6, 4, 7, 6, 21, 6, 5, 8, 4, 12, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 6, 8, 8, 5, 7, 6, 8, 4, 5, 7, 7, 9, 3, 3, 6, 19, 5, 6, 9, 6, 5, 10, 5, 8, 7, 12, 564, 8, 4, 5, 7, 18, 8, 11, 5, 9, 5, 12, 9, 12, 7, 8, 6, 10, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [12, 5, 5, 6, 6, 12, 6, 7, 9, 9, 6, 7, 6, 7, 7, 185, 7, 6, 7, 6, 6, 6, 6, 6, 10, 9, 7, 5, 11, 9, 8, 6, 4, 6, 9, 7, 13, 9, 5, 10, 7, 3, 5, 12, 6, 6, 127, 10, 6]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 8, 4, 8, 3, 10, 5, 9, 9, 10, 9, 13, 3, 10, 10, 8, 5, 4, 9, 9, 5, 10, 7, 61, 16, 10, 9, 10, 11, 11, 7, 5, 19, 8, 10, 5, 9, 8, 10, 125, 9, 7, 5, 9, 9]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 7, 9, 6, 5, 3, 7, 7, 7, 10, 6, 10, 6, 9, 6, 10, 12, 11, 4, 8, 7, 5, 8, 9, 7, 8, 30, 10, 6, 24, 8, 10, 5, 9, 6, 10, 6, 6, 9, 7, 8, 10, 10, 9, 9, 9, 10, 8, 5, 10, 11, 5, 16]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 6, 4, 8, 22, 8, 10, 7, 7, 8, 6, 12, 5, 4, 7, 6, 6, 6, 7, 3, 5, 7, 7, 6, 7, 10, 6, 6, 6, 8, 6, 4, 9, 7, 6, 5, 8, 8, 10, 8, 8, 7, 15, 8, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 4, 8, 4, 5, 6, 5, 6, 5, 7, 5, 4, 5, 3, 3, 9, 10, 20, 4, 7, 6, 5, 7, 8, 8, 6, 6, 9, 5, 9, 3, 3, 6, 6, 270, 11, 5, 5, 4, 3, 4, 7, 5, 6, 6]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 10, 7, 9, 9, 5, 7, 9, 8, 8, 9, 9, 8, 10, 8, 8, 3, 7, 9, 8, 6, 17, 7, 6, 9, 8, 5, 9, 7, 7, 7, 15, 7, 26, 9, 8, 6, 8, 9, 9, 10, 11, 7, 10, 8, 9, 191, 7]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 10, 3, 7, 10, 8, 9, 12, 12, 6, 9, 6, 12, 9, 8, 8, 7, 9, 7, 6, 7, 7, 10, 6, 573, 7, 6, 7, 3, 9, 9, 6, 4, 9, 9, 9, 8, 8, 9, 35, 9, 6, 8, 6, 7, 8, 9, 46, 9, 9, 7, 10, 9, 8, 10, 7, 9, 20]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 9, 9, 8, 5, 7, 5, 7, 9, 3, 6, 6, 11, 7, 7, 7, 6, 9, 6, 9, 8, 8, 7, 77, 8, 6, 5, 7, 6, 8, 4, 4, 6, 7, 7, 7, 7, 9, 8, 4, 9, 9, 9, 4, 7, 8, 6, 7, 3, 10, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 7, 6, 5, 5, 11, 4, 5, 4, 5, 4, 6, 12, 5, 11, 5, 9, 9, 3, 9, 5, 8, 9, 5, 12, 13, 9, 8, 249, 4, 6, 9, 4, 50, 7, 9, 4, 5, 13, 9, 9, 6, 8, 11, 5, 8, 4, 6, 5]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [9, 8, 5, 10, 5, 9, 11, 5, 6, 5, 5, 5, 9, 13, 4, 4, 8, 247, 9, 16, 5, 5, 14, 8, 9, 20, 9, 9, 240, 4, 11, 9, 11, 4, 4, 8, 7, 9, 9, 5, 6, 10, 10, 137, 8, 9, 14, 9, 4, 11]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 11, 10, 6, 9, 8, 10, 4, 9, 9, 9, 4, 6, 8, 13, 4, 6, 3, 11, 10, 6, 35, 10, 12, 8, 10, 12, 5, 4, 7, 75, 8, 4, 6, 9, 9, 4, 4, 7, 8, 6, 8, 7, 7, 6, 4, 9, 4, 7, 15, 3, 9, 11, 6, 5, 6, 10]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 4, 8, 8, 14, 3, 4, 7, 25, 20, 7, 5, 3, 6, 5, 11, 9, 8, 4, 4, 7, 10, 102, 5, 8, 521, 3, 5, 5, 5, 3, 7, 4, 4, 4, 3, 4, 8, 10, 8, 4, 10, 5, 4, 4, 5, 80, 9, 17, 8, 10, 4]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [13, 7, 8, 10, 4, 11, 6, 12, 7, 7, 12, 12, 8, 10, 11, 11, 9, 8, 5, 7, 8, 9, 5, 12, 13, 10, 12, 36, 7, 10, 12, 13, 10, 6, 6, 17, 9, 14, 6, 15, 8, 4, 5, 166, 13, 16, 11, 5, 12, 6, 11, 10, 11, 10]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 58, 6, 9, 3, 8, 6, 7, 9, 6, 5, 4, 14, 3, 6, 13, 3, 12, 15, 5, 13, 4, 9, 4, 14, 4, 3, 6, 8, 10, 3, 4, 4, 13, 19, 4, 10, 5, 7, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 3, 7, 3, 3, 4, 6, 7, 6, 8, 4, 4, 6, 5, 4, 5, 6, 5, 7, 9, 10, 5, 5, 9, 4, 6, 6, 4, 10, 5, 10, 4, 6, 7, 6, 11, 7, 6, 5, 8, 11, 5, 6, 3, 5, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [8, 11, 5, 4, 5, 5, 11, 8, 8, 8, 8, 8, 7, 7, 9, 4, 4, 10, 4, 5, 3, 9, 6, 10, 3, 8, 5, 7, 7, 8, 12, 100, 3, 7, 8, 4, 5, 23, 10, 7, 9, 4, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [14, 5, 6, 5, 6, 7, 27, 9, 10, 7, 4, 4, 7, 6, 6, 8, 8, 6, 7, 4, 6, 7, 5, 4, 8, 3, 5, 5, 6, 8, 5, 4, 9, 7, 7, 8, 7, 3, 9, 4, 7, 13, 3, 7, 7, 4, 5, 8]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 10, 6, 6, 5, 4, 4, 8, 10, 16, 4, 8, 5, 5, 4, 8, 7, 57, 10, 12, 3, 4, 4, 4, 12, 7, 6, 5, 8, 5, 6, 4, 12, 5, 5, 4, 3, 12, 5, 6, 4, 4, 6, 390, 4, 4, 16]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 3, 9, 4, 9, 6, 4, 4, 7, 6, 14, 9, 7, 4, 8, 4, 9, 11, 7, 5, 10, 9, 9, 10, 5, 8, 5, 17, 10, 4, 5, 5, 8, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [5, 9, 5, 6, 5, 6, 3, 5, 6, 5, 8, 6, 6, 6, 8, 5, 9, 11, 8, 5, 6, 4, 9, 6, 7, 156, 6, 4, 323, 6, 4, 6, 8, 9, 12, 5, 6, 9, 16, 4, 37, 8, 5, 4, 12, 6, 5, 7, 6, 10, 8, 8, 10]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 10, 10, 14, 10, 10, 12, 4, 10, 13, 12, 15, 4, 11, 8, 14, 11, 12, 8, 13, 10, 8, 13, 521, 4, 13, 9, 5, 9, 6, 10, 12, 10, 10, 11, 8, 6, 11, 15, 5, 10, 8, 11, 14, 13, 7, 11, 12, 18, 11, 11, 11, 14]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [22, 7, 6, 6, 7, 6, 5, 13, 6, 10, 7, 8, 7, 8, 8, 6, 6, 12, 14, 11, 7, 6, 9, 6, 5, 132, 6, 11, 561, 6, 8, 6, 7, 6, 14, 6, 20, 10, 54, 6, 6, 8, 11, 11, 7, 6, 7, 5, 5, 6, 15, 8]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [12, 6, 10, 13, 11, 12, 6, 11, 4, 7, 13, 6, 13, 6, 6, 3, 10, 18, 7, 12, 17, 34, 10, 6, 10, 15, 14, 7, 12, 6, 6, 6, 5, 59, 13, 7, 9, 12, 6, 5, 58, 6, 4, 9, 6, 11, 4, 15, 5, 9, 14, 9, 89, 15, 15, 16, 8]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 14, 4, 8, 7, 6, 7, 6, 4, 8, 7, 9, 9, 6, 8, 11, 5, 10, 9, 9, 9, 582, 10, 10, 10, 4, 7, 10, 8, 7, 8, 7, 12, 25, 8, 15, 6, 10, 4, 7, 7, 6, 14, 7, 7, 8, 3, 34, 9, 7, 6, 4]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [6, 9, 11, 12, 9, 10, 11, 11, 8, 5, 10, 4, 11, 11, 11, 7, 10, 15, 8, 4, 10, 9, 10, 4, 11, 11, 11, 6, 11, 9, 12, 6, 10, 9, 6, 12, 10, 9, 9, 11, 6, 8, 15, 10, 10, 10, 8, 9, 9, 11, 9, 11, 14, 11, 12, 11, 10, 4, 8, 11]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [13, 7, 215, 5, 11, 6, 4, 6, 12, 16, 15, 4, 7, 12, 8, 4, 7, 12, 4, 3, 5, 192, 14, 8, 6, 11, 7, 7, 4, 16, 5, 7, 4, 5, 5, 5, 9, 4, 33, 8, 10, 13, 15, 23, 3, 7, 13, 7, 8, 3, 8, 21, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [5, 3, 10, 9, 9, 4, 10, 6, 6, 4, 5, 8, 7, 3, 7, 4, 6, 5, 5, 8, 7, 4, 3, 5, 3, 16, 5, 8, 10, 4, 14, 350, 5, 5, 14, 10, 4, 6, 11, 4, 8, 4, 12, 11, 6, 9, 8, 14, 5, 3, 6, 8, 5, 6, 13, 5, 17, 7, 39, 18]
length(C_list) = 60
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [12, 5, 85, 3, 4, 6, 14, 12, 12, 3, 7, 8, 3, 6, 15, 12, 6, 9, 10, 11, 204, 3, 6, 4, 6, 4, 3, 8, 8, 8, 4, 6, 5, 5, 8, 7, 4, 107, 13, 7, 4, 8, 3, 6, 11, 10, 7, 7, 13, 7, 3]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [8, 11, 7, 14, 3, 7, 3, 4, 4, 8, 6, 9, 6, 7, 7, 9, 13, 10, 4, 11, 10, 9, 11, 11, 12, 8, 12, 3, 6, 9, 10, 7, 246, 7, 11, 59, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [16, 7, 8, 7, 10, 8, 8, 5, 10, 8, 4, 9, 5, 10, 13, 9, 6, 9, 4, 4, 9, 7, 9, 10, 10, 8, 8, 13, 12, 9, 11, 10, 7, 10, 8, 355, 20, 9, 13, 9, 9, 5, 8, 6, 9, 12, 11, 8, 8, 7, 8]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 6, 9, 10, 5, 13, 10, 7, 6, 10, 8, 6, 5, 7, 6, 6, 5, 17, 15, 14, 10, 12, 4, 12, 10, 10, 8, 10, 4, 6, 5, 5, 7, 12, 4, 7, 6, 6, 4, 5, 5, 7, 10, 18, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [18, 9, 5, 7, 9, 8, 5, 4, 6, 7, 10, 6, 9, 7, 6, 5, 5, 6, 8, 294, 19, 8, 3, 7, 5, 6, 19, 3, 6, 4, 7, 6, 7, 7, 5, 4, 8, 8, 10, 5, 5, 4, 12, 10, 6, 5, 7, 13, 8, 6, 10, 11, 6, 11, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [12, 4, 7, 7, 10, 5, 8, 9, 6, 9, 9, 14, 6, 13, 10, 7, 9, 8, 8, 9, 11, 7, 9, 10, 7, 9, 8, 7, 7, 14, 10, 26, 5, 10, 14, 13, 9, 7, 7, 9, 14, 8, 9, 8, 9, 8, 8, 10, 8, 14]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [30, 4, 10, 11, 11, 13, 10, 9, 9, 6, 7, 9, 9, 9, 7, 8, 9, 11, 4, 15, 9, 12, 9, 10, 8, 9, 4, 9, 11, 8, 9, 4, 8, 8, 7, 9, 22, 293, 10, 8, 7, 11, 7, 8, 9, 9, 11, 8, 13, 12, 330, 21, 8, 31, 8, 45, 7]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 15, 11, 6, 11, 11, 4, 16, 4, 7, 13, 12, 7, 97, 8, 229, 10, 16, 11, 132, 5, 5, 5, 4, 10, 10, 9, 11, 9, 8, 8, 10, 8, 10, 9, 9, 21, 9, 4, 183, 12, 10, 12, 3, 10]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [19, 10, 9, 10, 13, 10, 12, 7, 9, 6, 13, 10, 12, 12, 11, 10, 11, 9, 14, 10, 10, 12, 10, 15, 11, 9, 9, 10, 9, 13, 12, 11, 6, 10, 10, 13, 13, 10, 12, 13, 10, 13, 10, 14, 7, 10, 8, 9, 10, 13, 11, 22, 12, 10, 17, 137]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [3, 9, 5, 13, 4, 13, 8, 13, 11, 11, 7, 9, 8, 7, 9, 9, 18, 11, 11, 14, 12, 11, 12, 8, 11, 10, 9, 11, 7, 8, 8, 37, 7, 9, 8, 6, 10, 11, 17, 10, 11, 8, 9, 7, 9, 9, 9, 9, 14, 7, 4, 11, 12, 12, 22]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 7, 8, 9, 8, 9, 9, 11, 7, 7, 7, 10, 8, 11, 11, 7, 7, 11, 4, 8, 10, 178, 6, 8, 7, 8, 8, 7, 8, 9, 6, 7, 9, 4, 9, 9, 12, 11, 8, 10, 6, 11, 10, 5, 9, 7, 9, 8, 7, 8]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 9, 9, 4, 5, 9, 10, 341, 11, 8, 6, 7, 10, 40, 9, 10, 8, 10, 12, 11, 10, 8, 15, 11, 6, 4, 6, 6, 11, 9, 9, 10, 10, 9, 10, 10, 6, 8, 8, 9, 49, 7, 10, 13, 53, 9, 10, 11, 9, 11, 11, 10]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 8, 10, 4, 7, 8, 6, 7, 19, 195, 7, 8, 7, 5, 6, 14, 8, 8, 12, 344, 13, 6, 6, 11, 6, 330, 9, 8, 5, 5, 14, 299, 6, 4, 8, 6, 5, 8, 436, 10, 7, 7, 9, 7, 4, 7, 12, 9, 8, 6, 14, 14, 6, 10]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [5, 12, 12, 11, 6, 6, 10, 9, 8, 9, 6, 9, 10, 11, 8, 11, 12, 10, 391, 14, 5, 10, 12, 12, 9, 8, 10, 9, 7, 12, 11, 10, 8, 9, 12, 222, 12, 8, 8, 13, 11, 11, 7, 9, 10, 7, 8, 6, 8, 28, 10]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 6, 5, 6, 12, 7, 6, 10, 45, 5, 6, 4, 5, 6, 5, 8, 4, 7, 6, 4, 76, 7, 6, 8, 4, 4, 4, 5, 6, 8, 7, 22, 6, 3, 6, 4, 4, 7, 582, 4, 8, 6, 4, 6, 12, 6, 10]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [16, 8, 4, 13, 4, 12, 10, 6, 5, 7, 5, 3, 14, 6, 5, 89, 11, 248, 6, 5, 6, 5, 4, 481, 5, 7, 6, 10, 6, 11, 8, 3, 7, 8, 13, 5, 6, 6, 4, 6, 7, 9, 6, 29, 4, 8, 4, 6, 8, 7, 4, 7, 5]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 6, 10, 7, 7, 6, 6, 11, 6, 4, 11, 6, 19, 4, 5, 6, 11, 8, 5, 562, 4, 14, 11, 6, 12, 8, 11, 4, 7, 7, 15, 21, 12, 8, 6, 6, 8, 6, 15, 12, 5, 4, 6, 11, 7, 7, 4]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 7, 430, 4, 6, 4, 4, 5, 4, 5, 4, 4, 5, 4, 6, 3, 6, 7, 6, 58, 15, 7, 7, 4, 5, 4, 6, 7, 4, 4, 6, 8, 5, 9, 6, 41, 4, 6, 6, 73, 7, 7, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 8, 4, 7, 4, 5, 7, 9, 7, 6, 5, 5, 6, 8, 6, 5, 7, 4, 7, 369, 6, 6, 6, 4, 7, 4, 5, 8, 4, 6, 6, 7, 5, 8, 9, 4, 3, 5, 5, 8, 6, 5, 4, 8, 7, 36, 6, 4, 6, 6, 4, 7]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [10, 9, 7, 6, 6, 12, 10, 7, 12, 6, 11, 9, 6, 8, 8, 4, 6, 6, 3, 4, 4, 10, 6, 7, 7, 10, 6, 15, 8, 9, 9, 7, 11, 5, 7, 8, 4, 5, 6, 18, 9, 4, 3, 5, 6, 4, 4, 10, 5, 7, 16, 9]
length(C_list) = 52
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [7, 7, 14, 7, 12, 9, 6, 13, 6, 9, 128, 11, 5, 9, 12, 8, 10, 9, 9, 6, 11, 10, 9, 8, 9, 8, 6, 6, 10, 4, 6, 9, 7, 6, 8, 9, 8, 5, 10, 10, 6, 12, 6, 7, 7, 4, 6, 9, 85, 6, 10, 7, 8, 7, 8, 4, 5]
length(C_list) = 57
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 5, 8, 7, 4, 6, 7, 9, 6, 7, 8, 7, 6, 7, 8, 24, 7, 10, 4, 11, 7, 102, 9, 9, 7, 6, 15, 27, 5, 8, 6, 6, 8, 6, 7, 10, 6, 5, 4, 8, 7, 5, 9, 7, 49]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [6, 12, 6, 15, 5, 7, 3, 10, 7, 4, 4, 8, 7, 13, 6, 6, 5, 9, 3, 7, 7, 5, 15, 6, 45, 7, 8, 7, 10, 5, 11, 6, 7, 6, 8, 6, 10, 15, 16, 8, 7, 9, 9, 11, 7, 7, 11, 66, 7, 53, 4, 10, 15]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
