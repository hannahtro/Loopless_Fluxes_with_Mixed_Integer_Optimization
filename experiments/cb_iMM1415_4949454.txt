ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
max_cuts = 37
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [15, 6, 3, 3, 2, 7, 11, 2, 13, 3, 8, 2, 6, 15, 8, 29, 5, 2, 5, 5, 3, 5, 7, 4, 4, 2, 2, 7, 3, 95, 2, 7, 7, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 3, 35, 3, 7, 2, 4, 3, 9, 4, 2, 7, 4, 4, 6, 5, 4, 2, 3, 5, 2, 2, 7, 3, 2, 447]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 11, 5, 7, 3, 4, 3, 3, 5, 4, 3, 2, 4, 6, 4, 4, 177, 9, 4, 4, 3, 4, 7, 309, 7, 6, 5, 3, 5, 151, 278]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 4, 6, 4, 4, 10, 7, 4, 4, 4, 3, 5, 5, 4, 3, 5, 3, 4, 3, 32, 20, 29, 7, 7, 4, 7, 4, 4, 4, 4, 3, 5, 7, 5, 6, 6, 2, 6, 117]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 5, 4, 6, 12, 6, 4, 4, 6, 9, 10, 7, 4, 6, 7, 5, 5, 9, 8, 5, 3, 23, 5, 8, 7, 3, 11, 7, 10, 6, 4, 7, 2, 26, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [17, 3, 5, 5, 4, 5, 15, 8, 10, 10, 8, 4, 8, 4, 13, 7, 3, 4, 4, 7, 4, 4, 5, 6, 4, 11, 3, 350, 11, 4, 8, 11, 6, 6, 4, 4, 8, 4, 4, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [14, 3, 4, 3, 4, 4, 8, 4, 10, 3, 4, 3, 4, 4, 14, 5, 5, 7, 6, 4, 61, 3, 4, 4, 3, 5, 312, 3, 4, 4, 5, 4, 276, 5, 4, 3, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [12, 3, 5, 7, 8, 4, 8, 6, 398, 6, 5, 6, 4, 33, 13, 4, 9, 4, 4, 4, 5, 4, 4, 4, 8, 3, 5, 6, 4, 7, 4, 5, 8, 4, 3, 8, 8, 4, 4, 8, 9, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [10, 5, 50, 3, 6, 6, 8, 4, 5, 10, 3, 12, 5, 4, 6, 17, 3, 7, 49, 6, 11, 3, 4, 3, 26, 6, 6, 6, 8, 3, 6, 4, 4, 4, 10, 4, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [17, 3, 5, 4, 4, 3, 7, 3, 5, 8, 5, 243, 5, 3, 4, 5, 3, 6, 5, 3, 8, 3, 4, 3, 396, 4, 4, 4, 8, 8, 4, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 3, 6, 3, 10, 3, 12, 9, 4, 6, 16, 14, 4, 3, 2, 11, 13, 4, 12, 3, 7, 8, 10, 4, 5, 4, 7, 4, 9, 3, 3, 3, 4, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 3, 65, 9, 5, 9, 3, 90, 13, 23, 4, 4, 3, 69, 10, 231, 6, 10, 5, 6, 12, 5, 4, 24, 4, 4, 6, 4, 4, 4, 20, 6, 3, 4, 3, 6, 8, 8, 6, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 4, 8, 4, 12, 7, 10, 4, 3, 16, 4, 5, 11, 8, 112, 7, 5, 11, 28, 10, 3, 4, 8, 10, 7, 15, 5, 88, 4, 6, 12, 17, 7, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 4, 7, 5, 14, 4, 4, 7, 7, 4, 3, 4, 9, 5, 24, 3, 3, 60, 6, 4, 3, 6, 3, 7, 4, 4, 4, 9, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [9, 3, 8, 10, 4, 4, 2, 6, 4, 11, 2, 4, 7, 17, 4, 9, 4, 7, 6, 3, 4, 7, 4, 4, 15, 6, 5, 3, 9, 5, 13]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [17, 3, 8, 3, 3, 3, 7, 8, 5, 3, 9, 9, 7, 34, 3, 6, 8, 4, 17, 9, 4, 4, 21, 12, 35, 4, 6, 7, 4, 4, 7, 2]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 9, 4, 3, 7, 5, 9, 4, 5, 3, 8, 4, 10, 3, 4, 3, 4, 4, 3, 8, 8, 3, 4, 5, 10, 4, 7, 5, 6, 8, 14, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 16, 131, 33, 3, 3, 6, 3, 3, 4, 4, 3, 5, 4, 18, 8, 10, 4, 3, 4, 9, 12, 6, 4, 3, 3, 11, 3, 6, 3, 7, 9, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 6, 3, 19, 10, 8, 4, 4, 4, 6, 3, 4, 6, 7, 9, 4, 7, 8, 3, 4, 11, 3, 8, 43, 95, 10, 5, 3, 5, 131, 7, 3, 9, 7, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 3, 3, 3, 4, 4, 4, 3, 8, 3, 4, 7, 6, 5, 3, 5, 6, 9, 8, 4, 6, 4, 4, 7, 4, 6, 4, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 4, 4, 3, 4, 20, 6, 8, 7, 3, 6, 3, 3, 3, 4, 10, 4, 7, 3, 4, 4, 3, 3, 6, 3, 7, 6, 5, 197, 6, 4, 5, 37, 5, 4, 28, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 10, 7, 84, 4, 5, 3, 3, 253, 3, 3, 5, 4, 4, 6, 3, 3, 6, 540, 5, 4, 11, 32, 540, 7, 5, 4, 7, 5, 5, 4, 3, 4, 369, 135, 11, 3, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [12, 58, 4, 6, 3, 8, 3, 15, 5, 4, 4, 3, 4, 3, 19, 3, 6, 3, 7, 4, 4, 3, 5, 5, 8, 10, 3, 8, 5, 4, 7, 6, 6, 3, 152]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 7, 3, 4, 4, 7, 4, 11, 7, 4, 10, 5, 7, 4, 3, 7, 5, 7, 8, 30, 10, 3, 3, 3, 9, 8, 3, 7, 6, 5, 7, 4, 12, 3, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 208, 3, 3, 3, 4, 4, 4, 3, 4, 6, 4, 4, 7, 5, 9, 3, 4, 5, 8, 214, 8, 11, 5, 4, 3, 4, 11, 2, 5, 5, 11, 41, 7, 460]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 9, 91, 8, 4, 5, 8, 7, 9, 9, 265, 4, 18, 74, 166, 3, 8, 9, 4, 6, 3, 8, 30, 6, 7, 4, 7, 3, 3, 9, 11, 9, 30, 5, 3, 7, 5, 11, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [10, 5, 173, 4, 6, 4, 5, 8, 6, 3, 9, 10, 561, 11, 5, 4, 3, 6, 7, 6, 23, 11, 4, 7, 5, 5, 8, 4, 4, 7, 6, 3, 4, 3, 6, 3, 11, 6, 8, 5, 42]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [14, 3, 4, 10, 6, 8, 7, 7, 8, 4, 5, 4, 7, 5, 7, 7, 7, 16, 4, 8, 11, 3, 5, 7, 7, 5, 7, 6, 12, 7, 4, 201, 6, 10, 15, 9, 12, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [22, 3, 6, 7, 9, 5, 6, 10, 9, 3, 7, 12, 6, 4, 6, 6, 8, 6, 7, 5, 11, 7, 6, 6, 11, 8, 119, 5, 11, 7, 4, 12, 9, 19, 4, 4, 3, 6, 6, 12, 9, 5, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 4, 9, 5, 8, 10, 7, 7, 6, 5, 4, 6, 10, 10, 6, 3, 11, 5, 9, 11, 7, 10, 8, 11, 2, 9, 10, 7, 11, 16, 4, 4, 515, 7, 5, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 8, 10, 3, 4, 8, 14, 5, 10, 32, 3, 4, 153, 6, 5, 98, 175, 5, 3, 8, 6, 5, 3, 10, 4, 5, 4, 14, 10, 274]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 12, 4, 18, 6, 19, 8, 4, 14, 4, 4, 5, 4, 129, 5, 4, 6, 5, 7, 4, 252, 4, 11, 4, 5, 12, 5, 9, 5, 7, 4, 4, 8, 10, 5, 9, 21, 4, 6, 6, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 5, 227, 7, 4, 210, 9, 39, 6, 4, 5, 4, 9, 4, 9, 7, 22, 5, 7, 9, 4, 6, 8, 5, 4, 8, 4, 5, 7, 6, 9, 7, 12, 8, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [5, 59, 16, 5, 5, 10, 5, 12, 5, 5, 5, 9, 10, 4, 3, 17, 8, 7, 8, 2, 5, 8, 5, 4, 39, 6, 7, 6, 7, 9, 5, 6, 9, 5, 12, 9, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [13, 3, 7, 5, 8, 5, 14, 8, 10, 6, 4, 6, 21, 5, 9, 7, 3, 16, 6, 134, 4, 3, 4, 7, 8, 6, 291, 3, 7, 262, 4, 17, 9, 4, 5, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [13, 3, 242, 3, 11, 14, 14, 8, 4, 2, 7, 9, 7, 4, 4, 17, 4, 4, 4, 4, 3, 6, 3, 8, 6, 5, 9, 6, 4, 12, 6, 8, 3, 4, 5, 4, 11, 4, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 6, 7, 4, 4, 6, 7, 3, 3, 5, 8, 4, 4, 8, 4, 4, 4, 6, 4, 6, 9, 5, 5, 6, 5, 9, 6, 4, 6, 9, 9, 8, 6, 4, 2, 9, 10, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 5, 5, 8, 4, 10, 7, 8, 3, 7, 8, 6, 5, 2, 4, 6, 5, 7, 4, 4, 3, 3, 6, 11, 4, 13, 7, 6, 4, 13, 4, 8, 9, 120, 10, 10, 7, 14, 5, 5, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 5, 10, 4, 4, 6, 59, 6, 11, 5, 6, 7, 5, 8, 5, 6, 43, 4, 12, 11, 5, 14, 19, 15, 8, 16, 10, 9, 6, 9, 10, 4, 5, 4, 8, 4, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 6, 8, 4, 3, 6, 4, 5, 4, 10, 6, 9, 5, 11, 6, 7, 7, 6, 5, 9, 6, 4, 3, 4, 6, 12, 7, 6, 5, 8, 5, 13, 7, 5, 8, 316, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [9, 3, 6, 9, 8, 31, 4, 7, 7, 14, 4, 5, 6, 20, 7, 6, 15, 197, 9, 4, 7, 13, 5, 10, 7, 8, 10, 4, 16, 6, 6, 7, 5, 5, 7, 9, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 6, 10, 10, 8, 9, 7, 2, 11, 3, 3, 14, 4, 4, 9, 4, 7, 8, 6, 7, 4, 5, 8, 8, 4, 10, 4, 3, 5, 3, 4, 8, 5, 14, 10, 9, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 14, 7, 14, 4, 10, 9, 9, 6, 6, 3, 6, 6, 6, 6, 8, 7, 8, 7, 5, 5, 4, 5, 113, 7, 7, 6, 10, 7, 83, 9, 7, 4, 9, 4, 8, 3, 4, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 3, 6, 3, 8, 7, 11, 10, 12, 103, 102, 4, 5, 4, 4, 4, 7, 5, 3, 8, 6, 4, 8, 6, 4, 8, 4, 6, 9, 14, 4, 4, 9, 9, 15, 7, 8, 11, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [19, 5, 10, 4, 6, 8, 4, 6, 69, 8, 13, 3, 6, 6, 4, 5, 4, 6, 60, 8, 8, 12, 4, 3, 4, 12, 8, 8, 4, 11, 29, 46, 9, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [5, 9, 70, 14, 5, 3, 4, 6, 8, 7, 11, 6, 7, 9, 6, 9, 9, 15, 400, 6, 15, 7, 10, 3, 5, 7, 8, 5, 5, 7, 40, 7, 7, 7, 12, 19, 4, 8, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 8, 31, 11, 6, 7, 4, 10, 65, 6, 4, 5, 8, 9, 7, 10, 2, 10, 9, 6, 15, 10, 77, 13, 61, 10, 7, 6, 5, 6, 10, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [8, 5, 9, 9, 7, 6, 11, 6, 7, 13, 4, 5, 4, 8, 7, 10, 6, 10, 9, 6, 12, 5, 9, 5, 173, 5, 4, 5, 4, 6, 6, 3, 6, 5, 10, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 4, 9, 22, 11, 11, 22, 56, 7, 7, 5, 9, 8, 32, 4, 31, 14, 4, 8, 9, 14, 4, 4, 6, 8, 6, 8, 9, 6, 2, 8, 7, 9, 11, 12, 4, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [15, 3, 4, 160, 12, 11, 14, 11, 3, 8, 5, 10, 11, 4, 8, 8, 8, 6, 104, 13, 9, 7, 3, 7, 114, 8, 4, 5, 4, 4, 4, 8, 9, 4, 7, 7, 6, 7, 10, 8, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 22, 8, 25, 4, 6, 4, 11, 17, 5, 5, 6, 25, 13, 3, 4, 9, 10, 11, 6, 16, 30, 40, 6, 320, 5, 5, 12, 16, 6, 3, 4, 9, 8, 7, 6, 8, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 5, 4, 6, 8, 32, 31, 5, 9, 368, 8, 6, 6, 15, 6, 11, 3, 4, 10, 4, 5, 4, 7, 5, 4, 9, 6, 5, 8, 7, 8, 8, 5, 4, 6, 8, 67, 7, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 4, 6, 6, 8, 6, 5, 11, 7, 5, 8, 109, 6, 4, 10, 4, 8, 3, 15, 5, 5, 7, 8, 4, 65, 8, 2, 8, 8, 18, 13, 8, 7, 12, 3, 5, 4, 4, 16]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 10, 6, 7, 4, 5, 9, 11, 6, 7, 4, 10, 6, 4, 7, 7, 9, 6, 7, 6, 4, 5, 9, 6, 4, 7, 8, 10, 10, 8, 5, 4, 6, 4, 3, 8, 8, 11, 9, 7, 7, 10, 12, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [8, 3, 47, 7, 6, 12, 13, 4, 9, 3, 11, 6, 8, 4, 10, 320, 4, 12, 6, 7, 8, 4, 58, 10, 9, 12, 10, 9, 12, 5, 12, 3, 5, 8, 7, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [8, 205, 5, 4, 7, 4, 7, 10, 8, 10, 10, 5, 7, 10, 9, 6, 9, 3, 8, 3, 3, 10, 4, 8, 4, 17, 4, 3, 6, 8, 6, 7, 4, 3, 7, 16, 5, 8, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 7, 9, 11, 3, 4, 3, 12, 11, 14, 4, 7, 4, 6, 5, 12, 4, 59, 12, 3, 5, 5, 9, 9, 6, 9, 12, 6, 4, 7, 5, 11, 175, 13, 13, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [11, 3, 6, 6, 8, 8, 11, 11, 9, 10, 11, 7, 5, 8, 17, 590, 6, 12, 7, 10, 9, 7, 10, 8, 4, 3, 4, 9, 12, 3, 9, 7, 81, 6, 3, 3, 11, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [14, 7, 10, 6, 8, 6, 9, 7, 5, 4, 12, 9, 7, 4, 10, 7, 13, 6, 7, 24, 10, 11, 6, 18, 11, 8, 10, 9, 11, 9, 9, 5, 9, 13, 5, 7, 11, 7, 7, 4, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [14, 3, 9, 14, 7, 2, 4, 13, 17, 7, 5, 3, 6, 6, 4, 6, 5, 8, 14, 4, 14, 4, 4, 38, 7, 11, 4, 14, 8, 6, 6, 13, 4, 7, 8, 7, 5, 4, 10, 4, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 8, 4, 5, 4, 7, 6, 6, 4, 3, 4, 5, 8, 3, 6, 6, 4, 5, 7, 8, 7, 8, 7, 8, 463, 8, 10, 5, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 12, 24, 7, 5, 7, 4, 5, 9, 10, 5, 7, 7, 4, 9, 210, 5, 6, 7, 8, 12, 10, 7, 6, 9, 104, 9, 8, 8, 19, 6, 5, 7, 9, 5, 7, 6, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 5, 66, 9, 9, 7, 4, 8, 9, 9, 9, 7, 4, 5, 4, 7, 11, 7, 9, 6, 11, 113, 10, 8, 7, 4, 3, 10, 4, 6, 7, 9, 11, 12, 6, 315]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [10, 8, 255, 6, 145, 3, 9, 7, 10, 4, 7, 5, 6, 6, 6, 4, 5, 6, 89, 9, 8, 8, 10, 546, 411, 21, 24, 3, 8, 9, 7, 4, 13, 6, 15, 5, 11, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 23, 5, 9, 6, 7, 8, 11, 5, 6, 9, 3, 5, 8, 392, 6, 7, 5, 3, 10, 9, 5, 13, 2, 4, 20, 14, 13, 4, 4, 9, 5, 6, 4, 9, 65, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [15, 10, 7, 110, 21, 6, 7, 7, 10, 7, 12, 6, 9, 9, 6, 10, 7, 24, 8, 3, 7, 12, 4, 11, 5, 9, 12, 4, 9, 10, 8, 7, 7, 10, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [16, 6, 7, 7, 6, 9, 8, 7, 8, 10, 4, 7, 6, 9, 5, 6, 4, 7, 7, 8, 7, 12, 227, 11, 10, 12, 4, 5, 7, 3, 7, 7, 4, 10, 10, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [7, 129, 4, 14, 9, 10, 8, 4, 12, 7, 9, 8, 10, 16, 10, 10, 10, 7, 4, 7, 10, 5, 13, 4, 15, 10, 10, 5, 13, 7, 8, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [16, 11, 8, 2, 7, 4, 6, 398, 5, 15, 249, 7, 8, 8, 29, 7, 6, 3, 11, 7, 4, 7, 9, 9, 8, 11, 6, 3, 5, 12, 7, 6, 8, 4, 6, 5, 8, 6, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 11, 5, 5, 8, 4, 4, 4, 6, 12, 7, 4, 4, 7, 7, 60, 6, 8, 3, 10, 4, 4, 5, 4, 4, 7, 4, 5, 4, 6, 5, 6, 6, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 4, 6, 4, 6, 11, 7, 6, 4, 5, 4, 6, 5, 6, 12, 4, 5, 7, 4, 8, 4, 5, 8, 7, 6, 6, 6, 6, 4, 3, 9, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [13, 7, 6, 9, 7, 11, 6, 7, 9, 7, 4, 4, 4, 8, 7, 5, 6, 4, 8, 7, 6, 8, 4, 6, 449, 9, 11, 6, 8, 5, 10, 7, 18, 9, 7, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 17, 13, 4, 7, 5, 97, 13, 8, 9, 13, 6, 4, 7, 4, 5, 13, 4, 8, 2, 8, 9, 7, 6, 10, 7, 7, 8, 8, 8, 8, 6, 6, 7, 6, 17]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [23, 8, 5, 8, 4, 5, 4, 6, 8, 3, 3, 4, 10, 10, 8, 4, 4, 5, 8, 4, 11, 6, 10, 7, 144, 4, 196, 8, 8, 5, 6, 7, 403, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 5, 4, 16, 30, 21, 6, 4, 4, 29, 22, 4, 7, 45, 6, 4, 5, 11, 4, 6, 3, 6, 4, 7, 4, 5, 3, 7, 6, 5, 5, 4, 4, 4, 8, 5, 6, 6, 7, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [11, 5, 13, 7, 4, 6, 7, 9, 4, 4, 8, 10, 5, 6, 11, 4, 5, 6, 11, 7, 6, 11, 7, 9, 8, 8, 7, 8, 12, 4, 3, 6, 7, 6, 6, 5, 18, 6, 58]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 14, 8, 4, 2, 13, 6, 56, 10, 6, 6, 3, 15, 4, 86, 14, 4, 4, 5, 6, 127, 16, 6, 4, 69, 4, 6, 4, 4, 6, 5, 9, 3, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 9, 5, 10, 6, 7, 7, 6, 6, 7, 6, 9, 6, 6, 12, 69, 7, 8, 7, 5, 5, 5, 5, 10, 6, 7, 5, 12, 7, 8, 8, 10, 6, 5, 8, 7, 249, 248, 5, 9, 8, 4, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [13, 9, 384, 6, 6, 5, 6, 6, 10, 6, 152, 4, 6, 9, 9, 7, 9, 6, 6, 4, 19, 8, 4, 8, 10, 4, 23, 6, 52, 6, 8, 17, 9, 7, 5, 9, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 5, 5, 5, 2, 3, 122, 4, 5, 6, 5, 3, 3, 5, 18, 4, 4, 101, 5, 3, 3, 3, 3, 4, 3, 3, 5, 3, 6, 4, 4, 3, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 4, 4, 3, 6, 3, 3, 7, 4, 5, 4, 6, 6, 4, 2, 5, 5, 5, 4, 6, 6, 4, 5, 4, 5, 5, 42, 6, 5, 6, 4, 4, 3, 4, 4, 9, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 4, 4, 5, 7, 2, 3, 6, 5, 5, 5, 4, 7, 3, 6, 5, 343, 5, 6, 7, 5, 5, 6, 2, 8, 5, 6, 4, 6, 4, 6, 4, 4, 5, 126, 4, 5, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [8, 11, 11, 54, 6, 9, 246, 4, 4, 16, 8, 13, 4, 11, 3, 11, 3, 3, 4, 9, 11, 4, 5, 7, 9, 4, 4, 11, 4, 6, 456, 7, 6, 12, 9, 5, 4, 9, 11, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 4, 9, 10, 10, 5, 11, 9, 6, 10, 4, 3, 6, 7, 4, 9, 6, 184, 4, 7, 9, 164, 9, 8, 5, 5, 8, 3, 11, 10, 56, 19, 8, 5, 4, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [5, 10, 8, 73, 10, 18, 8, 7, 7, 6, 6, 11, 8, 9, 9, 8, 8, 7, 10, 5, 6, 9, 7, 7, 315, 9, 6, 6, 10, 10, 8, 7, 7, 117, 10, 6, 10, 6, 7, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [11, 8, 10, 3, 5, 4, 10, 10, 3, 7, 3, 5, 87, 9, 10, 4, 9, 11, 6, 6, 10, 5, 3, 8, 3, 11, 12, 7, 7, 11, 7, 8, 4, 7, 6, 9, 7, 7, 6, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 7, 10, 4, 6, 9, 9, 10, 7, 12, 4, 9, 124, 7, 17, 9, 6, 7, 8, 8, 7, 6, 4, 8, 9, 4, 7, 9, 12, 6, 4, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 6, 9, 5, 8, 4, 8, 8, 5, 8, 10, 10, 147, 6, 8, 7, 8, 8, 18, 9, 19, 9, 3, 9, 368, 7, 9, 10, 5, 5, 4, 5, 10, 6, 10, 7, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 5, 7, 7, 11, 5, 4, 14, 6, 7, 5, 5, 7, 17, 8, 15, 9, 6, 11, 16, 8, 19, 5, 11, 9, 9, 7, 8, 10, 8, 16, 8, 13, 229, 10, 12, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [13, 3, 7, 9, 5, 8, 11, 7, 5, 8, 17, 7, 47, 10, 12, 8, 298, 7, 8, 7, 9, 38, 8, 7, 12, 11, 12, 8, 9, 28, 7, 7, 9, 7, 7, 10, 5, 12, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 9, 8, 6, 4, 23, 10, 8, 5, 288, 5, 7, 3, 6, 6, 4, 3, 10, 3, 6, 6, 4, 178, 11, 6, 3, 215, 4, 6, 4, 3, 13, 261]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 10, 4, 5, 3, 6, 13, 5, 11, 12, 4, 5, 4, 8, 5, 3, 5, 3, 4, 4, 6, 5, 11, 6, 4, 10, 6, 3, 10, 16, 8, 7, 4, 11, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 5, 3, 4, 7, 7, 7, 9, 4, 7, 10, 3, 5, 4, 5, 8, 11, 11, 3, 5, 10, 4, 5, 3, 4, 11, 4, 4, 3, 2, 5, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 7, 5, 4, 4, 5, 30, 5, 5, 4, 8, 5, 4, 6, 6, 5, 4, 6, 17, 39, 7, 4, 5, 55, 7, 5, 5, 6, 4, 10, 4, 4, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [8, 3, 9, 13, 7, 5, 10, 7, 8, 8, 12, 4, 8, 13, 10, 10, 7, 3, 9, 8, 7, 8, 10, 10, 9, 7, 8, 12, 7, 17, 5, 5, 9, 5, 10, 14, 176, 9, 7, 9, 160, 8, 7, 14, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [21, 5, 6, 10, 7, 15, 7, 9, 8, 4, 7, 14, 9, 7, 6, 8, 12, 8, 9, 9, 142, 12, 7, 11, 7, 12, 7, 9, 9, 11, 11, 13, 8, 6, 7, 12, 9, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [13, 5, 8, 5, 7, 10, 7, 7, 10, 7, 9, 4, 7, 9, 6, 11, 7, 7, 7, 5, 7, 7, 4, 9, 444, 10, 9, 312, 10, 8, 7, 6, 7, 8, 8, 10, 9, 5, 6, 7, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 13, 7, 10, 15, 10, 382, 7, 7, 4, 5, 10, 9, 8, 11, 8, 10, 8, 10, 7, 50, 135, 10, 7, 12, 8, 7, 7, 8, 8, 8, 5, 3, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [20, 3, 3, 6, 4, 8, 6, 8, 13, 5, 4, 6, 4, 416, 6, 4, 7, 8, 4, 8, 10, 7, 6, 270, 6, 10, 124, 4, 62, 14, 7, 6, 8, 3, 7, 7, 65, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 5, 7, 9, 4, 9, 6, 4, 6, 3, 4, 4, 10, 8, 15, 6, 6, 6, 6, 87, 6, 4, 7, 11, 10, 5, 37, 8, 9, 8, 6, 12, 6, 10, 7, 4, 9, 7, 6, 4, 5, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 10, 6, 10, 5, 5, 4, 9, 32, 10, 11, 12, 5, 5, 4, 11, 10, 7, 9, 9, 13, 7, 12, 7, 4, 3, 5, 9, 9, 9, 37, 8, 7, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [7, 13, 11, 6, 7, 5, 4, 15, 16, 9, 8, 13, 3, 9, 6, 12, 4, 8, 17, 9, 6, 16, 12, 16, 17, 9, 9, 10, 8, 8, 6, 5, 4, 7, 9, 16, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 16, 8, 4, 9, 11, 7, 18, 5, 6, 6, 7, 12, 5, 11, 6, 6, 9, 9, 8, 8, 5, 9, 7, 7, 7, 7, 9, 7, 7, 7, 10, 6, 8, 9, 10, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 6, 6, 5, 11, 4, 11, 7, 4, 4, 14, 9, 20, 8, 7, 7, 9, 6, 19, 11, 7, 5, 10, 15, 6, 6, 7, 6, 7, 14, 6, 3, 4, 6, 5, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 8, 13, 5, 9, 8, 8, 5, 4, 7, 9, 6, 11, 11, 4, 9, 182, 8, 5, 7, 7, 8, 7, 10, 7, 10, 9, 13, 4, 8, 9, 5, 6, 16, 9, 31, 5, 11, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [26, 8, 8, 10, 5, 36, 8, 7, 4, 12, 5, 6, 12, 13, 11, 9, 5, 7, 4, 5, 7, 14, 9, 4, 11, 8, 6, 4, 7, 6, 5, 7, 5, 7, 13, 7, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 8, 6, 7, 6, 3, 6, 7, 7, 6, 6, 7, 10, 7, 6, 5, 7, 5, 7, 10, 7, 7, 7, 6, 6, 7, 5, 8, 6, 8, 7, 10, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 16, 9, 6, 11, 12, 7, 8, 10, 8, 11, 7, 11, 8, 5, 6, 4, 8, 6, 13, 4, 7, 9, 6, 7, 6, 10, 5, 7, 9, 9, 7, 13, 15, 11, 8, 7, 6, 7, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 358, 5, 9, 9, 6, 6, 9, 10, 7, 7, 7, 7, 13, 8, 81, 12, 11, 6, 6, 4, 11, 6, 7, 5, 7, 6, 8, 11, 8, 11, 11, 8, 9, 9, 7, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 8, 8, 4, 4, 4, 7, 8, 8, 12, 4, 8, 15, 6, 8, 154, 127, 7, 7, 4, 10, 8, 6, 7, 6, 10, 7, 7, 4, 10, 9, 5, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [15, 9, 5, 6, 4, 8, 32, 9, 6, 12, 6, 7, 9, 8, 8, 11, 6, 11, 5, 9, 8, 7, 7, 4, 3, 444, 7, 12, 4, 8, 7, 7, 4, 12, 7, 5, 10, 8, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [8, 9, 5, 4, 9, 9, 4, 6, 5, 9, 8, 5, 5, 4, 4, 7, 9, 4, 10, 10, 6, 5, 57, 5, 9, 14, 6, 10, 8, 15, 6, 13, 8, 9, 9, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 10, 8, 9, 5, 7, 8, 29, 11, 8, 5, 7, 11, 6, 3, 9, 6, 11, 8, 7, 10, 6, 11, 7, 6, 70, 10, 5, 8, 8, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 248, 3, 8, 5, 8, 4, 10, 5, 5, 7, 5, 5, 6, 9, 7, 8, 3, 245, 7, 8, 5, 5, 6, 10, 4, 7, 6, 4, 26, 7, 9, 5, 13, 5, 6, 8, 8, 8, 11, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [13, 6, 6, 8, 8, 4, 6, 43, 9, 3, 9, 4, 8, 9, 7, 6, 8, 10, 10, 7, 4, 5, 8, 9, 7, 4, 7, 7, 5, 8, 9, 7, 8, 6, 5, 5, 9, 7, 7, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 6, 317, 10, 4, 13, 8, 6, 9, 13, 6, 4, 9, 11, 5, 7, 3, 4, 6, 9, 3, 8, 7, 9, 5, 4, 10, 13, 4, 6, 4, 5, 6, 7, 375, 321, 9, 9, 8, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [16, 8, 6, 10, 10, 11, 10, 8, 4, 8, 3, 10, 10, 7, 8, 8, 8, 10, 12, 13, 6, 6, 8, 11, 8, 4, 8, 9, 10, 3, 5, 9, 8, 10, 4, 6, 7, 11, 6, 11, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 7, 9, 7, 7, 8, 7, 7, 9, 13, 5, 7, 9, 8, 8, 8, 6, 11, 12, 4, 10, 5, 7, 4, 151, 10, 12, 7, 7, 8, 22, 10, 9, 3, 12, 9, 7, 6, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [5, 8, 11, 4, 13, 3, 9, 5, 8, 10, 15, 10, 7, 10, 7, 12, 9, 5, 7, 5, 6, 7, 4, 4, 5, 4, 5, 9, 6, 6, 12, 16, 210, 8, 10, 5, 8, 235, 6, 8, 127, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [24, 8, 7, 54, 9, 3, 4, 8, 12, 8, 9, 11, 6, 12, 10, 4, 5, 4, 5, 9, 12, 9, 36, 5, 7, 8, 5, 4, 6, 6, 6, 19, 6, 5, 6, 10, 4, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [9, 4, 21, 4, 11, 5, 8, 5, 6, 6, 4, 5, 7, 3, 8, 7, 10, 3, 8, 5, 6, 8, 5, 14, 5, 11, 5, 6, 8, 6, 8, 9, 6, 5, 5, 7, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 5, 7, 7, 8, 4, 4, 5, 4, 6, 7, 4, 9, 7, 7, 4, 4, 6, 7, 7, 8, 5, 6, 14, 5, 9, 4, 4, 6, 11, 12, 9, 11, 8, 8, 6, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [5, 8, 8, 4, 8, 9, 3, 3, 9, 5, 9, 12, 6, 7, 8, 4, 5, 9, 8, 11, 6, 9, 9, 9, 8, 10, 9, 476, 8, 6, 6, 8, 10, 7, 5, 12, 8, 6, 302, 13, 9, 6, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 11, 9, 7, 7, 8, 5, 12, 8, 10, 10, 6, 5, 5, 7, 7, 6, 4, 8, 4, 6, 6, 10, 7, 8, 8, 7, 10, 8, 7, 9, 10, 11, 6, 6, 7, 9, 6, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [7, 5, 9, 5, 10, 6, 4, 5, 6, 9, 14, 7, 6, 11, 12, 6, 4, 14, 3, 7, 8, 4, 5, 5, 4, 4, 3, 7, 140, 9, 14, 5, 4, 4, 15]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 212, 7, 4, 4, 10, 7, 5, 6, 9, 6, 7, 5, 6, 3, 4, 28, 5, 11, 4, 149, 6, 9, 7, 6, 3, 7, 4, 43, 6, 8, 6, 5, 7, 10, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 9, 8, 5, 9, 5, 6, 5, 9, 9, 5, 7, 6, 6, 11, 8, 4, 122, 5, 4, 12, 7, 4, 6, 3, 7, 4, 3, 5, 4, 3, 4, 5, 4, 5, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [8, 30, 64, 6, 4, 3, 7, 7, 4, 6, 9, 107, 8, 3, 8, 8, 5, 6, 6, 8, 8, 6, 6, 7, 11, 8, 4, 6, 5, 5, 3, 16, 4, 149, 7, 4, 14, 5, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 3, 7, 4, 10, 8, 7, 8, 8, 4, 8, 6, 286, 8, 5, 4, 5, 8, 5, 4, 4, 5, 3, 7, 4, 7, 4, 5, 4, 93, 5, 6, 9, 4, 6, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [13, 6, 9, 7, 68, 7, 6, 4, 10, 4, 8, 7, 17, 7, 9, 7, 160, 3, 7, 7, 6, 9, 10, 11, 6, 8, 10, 7, 4, 41, 6, 5, 6, 4, 7, 7, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [6, 6, 105, 7, 5, 14, 7, 12, 7, 4, 6, 252, 6, 3, 8, 23, 4, 5, 6, 8, 8, 463, 7, 7, 7, 8, 8, 5, 11, 4, 6, 9, 4, 9, 4, 10, 6, 7, 10, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 6, 8, 5, 4, 7, 9, 4, 10, 7, 4, 7, 11, 7, 7, 10, 8, 7, 4, 8, 77, 3, 6, 6, 7, 5, 7, 4, 6, 9, 201, 8, 7, 6, 6, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[9, 7, 5, 8, 10, 10, 7, 3, 8, 12, 8, 8, 10, 10, 3, 6, 11, 8, 5, 5, 11, 6, 31, 8, 6, 7, 11, 9, 9, 7, 8, 6, 6, 8, 5, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 8, 6, 9, 14, 7, 279, 6, 7, 31, 10, 8, 6, 10, 4, 9, 9, 9, 8, 5, 9, 4, 8, 10, 3, 3, 10, 4, 8, 8, 13, 8, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [7, 9, 5, 8, 10, 7, 6, 9, 10, 9, 7, 7, 8, 7, 8, 11, 9, 10, 7, 9, 10, 8, 11, 3, 8, 7, 6, 6, 7, 6, 8, 5, 6, 8, 9, 6, 6, 10, 8, 10, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 7, 10, 8, 13, 9, 11, 5, 8, 8, 25, 10, 8, 10, 3, 7, 8, 6, 7, 7, 11, 7, 5, 10, 143, 6, 6, 4, 12, 7, 6, 12, 12, 10, 8, 7, 7, 8, 10, 13, 145]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [5, 8, 170, 10, 7, 7, 10, 12, 8, 3, 11, 16, 9, 4, 8, 8, 9, 8, 8, 10, 11, 7, 5, 5, 11, 6, 5, 9, 8, 20, 8, 6, 7, 8, 8, 9, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 10, 6, 6, 9, 6, 7, 7, 10, 9, 6, 6, 9, 7, 9, 7, 8, 8, 6, 8, 5, 11, 6, 5, 42, 6, 134, 7, 6, 7, 6, 8, 9, 6, 9, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 4, 8, 161, 5, 4, 7, 8, 3, 4, 433, 7, 5, 142, 9, 8, 3, 3, 4, 6, 6, 6, 8, 14, 4, 4, 14, 6, 5, 9, 4, 10, 5, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 210, 7, 4, 9, 6, 6, 92, 9, 7, 9, 9, 4, 9, 8, 9, 5, 7, 8, 9, 3, 7, 8, 7, 9, 8, 7, 11, 10, 6, 10, 7, 13, 393, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [14, 4, 9, 3, 9, 11, 9, 9, 12, 10, 13, 13, 10, 15, 7, 10, 3, 10, 7, 4, 8, 8, 11, 8, 3, 48, 5, 4, 7, 3, 11, 13, 6, 5, 12, 16, 8, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [11, 13, 4, 4, 5, 8, 4, 3, 4, 4, 4, 8, 11, 9, 12, 4, 7, 4, 11, 7, 8, 13, 4, 7, 12, 7, 9, 4, 255, 5, 4, 4, 6, 9, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [6, 9, 10, 8, 6, 8, 7, 6, 8, 9, 11, 5, 8, 6, 7, 9, 8, 5, 8, 7, 7, 9, 9, 8, 9, 3, 6, 5, 7, 4, 13, 11, 10, 10, 11, 10, 8, 8, 163, 9, 11, 7, 8, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 6, 9, 3, 8, 8, 12, 9, 12, 9, 8, 6, 8, 5, 95, 7, 8, 7, 11, 7, 13, 6, 7, 8, 8, 16, 7, 8, 8, 7, 5, 3, 8, 5, 8, 4, 7, 10, 7, 7, 10, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [10, 9, 10, 11, 9, 8, 4, 10, 9, 6, 12, 9, 9, 6, 24, 6, 6, 10, 10, 123, 7, 12, 9, 9, 9, 7, 10, 14, 8, 6, 6, 8, 128, 10, 18, 9, 4, 9, 11, 7, 7, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 8, 10, 7, 6, 5, 23, 4, 7, 8, 8, 9, 7, 9, 8, 6, 7, 4, 9, 9, 4, 14, 8, 15, 12, 9, 6, 7, 11, 8, 5, 8, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 7, 6, 4, 9, 24, 6, 8, 11, 11, 6, 7, 4, 8, 10, 8, 6, 3, 10, 393, 10, 6, 5, 9, 10, 13, 8, 7, 7, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 4, 3, 7, 11, 8, 7, 3, 8, 5, 8, 5, 8, 7, 5, 12, 7, 38, 9, 8, 6, 11, 7, 5, 10, 6, 11, 6, 9, 7, 8, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 6, 5, 7, 9, 5, 6, 5, 5, 6, 9, 6, 14, 5, 180, 9, 7, 4, 4, 5, 7, 6, 116, 5, 8, 7, 5, 9, 4, 9, 6, 7, 7, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 8, 10, 6, 10, 8, 9, 6, 8, 6, 7, 11, 5, 7, 5, 7, 5, 159, 11, 9, 7, 10, 6, 7, 7, 10, 9, 8, 10, 97, 6, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 5, 423, 8, 6, 5, 7, 7, 5, 8, 9, 10, 12, 9, 6, 8, 6, 7, 6, 9, 9, 5, 323, 8, 7, 7, 28, 5, 72, 8, 7, 5, 9, 6, 4, 7, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 4, 10, 11, 9, 7, 9, 9, 13, 298, 9, 9, 7, 9, 8, 7, 5, 8, 9, 4, 4, 6, 6, 88, 9, 16, 12, 8, 7, 6, 7, 10, 7, 9, 9, 196, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 5, 6, 8, 5, 4, 6, 8, 12, 7, 6, 6, 11, 8, 7, 9, 84, 26, 4, 224, 9, 7, 6, 11, 11, 8, 462, 10, 8, 9, 21, 5, 10, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [17, 3, 7, 7, 8, 13, 9, 7, 9, 6, 4, 4, 9, 6, 8, 7, 8, 7, 17, 9, 9, 8, 9, 6, 6, 8, 10, 8, 5, 8, 4, 3, 9, 9, 8, 10, 8, 6, 10, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 8, 7, 7, 11, 14, 9, 7, 4, 5, 5, 4, 7, 4, 8, 14, 8, 6, 11, 9, 6, 4, 12, 9, 10, 11, 6, 8, 4, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [5, 143, 9, 4, 9, 8, 8, 8, 7, 6, 6, 9, 11, 12, 9, 9, 8, 9, 6, 7, 7, 17, 9, 8, 9, 8, 6, 16, 13, 9, 9, 10, 8, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [12, 9, 6, 7, 4, 4, 7, 4, 7, 3, 6, 6, 6, 168, 11, 6, 10, 8, 4, 4, 10, 52, 10, 5, 6, 16, 5, 8, 3, 7, 11, 6, 10, 8, 8, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 5, 5, 6, 3, 5, 6, 6, 9, 7, 7, 7, 11, 10, 6, 7, 11, 8, 7, 5, 9, 7, 12, 6, 41, 6, 8, 4, 5, 8, 7, 7, 5, 7, 6, 8, 301, 7, 5, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [6, 104, 5, 4, 9, 6, 7, 14, 10, 8, 4, 5, 10, 6, 9, 7, 9, 356, 3, 11, 12, 10, 7, 14, 6, 10, 360, 4, 8, 8, 4, 18, 4, 7, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 8, 42, 9, 7, 6, 5, 6, 8, 8, 3, 235, 11, 7, 5, 6, 4, 7, 9, 7, 7, 5, 9, 9, 23, 8, 7, 8, 8, 9, 8, 6, 7, 4, 10, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [10, 8, 9, 10, 6, 4, 10, 9, 7, 4, 5, 8, 11, 7, 4, 9, 15, 9, 9, 7, 9, 4, 7, 7, 8, 5, 9, 4, 4, 8, 8, 5, 9, 6, 7, 4, 4, 4, 4, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [29, 8, 58, 11, 11, 8, 13, 33, 18, 363, 12, 10, 13, 6, 11, 14, 15, 10, 5, 278, 5, 14, 8, 16, 18, 6, 10, 9, 4, 7, 12, 13, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [10, 10, 5, 9, 10, 10, 380, 16, 8, 6, 17, 47, 10, 7, 11, 9, 10, 6, 5, 34, 11, 5, 10, 12, 7, 3, 7, 7, 6, 9, 5, 10, 9, 4, 5, 4, 9, 202, 10, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 11, 9, 7, 9, 8, 9, 7, 3, 6, 11, 7, 5, 7, 7, 8, 8, 13, 8, 11, 10, 9, 7, 8, 7, 11]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 5, 4, 9, 6, 11, 8, 22, 5, 12, 5, 10, 7, 12, 11, 8, 8, 12, 8, 8, 7, 11, 9, 8, 4, 11, 3, 13, 10, 9, 6, 4, 4, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 10, 13, 7, 29, 15, 13, 8, 7, 8, 10, 9, 9, 12, 13, 8, 9, 9, 9, 9, 10, 9, 12, 10, 12, 9, 13, 15, 9, 8, 12, 9, 11, 11, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [7, 7, 184, 9, 17, 5, 181, 6, 9, 8, 10, 8, 9, 7, 7, 10, 8, 7, 8, 7, 12, 9, 6, 7, 8, 8, 8, 8, 4, 3, 12, 8, 6, 6, 7, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 9, 9, 4, 9, 10, 7, 7, 11, 8, 9, 10, 9, 11, 6, 5, 7, 7, 8, 9, 3, 10, 7, 81, 6, 8, 4, 8, 6, 5, 7, 8, 8, 6, 9, 9, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 11, 11, 4, 9, 8, 9, 292, 10, 7, 10, 9, 10, 10, 10, 8, 5, 7, 3, 8, 372, 5, 377, 8, 10, 8, 13, 6, 5, 5, 6, 7, 6, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [18, 7, 7, 5, 8, 8, 9, 8, 10, 6, 5, 8, 5, 12, 7, 11, 12, 3, 61, 7, 10, 5, 10, 13, 6, 7, 11, 9, 8, 10, 8, 6, 5, 6, 6, 11, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [6, 6, 38, 8, 7, 8, 46, 18, 7, 7, 132, 157, 10, 7, 8, 9, 7, 404, 6, 7, 7, 10, 9, 5, 6, 5, 8, 8, 9, 9, 336, 11, 9, 9, 13, 4, 10, 27]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 8, 8, 10, 8, 11, 6, 7, 9, 7, 7, 8, 9, 12, 5, 6, 78, 8, 4, 11, 7, 6, 10, 6, 8, 8, 7, 4, 10, 3, 9, 4, 3, 7, 6, 9, 8, 5, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [9, 5, 7, 12, 9, 8, 9, 2, 11, 10, 10, 10, 9, 9, 9, 10, 8, 9, 6, 10, 7, 10, 5, 8, 9, 91, 10, 7, 7, 5, 7, 6, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [10, 10, 7, 3, 7, 8, 5, 7, 10, 6, 10, 11, 6, 7, 204, 10, 6, 7, 7, 5, 7, 6, 7, 7, 13, 8, 6, 5, 7, 5, 8, 11, 10, 9, 8, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 4, 5, 6, 13, 9, 9, 13, 5, 40, 8, 12, 3, 10, 3, 13, 4, 8, 16, 6, 17, 552, 12, 6, 5, 323, 7, 10, 9, 9, 6, 55, 6, 15, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [8, 11, 49, 6, 10, 4, 12, 8, 9, 15, 4, 9, 6, 11, 16, 8, 451, 6, 19, 9, 9, 7, 4, 4, 5, 9, 17, 3, 16, 11, 14, 10, 6, 7, 10, 12, 12, 96, 16]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [14, 9, 9, 8, 10, 7, 8, 14, 437, 15, 5, 6, 9, 7, 18, 9, 10, 9, 8, 10, 9, 11, 9, 9, 4, 20, 10, 9, 3, 8, 11, 10, 6, 12, 5, 11, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 9, 10, 11, 8, 133, 6, 8, 5, 8, 9, 224, 7, 11, 10, 8, 3, 9, 8, 7, 8, 7, 5, 7, 7, 7, 8, 6, 96, 7, 11, 8, 6, 4, 11, 9, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 4, 10, 11, 8, 7, 7, 9, 9, 9, 12, 8, 4, 9, 7, 7, 7, 14, 9, 18, 8, 11, 9, 9, 7, 8, 10, 6, 8, 7, 12, 9, 8, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [15, 4, 6, 9, 7, 6, 8, 3, 9, 12, 11, 9, 9, 7, 6, 12, 6, 8, 6, 8, 7, 6, 9, 10, 39, 8, 3, 8, 7, 6, 9, 6, 11, 6, 6, 7, 349, 7, 6, 5, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [3, 14, 8, 6, 4, 8, 7, 3, 4, 9, 11, 181, 11, 9, 124, 8, 9, 8, 4, 4, 9, 6, 8, 3, 8, 11, 14, 13, 8, 9, 3, 8, 9, 9, 12, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [10, 21, 30, 6, 7, 8, 5, 155, 14, 9, 10, 10, 10, 9, 7, 4, 8, 8, 7, 10, 7, 8, 29, 10, 9, 6, 8, 7, 4, 7, 14, 4, 6, 9, 10, 6, 7, 5, 8, 11, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 9, 4, 11, 3, 9, 6, 7, 5, 11, 13, 9, 8, 10, 9, 7, 9, 7, 9, 9, 9, 9, 9, 4, 4, 7, 5, 8, 8, 8, 5, 10, 7, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [6, 9, 9, 5, 5, 8, 9, 15, 9, 6, 5, 7, 7, 9, 4, 9, 7, 3, 6, 9, 10, 5, 8, 9, 6, 9, 7, 8, 10, 6, 7, 10, 9, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [13, 12, 6, 3, 7, 4, 6, 6, 11, 9, 4, 7, 10, 12, 7, 5, 513, 5, 25, 12, 4, 5, 4, 6, 62, 27, 6, 7, 4, 6, 10, 7, 3, 8, 4, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [8, 5, 9, 4, 6, 11, 9, 5, 9, 14, 8, 6, 8, 7, 14, 7, 6, 6, 12, 6, 8, 5, 9, 5, 6, 15, 9, 9, 5, 7, 7, 5, 10, 8, 7, 8, 6, 5, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 5, 2, 4, 5, 5, 6, 43, 4, 57, 4, 4, 5, 5, 5, 8, 7, 4, 5, 7, 13, 5, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [4, 5, 11, 10, 3, 7, 4, 8, 4, 5, 10, 13, 52, 4, 11, 4, 3, 78, 13, 5, 6, 3, 7, 5, 10, 4, 11, 119, 9, 6, 10, 8, 9, 10, 5, 10, 7, 10, 6, 7, 6, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [8, 48, 7, 9, 7, 10, 10, 8, 9, 5, 13, 8, 13, 4, 11, 13, 6, 11, 10, 9, 5, 4, 9, 9, 7, 8, 10, 10, 9, 10, 9, 15, 91, 5, 9, 6, 6, 6, 9, 9, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 8, 8, 8, 9, 6, 15, 9, 9, 8, 11, 9, 9, 7, 8, 9, 8, 9, 8, 9, 11, 5, 9, 7, 9, 8, 8, 7, 13, 6, 8, 9, 6, 6, 8, 8, 5, 7, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 5, 10, 7, 8, 7, 4, 3, 8, 9, 5, 8, 11, 10, 3, 4, 10, 12, 8, 55, 8, 4, 11, 7, 271, 10, 8, 5, 137, 47, 7, 4, 7, 5, 7, 4, 8, 4, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [4, 11, 10, 7, 9, 10, 8, 10, 7, 7, 7, 8, 13, 9, 10, 7, 9, 5, 7, 7, 9, 8, 101, 9, 9, 5, 9, 10, 4, 9, 8, 8, 11, 5, 9, 8, 6, 10, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 5, 6, 6, 10, 97, 4, 3, 5, 7, 4, 6, 5, 6, 3, 6, 5, 6, 6, 6, 4, 5, 6, 5, 12, 6, 7, 4, 4, 7, 9, 6, 12, 5, 6, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 9, 9, 9, 11, 9, 9, 8, 9, 11, 10, 8, 10, 10, 7, 11, 10, 13, 99, 9, 21, 8, 10, 8, 7, 11, 7, 15, 9, 13, 9, 7, 9, 9, 13, 11, 8, 9, 12, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 4, 4, 8, 17, 12, 7, 8, 4, 14, 6, 13, 15, 10, 11, 12, 12, 10, 9, 5, 12, 5, 6, 5, 595, 9, 19, 5, 13, 10, 4, 5, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [11, 9, 11, 14, 8, 10, 5, 3, 8, 12, 8, 10, 7, 9, 4, 7, 7, 8, 7, 8, 9, 5, 8, 8, 8, 7, 10, 9, 10, 9, 3, 8, 7, 14, 4, 11, 7, 9, 11, 13, 11, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [10, 11, 6, 10, 13, 10, 4, 12, 8, 11, 7, 13, 12, 10, 16, 14, 13, 12, 11, 8, 148, 10, 13, 8, 14, 7, 10, 8, 6, 10, 8, 12, 13, 11, 10, 189, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [5, 9, 7, 4, 4, 5, 9, 4, 4, 6, 4, 5, 4, 4, 9, 15, 4, 7, 4, 5, 4, 15, 4, 8, 4, 5, 11, 3, 17, 5, 8, 4, 8, 5, 5, 3, 4, 7, 5, 5, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [14, 10, 9, 8, 9, 5, 13, 361, 6, 73, 10, 230, 6, 6, 11, 8, 26, 3, 6, 8, 5, 14, 8, 5, 4, 9, 10, 8, 13, 6, 7, 15, 9, 8, 11, 9, 222, 9, 4, 6, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [7, 12, 215, 9, 4, 12, 13, 10, 7, 11, 5, 11, 10, 4, 8, 8, 9, 13, 323, 5, 10, 10, 6, 7, 6, 5, 11, 5, 5, 10, 12, 12, 7, 11, 82, 12, 8, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [16, 9, 7, 10, 7, 7, 13, 5, 3, 6, 5, 8, 4, 4, 12, 4, 5, 12, 6, 5, 6, 12, 6, 6, 14, 5, 10, 12, 6, 4, 12, 5, 5, 4, 6, 202, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
