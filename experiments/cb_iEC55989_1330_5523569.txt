┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC55989_1330
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC55989_1330
----------------------------------
number of metabolites : 1953
number of reactions : 2756
number of genes : 1330

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 2, 2, 6, 14, 2, 8, 3, 69, 63, 60, 2, 30, 7, 2, 2]
length(C_list) = 7
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 2, 4, 52, 12, 2, 2, 4, 3, 63, 64, 60, 29, 7, 7, 4, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 13, 7, 2, 2, 14, 2, 12, 9, 2, 5, 4, 67, 75, 60, 6, 29, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 50, 7, 4, 4, 6, 6, 3, 12, 3, 8, 6, 7, 97, 61, 60, 6, 30, 7, 11, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 3, 6, 2, 6, 13, 4, 6, 6, 63, 62, 62, 3, 29, 6, 7, 6, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 10, 6, 119, 6, 9, 6, 26, 8, 3, 120, 4, 63, 61, 59, 29, 8, 3, 6, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 5, 7, 89, 8, 6, 15, 6, 6, 38, 64, 63, 62, 32, 9, 3, 6, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 18, 7, 7, 6, 6, 6, 12, 6, 7, 2, 3, 63, 62, 59, 29, 6, 6, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 8, 7, 7, 7, 9, 12, 6, 7, 6, 6, 3, 64, 61, 60, 7, 29, 6, 46, 6, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 11, 24, 6, 8, 6, 6, 6, 6, 13, 7, 6, 6, 6, 62, 61, 60, 6, 29, 6, 6, 6, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 11, 13, 6, 7, 3, 7, 9, 12, 18, 3, 11, 9, 61, 59, 89, 31, 187, 6, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 6, 9, 3, 13, 6, 7, 12, 3, 11, 6, 62, 65, 60, 29, 6, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 14, 7, 3, 136, 6, 6, 7, 6, 166, 313, 6, 9, 4, 3, 63, 62, 61, 4, 30, 4, 2, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 77, 7, 6, 6, 10, 6, 79, 6, 15, 6, 6, 7, 63, 62, 60, 30, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 3, 16, 6, 6, 12, 6, 15, 6, 10, 64, 66, 60, 6, 31, 6, 7, 30, 7, 4, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 6, 24, 6, 6, 12, 162, 6, 7, 7, 64, 62, 59, 6, 30, 6, 3, 6, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 11, 7, 6, 6, 213, 13, 20, 4, 6, 6, 63, 61, 59, 7, 30, 10, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 11, 7, 6, 8, 14, 9, 11, 45, 12, 6, 6, 7, 7, 7, 62, 61, 60, 32, 6, 29, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 6, 16, 7, 6, 8, 12, 6, 7, 7, 63, 62, 60, 7, 29, 6, 6, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 12, 2, 4, 5, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 7, 5, 4, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 4, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 23
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785608795145
thermo_feasible = true
