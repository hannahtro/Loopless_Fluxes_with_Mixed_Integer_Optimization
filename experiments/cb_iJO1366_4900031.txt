┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJO1366
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJO1366
----------------------------------
number of metabolites : 1805
number of reactions : 2583
number of genes : 1367

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2583 flux variables and 4836 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 11, 11, 11, 11, 11, 11, 11, 2, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 11, 11, 11, 11, 11, 11, 11, 7, 4, 17, 17, 18, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 16, 15, 15, 14, 23, 20, 14, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 3, 2, 3, 2, 4, 3, 5, 3, 117, 4, 3, 3, 2, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 70, 2, 3, 5, 231, 3, 3, 3, 2, 2, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 6, 4, 76]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 7, 14, 12, 13, 12, 13, 12, 15, 12, 21, 18, 18, 18, 18, 248, 18, 16, 17, 16, 57, 15, 15, 185, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 5, 6, 8, 4, 8, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 34]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 41, 11, 33, 48]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823719788081198
thermo_feasible = true
