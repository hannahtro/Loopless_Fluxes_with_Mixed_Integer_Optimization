┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
max_cuts = 20
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8]
length(C_list) = 20
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 5, 4, 3, 4, 239, 3, 381, 5, 4, 8, 24, 43, 4, 4, 2, 4, 5, 3, 6, 17, 16, 20, 4, 5, 4, 92, 4, 5, 7, 4, 4, 6, 3, 8, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 3, 5, 4, 4, 4, 4, 5, 184, 4, 6, 7, 163, 5, 16, 4, 661, 5, 47, 4, 9, 33, 20, 3, 3, 3, 6, 4, 5, 5, 251, 5, 315, 5, 6, 5, 8, 5, 6, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 3, 5, 3, 3, 4, 5, 5, 6, 4, 4, 3, 3, 6, 5, 5, 7, 7, 3, 8, 5, 414, 9, 28, 6, 10, 7, 10, 5, 6, 76, 100, 9, 145, 7, 4, 3, 10, 8, 6, 6, 30, 169, 18]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 5, 3, 27, 6, 7, 3, 3, 7, 4, 5, 8, 5, 4, 264, 4, 3, 3, 61, 3, 7, 4, 11, 3, 10, 285, 4, 4, 5, 4, 4, 5, 4, 4, 4, 6, 7, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 5, 6, 5, 3, 4, 3, 19, 5, 21, 15, 3, 21, 8, 6, 4, 273, 4, 4, 5, 5, 9, 7, 5, 9, 6, 7, 3, 6, 28, 4, 6, 4, 7, 3, 8, 6, 3, 12, 370]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 40, 5, 3, 3, 6, 4, 3, 5, 5, 3, 3, 5, 6, 10, 6, 6, 4, 4, 4, 4, 7, 4, 7, 6, 10, 7, 4, 11, 4, 9, 5, 18, 10, 6, 4, 4, 11, 4, 4, 6, 48, 4, 5, 4, 4, 8, 7, 5, 12, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 35, 15, 11, 3, 5, 4, 4, 3, 7, 14, 5, 5, 5, 3, 4, 5, 4, 82, 4, 62, 5, 7, 3, 4, 11, 5, 3, 3, 4, 5, 9, 4, 27, 7, 121, 124, 5, 4, 4, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [11, 7, 8, 3, 6, 6, 5, 5, 7, 4, 12, 4, 17, 5, 5, 4, 130, 8, 136, 6, 4, 6, 6, 71, 33, 4, 4, 10, 4, 4, 5, 4, 6, 36, 7, 4, 8, 5, 5, 8, 7, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 4, 5, 5, 5, 4, 4, 4, 10, 271, 4, 4, 17, 3, 306, 110, 8, 7, 5, 4, 3, 4, 4, 4, 5, 8, 6, 38, 5, 4, 13, 4, 4, 4, 4, 5, 10, 5, 7, 13, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 3, 9, 3, 4, 6, 7, 6, 3, 4, 17, 7, 7, 7, 5, 6, 7, 4, 6, 6, 10, 10, 8, 5, 9, 6, 4, 6, 11, 8, 119, 7, 7, 7, 9, 14, 6, 5, 6, 7, 5, 6, 7, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 5, 3, 4, 4, 5, 106, 10, 5, 5, 6, 7, 4, 4, 5, 4, 100, 8, 7, 257, 4, 3, 5, 8, 4, 7, 5, 5, 4, 4, 4, 6, 45, 4, 4, 10, 4, 5, 6, 66, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 5, 7, 4, 4, 3, 6, 8, 35, 4, 6, 4, 5, 5, 5, 6, 3, 4, 5, 4, 7, 18, 31, 163, 4, 10, 7, 4, 5, 7, 6, 71, 221, 6, 10, 357, 5, 11, 9, 4, 5, 6, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [11, 5, 3, 3, 4, 3, 4, 63, 23, 8, 4, 15, 10, 4, 4, 5, 212, 3, 5, 11, 114, 7, 4, 4, 10, 5, 7, 4, 3, 6, 66, 5, 6, 4, 5, 15, 5, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 11, 5, 5, 4, 7, 17, 241, 4, 5, 4, 8, 4, 4, 4, 4, 7, 7, 3, 29, 389, 4, 11, 4, 4, 7, 10, 7, 6, 66, 6, 4, 17, 180, 4, 4, 8, 4, 4, 5, 30, 3, 5, 5, 4, 120]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [14, 4, 8, 3, 4, 5, 3, 6, 140, 4, 4, 4, 7, 4, 7, 3, 13, 4, 11, 5, 21, 4, 3, 9, 29, 11, 9, 4, 8, 5, 19, 4, 4, 9, 7, 21, 8, 28, 11, 4, 4, 11, 7, 7, 16, 92]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 4, 5, 9, 37, 8, 278, 4, 4, 4, 5, 4, 4, 6, 5, 9, 9, 9, 9, 5, 10, 4, 20, 4, 4, 6, 7, 6, 5, 4, 5, 7, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 6, 10, 5, 6, 3, 5, 4, 11, 287, 4, 7, 7, 9, 5, 5, 8, 5, 7, 12, 4, 3, 8, 4, 7, 145, 4, 6, 6, 7, 86, 4, 6, 5, 4, 9, 8, 4, 5, 4, 4, 6, 8, 15, 11, 5, 5, 7, 4, 6, 6, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 3, 4, 112, 6, 4, 3, 4, 11, 5, 6, 31, 4, 10, 6, 4, 6, 7, 7, 219, 10, 10, 7, 4, 9, 6, 9, 8, 7, 7, 3, 8, 6, 8, 152, 7, 5, 6, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 6, 15, 4, 7, 6, 4, 7, 5, 4, 4, 7, 6, 9, 8, 7, 7, 15, 7, 4, 9, 5, 4, 7, 3, 4, 9, 8, 6, 8, 10, 8, 15, 8, 237, 3, 3, 6, 5, 10, 4, 3, 8, 4, 5, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 6, 8, 7, 6, 6, 4, 5, 4, 253, 99, 5, 4, 6, 5, 4, 8, 278, 4, 394, 5, 5, 5, 9, 5, 4, 9, 6, 8, 8, 4, 7, 3, 5, 7, 6, 4, 6, 5, 7, 8, 6, 24, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 8, 13, 4, 7, 3, 6, 6, 57, 7, 10, 7, 6, 8, 7, 7, 13, 8, 4, 5, 6, 405, 6, 24, 9, 8, 7, 8, 7, 4, 8, 7, 4, 6, 6, 5, 5, 3, 7, 296, 186, 8, 5, 123]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 7, 6, 4, 11, 4, 6, 4, 3, 4, 4, 4, 8, 4, 7, 12, 4, 4, 5, 4, 4, 4, 6, 10, 6, 7, 432, 12, 11, 3, 8, 6, 15, 9, 7, 4, 4, 5, 7, 8, 4, 4, 10, 22, 8, 8, 8, 7, 5, 13]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 8, 4, 4, 4, 4, 12, 9, 7, 32, 4, 4, 7, 8, 4, 4, 3, 4, 72, 4, 4, 6, 4, 10, 240, 6, 10, 8, 6, 4, 51, 214, 462, 9, 9, 9, 8, 374, 7, 4, 8, 8, 4, 7, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 5, 6, 7, 7, 5, 5, 5, 4, 6, 3, 5, 7, 4, 10, 4, 6, 5, 6, 4, 14, 6, 4, 10, 6, 4, 4, 4, 4, 104, 8, 7, 8, 11, 10, 7, 6, 6, 4, 8, 10, 4, 12, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 13, 5, 10, 6, 12, 4, 11, 7, 7, 5, 4, 8, 11, 7, 6, 4, 4, 16, 4, 12, 5, 7, 4, 66, 4, 4, 21, 5, 6, 13, 161, 4, 4, 5, 5, 28, 5, 8, 5, 5, 5, 9, 7, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 8, 6, 5, 4, 89, 6, 11, 5, 5, 7, 5, 9, 3, 8, 4, 3, 4, 4, 5, 8, 183, 21, 6, 11, 10, 6, 5, 11, 5, 9, 4, 7, 12, 7, 10, 4, 11, 7, 31, 4, 11, 7, 6, 10, 7, 8, 87, 121]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 8, 8, 8, 6, 13, 9, 6, 4, 4, 5, 6, 9, 4, 9, 19, 9, 27, 9, 4, 6, 12, 6, 5, 9, 4, 9, 11, 4, 5, 5, 4, 43, 4, 5, 5, 5, 5, 4, 9, 5, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 6, 4, 22, 6, 10, 4, 5, 4, 4, 4, 4, 4, 6, 6, 5, 121, 6, 6, 24, 4, 5, 12, 8, 4, 7, 4, 5, 5, 4, 8, 5, 6, 9, 5, 7, 8, 12, 7, 33, 4, 6, 11]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 331, 11, 5, 7, 8, 3, 5, 6, 5, 4, 9, 5, 4, 6, 10, 10, 7, 205, 4, 4, 7, 23, 6, 4, 8, 6, 7, 7, 4, 5, 9, 7, 7, 6, 9, 10, 4, 5, 7, 4, 80, 4, 4, 5, 6, 151, 8, 101, 215, 7, 6, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 5, 6, 4, 7, 7, 6, 6, 7, 3, 4, 10, 4, 32, 207, 9, 4, 4, 286, 6, 4, 3, 5, 7, 46, 9, 7, 3, 4, 4, 254, 5, 6, 7, 5, 4, 6, 4, 5, 5, 203, 3, 14, 5, 6, 7, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 165, 8, 6, 7, 7, 9, 5, 8, 8, 5, 5, 7, 8, 8, 5, 11, 5, 4, 9, 4, 14, 6, 6, 9, 4, 7, 20, 5, 8, 9, 5, 8, 8, 5, 5, 6, 6, 362, 4, 5, 5, 6, 134, 6, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 7, 6, 4, 6, 6, 4, 4, 6, 9, 8, 5, 3, 4, 439, 4, 8, 336, 9, 4, 6, 12, 337, 7, 11, 7, 7, 10, 4, 10, 4, 7, 4, 12, 7, 32, 8, 5, 5, 9, 8, 10, 7, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 5, 4, 5, 5, 5, 4, 7, 7, 167, 5, 4, 5, 8, 142, 6, 46, 8, 3, 37, 15, 6, 9, 3, 8, 5, 3, 10, 12, 5, 4, 5, 4, 4, 7, 9, 5, 25, 9, 5, 323, 7, 6, 9, 7, 65]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 8, 4, 7, 4, 6, 6, 4, 5, 5, 452, 9, 8, 4, 31, 4, 11, 5, 4, 8, 6, 10, 6, 6, 5, 4, 4, 6, 29, 8, 4, 157, 7, 4, 8, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 6, 11, 5, 5, 10, 8, 280, 4, 6, 3, 6, 6, 6, 13, 20, 4, 4, 12, 4, 249, 13, 5, 10, 8, 4, 7, 12, 66, 6, 8, 6, 4, 11, 8, 5, 4, 98, 15, 5, 4, 245, 4, 6, 5, 7, 6, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 7, 10, 11, 4, 6, 3, 6, 6, 4, 10, 5, 261, 4, 145, 6, 4, 4, 4, 270, 47, 17, 7, 5, 46, 18, 8, 8, 12, 25, 4, 9, 6, 7, 7, 3, 7, 4, 4, 6, 6, 5, 4, 4, 9, 11, 14]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 18, 247, 6, 8, 8, 4, 10, 7, 6, 6, 7, 10, 9, 10, 7, 7, 4, 5, 7, 8, 8, 8, 7, 7, 7, 6, 4, 5, 6, 5, 5, 4, 4, 4, 5, 5, 8, 5, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 75, 10, 5, 5, 6, 6, 8, 4, 5, 10, 32, 6, 4, 5, 7, 6, 4, 3, 4, 4, 4, 123, 6, 18, 6, 6, 4, 7, 4, 8, 11, 4, 11, 7, 6, 6, 4, 127, 10, 6, 10, 4, 4, 6, 13, 5, 7, 5, 15, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 7, 8, 6, 6, 5, 4, 4, 6, 6, 7, 7, 66, 8, 4, 31, 8, 5, 5, 28, 5, 172, 8, 6, 13, 6, 16, 12, 5, 4, 5, 4, 9, 6, 10, 13, 4, 8, 6, 6, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 14, 27, 4, 6, 19, 16, 5, 4, 5, 7, 6, 4, 4, 6, 6, 4, 5, 8, 5, 4, 8, 7, 15, 65, 8, 7, 15, 9, 9, 9, 37, 6, 10, 5, 4, 6, 9, 5, 5, 4, 7, 4, 144, 8, 4, 140, 17, 6, 8, 13, 74, 8, 13]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
termination = MathOptInterface.INFEASIBLE
objective_value = 0.01068997308534045
