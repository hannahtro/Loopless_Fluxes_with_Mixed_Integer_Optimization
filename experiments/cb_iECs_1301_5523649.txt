┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECs_1301
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECs_1301
----------------------------------
number of metabolites : 1923
number of reactions : 2720
number of genes : 1301

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2720 flux variables and 5049 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 16, 16, 13, 13, 15, 13, 15, 13, 13, 15, 16, 11, 13, 11, 11, 13, 14, 13, 14, 11, 11, 14, 13, 11, 11, 13, 40, 2, 4, 2, 2, 8]
length(C_list) = 7
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 6, 17, 19, 14, 142, 15, 14, 15, 14, 14, 14, 17, 36, 14, 12, 11, 14, 15, 16, 19, 18, 26, 14, 14, 11, 11, 14, 15, 6, 2, 2, 3, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 7, 16, 16, 13, 13, 14, 13, 14, 13, 13, 17, 16, 16, 11, 13, 11, 11, 13, 14, 13, 14, 11, 11, 13, 13, 11, 11, 15, 15, 14, 101, 2, 6, 3, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 6, 16, 16, 31, 13, 14, 13, 16, 13, 13, 21, 14, 11, 13, 11, 11, 13, 14, 15, 14, 11, 11, 13, 13, 35, 11, 13, 6, 2, 4, 10, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 7, 4, 28, 16, 13, 13, 15, 13, 14, 13, 13, 14, 14, 101, 11, 15, 11, 11, 13, 14, 13, 14, 127, 11, 14, 13, 13, 15, 11, 11, 14, 6, 2, 136, 4, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 6, 17, 17, 14, 14, 47, 14, 18, 14, 14, 15, 93, 11, 14, 11, 11, 14, 15, 14, 15, 11, 11, 14, 14, 119, 11, 11, 50, 4, 2, 6, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 7, 19, 19, 16, 16, 18, 16, 17, 16, 16, 17, 20, 11, 16, 11, 11, 16, 19, 16, 71, 11, 13, 16, 16, 11, 11, 18, 30, 17, 3, 4, 3, 6, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 20, 19, 16, 16, 17, 16, 18, 25, 16, 249, 17, 19, 16, 11, 16, 11, 11, 16, 17, 16, 17, 11, 11, 16, 16, 15, 11, 21, 17, 17, 12, 7, 6, 60, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 16, 16, 13, 15, 14, 13, 14, 20, 13, 13, 15, 13, 11, 13, 11, 11, 13, 14, 13, 14, 11, 13, 14, 14, 11, 11, 14, 13, 7, 31, 4, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 13, 13, 14, 14, 14, 13, 13, 13, 11, 13, 13, 13, 13, 14, 13, 14, 11, 11, 13, 13, 11, 11, 16, 14, 6, 6, 7, 3, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 17, 17, 14, 14, 15, 14, 15, 14, 14, 11, 14, 11, 11, 203, 15, 14, 15, 11, 11, 14, 14, 17, 11, 11, 27, 6, 4, 6, 3, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 16, 16, 17, 13, 14, 15, 14, 13, 14, 13, 24, 13, 11, 13, 11, 11, 13, 14, 13, 20, 11, 11, 13, 13, 11, 11, 14, 6, 6, 4, 2, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 16, 26, 13, 226, 14, 13, 14, 13, 13, 13, 12, 13, 12, 11, 14, 23, 13, 14, 11, 11, 13, 13, 28, 14, 11, 11, 14, 3, 6, 4, 58]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 16, 16, 13, 13, 14, 13, 14, 13, 13, 82, 14, 11, 11, 13, 14, 13, 14, 14, 11, 13, 13, 13, 15, 11, 11, 15, 15, 6, 3, 4, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 235, 13, 14, 13, 25, 57, 13, 13, 16, 13, 11, 13, 13, 11, 13, 14, 13, 15, 11, 23, 13, 13, 16, 15, 38, 11, 14, 3, 4, 4, 6, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 6, 33, 16, 13, 13, 14, 13, 14, 13, 13, 15, 11, 13, 11, 11, 13, 49, 13, 14, 11, 78, 13, 15, 11, 12, 14, 132, 16, 17, 13, 6, 6, 254, 7, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 6, 16, 16, 13, 13, 14, 13, 70, 13, 13, 14, 11, 13, 11, 38, 13, 14, 13, 14, 39, 11, 13, 13, 43, 11, 13, 6, 6, 3, 16, 80, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 6, 15, 16, 16, 13, 14, 14, 13, 14, 13, 13, 17, 15, 22, 11, 14, 13, 11, 13, 14, 13, 14, 11, 12, 13, 13, 13, 11, 11, 6, 6, 6, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 2, 3, 2, 4, 6, 4, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 4, 5, 115, 5, 3, 13, 12, 4, 4, 4, 4, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 4, 4, 3, 7, 7, 6, 11, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 2, 3, 2, 4, 2, 10, 4, 8, 3, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 5, 21, 4, 10, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 3, 48, 8, 28, 8, 3, 4, 3, 23]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 24
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784756878127
thermo_feasible = true
