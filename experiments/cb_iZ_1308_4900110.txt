┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iZ_1308
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iZ_1308
----------------------------------
number of metabolites : 1923
number of reactions : 2721
number of genes : 1308

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5051 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 3, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 2, 13, 14, 13, 14, 13, 13, 14, 2, 3]
length(C_list) = 27
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 4, 2, 2, 4, 3, 4, 4, 3, 4, 2, 2, 2, 5, 2, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 2, 4, 3, 4, 4, 6, 3, 4, 3, 5, 3, 3, 4, 4, 2, 5, 3, 5, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 2, 122, 6, 2, 7, 4, 187, 4, 2]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 4, 5, 3, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 4, 4, 3, 3, 9, 3, 8, 3, 5, 5, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 6, 14, 4, 6, 14, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 2, 4, 2, 31, 7, 8, 4, 23, 5, 10, 8, 8, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4, 3, 5, 3, 4, 127]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 4, 4, 4, 4, 3, 6, 4, 6, 6, 3, 2, 25, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 19, 3, 4, 4, 5, 5, 15, 4, 4, 6, 23, 5, 4, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 4, 3, 3, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784725783283
thermo_feasible = true
