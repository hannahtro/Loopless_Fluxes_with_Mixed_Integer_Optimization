┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF1260
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF1260
----------------------------------
number of metabolites : 1668
number of reactions : 2382
number of genes : 1261

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 95
max_cuts = 48
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2382 flux variables and 4460 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 67, 18, 18, 3, 18, 18, 4, 20, 2, 2, 15, 2, 3, 12, 14, 2, 11, 15, 12, 11, 7, 2, 3, 40, 40, 41, 11, 11, 41, 10, 11, 18, 10, 15, 10, 18, 39, 10, 148, 10, 10, 15, 99, 15]
length(C_list) = 45
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 2, 4, 4, 3, 2, 4, 3, 8, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 6, 54, 6, 8, 20, 4, 4, 6, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 15, 5, 5, 7, 2, 5, 12, 6, 7, 12, 10, 4, 10, 5, 9, 9, 4, 3, 11, 5, 6, 17, 9, 4, 4, 7, 7, 15, 7, 4, 40, 6, 7, 12, 7, 9, 5, 5, 12, 7, 21]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 5, 4, 4, 4, 5, 8, 5, 4, 7, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 7, 5, 45, 6, 171, 6, 8, 33, 3, 7, 165, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 6, 7, 6, 6, 3, 6, 8, 4, 4, 4, 5, 4, 6, 5, 6, 6, 5, 10, 11, 4, 5, 6, 5, 4, 6, 4, 4, 3, 6, 3, 6, 5, 7, 5, 6, 6, 5, 6, 5, 4, 7, 6, 4, 9, 4, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 7
termination = MathOptInterface.OPTIMAL
objective_value = 0.7367011146579939
thermo_feasible = true
