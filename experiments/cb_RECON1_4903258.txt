ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 38
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 9, 8, 4, 7, 9, 2, 5, 6, 8, 2, 5, 5, 6, 4, 4, 8, 9, 4, 8, 6, 7, 14, 2, 4, 2, 4, 10, 4, 6, 4, 7, 5, 3, 3, 7, 7, 5, 7, 7, 296]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 7, 6, 4, 7, 3, 6, 5, 3, 7, 4, 7, 8, 4, 11, 6, 11, 4, 19, 6, 135, 8, 3, 2, 5, 3, 255, 5, 16, 4, 5, 5, 8, 5, 6, 10, 7, 29, 9, 22, 36, 16, 5, 4, 8, 17, 83, 6, 3, 473]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 6, 4, 8, 5, 6, 9, 4, 9, 7, 8, 6, 15, 4, 9, 5, 122, 6, 2, 8, 5, 14, 7, 7, 8, 5, 8, 5, 4, 7, 6, 9, 7, 4, 6, 6, 4, 8, 6, 6, 5, 4, 13, 13, 5, 7, 6, 8, 6, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [7, 3, 98, 6, 7, 4, 5, 6, 11, 7, 4, 308, 6, 8, 5, 7, 3, 5, 5, 12, 6, 4, 5, 11, 4, 6, 11, 6, 4, 8, 7, 3, 7, 7, 5, 4, 7, 5, 4, 12, 7, 8, 265, 4, 164, 8, 8, 6, 9, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 6, 6, 9, 4, 6, 6, 4, 6, 11, 4, 8, 6, 10, 3, 8, 10, 6, 7, 10, 7, 6, 4, 9, 15, 5, 5, 3, 8, 5, 6, 9, 9, 5, 4, 7, 18, 7, 26, 4, 6, 6, 8, 6, 8, 6, 6, 5, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [18, 11, 4, 4, 4, 6, 8, 4, 7, 5, 2, 3, 7, 7, 4, 8, 10, 4, 10, 5, 4, 5, 6, 4, 11, 6, 17, 6, 5, 12, 6, 53, 10, 4, 4, 4, 17, 7, 6, 8, 7, 7, 7, 4, 6, 7, 4, 59, 6, 7, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 7, 2, 70, 13, 5, 2, 7, 10, 4, 3, 10, 5, 26, 6, 5, 6, 7, 7, 13, 8, 8, 178, 3, 7, 9, 4, 6, 7, 7, 4, 6, 6, 5, 7, 11, 4, 8, 10, 7, 6, 4, 8, 6, 11, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 4, 5, 6, 5, 6, 8, 5, 4, 4, 16, 6, 9, 8, 6, 8, 5, 4, 4, 4, 4, 3, 7, 11, 6, 5, 7, 3, 4, 8, 5, 5, 27, 4, 7, 7, 7, 6, 7, 6, 4, 4, 87, 12, 4, 4, 5, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 5, 4, 8, 4, 8, 4, 5, 5, 6, 6, 4, 6, 157, 16, 5, 7, 5, 5, 10, 8, 4, 4, 4, 6, 4, 10, 5, 4, 4, 4, 6, 4, 5, 11, 60, 4, 4, 7, 7, 4, 5, 7, 6, 7, 6, 6, 7, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [21, 10, 2, 9, 73, 6, 4, 5, 8, 5, 6, 5, 6, 4, 5, 6, 10, 4, 5, 4, 11, 6, 6, 3, 6, 11, 3, 4, 4, 2, 7, 89, 6, 4, 6, 6, 4, 8, 6, 19, 4, 12, 6, 4, 12, 9, 3, 52]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [35, 7, 14, 6, 8, 7, 7, 12, 68, 183, 12, 5, 7, 4, 4, 4, 4, 8, 6, 4, 5, 3, 4, 7, 4, 4, 4, 4, 4, 8, 12, 4, 8, 10, 5, 4, 5, 7, 7, 4, 4, 3, 7, 9, 5, 12, 65, 24, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [18, 6, 4, 3, 6, 5, 9, 5, 6, 7, 9, 4, 7, 7, 5, 10, 3, 10, 10, 3, 6, 8, 8, 10, 13, 212, 4, 8, 5, 4, 7, 9, 7, 9, 8, 5, 9, 6, 6, 5, 7, 385, 6, 8, 11, 4, 10, 7, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [12, 9, 6, 4, 187, 8, 6, 8, 7, 4, 6, 16, 4, 8, 5, 4, 10, 5, 15, 4, 6, 7, 6, 3, 221, 5, 187, 52, 4, 4, 3, 6, 107, 4, 5, 11, 7, 9, 13, 9, 4, 17, 3, 6, 34, 4, 5, 7, 17, 4, 9, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 8, 4, 4, 9, 6, 6, 4, 4, 4, 6, 3, 4, 336, 3, 5, 5, 5, 8, 7, 4, 4, 2, 5, 8, 6, 4, 5, 4, 5, 10, 13, 3, 6, 7, 5, 7, 4, 4, 4, 62, 9, 275, 4, 8, 5, 3, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [16, 6, 3, 4, 4, 4, 11, 3, 7, 7, 11, 18, 3, 5, 88, 4, 366, 6, 4, 10, 5, 4, 5, 9, 5, 5, 20, 313, 4, 4, 6, 8, 5, 5, 17, 4, 6, 9, 19, 93, 5, 9, 8, 7, 76, 7, 4, 36]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [14, 3, 11, 4, 5, 4, 4, 8, 5, 8, 8, 3, 4, 6, 7, 6, 5, 7, 113, 4, 9, 4, 6, 6, 7, 6, 7, 9, 7, 6, 9, 7, 4, 7, 6, 7, 4, 6, 160, 10, 8, 6, 6, 3, 4, 11, 9, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 7, 7, 5, 97, 11, 5, 7, 4, 7, 4, 8, 3, 5, 4, 6, 11, 8, 7, 5, 9, 427, 7, 5, 4, 4, 10, 3, 4, 4, 360, 10, 9, 4, 26, 8, 6, 2, 6, 6, 5, 5, 5, 16, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [12, 6, 5, 3, 4, 7, 7, 4, 6, 6, 3, 7, 5, 7, 9, 7, 8, 7, 4, 5, 5, 9, 8, 9, 7, 7, 7, 10, 6, 7, 6, 7, 4, 4, 3, 7, 10, 5, 4, 4, 11, 7, 7, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 4, 5, 7, 5, 6, 6, 7, 7, 6, 11, 5, 4, 4, 4, 3, 4, 4, 5, 4, 5, 7, 5, 4, 5, 6, 5, 6, 9, 6, 8, 4, 4, 5, 4, 7, 13, 10, 6, 5, 5, 7, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 4, 9, 6, 4, 8, 8, 4, 12, 4, 10, 6, 5, 5, 3, 4, 5, 5, 5, 4, 6, 4, 11, 4, 9, 38, 8, 7, 10, 7, 6, 10, 6, 5, 4, 9, 5, 6, 5, 5, 5, 3, 6, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 4, 4, 4, 2, 4, 7, 4, 7, 6, 7, 5, 5, 8, 10, 5, 10, 8, 6, 5, 4, 4, 4, 9, 7, 10, 7, 7, 4, 6, 6, 5, 6, 8, 9, 8, 6, 19, 24, 5, 20, 8, 5, 43, 3, 11, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 7, 8, 5, 10, 9, 8, 8, 8, 7, 4, 4, 7, 10, 298, 9, 3, 5, 4, 4, 7, 8, 4, 9, 12, 11, 7, 6, 7, 3, 7, 12, 9, 8, 4, 4, 8, 7, 8, 4, 5, 10, 8, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 8, 13, 6, 3, 3, 5, 6, 11, 4, 6, 5, 5, 6, 6, 6, 5, 5, 8, 4, 11, 4, 4, 7, 5, 6, 30, 6, 5, 437, 3, 4, 5, 6, 4, 11, 10, 5, 8, 8, 8, 225, 18, 4, 4, 7, 3]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 4, 4, 7, 6, 4, 7, 6, 72, 279, 6, 5, 9, 15, 6, 27, 4, 4, 8, 18, 6, 4, 7, 10, 4, 19, 8, 4, 13, 5, 6, 6, 4, 9, 10, 4, 8, 216, 4, 9, 6, 8, 7, 8, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 3, 9, 9, 12, 5, 12, 6, 4, 5, 4, 3, 3, 8, 5, 9, 5, 4, 4, 5, 6, 7, 8, 8, 7, 8, 5, 8, 12, 6, 5, 10, 7, 5, 10, 4, 6, 4, 5, 8, 6, 10, 10, 8, 4, 4, 6, 3, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [10, 7, 13, 7, 5, 8, 8, 7, 4, 6, 5, 11, 4, 4, 15, 5, 14, 7, 7, 4, 34, 11, 73, 6, 4, 28, 25, 4, 6, 6, 9, 12, 8, 8, 33, 112, 4, 6, 31, 15, 195, 5, 27, 10, 4, 11, 4]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 8, 8, 4, 10, 12, 4, 10, 8, 11, 4, 8, 10, 9, 12, 4, 4, 24, 3, 13, 4, 9, 6, 9, 5, 5, 10, 11, 10, 4, 7, 9, 364, 9, 9, 10, 3, 9, 6, 5, 6, 7, 41, 4, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 2, 9, 4, 9, 10, 5, 5, 8, 10, 15, 4, 34, 12, 85, 7, 4, 4, 7, 7, 26, 13, 9, 4, 4, 5, 4, 5, 6, 8, 5, 145, 5, 5, 9, 4, 8, 6, 5, 3, 4, 5, 7, 7, 76]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 6, 9, 5, 3, 8, 7, 10, 7, 6, 3, 58, 4, 5, 5, 7, 4, 13, 5, 28, 10, 5, 248, 4, 3, 11, 3, 6, 6, 4, 5, 13, 4, 8, 17, 4, 557, 6, 5, 8, 5, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [18, 5, 6, 4, 5, 9, 9, 4, 7, 5, 247, 6, 5, 5, 9, 9, 105, 7, 236, 5, 18, 10, 5, 9, 4, 267, 7, 32, 3, 5, 10, 11, 7, 5, 15, 5, 8, 4, 7, 4, 7, 4, 538, 9, 8, 4, 4, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [7, 8, 7, 4, 9, 4, 4, 4, 10, 5, 6, 6, 6, 7, 5, 284, 4, 5, 4, 27, 5, 4, 7, 5, 4, 7, 14, 8, 3, 4, 5, 3, 5, 3, 9, 7, 5, 358, 4, 4, 9, 7, 8, 3, 10, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 7, 3, 4, 3, 7, 9, 10, 10, 4, 8, 6, 4, 4, 4, 8, 9, 3, 4, 203, 6, 10, 6, 4, 6, 3, 11, 10, 4, 5, 3, 11, 4, 4, 3, 599, 10, 11, 9, 6, 4, 6, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 9, 10, 6, 4, 6, 4, 7, 6, 153, 4, 6, 6, 399, 5, 6, 4, 6, 5, 9, 6, 4, 4, 8, 95, 10, 7, 5, 4, 4, 45, 627, 4, 5, 5, 4, 8, 4, 8, 6, 3, 3, 5, 10, 11, 11, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [13, 7, 7, 5, 7, 7, 3, 5, 6, 48, 6, 6, 8, 7, 6, 7, 7, 4, 8, 5, 3, 4, 6, 7, 6, 10, 3, 6, 8, 3, 9, 8, 8, 14, 5, 8, 6, 5, 5, 6, 4, 27, 4, 5, 5, 3, 53, 7, 9, 7, 8]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 5, 4, 7, 5, 5, 4, 4, 7, 7, 3, 5, 9, 10, 5, 6, 4, 4, 4, 5, 4, 3, 5, 6, 6, 4, 5, 4, 7, 6, 13, 4, 4, 5, 4, 5, 55, 8, 4, 5, 6, 6, 3, 8, 5, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 4, 7, 5, 5, 4, 7, 7, 6, 3, 5, 5, 6, 5, 6, 4, 7, 10, 14, 7, 3, 4, 4, 4, 128, 5, 27, 10, 4, 8, 4, 4, 9, 4, 4, 4, 4, 4, 6, 9, 25]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [16, 6, 4, 5, 6, 4, 4, 142, 6, 4, 7, 5, 10, 5, 10, 4, 7, 7, 8, 4, 4, 6, 6, 8, 5, 11, 3, 5, 3, 4, 5, 5, 5, 4, 11, 4, 9, 656, 8, 4, 8, 4, 27, 5, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 12, 9, 5, 7, 4, 11, 10, 3, 10, 5, 530, 9, 4, 10, 12, 7, 20, 5, 6, 5, 4, 6, 62, 13, 7, 10, 11, 7, 4, 8, 4, 8, 4, 5, 5, 10, 9, 7, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [15, 9, 4, 17, 4, 7, 5, 10, 10, 8, 6, 7, 8, 10, 7, 12, 9, 9, 8, 4, 3, 4, 10, 5, 8, 7, 10, 5, 7, 9, 4, 7, 3, 9, 10, 11, 5, 11, 4, 7, 13, 84, 5, 4, 12, 7, 4, 33]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 6, 4, 10, 185, 102, 8, 13, 6, 117, 3, 13, 7, 7, 9, 11, 6, 4, 11, 33, 8, 4, 5, 257, 4, 106, 4, 4, 11, 11, 4, 10, 3, 6, 10, 500, 5, 9, 11, 4, 7, 13, 10]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 5, 4, 5, 12, 5, 12, 7, 6, 5, 6, 6, 6, 5, 289, 5, 13, 4, 5, 5, 6, 6, 9, 4, 547, 5, 4, 6, 4, 6, 4, 9, 10, 11, 5, 21, 6, 259, 5, 5, 5, 9, 12, 15, 7, 5, 90]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 2, 4, 7, 7, 6, 5, 6, 4, 5, 41, 5, 4, 4, 6, 5, 9, 5, 4, 3, 9, 5, 5, 5, 5, 6, 4, 4, 4, 6, 4, 10, 10, 4, 5, 9, 4, 4, 6, 5, 5, 6, 3, 9, 5, 50, 7, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [15, 8, 8, 8, 7, 3, 4, 3, 4, 5, 6, 4, 8, 5, 84, 9, 3, 9, 6, 5, 6, 9, 6, 61, 6, 7, 9, 4, 9, 10, 9, 286, 5, 7, 6, 4, 5, 7, 4, 299, 9, 8, 5, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 4, 7, 6, 10, 4, 7, 4, 4, 4, 300, 8, 4, 4, 8, 5, 11, 3, 6, 14, 6, 6, 4, 5, 7, 22, 6, 11, 6, 5, 10, 4, 4, 4, 4, 7, 6, 4, 117, 4, 5, 6, 8, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [10, 8, 5, 6, 7, 4, 5, 4, 4, 5, 4, 4, 7, 6, 7, 18, 4, 7, 4, 7, 8, 6, 10, 3, 5, 8, 7, 6, 7, 41, 4, 3, 5, 4, 9, 5, 6, 7, 4, 5, 3, 8, 7, 7, 12, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 7, 8, 9, 5, 3, 9, 6, 7, 89, 9, 13, 9, 9, 4, 6, 11, 8, 3, 4, 10, 10, 5, 7, 11, 12, 11, 8, 11, 9, 7, 4, 12, 8, 5, 10, 4, 10, 9, 12, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [10, 6, 8, 6, 10, 4, 3, 4, 10, 6, 8, 6, 7, 6, 5, 3, 11, 9, 7, 3, 4, 7, 7, 8, 7, 6, 7, 6, 3, 9, 4, 7, 10, 9, 4, 11, 7, 3, 4, 4, 9, 11, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [13, 7, 4, 5, 4, 75, 7, 8, 5, 4, 10, 8, 9, 6, 486, 8, 8, 4, 23, 7, 7, 4, 39, 6, 4, 4, 8, 5, 6, 109, 7, 7, 3, 7, 6, 8, 6, 6, 4, 8, 10, 6, 3, 9, 529]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 7, 9, 9, 4, 7, 6, 7, 6, 133, 10, 7, 5, 8, 5, 11, 9, 14, 7, 4, 9, 9, 8, 10, 8, 7, 215, 9, 7, 7, 3, 4, 9, 8, 6, 8, 6, 6, 8, 8, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [10, 10, 5, 4, 11, 5, 4, 11, 4, 8, 7, 9, 6, 11, 322, 11, 5, 9, 9, 6, 7, 3, 7, 5, 6, 13, 7, 5, 5, 12, 4, 6, 7, 8, 9, 30, 4, 644, 5, 5, 4, 4, 10, 6, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 10, 7, 16, 4, 5, 10, 8, 38, 5, 6, 7, 4, 25, 11, 8, 5, 6, 7, 6, 7, 6, 4, 5, 5, 8, 4, 114, 7, 4, 10, 5, 7, 5, 4, 9, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 6, 7, 35, 10, 6, 6, 5, 3, 66, 10, 9, 16, 6, 7, 10, 4, 6, 7, 8, 14, 12, 7, 4, 8, 6, 7, 4, 4, 12, 7, 8, 5, 7, 11, 479, 6, 8, 176, 5, 8, 14]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 10, 4, 4, 10, 3, 7, 3, 4, 4, 6, 5, 4, 8, 7, 5, 12, 5, 4, 4, 4, 6, 7, 10, 5, 6, 4, 3, 28, 4, 5, 5, 7, 9, 5, 5, 4, 4, 4, 5, 15, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 6, 5, 5, 4, 7, 4, 11, 6, 12, 6, 5, 6, 5, 3, 5, 7, 7, 5, 7, 4, 4, 6, 18, 17, 5, 6, 5, 14, 6, 13, 6, 15, 5, 17, 4, 30, 7, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 4, 4, 5, 5, 4, 5, 5, 4, 5, 3, 4, 6, 5, 4, 4, 4, 4, 5, 5, 5, 6, 5, 9, 3, 4, 4, 7, 4, 17, 6, 16, 5, 4, 4, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 8, 4, 10, 3, 12, 11, 5, 5, 5, 8, 5, 3, 10, 13, 11, 5, 7, 9, 5, 5, 4, 4, 11, 4, 12, 11, 17, 13, 12, 10, 4, 9, 6, 13, 13, 535, 8, 53, 13, 439, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [8, 6, 9, 6, 6, 5, 12, 6, 5, 9, 11, 12, 11, 5, 5, 4, 5, 8, 7, 8, 7, 6, 4, 6, 4, 8, 11, 8, 49, 6, 6, 5, 7, 5, 23, 4, 9, 7, 11, 12, 166, 14, 5, 6, 4, 4, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 5, 3, 3, 4, 8, 4, 8, 7, 4, 9, 5, 4, 7, 4, 11, 5, 7, 12, 4, 4, 7, 11, 5, 3, 4, 5, 5, 5, 4, 5, 6, 5, 4, 4, 5, 5, 7, 3, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 6, 10, 7, 6, 9, 6, 5, 4, 3, 7, 151, 6, 133, 8, 4, 4, 6, 8, 9, 5, 11, 7, 3, 8, 6, 5, 9, 5, 8, 6, 12, 6, 15, 12, 6, 9, 8, 9, 8, 3, 9, 6, 60, 16]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [23, 5, 8, 4, 3, 5, 10, 5, 4, 6, 5, 5, 4, 6, 4, 4, 5, 7, 4, 9, 4, 4, 4, 6, 4, 4, 139, 10, 6, 4, 10, 5, 4, 10, 9, 3, 7, 8, 8, 75, 4, 8, 6, 6, 5, 6, 8, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 6, 9, 7, 4, 5, 4, 8, 11, 7, 5, 15, 8, 4, 11, 5, 130, 6, 3, 5, 4, 4, 4, 4, 4, 9, 6, 8, 5, 226, 12, 25, 3, 5, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [20, 6, 6, 6, 3, 5, 5, 6, 5, 4, 4, 5, 4, 4, 8, 4, 6, 6, 6, 7, 6, 4, 3, 4, 4, 6, 3, 5, 6, 6, 7, 5, 9, 9, 180, 27, 27, 16, 6, 6, 170, 4, 6, 423, 4, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 7, 8, 5, 4, 9, 7, 4, 4, 5, 4, 8, 5, 10, 7, 4, 4, 9, 66, 7, 9, 9, 7, 328, 8, 10, 9, 4, 8, 13, 10, 8, 9, 4, 6, 177, 12, 8, 3, 7, 4, 8, 6, 9, 7, 9, 4, 28, 6, 281]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [22, 4, 7, 9, 5, 4, 7, 15, 182, 5, 6, 8, 12, 9, 7, 5, 9, 10, 7, 3, 8, 4, 10, 4, 5, 7, 26, 10, 4, 4, 6, 17, 3, 6, 11, 7, 10, 10, 9, 4, 3, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [13, 5, 9, 8, 6, 8, 5, 11, 4, 27, 4, 6, 10, 6, 5, 4, 9, 5, 7, 4, 3, 10, 4, 7, 5, 8, 8, 12, 10, 5, 89, 4, 14, 4, 19, 10, 6, 42, 12, 4, 11, 23, 9, 6, 29, 4, 4, 4, 254]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 4, 8, 8, 6, 4, 4, 11, 10, 8, 9, 9, 6, 7, 4, 4, 21, 4, 10, 4, 3, 12, 7, 4, 4, 4, 7, 6, 8, 6, 5, 4, 8, 4, 7, 3, 10, 7, 7, 4, 14, 60, 45, 7, 8, 6, 8, 4]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [12, 4, 8, 10, 7, 5, 9, 12, 6, 5, 4, 15, 180, 18, 3, 10, 5, 8, 10, 6, 9, 4, 9, 4, 6, 428, 5, 14, 24, 6, 28, 13, 7, 395, 8, 20, 4, 4, 5, 9, 4, 323, 362, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [12, 7, 132, 8, 8, 5, 7, 8, 6, 6, 6, 7, 7, 11, 5, 8, 7, 9, 4, 9, 7, 4, 4, 4, 10, 6, 17, 4, 6, 11, 8, 5, 31, 6, 272, 10, 8, 10, 6, 4, 10, 6, 13, 7, 35, 6, 11, 4, 61, 275, 6, 205, 6, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [23, 3, 7, 7, 6, 7, 5, 8, 7, 5, 7, 46, 7, 9, 4, 9, 4, 6, 8, 9, 3, 4, 8, 10, 7, 4, 7, 5, 8, 9, 6, 4, 4, 3, 4, 6, 3, 6, 4, 107, 9, 7, 11, 6, 154, 14, 4, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 8, 10, 7, 6, 9, 5, 13, 8, 10, 6, 5, 6, 8, 9, 8, 7, 4, 12, 11, 8, 5, 5, 8, 5, 7, 5, 11, 8, 6, 7, 5, 5, 10, 9, 7, 9, 6, 8, 7, 5, 7, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [18, 6, 8, 7, 3, 6, 5, 8, 6, 6, 5, 8, 438, 9, 7, 4, 7, 8, 5, 8, 12, 6, 8, 4, 10, 10, 6, 5, 5, 10, 7, 5, 12, 7, 9, 7, 3, 7, 6, 4, 13, 3, 4, 4, 6, 4, 4, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [13, 5, 10, 8, 8, 5, 10, 9, 9, 5, 8, 9, 12, 6, 5, 10, 4, 9, 37, 7, 5, 5, 7, 3, 246, 3, 3, 5, 6, 4, 5, 6, 4, 6, 11, 7, 526, 10, 4, 4, 6, 9, 3, 5, 7, 6, 455, 71]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 8, 4, 9, 5, 10, 6, 9, 7, 5, 5, 5, 12, 111, 3, 8, 4, 8, 7, 3, 4, 3, 4, 12, 5, 9, 4, 10, 8, 23, 4, 14, 13, 5, 49, 223, 3, 7, 8, 4, 5]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 8, 11, 7, 59, 4, 6, 4, 4, 5, 10, 104, 8, 8, 13, 10, 7, 9, 4, 255, 7, 3, 7, 6, 6, 120, 8, 9, 7, 10, 15, 8, 4, 6, 11, 5, 9, 4, 10, 9, 14, 8, 6, 10, 8, 5, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [17, 4, 8, 9, 5, 3, 4, 8, 4, 7, 9, 5, 7, 6, 6, 4, 7, 6, 7, 8, 3, 5, 7, 7, 4, 46, 5, 4, 3, 7, 623, 18, 273, 6, 10, 11, 6, 7, 4, 7, 6, 6, 12, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [17, 11, 4, 3, 12, 7, 5, 8, 5, 11, 8, 13, 11, 4, 9, 11, 9, 4, 9, 8, 11, 7, 4, 6, 6, 10, 15, 9, 8, 9, 5, 10, 11, 8, 11, 8, 7, 14, 6, 13, 11, 8, 14, 74, 271, 7, 14, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 6, 13, 4, 7, 9, 4, 8, 10, 6, 4, 8, 4, 19, 7, 8, 8, 8, 8, 6, 263, 7, 8, 8, 4, 7, 4, 4, 6, 4, 6, 8, 8, 4, 8, 9, 13, 8, 14, 306, 8, 12, 16, 11, 8, 11, 8, 14, 5, 266]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 4, 5, 12, 8, 5, 149, 7, 8, 11, 6, 5, 5, 6, 6, 5, 3, 8, 4, 568, 384, 10, 7, 13, 102, 8, 9, 6, 6, 9, 4, 3, 6, 7, 8, 4, 7, 6, 10, 6, 5, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [13, 5, 5, 4, 9, 6, 4, 10, 8, 8, 5, 8, 8, 7, 7, 11, 12, 7, 11, 135, 4, 41, 8, 5, 7, 28, 6, 5, 8, 11, 331, 4, 7, 9, 10, 9, 9, 497, 6, 10, 4, 5, 5, 10, 4, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [9, 5, 10, 4, 4, 11, 7, 13, 6, 10, 5, 5, 8, 7, 9, 17, 6, 10, 11, 4, 12, 8, 10, 10, 17, 7, 8, 7, 5, 5, 4, 41, 233, 9, 6, 6, 10, 10, 7, 5, 12, 6, 67]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 14, 5, 11, 6, 9, 4, 75, 11, 4, 11, 6, 8, 7, 11, 4, 5, 4, 7, 11, 14, 11, 4, 6, 7, 10, 9, 3, 12, 8, 4, 16, 8, 8, 5, 14, 4, 4, 11, 11, 19]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [13, 7, 11, 9, 11, 12, 4, 8, 5, 14, 9, 10, 10, 5, 9, 10, 4, 5, 5, 11, 9, 4, 8, 3, 4, 5, 13, 3, 12, 4, 10, 4, 15, 13, 9, 216, 9, 6, 26, 34, 5, 7, 11, 247, 9, 6, 9, 13, 5, 9]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 7, 10, 5, 6, 11, 9, 14, 9, 3, 119, 6, 6, 5, 8, 6, 7, 6, 7, 6, 326, 4, 3, 7, 6, 4, 13, 4, 4, 6, 101, 197, 18, 9, 106, 10, 11, 395, 5, 11, 36, 9, 10, 10, 14, 4]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [14, 3, 9, 6, 11, 6, 6, 4, 10, 9, 4, 10, 12, 9, 223, 5, 6, 8, 6, 11, 8, 9, 10, 7, 214, 209, 7, 11, 7, 8, 8, 7, 8, 8, 25, 3, 4, 4, 8, 10, 6, 8, 12, 7, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [20, 9, 6, 10, 6, 6, 7, 6, 6, 7, 7, 9, 7, 5, 9, 4, 4, 6, 9, 6, 7, 114, 6, 5, 79, 8, 6, 17, 218, 4, 6, 4, 4, 9, 5, 156, 4, 7, 7, 7, 7, 6, 8, 15, 4, 7, 5, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 4, 6, 9, 4, 6, 8, 3, 4, 8, 5, 5, 4, 6, 15, 8, 6, 4, 9, 5, 7, 3, 5, 5, 5, 12, 6, 4, 5, 6, 4, 8, 7, 7, 4, 3, 7, 6, 8, 7, 6, 6, 11, 7, 13]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [16, 6, 6, 4, 6, 8, 6, 4, 4, 10, 9, 5, 5, 4, 6, 8, 6, 4, 5, 4, 5, 4, 5, 3, 7, 7, 8, 12, 6, 6, 6, 8, 4, 7, 4, 6, 5, 5, 5, 6, 3, 34, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 5, 10, 5, 4, 4, 3, 5, 5, 5, 4, 6, 5, 4, 4, 5, 5, 3, 5, 5, 3, 7, 26, 4, 5, 4, 5, 5, 32, 5, 4, 5, 278, 5, 6, 7, 9, 4, 4, 5, 4, 6, 6, 7, 5, 6, 6, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 5, 12, 11, 12, 6, 10, 3, 8, 9, 4, 5, 8, 12, 12, 8, 4, 33, 4, 10, 9, 534, 10, 13, 11, 10, 13, 12, 10, 7, 11, 13, 14, 15, 12, 10, 10, 4, 31, 14, 9, 11, 9, 12, 16]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 5, 6, 6, 5, 7, 4, 9, 10, 7, 9, 5, 188, 8, 4, 4, 9, 5, 6, 10, 4, 4, 8, 40, 4, 7, 9, 4, 10, 8, 5, 16, 6, 8, 193, 6, 30, 4, 135, 171, 221, 6, 4, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [11, 7, 3, 11, 7, 14, 4, 5, 12, 7, 7, 37, 5, 3, 4, 4, 4, 8, 9, 335, 4, 7, 9, 4, 5, 10, 7, 4, 6, 9, 6, 192, 27, 5, 7, 4, 3, 8, 7, 6, 78, 5, 9, 6, 15, 23, 6]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 4, 7, 6, 7, 4, 14, 4, 7, 4, 6, 6, 5, 5, 6, 44, 7, 8, 6, 12, 166, 5, 7, 5, 4, 4, 4, 10, 11, 6, 9, 5, 9, 4, 5, 6, 6, 6, 6, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [10, 7, 6, 12, 7, 7, 141, 11, 6, 7, 5, 53, 5, 10, 7, 11, 4, 6, 14, 354, 5, 4, 6, 6, 9, 4, 6, 11, 8, 8, 6, 5, 7, 4, 6, 5, 8, 8, 11, 79, 5, 8, 5, 10, 3, 5, 13, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 13, 8, 6, 7, 4, 60, 8, 7, 249, 127, 11, 7, 4, 4, 5, 4, 5, 11, 4, 8, 7, 465, 4, 9, 14, 7, 4, 36, 7, 10, 7, 11, 6, 7, 12, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 3, 8, 10, 9, 9, 10, 4, 7, 6, 8, 8, 8, 8, 7, 4, 9, 15, 8, 3, 7, 7, 10, 6, 12, 6, 6, 7, 4, 13, 6, 8, 58, 6, 8, 5, 10, 4, 10, 17, 6, 8, 4, 11, 3, 12, 11, 7, 11]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [7, 13, 8, 11, 11, 5, 6, 6, 7, 4, 9, 8, 5, 6, 6, 8, 7, 8, 10, 8, 8, 4, 343, 8, 6, 7, 4, 3, 9, 8, 4, 437, 6, 7, 8, 8, 4, 8, 5, 8, 8, 10, 6, 4, 8, 8, 6, 3, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [2, 11, 6, 10, 6, 6, 10, 10, 8, 4, 4, 10, 10, 3, 9, 10, 23, 20, 10, 6, 10, 3, 4, 3, 4, 3, 10, 4, 7, 6, 4, 8, 98, 6, 13, 6, 9, 10, 9, 10, 8, 27, 7, 7, 10, 7, 4, 8, 7, 395]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [8, 6, 10, 3, 9, 5, 9, 11, 4, 3, 67, 7, 10, 5, 9, 5, 7, 4, 11, 5, 4, 6, 6, 9, 8, 10, 9, 9, 5, 4, 6, 5, 9, 6, 9, 7, 10, 6, 4, 10, 5, 7, 12, 4, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 5, 5, 6, 7, 8, 7, 4, 6, 6, 11, 7, 6, 7, 5, 4, 4, 4, 7, 4, 506, 4, 6, 5, 9, 184, 5, 8, 11, 8, 5, 5, 11, 8, 6, 7, 7, 4, 4, 7, 9, 9, 3]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [9, 4, 11, 10, 6, 11, 8, 13, 5, 8, 9, 10, 9, 6, 123, 11, 4, 8, 6, 149, 6, 13, 9, 5, 6, 11, 126, 8, 7, 11, 9, 11, 8, 10, 3, 6, 6, 9, 9, 8, 3, 5, 9, 10, 4, 5, 12, 10, 12, 13, 8, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 6, 10, 9, 8, 12, 6, 10, 13, 7, 4, 26, 7, 11, 6, 131, 13, 5, 3, 4, 6, 8, 4, 6, 7, 6, 5, 11, 4, 9, 12, 5, 4, 10, 4, 12, 42, 9, 20, 5, 27, 13, 10, 9, 11, 11]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 7, 6, 9, 6, 10, 7, 8, 5, 8, 8, 8, 263, 8, 6, 15, 3, 194, 12, 10, 3, 53, 14, 9, 5, 4, 7, 9, 6, 8, 7, 26, 6, 6, 9, 6, 7, 287, 5, 6, 8, 7, 8, 6, 6, 13]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [5, 9, 10, 4, 5, 4, 8, 7, 12, 12, 6, 5, 11, 7, 5, 7, 7, 13, 6, 5, 4, 4, 7, 8, 70, 42, 9, 7, 4, 9, 7, 7, 19, 8, 21, 8, 7, 6, 8, 7, 9, 11, 6, 5, 6, 5, 10, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 7, 11, 4, 10, 7, 12, 9, 9, 12, 6, 11, 448, 13, 328, 8, 12, 8, 6, 9, 5, 101, 10, 4, 12, 9, 7, 11, 10, 14, 6, 8, 372, 19, 26, 9, 447, 11, 8, 12, 6, 7, 12, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 13, 4, 7, 5, 10, 8, 7, 12, 7, 5, 8, 9, 20, 10, 8, 4, 4, 7, 4, 6, 3, 5, 5, 10, 5, 5, 12, 9, 11, 5, 7, 6, 4, 9, 3, 6, 9, 6, 3, 4, 83, 6, 664, 487, 3, 9, 9, 9, 42, 22]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [5, 12, 7, 3, 5, 4, 5, 6, 8, 5, 10, 9, 10, 10, 18, 10, 13, 10, 414, 5, 324, 8, 9, 6, 4, 13, 6, 8, 4, 9, 9, 10, 4, 12, 5, 3, 16, 34, 11, 3, 234, 18, 186, 8, 3, 7, 5, 6, 10, 29]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 13, 3, 18, 3, 4, 4, 9, 11, 4, 7, 11, 4, 8, 11, 4, 10, 5, 65, 44, 3, 11, 11, 10, 3, 4, 4, 4, 13, 7, 10, 4, 5, 5, 198, 410, 13, 6, 4, 5, 12, 6, 4, 8, 7, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [14, 7, 5, 7, 10, 6, 6, 4, 7, 9, 8, 6, 87, 10, 11, 7, 10, 11, 15, 4, 7, 3, 5, 17, 7, 6, 4, 7, 5, 4, 6, 6, 4, 6, 4, 8, 4, 9, 9, 5, 4, 9, 8, 11, 7, 12, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 7, 11, 5, 9, 4, 6, 9, 6, 11, 3, 7, 9, 5, 7, 10, 6, 9, 7, 189, 3, 9, 12, 8, 437, 6, 5, 4, 8, 5, 5, 10, 4, 13, 8, 4, 10, 4, 10, 4, 10, 9, 4, 4, 25]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 4, 7, 6, 15, 4, 4, 9, 6, 5, 4, 9, 11, 4, 11, 6, 4, 11, 3, 7, 15, 10, 442, 7, 8, 11, 4, 4, 6, 7, 3, 5, 4, 4, 343, 7, 6, 4, 4, 4, 6, 40, 7, 4, 3]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 4, 4, 11, 5, 8, 4, 6, 4, 5, 4, 7, 9, 5, 13, 10, 8, 4, 79, 4, 4, 4, 7, 4, 14, 6, 5, 9, 6, 5, 7, 6, 61, 3, 6, 4, 9, 4, 4, 3, 386, 8, 347]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [8, 8, 9, 6, 7, 8, 5, 7, 6, 5, 8, 10, 5, 13, 5, 6, 5, 6, 10, 55, 12, 3, 5, 5, 4, 6, 4, 3, 3, 31, 5, 6, 87, 4, 6, 78, 4, 113, 9, 4, 5, 7, 236, 9, 58, 12, 293, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 15, 4, 9, 9, 4, 10, 5, 4, 8, 5, 5, 9, 7, 8, 408, 5, 4, 4, 14, 9, 10, 4, 4, 8, 4, 28, 51, 8, 4, 6, 4, 132, 3, 4, 10, 43, 357, 4, 5, 4, 12, 11, 6, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 11, 9, 9, 4, 7, 4, 5, 8, 4, 5, 8, 4, 5, 6, 4, 7, 3, 4, 11, 11, 10, 77, 12, 8, 4, 9, 4, 12, 9, 8, 4, 4, 9, 7, 14, 5, 4, 13, 10, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [15, 8, 4, 6, 8, 4, 8, 8, 4, 4, 4, 4, 5, 5, 116, 9, 12, 13, 10, 10, 9, 4, 8, 5, 8, 12, 8, 4, 11, 9, 6, 8, 5, 7, 4, 11, 4, 13, 135, 4, 6, 5, 5, 7, 466]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [8, 10, 11, 9, 7, 13, 9, 5, 8, 5, 9, 8, 10, 6, 5, 8, 7, 11, 10, 11, 10, 11, 14, 4, 8, 4, 8, 6, 13, 9, 10, 8, 225, 10, 13, 8, 5, 8, 9, 11, 9, 10, 10, 12, 9, 11, 12, 13, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 8, 3, 8, 7, 8, 9, 4, 9, 7, 4, 4, 6, 5, 6, 12, 11, 9, 8, 6, 9, 6, 10, 8, 4, 9, 7, 11, 9, 9, 9, 44, 8, 17, 6, 12, 5, 9, 112, 19, 10, 9, 9, 5, 4, 9, 9, 286]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 6, 7, 8, 5, 6, 9, 8, 4, 13, 4, 13, 13, 5, 9, 4, 9, 4, 8, 6, 7, 210, 9, 9, 3, 9, 7, 31, 8, 89, 6, 11, 7, 10, 8, 4, 9, 9, 7, 9, 9, 10, 9, 6, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[4, 6, 5, 10, 5, 9, 5, 5, 11, 11, 9, 12, 5, 6, 6, 5, 3, 5, 4, 7, 9, 9, 42, 6, 4, 5, 7, 7, 7, 12, 8, 9, 10, 8, 6, 5, 62, 4, 4, 9, 8, 5, 5, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [22, 6, 3, 10, 4, 5, 5, 7, 8, 7, 5, 7, 5, 85, 4, 7, 5, 4, 6, 7, 42, 5, 4, 6, 6, 11, 12, 65, 310, 10, 11, 9, 5, 8, 6, 4, 11, 4, 8, 9, 7, 6, 6, 8, 7, 5, 10, 15]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 11, 8, 4, 5, 6, 6, 7, 9, 7, 10, 8, 7, 5, 7, 5, 9, 4, 92, 9, 9, 4, 7, 5, 7, 9, 5, 4, 4, 5, 9, 8, 8, 9, 8, 9, 9, 11, 7, 6, 149]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 17, 7, 6, 4, 5, 12, 8, 4, 8, 7, 118, 44, 6, 9, 4, 10, 12, 25, 6, 6, 4, 6, 6, 5, 5, 12, 7, 5, 17, 12, 13, 5, 11, 14, 15, 7, 7, 3, 10, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 4, 5, 6, 10, 7, 7, 9, 7, 5, 7, 27, 7, 7, 9, 9, 7, 7, 5, 5, 6, 12, 9, 9, 8, 6, 4, 10, 7, 4, 7, 6, 9, 11, 6, 6, 9, 5, 6, 4, 15, 10, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 7, 10, 10, 9, 10, 9, 8, 9, 5, 10, 5, 6, 10, 6, 9, 6, 4, 5, 6, 9, 5, 9, 4, 8, 7, 6, 11, 7, 9, 10, 8, 8, 4, 16, 10, 8, 4, 58, 7, 5, 6, 4, 21, 10, 7, 9, 4, 8, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [18, 4, 5, 6, 10, 5, 7, 146, 9, 8, 12, 5, 7, 14, 18, 12, 6, 5, 5, 5, 5, 13, 18, 6, 14, 9, 4, 6, 4, 112, 16, 13, 4, 5, 3, 15, 9, 10, 3, 6, 8, 7, 7, 4, 5, 232]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [17, 4, 5, 10, 4, 5, 7, 4, 8, 5, 6, 7, 5, 4, 5, 8, 4, 9, 4, 5, 8, 5, 6, 6, 6, 6, 4, 6, 4, 5, 10, 4, 4, 4, 9, 7, 6, 9, 10, 16, 21, 13, 4, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 4, 3, 4, 4, 17, 4, 8, 5, 6, 8, 346, 11, 4, 3, 3, 8, 6, 9, 3, 4, 4, 4, 7, 10, 4, 5, 6, 7, 2, 8, 16, 10, 2, 11, 4, 5, 114, 3, 5, 6, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 5, 8, 7, 4, 10, 9, 8, 5, 19, 9, 19, 7, 314, 4, 6, 3, 12, 278, 5, 8, 4, 12, 10, 8, 6, 7, 8, 12, 11, 42, 5, 8, 10, 54, 4, 60, 7, 5, 10, 5, 10, 8, 3, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [9, 12, 5, 10, 5, 10, 7, 7, 7, 8, 7, 4, 9, 7, 9, 7, 4, 7, 4, 13, 5, 10, 8, 3, 5, 10, 67, 96, 4, 10, 7, 9, 8, 12, 6, 6, 4, 5, 5, 8, 10, 5, 9, 10, 5, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 10, 17, 6, 11, 12, 6, 6, 9, 10, 9, 6, 7, 11, 11, 9, 6, 10, 5, 9, 5, 10, 6, 12, 5, 12, 6, 7, 12, 4, 10, 13, 9, 8, 10, 4, 13, 21, 12, 11, 10, 9, 6, 10, 7, 10, 66]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 11, 5, 7, 3, 6, 4, 5, 5, 7, 14, 6, 70, 85, 6, 3, 3, 7, 7, 7, 6, 5, 6, 4, 8, 5, 4, 7, 4, 4, 6, 4, 4, 16, 5, 6, 13, 3, 48, 6, 4, 13]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 7, 7, 9, 7, 5, 7, 13, 7, 4, 4, 6, 9, 5, 12, 7, 11, 6, 7, 11, 4, 6, 24, 108, 10, 5, 4, 7, 10, 5, 9, 7, 31, 5, 7, 5, 6, 11, 5, 8, 32]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 12, 9, 7, 7, 5, 6, 5, 9, 5, 4, 6, 11, 4, 6, 9, 5, 10, 7, 8, 6, 6, 8, 5, 17, 9, 8, 6, 8, 9, 6, 6, 13, 10, 4, 6, 7, 5, 6, 9, 7, 14, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 11, 11, 4, 4, 12, 4, 10, 10, 8, 7, 11, 5, 8, 11, 4, 7, 7, 5, 11, 10, 192, 11, 2, 5, 11, 7, 6, 10, 12, 5, 7, 13, 10, 11, 4, 12, 4, 6, 11, 6, 7, 200, 254]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [3, 5, 8, 9, 4, 9, 4, 6, 5, 5, 3, 6, 13, 5, 5, 5, 7, 4, 4, 5, 22, 9, 5, 4, 12, 4, 7, 4, 10, 5, 4, 5, 79, 5, 4, 6, 12]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 6, 6, 6, 7, 3, 14, 7, 4, 5, 7, 13, 11, 422, 10, 8, 6, 11, 3, 12, 4, 10, 4, 7, 9, 3, 5, 9, 8, 11, 3, 10, 7, 4, 7, 11, 9, 12, 6, 11, 4, 9, 5, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 10, 11, 3, 8, 7, 6, 7, 9, 4, 4, 10, 5, 256, 4, 8, 3, 3, 11, 12, 8, 9, 8, 10, 4, 5, 4, 7, 238, 5, 8, 8, 7, 8, 6, 7, 20, 8, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [3, 11, 9, 3, 9, 8, 8, 4, 5, 3, 8, 8, 8, 10, 6, 6, 18, 3, 6, 4, 5, 7, 7, 19, 20, 207, 7, 5, 11, 7, 4, 3, 6, 3, 9, 7, 5, 4, 11, 11, 8, 5, 6, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [18, 5, 6, 6, 7, 6, 6, 107, 8, 4, 9, 9, 5, 8, 8, 302, 6, 35, 7, 7, 8, 8, 10, 12, 5, 8, 6, 9, 10, 6, 9, 10, 6, 8, 7, 7, 6, 7, 6, 9, 13, 6, 6, 10, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [21, 10, 8, 4, 15, 6, 16, 7, 8, 12, 14, 3, 8, 7, 16, 7, 15, 17, 11, 5, 7, 10, 13, 186, 15, 15, 16, 17, 9, 5, 17, 7, 7, 8, 18, 15, 77, 17, 10, 103, 8, 14, 16, 6, 15, 8, 10, 7, 7, 18]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [3, 4, 10, 17, 5, 8, 4, 15, 6, 4, 18, 4, 18, 5, 11, 106, 22, 16, 16, 8, 16, 18, 18, 15, 18, 20, 13, 3, 15, 42, 6, 10, 18, 9, 5, 12, 15, 10, 5, 7, 10, 29, 16, 194]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 7, 4, 8, 9, 4, 11, 4, 7, 7, 7, 4, 8, 4, 6, 3, 78, 7, 16, 8, 7, 11, 10, 11, 8, 4, 9, 15, 6, 8, 5, 11, 12, 30, 13, 7, 11, 5, 12, 17, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 11, 3, 10, 21, 8, 10, 7, 9, 6, 11, 5, 4, 7, 8, 6, 5, 5, 4, 11, 4, 5, 12, 12, 12, 8, 11, 6, 12, 12, 7, 12, 7, 10, 6, 6, 13, 12, 4, 60]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [3, 10, 4, 4, 11, 4, 5, 9, 10, 7, 13, 5, 6, 13, 4, 11, 12, 13, 5, 9, 7, 5, 3, 6, 15, 5, 4, 7, 11, 461, 6, 6, 7, 10, 9, 12, 7, 11, 6, 14, 8, 10, 7, 6, 6, 8, 11, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [5, 10, 11, 7, 5, 6, 5, 4, 7, 12, 9, 7, 4, 8, 4, 8, 5, 9, 4, 4, 9, 6, 12, 11, 8, 10, 11, 3, 7, 6, 5, 7, 9, 11, 10, 7, 9, 34, 4, 5, 4, 6, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 9, 9, 5, 9, 12, 4, 11, 4, 6, 6, 6, 5, 4, 3, 6, 5, 6, 8, 5, 8, 10, 4, 7, 12, 4, 10, 8, 4, 7, 12, 14, 32, 3, 21, 7, 13, 8, 9, 139, 5, 4, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [18, 10, 4, 10, 4, 8, 12, 9, 6, 56, 7, 270, 41, 9, 9, 10, 10, 13, 10, 9, 7, 9, 4, 7, 13, 8, 7, 10, 207, 15, 13, 4, 6, 4, 6, 10, 8, 9, 9, 14, 9, 10, 10, 7, 5, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 12, 11, 8, 5, 10, 12, 5, 22, 8, 6, 12, 14, 9, 15, 9, 6, 7, 15, 11, 13, 9, 10, 14, 7, 7, 10, 12, 11, 10, 7, 10, 6, 9, 18, 10, 11, 11, 17, 13, 11, 11, 7, 9, 6, 8, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 5, 7, 7, 6, 9, 9, 6, 5, 6, 10, 7, 5, 4, 37, 6, 9, 111, 8, 8, 7, 9, 7, 9, 8, 9, 7, 7, 3, 6, 8, 10, 8, 8, 8, 9, 6, 9, 8, 4, 2, 8, 7, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [2, 8, 7, 12, 10, 17, 8, 4, 7, 4, 9, 14, 14, 107, 9, 6, 251, 9, 7, 10, 10, 10, 9, 14, 10, 7, 5, 6, 5, 11, 8, 8, 16, 9, 8, 517, 8, 16, 4, 16, 8, 11, 7, 7, 8, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 9, 4, 9, 6, 5, 15, 6, 8, 6, 11, 7, 7, 11, 7, 7, 12, 12, 7, 11, 7, 5, 6, 12, 8, 5, 7, 10, 55, 11, 8, 7, 9, 6, 303, 8, 231, 6, 9, 8, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 10, 9, 9, 4, 6, 9, 6, 6, 12, 9, 7, 4, 6, 10, 25, 41, 371, 5, 5, 16, 7, 14, 5, 19, 9, 6, 10, 7, 9, 490, 7, 4, 475, 7, 12, 12, 8, 4, 6, 33, 4, 11, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 4, 6, 6, 5, 11, 9, 4, 10, 6, 7, 9, 7, 10, 6, 6, 168, 4, 11, 52, 9, 9, 8, 457, 4, 11, 4, 14, 8, 4, 4, 8, 4, 6, 4, 7, 12, 451, 28, 4, 5, 4, 14, 6, 5, 295]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [6, 4, 16, 7, 10, 14, 3, 7, 14, 10, 14, 11, 9, 6, 8, 6, 7, 10, 7, 5, 9, 10, 4, 4, 10, 10, 14, 6, 8, 8, 8, 10, 15, 11, 53, 9, 10, 52, 4, 7, 12, 13, 8, 12, 13, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 6, 7, 8, 7, 4, 3, 4, 6, 5, 4, 4, 6, 11, 9, 8, 8, 12, 13, 4, 4, 12, 8, 4, 7, 4, 6, 6, 7, 5, 9, 5, 7, 56, 6, 7, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 12, 10, 4, 7, 7, 9, 6, 9, 6, 10, 6, 5, 11, 8, 10, 9, 7, 213, 8, 13, 8, 86, 7, 10, 8, 10, 10, 10, 9, 4, 6, 8, 7, 9, 8, 14, 10, 5, 6, 9, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 12, 13, 4, 5, 6, 10, 10, 4, 11, 5, 10, 11, 16, 248, 12, 5, 93, 4, 5, 147, 4, 12, 10, 8, 12, 14, 111, 7, 10, 10, 9, 11, 9, 16, 12, 157, 9, 4, 6, 9, 10, 11, 11, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 3, 4, 5, 6, 7, 8, 6, 4, 4, 5, 10, 10, 10, 10, 3, 10, 12, 5, 486, 13, 63, 10, 9, 33, 81, 10, 9, 6, 11, 9, 9, 10, 9, 4, 8, 12, 10, 8, 5, 4, 8, 7, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [5, 12, 6, 5, 4, 4, 5, 11, 6, 5, 6, 8, 4, 4, 7, 8, 4, 5, 4, 9, 4, 6, 5, 4, 9, 7, 6, 7, 8, 5, 5, 4, 8, 5, 5, 7, 6, 3, 6, 24, 6, 3, 8, 137]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [10, 5, 9, 151, 5, 7, 5, 12, 5, 4, 4, 6, 7, 5, 8, 6, 3, 9, 14, 3, 4, 3, 9, 3, 5, 6, 3, 22, 6, 7, 9, 2, 7, 4, 7, 5, 11, 9, 8, 5, 6, 5, 7, 5, 4, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 5, 8, 4, 5, 5, 6, 7, 4, 6, 5, 5, 7, 6, 4, 10, 20, 9, 59, 4, 5, 4, 4, 33, 6, 5, 424, 7, 5, 7, 4, 7, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 7, 7, 3, 4, 7, 4, 4, 4, 4, 7, 7, 8, 7, 2, 25, 4, 2, 10, 40, 4, 3, 11, 4, 34, 3, 6, 7, 4, 7, 7, 6, 79, 8, 4, 7, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 7, 4, 4, 6, 3, 4, 4, 396, 3, 4, 2, 6, 4, 10, 139, 5, 5, 10, 4, 4, 6, 3, 2, 4, 7, 3, 5, 4, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 5, 5, 9, 3, 7, 10, 4, 6, 8, 5, 6, 2, 6, 4, 10, 8, 9, 184, 10, 11, 7, 3, 82, 17, 407, 8, 3, 4, 4, 7, 203, 30, 10, 8, 7, 8, 6, 7, 8, 9, 8, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 6, 6, 10, 5, 3, 4, 10, 8, 7, 7, 8, 6, 5, 4, 3, 5, 5, 5, 6, 9, 5, 5, 4, 5, 7, 4, 17, 6, 4, 16]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [11, 5, 4, 6, 4, 9, 14, 5, 5, 5, 6, 5, 4, 4, 24, 4, 5, 4, 4, 6, 7, 8, 11, 4, 5, 5, 5, 4, 5, 5, 4, 15, 5, 7, 4, 4, 5, 5, 6, 4, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [9, 4, 18, 4, 6, 6, 8, 7, 9, 5, 6, 7, 9, 6, 8, 7, 6, 6, 11, 7, 10, 7, 5, 4, 4, 5, 5, 3, 9, 4, 5, 7, 9, 4, 6, 6, 48]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 3, 10, 9, 10, 10, 4, 10, 11, 6, 11, 10, 334, 10, 9, 8, 9, 14, 9, 10, 10, 14, 4, 12, 9, 10, 7, 10, 9, 10, 5, 11, 3, 10, 11, 42, 8, 6, 9, 11, 10, 8, 4, 11, 7, 288]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 10, 5, 7, 4, 14, 11, 8, 13, 11, 11, 8, 7, 11, 7, 9, 3, 12, 11, 5, 11, 11, 10, 11, 6, 10, 7, 5, 13, 10, 14, 2, 11, 17, 14, 4, 5, 6, 10, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 15, 15, 16, 5, 10, 18, 13, 6, 5, 5, 15, 15, 10, 13, 11, 438, 5, 19, 5, 11, 8, 14, 13, 6, 6, 14, 4, 15, 4, 12, 14, 8, 6, 6, 5, 21, 13, 4, 4, 15, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 4, 8, 6, 11, 7, 5, 10, 6, 7, 61, 9, 8, 6, 5, 4, 7, 11, 7, 12, 6, 10, 6, 11, 9, 13, 9, 11, 12, 9, 8, 9, 5, 10, 5, 7, 9, 8, 9, 9, 5, 4, 21, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 9, 9, 9, 9, 11, 10, 9, 9, 10, 15, 11, 7, 7, 9, 9, 10, 9, 4, 7, 9, 10, 4, 11, 9, 9, 9, 4, 10, 76, 7, 7, 9, 11, 9, 13, 9, 11, 6, 9, 6, 8, 8, 10, 7, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [8, 10, 10, 9, 7, 4, 9, 8, 10, 7, 9, 9, 7, 29, 12, 9, 9, 10, 10, 10, 7, 10, 5, 5, 11, 7, 3, 8, 13, 9, 10, 10, 9, 8, 11, 19, 403, 7, 9, 10, 4, 8, 9, 9, 9, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 10, 5, 9, 6, 9, 12, 6, 3, 10, 8, 346, 6, 7, 9, 4, 10, 6, 11, 10, 9, 8, 6, 11, 4, 6, 13, 8, 5, 7, 4, 7, 7, 7, 9, 3, 323, 9, 7, 4, 7, 4, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 11, 9, 3, 6, 4, 9, 16, 6, 258, 7, 10, 5, 5, 34, 9, 5, 9, 7, 4, 5, 15, 22, 15, 4, 46, 6, 6, 8, 7, 11, 8, 13, 11, 8, 5, 4, 108]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 3, 5, 4, 3, 5, 8, 9, 4, 4, 11, 6, 6, 38, 5, 5, 60, 6, 5, 7, 13, 6, 227, 11, 9, 6, 9, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 4, 7, 121, 6, 3, 7, 7, 10, 5, 4, 5, 4, 8, 6, 4, 5, 6, 8, 5, 7, 24, 15, 5, 6, 5, 10, 5, 9, 19, 6, 6, 9, 17, 5, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 5, 5, 5, 6, 9, 10, 3, 7, 43, 12, 5, 4, 9, 38, 11, 11, 6, 5, 30, 8, 5, 6, 5, 10, 7, 4, 52, 9, 234, 7, 5, 7, 9, 8, 4, 4, 11, 2, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 14, 10, 11, 12, 11, 10, 6, 10, 10, 341, 11, 12, 10, 11, 10, 13, 10, 9, 9, 12, 13, 22, 9, 4, 15, 3, 11, 9, 10, 9, 10, 7, 11, 12, 12, 8, 110, 9, 10, 117, 3, 10, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 9, 6, 4, 3, 9, 9, 7, 9, 16, 4, 13, 9, 4, 5, 10, 4, 4, 7, 54, 10, 5, 9, 6, 7, 11, 9, 6, 7, 11, 7, 8, 8, 6, 10, 5, 6, 314, 10, 11, 11, 8, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [6, 6, 13, 7, 9, 8, 7, 6, 13, 6, 7, 5, 6, 5, 5, 4, 7, 9, 6, 6, 8, 87, 4, 5, 6, 7, 9, 4, 4, 6, 12, 6, 7, 8, 5, 9, 6, 6, 6, 5, 58, 7, 7, 9, 7, 7, 11, 7, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 14, 14, 13, 9, 15, 5, 14, 14, 14, 5, 5, 236, 16, 8, 10, 4, 7, 14, 8, 7, 5, 12, 306, 5, 4, 10, 15, 8, 5, 9, 12, 9, 8, 6, 13, 7, 16, 14, 15, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [4, 10, 12, 86, 13, 13, 11, 11, 10, 10, 11, 12, 10, 9, 10, 19, 10, 398, 4, 4, 9, 7, 10, 414, 3, 11, 11, 11, 8, 8, 7, 4, 4, 11, 372, 10, 10, 8, 10, 11, 7, 8, 9, 4, 13, 6, 10, 9, 9, 37]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 12, 8, 8, 7, 7, 11, 11, 10, 5, 9, 14, 16, 12, 10, 9, 9, 15, 639, 6, 9, 10, 13, 4, 7, 13, 11, 69, 10, 12, 10, 16, 6, 13, 22, 9, 8, 13, 9, 9, 6, 239, 8, 10, 13, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 11, 4, 4, 8, 8, 7, 4, 5, 4, 8, 27, 13, 5, 7, 13, 10, 4, 7, 9, 8, 11, 9, 9, 8, 16, 7, 12, 11, 7, 7, 11, 7, 13, 12, 7, 9, 7, 7, 7, 10, 8, 62, 16, 9, 9, 10, 12, 10, 8]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [13, 10, 9, 5, 10, 12, 6, 4, 8, 9, 10, 22, 8, 9, 33, 58, 8, 9, 5, 9, 4, 8, 10, 9, 4, 7, 9, 8, 20, 4, 7, 4, 19, 9, 9, 15, 67, 11, 15, 12, 16, 4, 12, 20, 8, 6, 283]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 5, 4, 7, 10, 9, 8, 3, 9, 8, 4, 8, 5, 8, 106, 8, 6, 8, 9, 11, 6, 172, 7, 5, 4, 8, 5, 4, 6, 9, 16, 5, 3, 6, 6, 3, 7, 6, 4, 52, 6, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [11, 11, 8, 4, 7, 7, 9, 6, 8, 6, 4, 5, 6, 10, 9, 6, 6, 6, 12, 21, 5, 4, 11, 6, 6, 8, 9, 78, 8, 6, 6, 10, 6, 6, 7, 4, 4, 11, 7, 4, 6, 6, 8, 2, 8, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [6, 10, 3, 8, 3, 5, 10, 8, 10, 5, 8, 6, 9, 307, 6, 6, 4, 5, 7, 7, 4, 10, 10, 6, 10, 8, 7, 6, 9, 20, 10, 8, 19, 8, 11, 9, 8, 7, 9, 7, 10, 10, 13, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 10, 3, 9, 4, 8, 10, 4, 10, 6, 10, 393, 7, 5, 9, 12, 4, 7, 5, 6, 11, 89, 11, 26, 12, 9, 69, 7, 9, 8, 10, 8, 7, 11, 11, 9, 14, 8, 12, 7, 14, 8, 12]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [10, 9, 14, 4, 6, 8, 12, 11, 9, 10, 11, 9, 12, 8, 9, 10, 5, 10, 11, 7, 8, 4, 8, 9, 5, 11, 7, 12, 4, 7, 6, 12, 4, 33, 7, 6, 411, 7, 6, 4, 10, 8, 14, 8, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 9, 7, 7, 13, 10, 7, 11, 18, 4, 7, 11, 11, 9, 161, 7, 20, 12, 9, 5, 13, 7, 12, 9, 7, 10, 10, 8, 14, 6, 11, 7, 14, 11, 7, 5, 6, 14, 11, 3, 5, 10, 10, 9, 11, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [3, 9, 9, 12, 9, 8, 9, 11, 10, 8, 9, 8, 9, 8, 9, 8, 12, 8, 11, 110, 8, 8, 8, 6, 8, 11, 9, 10, 11, 9, 6, 8, 74, 8, 7, 11, 44, 12, 8, 9, 352, 9, 6, 31, 33, 527, 9, 9, 6, 12, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [10, 10, 7, 12, 11, 11, 9, 9, 5, 10, 11, 5, 8, 8, 11, 12, 9, 10, 12, 9, 13, 4, 8, 11, 6, 11, 6, 11, 8, 9, 10, 9, 8, 7, 394, 6, 4, 10, 367, 8, 8, 11, 8, 8, 9, 10, 15, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 7, 8, 11, 4, 4, 7, 8, 9, 8, 5, 7, 9, 5, 8, 20, 6, 8, 5, 7, 8, 14, 5, 4, 5, 24, 7, 7, 6, 43, 11, 18, 8, 5, 7, 7, 8, 10, 9, 13]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 10, 8, 5, 4, 4, 17, 3, 4, 7, 9, 4, 72, 8, 9, 4, 4, 5, 10, 8, 4, 9, 5, 6, 11, 6, 6, 23, 6, 14, 9, 27, 3, 56, 6, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [12, 9, 3, 5, 6, 4, 7, 6, 8, 9, 5, 4, 3, 5, 5, 7, 5, 8, 5, 11, 15, 4, 5, 7, 8, 9, 10, 6, 7, 6, 6, 4, 10, 7, 6, 8, 12, 6, 9, 3, 156, 5, 6, 6, 4, 7, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 6, 6, 6, 7, 4, 9, 7, 7, 80, 10, 7, 4, 7, 5, 5, 6, 8, 15, 6, 7, 7, 7, 6, 6, 11, 140, 4, 6, 9, 8, 8, 12, 7, 10, 8, 9, 13, 6, 200, 99, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 5, 8, 6, 6, 6, 4, 38, 3, 59, 6, 6, 10, 9, 3, 6, 8, 7, 10, 8, 10, 3, 31, 14, 7, 2, 5, 6, 8, 8, 9, 4, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [3, 4, 9, 9, 8, 5, 4, 5, 5, 3, 6, 6, 5, 79, 5, 10, 4, 8, 5, 7, 4, 7, 7, 6, 8, 4, 7, 8, 6, 8, 5, 9, 11, 7, 4, 9, 10, 7, 4, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 10, 6, 6, 6, 12, 4, 3, 6, 8, 8, 33, 10, 8, 7, 9, 7, 8, 7, 9, 8, 10, 8, 7, 7, 8, 10, 6, 10, 8, 8, 7, 7, 8, 12, 8, 5, 8, 12, 8, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [10, 11, 6, 11, 12, 8, 10, 5, 8, 9, 8, 6, 11, 5, 12, 13, 3, 20, 7, 4, 3, 9, 4, 9, 11, 12, 12, 11, 9, 7, 4, 9, 9, 10, 9, 6, 11, 10, 11, 8, 10, 8, 4, 7, 11, 4, 8, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [3, 5, 11, 14, 8, 5, 119, 7, 9, 9, 8, 8, 6, 3, 9, 13, 80, 7, 6, 6, 6, 7, 11, 9, 12, 4, 6, 13, 11, 11, 6, 8, 6, 8, 10, 7, 4, 7, 13, 6, 11, 12, 6, 9, 6, 5, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 8, 44, 6, 7, 10, 5, 22, 10, 7, 4, 7, 8, 11, 9, 6, 13, 6, 8, 11, 9, 7, 6, 6, 11, 8, 11, 8, 11, 9, 7, 7, 9, 52, 8, 12, 7, 9, 10, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 11, 9, 7, 7, 6, 7, 8, 9, 9, 11, 7, 9, 7, 5, 10, 5, 6, 11, 10, 10, 31, 9, 7, 9, 9, 8, 7, 5, 8, 10, 8, 9, 6, 7, 9, 5, 11, 11, 12, 4, 9, 8, 7, 7, 8, 6, 7, 14, 15]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 3, 4, 3, 4, 45, 3, 4, 4, 5, 4, 5, 5, 5, 8, 7, 6, 7, 5, 4, 6, 4, 9, 6, 4, 9, 7, 36, 9, 6, 6, 7, 24, 7, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [4, 7, 14, 13, 6, 11, 4, 4, 6, 6, 7, 11, 5, 9, 10, 6, 4, 13, 10, 9, 10, 6, 10, 4, 7, 8, 10, 58, 6, 11, 10, 4, 9, 15, 11, 11, 7, 6, 8, 9, 5, 6, 9, 114, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 17, 4, 7, 7, 4, 6, 9, 9, 7, 7, 3, 4, 4, 4, 4, 6, 3, 5, 3, 8, 4, 6, 8, 6, 28, 4, 6, 8, 9, 6, 4, 5, 6, 4, 8, 4, 4, 5, 3, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [6, 13, 12, 13, 9, 9, 7, 10, 8, 224, 8, 4, 8, 7, 12, 7, 7, 10, 14, 11, 7, 9, 10, 5, 5, 9, 12, 8, 7, 8, 7, 5, 12, 14, 10, 10, 18, 6, 34, 7, 6, 14, 5, 10, 8, 8, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 7, 4, 7, 2, 6, 6, 6, 4, 4, 8, 6, 6, 4, 5, 4, 7, 191, 7, 4, 6, 4, 6, 329, 3, 5, 4, 4, 6, 4, 4, 7, 3, 5, 6, 15, 6, 3]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 6, 4, 5, 5, 3, 5, 4, 6, 4, 6, 5, 4, 4, 4, 6, 4, 7, 4, 4, 92, 3, 6, 40, 7, 5, 60, 28]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [14, 4, 3, 3, 6, 218, 7, 45, 14, 10, 4, 11, 6, 4, 3, 6, 12, 7, 4, 17, 7, 7, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [14, 13, 10, 8, 11, 12, 10, 9, 8, 8, 8, 8, 10, 11, 8, 11, 9, 9, 8, 8, 11, 8, 8, 9, 8, 9, 11, 9, 8, 6, 10, 12, 7, 9, 10, 12, 11, 11, 12, 8, 367, 11, 13, 10, 6, 9, 10, 11, 11, 9, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 14, 10, 12, 9, 9, 10, 13, 9, 11, 11, 7, 11, 134, 11, 9, 10, 11, 9, 9, 11, 12, 4, 7, 10, 13, 9, 9, 11, 13, 9, 8, 11, 11, 14, 11, 8, 11, 8, 10, 10, 9, 10, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [3, 4, 17, 12, 6, 7, 3, 12, 11, 22, 11, 6, 7, 9, 34, 12, 9, 4, 11, 3, 4, 11, 13, 7, 34, 12, 10, 23, 14, 7, 11, 10, 11, 9, 7, 8, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [8, 13, 7, 11, 13, 7, 13, 9, 8, 11, 11, 8, 7, 13, 9, 8, 9, 12, 9, 9, 7, 13, 13, 17, 10, 10, 3, 9, 11, 10, 12, 10, 6, 9, 27, 12, 13, 13, 12, 8, 4, 8, 10, 7, 8, 16, 11, 9, 11, 10]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [12, 4, 5, 4, 11, 4, 6, 5, 12, 4, 4, 5, 5, 13, 5, 6, 16, 5, 4, 10, 4, 5, 4, 11, 14, 11, 14, 14, 9, 17, 4, 4, 7, 12, 4, 6, 11, 11, 14]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 8, 6, 12, 5, 9, 6, 8, 10, 4, 4, 4, 11, 5, 7, 9, 11, 8, 10, 7, 6, 13, 5, 7, 5, 8, 8, 8, 7, 8, 12, 4, 8, 7, 9, 9, 9, 9, 11, 5, 11, 9, 16, 10]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 10, 6, 7, 6, 8, 9, 6, 7, 7, 8, 8, 10, 10, 11, 57, 9, 9, 7, 8, 7, 146, 4, 7, 10, 8, 10, 7, 5, 9, 10, 9, 8, 8, 10, 8, 10, 7, 10, 8, 7, 8, 9, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 9, 7, 9, 9, 6, 7, 7, 8, 4, 7, 9, 87, 8, 8, 8, 7, 8, 10, 4, 9, 7, 4, 8, 4, 6, 6, 7, 9, 6, 6, 9, 10, 4, 8, 7, 8, 8, 7, 6, 7, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 4, 7, 4, 4, 4, 7, 4, 5, 5, 5, 4, 5, 35, 5, 6, 6, 4, 6, 6, 3, 7, 141, 120, 7, 7, 15, 7, 5, 4, 7, 4, 206, 6, 9, 9, 5, 11, 4, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 4, 4, 13, 11, 5, 7, 7, 9, 9, 9, 7, 8, 9, 4, 6, 155, 4, 10, 14, 4, 11, 5, 6, 6, 5, 9, 4, 7, 53, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 10, 9, 9, 11, 10, 10, 11, 8, 9, 12, 134, 10, 11, 13, 10, 10, 14, 7, 7, 5, 8, 11, 9, 8, 13, 10, 11, 11, 4, 8, 11, 10, 8, 11, 13, 9, 8, 13, 8, 13, 17, 20, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 9, 6, 8, 11, 7, 5, 6, 8, 7, 10, 10, 6, 7, 10, 9, 9, 6, 8, 7, 7, 8, 6, 8, 9, 6, 9, 6, 9, 10, 9, 9, 6, 9, 8, 7, 9, 5, 11, 8, 7, 9, 12, 9, 8, 6, 5, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 9, 10, 10, 8, 6, 8, 7, 6, 11, 14, 12, 8, 104, 9, 17, 10, 8, 6, 9, 10, 8, 6, 9, 9, 12, 8, 4, 10, 12, 8, 10, 11, 8, 4, 12, 10, 5, 9, 13, 8, 6, 12, 24, 9, 7, 7, 7, 10, 7, 44, 9, 6, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 8, 12, 8, 11, 11, 9, 7, 4, 7, 11, 10, 5, 5, 5, 8, 7, 23, 6, 5, 14, 8, 9, 12, 12, 18, 9, 11, 11, 26, 8, 9, 8, 10, 9, 12, 7, 12, 9, 6, 11, 8, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [7, 10, 9, 7, 7, 12, 9, 6, 11, 13, 7, 12, 9, 11, 10, 5, 9, 6, 10, 10, 8, 7, 10, 6, 11, 9, 11, 10, 11, 9, 10, 8, 7, 11, 100, 6, 11, 10, 6, 11, 32, 12, 12, 12]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 9, 8, 6, 8, 10, 7, 8, 8, 7, 10, 6, 4, 292, 9, 4, 14, 4, 8, 8, 4, 355, 10, 423, 3, 5, 4, 8, 15, 11, 45, 4, 203, 9, 9, 9, 5, 6, 6, 10, 24, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [12, 9, 4, 6, 5, 4, 8, 4, 10, 5, 8, 9, 8, 8, 5, 10, 5, 10, 8, 10, 11, 8, 5, 12, 10, 7, 5, 10, 4, 3, 8, 27, 5, 9, 8, 6, 20, 12]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [9, 4, 10, 7, 7, 10, 9, 7, 9, 9, 32, 5, 11, 11, 9, 4, 7, 11, 11, 4, 10, 4, 5, 10, 9, 4, 12, 10, 7, 11, 199, 11, 11, 4, 12, 8, 9, 12, 6, 10, 10, 15, 9, 9, 12, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 11, 10, 6, 11, 10, 5, 7, 11, 4, 6, 9, 7, 8, 12, 7, 7, 7, 5, 11, 12, 4, 11, 7, 9, 9, 9, 8, 6, 10, 9, 9, 10, 10, 10, 8, 4, 12, 8, 8, 7, 8, 192, 11, 11, 7, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 3, 4, 5, 3, 5, 4, 4, 4, 122, 4, 4, 4, 9, 6, 3, 4, 5, 8, 4, 7, 4, 6, 5, 4, 6, 148, 4, 5, 346, 59, 96, 5, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 7, 9, 6, 4, 5, 7, 6, 5, 4, 21, 5, 6, 5, 6, 9, 8, 8, 5, 5, 4, 9, 5, 4, 4, 5, 10, 6, 7, 5, 4, 4, 7, 5, 9, 8, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [13, 6, 4, 9, 8, 10, 5, 6, 8, 8, 6, 11, 8, 10, 10, 8, 6, 6, 8, 13, 8, 5, 6, 10, 5, 11, 13, 14, 8, 6, 7, 8, 8, 10, 6, 5, 9, 8, 9, 7, 10, 8, 12, 5, 9, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [3, 7, 6, 4, 6, 13, 5, 9, 10, 6, 4, 8, 13, 19, 6, 8, 3, 3, 9, 8, 5, 12, 9, 10, 4, 13, 6, 7, 12, 6, 6, 6, 9, 7, 9, 4, 9, 11, 7, 8, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 5, 5, 3, 6, 7, 4, 4, 8, 6, 5, 4, 5, 7, 4, 4, 6, 8, 6, 7, 5, 8, 4, 4, 7, 6, 5, 4, 6, 5, 6, 6, 4, 7, 5, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 6, 6, 8, 7, 8, 4, 4, 4, 5, 7, 9, 7, 7, 8, 16, 7, 8, 6, 5, 10, 6, 6, 5, 7, 6, 8, 10, 13, 6, 4, 10, 4, 6, 8, 7, 7, 6, 7, 4, 9, 90, 15, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [8, 14, 8, 14, 4, 8, 12, 13, 13, 7, 12, 10, 10, 323, 10, 12, 7, 8, 8, 7, 7, 9, 12, 9, 12, 97, 7, 7, 3, 8, 10, 10, 8, 7, 12, 10, 14, 12, 14, 12, 9, 9, 8, 12, 12, 10, 2, 13]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 8, 9, 9, 11, 9, 4, 4, 5, 5, 9, 7, 4, 10, 8, 12, 7, 9, 8, 5, 4, 6, 9, 8, 12, 12, 8, 7, 5, 10, 11, 6, 7, 11, 10, 14, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [10, 10, 9, 8, 9, 8, 6, 10, 7, 8, 7, 8, 8, 4, 8, 13, 7, 6, 9, 5, 6, 7, 11, 6, 7, 13, 8, 7, 8, 11, 5, 7, 10, 7, 6, 8, 10, 10, 9, 7, 13, 9, 8, 10, 8, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [11, 11, 11, 10, 10, 210, 11, 10, 9, 9, 11, 7, 4, 10, 10, 12, 7, 11, 10, 9, 13, 4, 10, 9, 9, 9, 48, 5, 189, 10, 10, 181, 8, 12, 10, 9, 12, 8, 10, 9, 10, 8, 9, 12, 10, 9, 11, 9, 11, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[4, 12, 10, 11, 9, 10, 11, 9, 11, 12, 10, 92, 6, 8, 10, 4, 146, 10, 10, 11, 10, 7, 9, 10, 9, 51, 8, 10, 10, 6, 12, 6, 4, 8, 11, 7, 76, 9, 7, 10, 10, 11, 5, 9, 11, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [15, 8, 6, 9, 13, 10, 8, 9, 4, 7, 7, 8, 7, 9, 6, 230, 10, 5, 7, 10, 4, 8, 5, 8, 7, 9, 9, 6, 7, 8, 10, 4, 6, 6, 8, 97, 6, 10, 8, 9, 9, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [8, 9, 11, 8, 69, 9, 9, 8, 9, 10, 10, 11, 10, 8, 11, 9, 10, 7, 8, 9, 10, 10, 8, 9, 9, 8, 8, 10, 9, 10, 10, 10, 7, 9, 10, 9, 10, 11, 8, 10, 8, 10, 7, 16, 9, 12, 11, 8, 9, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
