┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcDH1_1363
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcDH1_1363
----------------------------------
number of metabolites : 1949
number of reactions : 2750
number of genes : 1363

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2750 flux variables and 5109 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 24, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 13, 70, 14, 13, 14, 13, 13, 11, 11, 11, 13, 13, 14, 11, 11, 2, 3, 4, 8, 2, 2, 2, 2, 3, 4, 2, 85, 9, 9, 9, 12, 14, 10, 9, 9, 2, 2, 3, 9, 53]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 2, 2, 4, 4, 3, 4, 3, 3, 2, 4, 3, 4, 3, 3, 161, 4, 22, 6, 4, 4, 4, 4, 5, 4, 4, 6, 3]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 2, 4, 3, 3, 4, 7, 4, 2, 6, 16, 6, 8, 3, 4, 10, 56]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 7, 2, 3, 2, 4, 4, 8, 3, 4, 5, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 2, 2, 4, 5, 29, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 4, 5, 120, 4, 4, 2, 58, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 4, 4, 3, 33, 4, 3, 6, 6, 4, 4, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 7, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 6, 8, 9, 7, 7, 6, 12, 6, 8, 11, 7, 126, 7, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 4, 4, 3, 5, 4, 6, 4, 7, 14, 4, 3, 7, 13, 4, 7, 5, 5, 4, 25]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 19, 4, 9, 4, 6, 76, 4, 9, 5, 6, 9, 4, 5, 6, 6, 8, 8, 6, 8, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 7, 3, 8, 8, 8, 8, 19, 11, 10, 8, 8, 10, 8, 8, 102, 101, 11]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 7, 17, 17, 6, 18, 4, 17, 17, 10, 6, 2, 6, 5, 10, 4, 7, 6, 6, 6, 12, 11, 6, 11, 6, 10, 10, 12, 12, 12, 12, 10, 10, 6, 4, 13, 12, 6, 11, 12, 7, 6, 4, 9, 6, 6, 4, 4, 7, 6, 7, 37, 8, 6, 12, 7, 6, 6, 6, 4, 6, 6, 4]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 4, 6, 4, 4, 5, 4, 4, 7, 6, 4, 6, 5, 6, 6, 3, 4, 4, 4, 6, 4, 6, 4, 4, 4, 4, 6, 6, 5, 5, 6, 4, 4, 6, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 6, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 10, 9, 3, 9, 103, 4, 3, 4, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 11, 4, 7, 4, 6, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 12, 4, 4, 4, 5, 10, 5, 8, 8, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785243747423
thermo_feasible = true
