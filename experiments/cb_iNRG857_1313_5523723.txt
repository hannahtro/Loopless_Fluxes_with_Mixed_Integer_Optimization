┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iNRG857_1313
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iNRG857_1313
----------------------------------
number of metabolites : 1943
number of reactions : 2735
number of genes : 1311

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 17, 18, 17, 19, 17, 17, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 11, 14, 14, 15, 14, 15, 4, 14, 14, 2]
length(C_list) = 24
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 15, 17, 30, 17, 18, 17, 60, 14, 14, 15, 14, 15, 19, 14, 12, 12, 167, 13, 14, 12, 12, 12, 12, 15, 14, 15, 15, 15, 3, 19, 14, 14, 36, 21, 14, 3]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 2, 2, 2, 4, 3, 2, 3, 3, 2, 2, 4, 2, 53, 2, 4, 4, 2, 2, 2]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 4, 4, 4, 3, 174, 4, 3, 3, 3, 3, 3, 5, 3, 2, 4, 3, 3, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 3, 3, 6, 7, 4, 4, 4, 7, 3, 3, 4, 2, 3, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 3, 8, 2, 6, 2, 9, 6, 2, 2, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 2, 3, 2, 4, 3, 2, 32, 15, 3, 5, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 4, 2, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 3, 6, 10, 12, 27, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785414871711
thermo_feasible = true
