┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 10
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 7, 19, 7, 256, 7, 11, 209, 9, 42, 8, 7, 4, 11, 7, 7, 7, 4, 20, 12, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 54, 4, 93, 4, 8, 3, 4, 10, 4, 4, 183, 8, 3, 3, 4, 3, 20, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 4, 3, 89, 4, 4, 9, 3, 4, 31, 4, 3, 4, 9, 4, 94, 3, 4, 20, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [18, 4, 3, 4, 4, 4, 10, 4, 4, 3, 4, 6, 99, 4, 4, 7, 4, 4, 3, 3, 20, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 4, 4, 378, 7, 6, 304, 4, 5, 4, 4, 4, 5, 394, 4, 4, 4, 46, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 3, 14, 4, 54, 4, 75, 3, 4, 34, 4, 3, 6, 5, 4, 7, 4, 4, 51, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 4, 4, 4, 22, 4, 4, 18, 4, 4, 8, 5, 4, 7, 4, 4, 4, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 64, 4, 106, 6, 4, 5, 4, 7, 60, 4, 8, 4, 5, 4, 7, 4, 20, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 143, 4, 4, 11, 4, 5, 4, 4, 7, 4, 4, 34, 5, 4, 3, 7, 22, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 3, 4, 3, 4, 590, 4, 4, 28, 4, 4, 4, 5, 6, 8, 4, 4, 20, 6, 11]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 4, 57, 4, 6, 4, 3, 7, 4, 4, 4, 5, 5, 8, 5, 4, 48, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 4, 8, 6, 4, 4, 27, 4, 4, 4, 5, 4, 4, 4, 33, 9, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 3, 4, 5, 4, 20, 39, 4, 4, 256, 625, 4, 8, 7, 4, 35, 3, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 15, 5, 4, 14, 4, 47, 4, 118, 51, 4, 30, 3, 3, 4, 6, 3, 4, 7, 4, 46, 9, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 6, 4, 4, 602, 4, 3, 35, 3, 4, 3, 5, 4, 4, 5, 4, 4, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 18, 78, 4, 40, 3, 5, 4, 4, 50, 3, 3, 20, 91, 4, 3, 3, 272, 41, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 6, 4, 5, 228, 3, 6, 13, 4, 4, 5, 3, 4, 4, 4, 23, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 3, 3, 3, 12, 3, 5, 5, 3, 8, 4, 4, 4, 5, 8, 3, 4, 40, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 5, 5, 3, 70, 4, 5, 37, 4, 35, 5, 4, 4, 5, 4, 50, 3, 3, 20, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [10, 3, 13, 3, 10, 13, 53, 4, 6, 56, 4, 4, 3, 8, 4, 5, 4, 5, 9, 4, 52, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 18, 6, 5, 30, 3, 5, 35, 10, 6, 3, 14, 5, 9, 8, 3, 20, 10, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 7, 4, 6, 5, 4, 3, 4, 7, 4, 44, 5, 4, 7, 4, 3, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 37, 4, 5, 31, 3, 5, 7, 16, 8, 4, 6, 3, 286, 14, 3, 6, 35, 6, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 3, 8, 6, 4, 5, 32, 82, 4, 6, 5, 3, 5, 3, 37, 32, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 5, 4, 4, 71, 4, 452, 40, 4, 28, 3, 8, 4, 5, 4, 8, 7, 3, 36, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [8, 5, 3, 4, 4, 4, 4, 4, 5, 6, 4, 51, 4, 4, 4, 5, 3, 4, 3, 4, 26, 4, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 14, 6, 20, 4, 8, 31, 3, 5, 3, 6, 6, 6, 5, 126, 62, 8, 7, 3, 58, 6, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 39, 4, 4, 35, 4, 47, 30, 4, 23, 4, 6, 4, 5, 4, 4, 4, 22, 156, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 3, 4, 17, 6, 5, 56, 4, 38, 4, 6, 5, 4, 4, 4, 4, 53, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 10, 6, 7, 11, 4, 70, 4, 4, 7, 3, 3, 7, 5, 8, 3, 6, 20, 7, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 18, 3, 3, 57, 4, 6, 19, 3, 17, 3, 3, 3, 292, 4, 8, 7, 341, 41, 8, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 18, 4, 5, 4, 5, 5, 3, 4, 17, 3, 5, 3, 6, 7, 4, 4, 9, 28, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 74, 6, 20, 3, 3, 41, 6, 5, 30, 6, 56, 6, 6, 13, 62, 16, 81, 6, 6, 20, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 35, 63, 6, 9, 4, 6, 5, 3, 56, 3, 5, 4, 5, 4, 8, 6, 3, 23, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 4, 5, 4, 12, 4, 4, 15, 3, 5, 4, 7, 3, 4, 4, 33, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 3, 3, 3, 4, 3, 14, 4, 3, 4, 3, 4, 4, 29, 4, 8, 10, 67, 8, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 18, 3, 6, 4, 3, 59, 4, 3, 24, 3, 4, 4, 6, 32, 8, 3, 4, 21, 8, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 4, 4, 7, 8, 3, 296, 6, 10, 29, 5, 6, 4, 9, 3, 6, 4, 28, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 4, 3, 6, 4, 5, 3, 5, 26, 4, 4, 133, 4, 3, 3, 4, 18, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 34, 3, 4, 3, 4, 6, 24, 4, 4, 3, 3, 4, 96, 3, 8, 21, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 19, 3, 3, 558, 4, 5, 4, 3, 7, 6, 6, 8, 5, 4, 8, 6, 6, 20, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 33, 4, 3, 4, 4, 5, 4, 3, 3, 3, 5, 4, 6, 3, 4, 3, 74, 65, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 3, 3, 47, 4, 3, 132, 8, 6, 45, 3, 4, 4, 6, 3, 4, 4, 45, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 3, 12, 4, 6, 3, 5, 28, 7, 43, 4, 11, 6, 5, 5, 57, 5, 30, 36, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 18, 3, 13, 4, 3, 9, 3, 4, 73, 3, 4, 4, 6, 4, 4, 13, 22, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 3, 37, 3, 6, 3, 4, 3, 4, 3, 6, 4, 8, 4, 3, 22, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 6, 3, 6, 45, 7, 6, 17, 6, 17, 4, 6, 13, 6, 12, 5, 186, 6, 28, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 4, 3, 3, 4, 534, 3, 26, 3, 4, 4, 5, 4, 8, 3, 4, 20, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 17, 3, 3, 4, 4, 31, 4, 3, 33, 4, 4, 130, 4, 4, 4, 37, 8, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 4, 3, 4, 4, 9, 3, 4, 44, 4, 54, 3, 9, 4, 8, 4, 20, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 7, 6, 5, 4, 5, 4, 4, 6, 4, 4, 498, 619, 4, 68, 4, 6, 3, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [8, 79, 4, 4, 4, 4, 7, 5, 226, 5, 11, 30, 3, 3, 4, 5, 11, 4, 4, 5, 24, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 5, 4, 3, 3, 8, 3, 25, 42, 3, 4, 7, 4, 4, 13, 10, 56, 7, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 38, 5, 6, 6, 6, 6, 5, 6, 3, 6, 8, 9, 6, 8, 6, 3, 48, 10, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [7, 35, 3, 5, 3, 3, 3, 4, 9, 37, 14, 29, 3, 3, 3, 6, 7, 21, 3, 20, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 5, 8, 6, 8, 6, 35, 8, 5, 4, 4, 29, 3, 4, 4, 6, 32, 8, 3, 20, 46, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 4, 3, 6, 3, 8, 6, 4, 7, 4, 4, 8, 33, 6, 3, 3, 4, 3, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 18, 30, 6, 45, 4, 6, 43, 28, 7, 3, 3, 5, 111, 6, 8, 5, 3, 20, 3, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 4, 61, 4, 6, 6, 4, 4, 318, 4, 6, 4, 3, 3, 3, 101, 4, 6, 10, 3, 3, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 18, 3, 6, 110, 3, 5, 5, 20, 124, 3, 4, 59, 6, 9, 4, 3, 6, 20, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 19, 5, 3, 13, 3, 6, 5, 4, 8, 3, 3, 6, 3, 3, 3, 5, 6, 7, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 5, 3, 4, 20, 4, 3, 5, 5, 6, 6, 6, 138, 4, 4, 4, 4, 9, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 3, 4, 5, 39, 5, 18, 4, 5, 3, 211, 3, 4, 3, 4, 31, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 4, 3, 4, 3, 5, 4, 5, 4, 4, 4, 4, 5, 4, 4, 3, 9, 36, 34, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 115, 3, 5, 4, 4, 4, 3, 4, 6, 4, 4, 4, 4, 21, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 3, 4, 3, 6, 4, 4, 34, 4, 4, 4, 10, 8, 3, 4, 3, 3, 114]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 6, 4, 4, 3, 4, 7, 23, 4, 4, 4, 4, 145, 5, 31, 3, 4, 4, 3, 6, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 3, 4, 4, 6, 5, 4, 3, 4, 3, 4, 6, 4, 4, 50, 4, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 34, 11, 8, 38, 6, 8, 193, 4, 8, 6, 4, 4, 7, 4, 3, 4, 3, 33, 34, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 32, 6, 3, 3, 3, 6, 23, 6, 3, 3, 4, 83, 100, 82, 3, 5, 20, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 10, 6, 3, 4, 3, 6, 3, 3, 6, 8, 3, 13, 41, 13, 7, 11, 20, 3, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [3, 12, 3, 31, 4, 3, 3, 14, 6, 118, 3, 25, 9, 7, 5, 6, 4, 8, 11, 3, 20, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 4, 3, 3, 6, 3, 35, 6, 6, 4, 5, 6, 3, 15, 6, 22, 7, 4, 4, 6, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [12, 4, 10, 54, 4, 3, 3, 4, 53, 27, 4, 4, 9, 6, 6, 3, 4, 4, 4, 34, 8, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 5, 4, 22, 3, 3, 61, 3, 4, 28, 3, 4, 3, 5, 4, 3, 3, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 7, 4, 6, 49, 3, 6, 74, 5, 28, 4, 3, 15, 6, 15, 8, 3, 23, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [9, 60, 4, 6, 3, 3, 7, 6, 7, 3, 6, 4, 3, 13, 12, 6, 12, 4, 3, 11, 8, 6, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 4, 4, 4, 4, 40, 7, 3, 3, 4, 5, 4, 5, 3, 8, 6, 117, 4, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 18, 4, 4, 3, 4, 6, 19, 4, 3, 4, 4, 8, 6, 4, 3, 3, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 36, 4, 15, 4, 8, 13, 30, 3, 47, 4, 3, 3, 33, 5, 8, 8, 4, 20, 5, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 71, 4, 7, 4, 3, 31, 23, 4, 3, 4, 4, 4, 40, 3, 4, 6, 32, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 3, 6, 3, 3, 6, 4, 4, 29, 4, 4, 6, 6, 3, 55, 4, 68, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 15, 16, 3, 51, 3, 50, 172, 5, 52, 3, 4, 3, 5, 4, 3, 4, 11, 4, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 5, 4, 4, 3, 22, 4, 28, 4, 4, 7, 5, 3, 4, 4, 20, 3, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 3, 26, 11, 5, 23, 4, 4, 4, 5, 217, 3, 3, 4, 3, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 3, 3, 4, 3, 5, 23, 7, 4, 3, 3, 5, 6, 3, 8, 8, 20, 3, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 4, 3, 4, 75, 26, 4, 186, 21, 6, 11, 6, 8, 10, 6, 9, 4, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 18, 3, 3, 3, 3, 6, 20, 3, 23, 3, 3, 3, 6, 3, 4, 4, 20, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 9, 29, 19, 4, 3, 6, 4, 6, 12, 36, 19, 5, 6, 4, 6, 4, 7, 8, 5, 37, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 4, 7, 3, 7, 3, 4, 5, 4, 4, 3, 6, 4, 3, 4, 17, 6, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 3, 4, 6, 4, 9, 6, 4, 3, 32, 5, 3, 4, 5, 4, 4, 4, 60, 13, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 18, 4, 9, 8, 5, 97, 19, 6, 57, 4, 3, 6, 3, 8, 8, 4, 3, 4, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 19, 8, 3, 8, 6, 6, 82, 4, 14, 3, 3, 3, 6, 6, 8, 4, 4, 37, 3, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 9, 3, 6, 10, 6, 8, 74, 4, 72, 4, 5, 8, 7, 405, 6, 6, 46, 7, 18]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 10, 3, 6, 3, 5, 35, 6, 134, 38, 4, 37, 484, 7, 3, 5, 3, 8, 3, 11, 49, 3, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 8, 3, 3, 22, 8, 6, 4, 3, 35, 3, 4, 7, 7, 8, 3, 3, 18, 3, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 6, 4, 4, 4, 3, 6, 3, 3, 7, 5, 3, 6, 4, 3, 4, 20, 6, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 38, 4, 3, 4, 4, 5, 36, 3, 35, 4, 4, 3, 5, 3, 8, 4, 22, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 5, 6, 3, 73, 4, 4, 4, 3, 3, 3, 14, 6, 3, 3, 4, 4, 3, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 5, 3, 3, 4, 3, 5, 31, 3, 30, 4, 3, 12, 6, 4, 3, 3, 20, 24, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 3, 4, 3, 3, 247, 20, 5, 4, 4, 3, 114, 4, 4, 3, 4, 20, 42, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 3, 74, 3, 7, 4, 3, 86, 3, 4, 8, 11, 8, 10, 17, 4, 72, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 85, 3, 3, 70, 3, 6, 81, 4, 32, 3, 3, 6, 4, 3, 3, 83, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 20, 3, 3, 4, 4, 7, 5, 5, 35, 4, 3, 4, 7, 4, 5, 3, 7, 20, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 9, 3, 4, 5, 4, 5, 3, 4, 4, 4, 4, 5, 6, 4, 8, 4, 3, 5, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 36, 3, 3, 3, 3, 6, 27, 3, 32, 4, 4, 3, 7, 5, 4, 4, 4, 19, 558, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 18, 4, 4, 28, 5, 6, 62, 4, 29, 4, 4, 4, 11, 4, 3, 3, 37, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 5, 12, 11, 40, 4, 5, 11, 4, 3, 4, 4, 4, 5, 3, 3, 157, 3, 9, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 3, 49, 3, 6, 4, 4, 33, 3, 3, 4, 6, 7, 3, 3, 3, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 18, 4, 4, 3, 3, 7, 4, 4, 3, 3, 13, 9, 10, 4, 3, 3, 28, 18, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 4, 4, 3, 3, 3, 6, 5, 3, 3, 3, 5, 8, 6, 4, 12, 6, 12, 3, 5, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 4, 3, 95, 330, 4, 3, 15, 6, 11, 3, 6, 5, 18, 3, 4, 32, 6, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 6, 10, 4, 3, 6, 6, 6, 39, 3, 6, 5, 8, 20, 110, 4, 3, 31, 4, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 65, 50, 3, 46, 3, 9, 48, 4, 56, 3, 10, 23, 6, 3, 3, 6, 29, 3, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 6, 6, 3, 6, 3, 3, 3, 4, 3, 15, 7, 3, 8, 4, 6, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 8, 5, 3, 28, 7, 6, 7, 3, 28, 3, 3, 8, 6, 9, 3, 6, 20, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [3, 6, 23, 3, 17, 8, 5, 4, 12, 9, 3, 38, 4, 3, 28, 9, 13, 8, 4, 11, 26, 6, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 3, 7, 361, 3, 56, 21, 3, 4, 3, 506, 4, 4, 4, 19, 15]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 19, 4, 4, 3, 5, 3, 4, 4, 3, 5, 137, 5, 3, 3, 4, 3, 3, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 19, 3, 3, 29, 3, 6, 24, 4, 29, 4, 3, 11, 6, 4, 4, 3, 4, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 4, 4, 40, 4, 5, 3, 4, 30, 3, 4, 5, 6, 5, 4, 41, 47, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 36, 4, 4, 4, 3, 5, 38, 4, 41, 3, 4, 63, 6, 62, 4, 3, 5, 80, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 5, 5, 10, 7, 492, 51, 59, 32, 4, 3, 3, 7, 3, 4, 3, 6, 31, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 49, 3, 5, 50, 4, 3, 5, 4, 6, 3, 48, 8, 330, 5, 7, 3, 28, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [45, 4, 5, 47, 4, 4, 36, 4, 139, 36, 4, 28, 4, 3, 4, 5, 4, 3, 4, 24, 41, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [13, 6, 4, 8, 3, 4, 3, 6, 42, 3, 3, 4, 3, 4, 6, 3, 3, 6, 4, 14]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 70, 4, 3, 3, 3, 6, 52, 4, 32, 4, 3, 55, 6, 52, 3, 4, 19, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [12, 4, 5, 18, 4, 3, 3, 4, 231, 3, 4, 20, 5, 3, 4, 6, 3, 3, 4, 28, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 46, 6, 6, 4, 171, 9, 31, 8, 32, 6, 6, 15, 9, 15, 11, 5, 3, 23, 3, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 3, 4, 3, 7, 3, 5, 4, 3, 3, 10, 6, 4, 4, 7, 3, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 18, 5, 4, 46, 3, 7, 22, 4, 20, 4, 3, 4, 7, 6, 4, 8, 143, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [3, 3, 10, 38, 5, 5, 4, 4, 6, 40, 4, 42, 4, 5, 4, 6, 26, 4, 5, 4, 26, 9, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 10, 3, 6, 3, 6, 26, 3, 26, 4, 10, 3, 6, 3, 3, 5, 26, 25, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 3, 3, 3, 4, 6, 3, 3, 26, 7, 3, 11, 7, 8, 6, 10, 3, 21, 175, 38]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 4, 8, 3, 478, 3, 6, 48, 3, 10, 7, 5, 15, 7, 15, 8, 3, 21, 29, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [14, 4, 5, 28, 4, 3, 4, 4, 6, 29, 8, 26, 5, 3, 3, 6, 3, 3, 3, 4, 65, 17, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [3, 14, 3, 18, 3, 3, 4, 6, 6, 19, 4, 3, 5, 4, 4, 106, 3, 3, 3, 24, 4, 29]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 3, 4, 3, 6, 3, 3, 6, 3, 3, 6, 4, 3, 3, 4, 20, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 28, 425, 4, 3, 3, 9, 29, 3, 32, 3, 4, 3, 9, 6, 4, 4, 375, 7, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 4, 3, 192, 59, 4, 3, 3, 3, 3, 6, 8, 5, 4, 4, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 9, 29, 3, 121, 3, 4, 4, 3, 3, 3, 9, 4, 4, 5, 3, 116, 7, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 22, 4, 5, 4, 3, 6, 19, 3, 22, 9, 3, 4, 6, 3, 3, 3, 4, 3, 3, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 66, 3, 6, 8, 5, 6, 61, 7, 66, 3, 11, 58, 65, 32, 3, 8, 8, 4, 324, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 3, 10, 3, 4, 6, 3, 3, 4, 3, 3, 5, 76, 4, 3, 4, 4, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 5, 3, 3, 53, 5, 6, 4, 4, 3, 6, 3, 3, 3, 3, 3, 3, 120, 3, 11]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 6, 3, 4, 3, 4, 251, 4, 5, 4, 5, 3, 4, 6, 13, 4, 20, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 6, 4, 3, 3, 4, 3, 4, 4, 6, 3, 3, 8, 14, 8, 336, 4, 6, 9, 6, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 54, 6, 56, 6, 7, 27, 4, 26, 4, 6, 205, 5, 8, 3, 6, 20, 6, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 35, 4, 3, 4, 6, 4, 6, 38, 4, 4, 3, 6, 4, 8, 3, 4, 20, 7, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 6, 4, 4, 3, 7, 7, 150, 28, 8, 3, 55, 33, 56, 3, 5, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [6, 4, 11, 3, 4, 3, 3, 4, 140, 3, 4, 4, 39, 5, 4, 10, 10, 8, 4, 8, 4, 14, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 3, 3, 3, 3, 6, 3, 6, 3, 4, 3, 4, 7, 4, 4, 3, 3, 24, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 3, 4, 6, 7, 3, 9, 4, 3, 4, 4, 7, 3, 4, 3, 3, 25, 189]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 3, 3, 4, 3, 6, 4, 4, 3, 4, 5, 3, 6, 8, 9, 4, 4, 4, 13, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 3, 44, 7, 4, 3, 3, 3, 8, 3, 5, 3, 6, 200, 8, 435, 3, 3, 9, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 3, 7, 3, 7, 6, 3, 3, 11, 3, 5, 3, 6, 5, 3, 3, 6, 3, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 4, 4, 4, 3, 3, 8, 4, 4, 19, 4, 4, 4, 8, 4, 9, 4, 5, 3, 13]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 18, 4, 8, 8, 8, 7, 19, 4, 22, 3, 6, 3, 13, 8, 4, 6, 20, 12, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 18, 3, 3, 6, 7, 4, 4, 41, 10, 4, 4, 11, 8, 4, 4, 36, 63, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 5, 4, 4, 4, 245, 3, 3, 3, 3, 4, 6, 7, 6, 3, 4, 3, 51, 8, 12]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 3, 8, 4, 3, 6, 7, 30, 36, 29, 7, 8, 3, 43, 93, 8, 3, 10, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 18, 5, 3, 23, 6, 23, 38, 3, 23, 4, 4, 3, 6, 4, 13, 4, 39, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 16, 7, 91, 3, 3, 49, 17, 3, 3, 3, 7, 3, 49, 4, 72, 3, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 35, 4, 3, 3, 4, 6, 4, 3, 5, 71, 3, 61, 3, 3, 3, 3, 20, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 6, 5, 3, 11, 6, 4, 3, 30, 3, 3, 6, 3, 3, 4, 4, 3, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777572384
