┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1364_W
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1364_W
----------------------------------
number of metabolites : 1927
number of reactions : 2764
number of genes : 1364

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2764 flux variables and 5184 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 14, 14, 14, 14, 14, 14, 14, 15, 12, 11, 11, 11, 12, 11, 15, 17, 15, 14, 14, 14, 2, 2, 54, 3, 7, 14, 4, 14, 11, 17]
length(C_list) = 7
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 5, 12, 15, 15, 15, 16, 15, 15, 15, 16, 11, 11, 15, 11, 11, 11, 11, 11, 15, 3, 15, 15, 6, 6, 3, 15, 2, 2, 15, 4, 15, 4, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 14, 14, 14, 14, 14, 14, 14, 11, 11, 11, 11, 11, 11, 11, 28, 14, 6, 14, 14, 2, 7, 5, 14, 4, 14, 164, 14, 17]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 77, 14, 14, 14, 14, 14, 14, 14, 11, 11, 11, 11, 11, 11, 11, 14, 2, 14, 14, 6, 6, 6, 14, 3, 2, 14, 5, 38, 2, 17]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 16, 137, 16, 16, 16, 16, 16, 16, 12, 12, 12, 12, 12, 12, 12, 17, 16, 16, 6, 2, 3, 16, 2, 35, 16, 6, 16, 19]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 7, 2, 15, 15, 15, 15, 15, 15, 15, 11, 11, 11, 11, 11, 11, 11, 15, 15, 15, 6, 5, 19, 6, 3, 15, 5, 15, 2, 28]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [22, 6, 49, 20, 17, 17, 17, 17, 17, 17, 17, 11, 11, 11, 12, 11, 11, 20, 11, 18, 6, 17, 17, 3, 6, 6, 17, 6, 7, 17, 6, 19, 6, 20]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 14, 14, 14, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 14, 11, 14, 6, 14, 14, 33, 3, 74, 15, 7, 14, 6, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 14, 14, 14, 14, 14, 14, 14, 11, 11, 11, 11, 11, 11, 11, 15, 7, 15, 18, 11, 8, 6, 14, 6, 14, 9, 14, 19]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 14, 14, 14, 14, 14, 14, 14, 11, 11, 11, 11, 11, 11, 11, 14, 5, 14, 17, 5, 6, 6, 18, 6, 15, 11, 20, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 14, 14, 14, 14, 14, 67, 20, 18, 160, 149, 48, 11, 11, 11, 11, 11, 19, 16, 14, 14, 14, 2, 6, 8, 14, 6, 6, 14, 6, 14, 6, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 17, 17, 17, 17, 19, 17, 17, 19, 11, 11, 12, 11, 11, 11, 17, 11, 6, 19, 6, 32, 8, 17, 17, 6, 6, 9, 17, 5, 9, 17, 6, 17, 9, 20]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 17, 14, 16, 14, 14, 14, 14, 14, 14, 11, 11, 18, 17, 19, 28, 11, 11, 17, 6, 14, 14, 10, 6, 7, 209, 6, 121, 14, 12, 14, 6, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 14, 14, 14, 14, 14, 14, 14, 15, 15, 12, 11, 11, 11, 85, 11, 11, 14, 6, 16, 14, 9, 2, 6, 14, 6, 17, 7, 24, 6, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 14, 14, 14, 111, 14, 14, 14, 223, 11, 11, 14, 11, 11, 11, 11, 11, 14, 6, 15, 14, 6, 7, 8, 14, 6, 6, 14, 2, 14, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 7, 14, 14, 14, 14, 14, 14, 14, 17, 11, 11, 11, 11, 11, 11, 11, 14, 7, 197, 14, 6, 191, 7, 14, 6, 14, 7, 14, 6, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 14, 14, 14, 14, 14, 21, 14, 11, 11, 11, 11, 11, 11, 11, 14, 14, 15, 14, 6, 3, 6, 38, 6, 7, 21, 8, 14, 8, 20]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 10, 15, 14, 235, 125, 14, 17, 14, 14, 14, 11, 215, 14, 11, 11, 12, 12, 11, 136, 14, 6, 17, 14, 3, 6, 6, 14, 3, 6, 14, 6, 19, 17]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 14, 14, 14, 22, 106, 14, 14, 16, 11, 32, 14, 11, 11, 11, 11, 14, 11, 42, 26, 14, 14, 6, 7, 7, 23, 6, 6, 20, 7, 14, 7, 17]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 2, 6, 2, 2, 2, 4, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 6, 9, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 7, 6, 5, 12, 13, 14, 15, 10]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 3, 4, 4, 4, 4, 5, 4, 4, 3, 5, 3, 4, 5, 4, 4, 7, 4, 4, 5, 4, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 10, 3, 4, 5, 4, 6, 4, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.985364910524074
thermo_feasible = true
