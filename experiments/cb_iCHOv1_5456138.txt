ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1
----------------------------------
number of metabolites : 4456
number of reactions : 6663
number of genes : 1766

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 133
max_cuts = 33
(indicator, big_m) = (false, true)
BIG M ADDED
model with 6663 flux variables and 12684 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [20, 3, 4, 3, 4, 5, 46, 7, 6, 452, 4, 32, 2, 7, 4, 4, 4, 26, 5, 4, 4, 3, 3, 4, 47, 4, 4, 4, 2, 8, 5, 4, 4, 4, 105, 291, 307, 4, 40, 3, 16, 80, 247, 354, 6, 84, 16, 10, 316, 232, 4, 4, 3, 5, 335, 11, 263, 4]
length(C_list) = 33
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 5, 9, 4, 298, 5, 4, 4, 4, 7, 7, 3, 3, 22, 17, 7, 3, 4, 3, 4, 4, 4, 28, 4, 3, 364, 4, 4, 6, 3, 4, 4, 58, 15, 4, 5, 4, 61, 14, 9, 4, 47, 4, 5, 8, 168, 5, 4, 4, 6, 4, 93, 4, 45]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 3, 7, 5, 4, 5, 4, 4, 6, 4, 4, 4, 11, 5, 5, 4, 4, 12, 6, 4, 5, 11, 6, 4, 8, 4, 11, 7, 28, 8, 2, 3, 158, 5, 4, 4, 7, 9, 525, 4, 3, 4, 8, 6, 16, 11, 4, 7, 6, 27, 189, 20]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 5, 4, 4, 8, 4, 4, 4, 53, 8, 4, 5, 8, 55, 5, 18, 4, 15, 3, 7, 54, 307, 5, 6, 6, 4, 5, 4, 3, 6, 3, 4, 239, 4, 4, 301, 6, 7, 24, 6, 4, 4, 30, 5, 68, 11, 5, 5, 5, 26, 188, 4, 4, 6, 11, 4, 44, 6, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 8, 5, 4, 8, 4, 4, 5, 9, 4, 212, 3, 4, 3, 4, 4, 20, 3, 4, 5, 11, 4, 4, 4, 6, 206, 7, 4, 4, 4, 3, 5, 4, 5, 284, 107, 117, 279, 317, 7, 4, 4, 132, 6, 349, 4, 6, 13, 6, 4, 237, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 5, 3, 5, 411, 8, 6, 4, 6, 11, 4, 4, 5, 33, 4, 14, 4, 2, 4, 6, 9, 5, 4, 4, 7, 452, 4, 5, 5, 10, 3, 5, 4, 5, 340, 13, 4, 4, 7, 34, 4, 272, 10, 6, 36, 9, 7, 8, 8, 5, 24]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 12, 4, 6, 3, 5, 4, 9, 7, 11, 40, 5, 17, 6, 8, 6, 15, 4, 7, 3, 671, 4, 6, 5, 4, 4, 139, 238, 85, 8, 6, 5, 5, 6, 140, 3, 223, 5, 4, 6, 17, 5, 5, 4, 6, 4, 4, 4, 4, 8, 12, 11, 4, 4, 4, 4, 5, 11, 354, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 76, 3, 8, 7, 4, 5, 5, 4, 589, 4, 3, 5, 5, 5, 14, 22, 9, 6, 164, 4, 6, 23, 3, 3, 713, 6, 3, 226, 67, 4, 3, 6, 5, 4, 106, 4, 7, 40, 6, 4, 6, 5, 225, 4, 10, 6, 4, 4, 224, 4, 351, 4, 15, 5, 20, 93, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 7, 4, 6, 4, 4, 7, 4, 5, 9, 8, 14, 15, 4, 7, 16, 5, 220, 10, 6, 5, 8, 5, 5, 6, 4, 5, 4, 4, 4, 10, 4, 4, 5, 4, 13, 278, 16, 7, 6, 26, 23, 4, 5, 4, 5, 260, 32, 126, 61, 7, 17, 4, 6, 17, 119, 5, 5, 5, 5, 4, 8, 11, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 9, 4, 3, 3, 4, 5, 9, 49, 6, 4, 162, 67, 56, 8, 8, 4, 3, 15, 5, 5, 5, 7, 6, 4, 203, 4, 4, 12, 6, 27, 3, 5, 9, 386, 120, 7, 56, 4, 27, 5, 4, 5, 10, 6, 4, 4, 12, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 4, 7, 7, 7, 7, 5, 4, 35, 10, 7, 11, 4, 6, 5, 5, 23, 5, 3, 15, 4, 4, 6, 4, 4, 6, 5, 8, 4, 5, 7, 7, 4, 4, 4, 36, 14, 7, 5, 4, 6, 11, 69, 7, 3, 4, 5, 5, 9, 170, 3, 10, 12, 10, 7, 5, 133, 6, 4, 4, 10, 4, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 142, 4, 4, 10, 4, 4, 3, 7, 6, 3, 7, 7, 4, 3, 4, 10, 14, 4, 7, 22, 4, 8, 13, 8, 4, 12, 7, 6, 10, 4, 7, 4, 131, 76, 22, 4, 4, 5, 4, 4, 4, 72, 4, 461, 12, 6, 6, 4, 11, 9, 8, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 130, 5, 5, 5, 5, 130, 4, 4, 14, 5, 4, 4, 15, 4, 7, 15, 7, 9, 155, 10, 351, 4, 11, 4, 4, 33, 4, 5, 3, 7, 4, 13, 5, 4, 4, 4, 5, 5, 4, 188, 7, 173, 5, 531, 363, 5, 308, 5, 5, 37, 4, 6, 3, 4, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 7, 4, 4, 7, 6, 4, 8, 221, 25, 5, 8, 6, 55, 38, 359, 8, 272, 7, 5, 4, 4, 6, 5, 3, 7, 25, 4, 4, 309, 4, 6, 14, 5, 4, 4, 5, 153, 4, 4, 5, 271, 6, 10, 34, 10, 18, 37, 5, 162, 4, 13, 107, 5, 6, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 4, 4, 5, 33, 5, 4, 6, 6, 8, 4, 4, 7, 6, 16, 124, 4, 6, 5, 6, 6, 19, 92, 4, 12, 6, 4, 4, 8, 4, 6, 22, 5, 8, 7, 4, 3, 71, 110, 10, 10, 29, 7, 4, 60, 5, 42, 19, 7, 5, 188, 6, 27]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 7, 6, 4, 3, 7, 4, 5, 6, 199, 5, 5, 55, 5, 10, 5, 14, 10, 9, 9, 6, 9, 17, 5, 7, 9, 4, 8, 9, 7, 5, 5, 5, 5, 75, 4, 9, 114, 179, 63, 92, 7, 14, 5, 13, 31, 278, 78, 5, 10, 63, 4, 6, 6, 22, 4, 393, 96, 5, 210, 4, 55]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 5, 189, 6, 7, 9, 3, 9, 7, 4, 6, 12, 29, 4, 7, 5, 7, 6, 12, 10, 5, 59, 3, 5, 6, 6, 6, 5, 116, 460, 445, 7, 19, 5, 6, 7, 95, 5, 170, 6, 4, 84, 14, 6, 4, 4, 7, 5, 4, 6, 44, 4, 131, 235, 122, 29, 297, 4, 12, 9, 10, 23]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 7, 4, 4, 9, 9, 15, 56, 11, 3, 52, 4, 32, 53, 5, 8, 15, 4, 4, 5, 10, 5, 5, 11, 4, 6, 43, 7, 8, 5, 6, 4, 7, 4, 9, 22, 4, 95, 5, 5, 4, 4, 5, 15, 10, 26, 6, 18, 21, 4, 19, 12, 8, 17, 15, 11, 180]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 4, 21, 3, 4, 85, 71, 10, 493, 213, 13, 8, 3, 7, 15, 4, 4, 4, 314, 5, 183, 5, 8, 9, 11, 9, 6, 3, 80, 132, 9, 7, 17, 4, 134, 68, 8, 22, 13, 6, 5, 120, 10, 18, 4, 6, 3, 308, 309, 4, 40]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 10, 3, 6, 4, 6, 5, 6, 7, 8, 23, 4, 13, 4, 9, 11, 6, 7, 6, 14, 5, 4, 5, 3, 9, 7, 4, 5, 5, 270, 14, 8, 11, 3, 4, 6, 6, 5, 11, 10, 51, 5, 249, 8, 166, 66, 33, 4, 5, 94, 3, 11, 290, 211, 22, 7, 17, 291, 32, 294, 214, 5, 72]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [11, 3, 5, 6, 6, 7, 11, 5, 98, 9, 19, 7, 4, 7, 6, 5, 23, 4, 352, 10, 7, 5, 8, 8, 7, 6, 407, 6, 4, 14, 5, 7, 252, 161, 69, 5, 31, 4, 5, 6, 335, 10, 7, 11, 5, 8, 24, 22, 26, 13, 52, 8, 55, 21, 4, 7, 6, 8, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [13, 6, 5, 7, 16, 8, 11, 7, 5, 5, 5, 5, 11, 8, 6, 6, 5, 4, 14, 5, 15, 4, 9, 13, 4, 7, 54, 218, 5, 49, 6, 6, 5, 11, 10, 5, 6, 15, 496, 17, 317, 7, 4, 30, 6, 460, 23, 6, 6, 4, 8, 10, 9, 77, 7, 26, 5, 19, 217, 428, 12, 5, 122, 7, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 5, 210, 20, 20, 169, 10, 186, 3, 17, 12, 44, 20, 348, 17, 113, 6, 3, 14, 3, 5, 19, 4, 26, 6, 3, 6, 384, 133, 3, 3, 4, 19, 14, 184, 15, 10, 8, 11, 5, 12, 9, 3, 12, 225, 10, 3, 207, 16, 130, 8, 15, 68, 8, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 5, 7, 8, 3, 6, 4, 4, 9, 8, 23, 9, 12, 4, 4, 77, 4, 4, 6, 4, 4, 4, 7, 4, 28, 4, 3, 8, 9, 4, 4, 89, 3, 9, 8, 20, 6, 456, 4, 3, 115, 6, 4, 5, 7, 8, 6, 34, 177, 6, 4, 18, 5, 6, 4, 9, 4, 239, 68]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 40, 15, 57, 47, 8, 11, 45, 10, 138, 47, 11, 168, 13, 4, 7, 4, 160, 5, 6, 493, 223, 4, 3, 4, 4, 4, 4, 10, 3, 4, 5, 22, 5, 4, 27, 4, 5, 187, 4, 73, 8, 3, 10, 6, 69, 54, 3, 7, 138, 74, 8, 6, 114, 228]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [22, 6, 67, 6, 35, 9, 4, 21, 4, 35, 366, 112, 19, 8, 6, 4, 15, 4, 6, 224, 4, 8, 4, 5, 119, 4, 5, 8, 6, 4, 4, 149, 6, 13, 85, 415, 16, 27, 63, 4, 5, 4, 214, 10, 5, 336, 32, 29, 40, 12, 5, 4, 4, 101, 4, 164, 8, 341]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 10, 4, 124, 4, 4, 25, 9, 4, 37, 5, 215, 191, 6, 4, 4, 4, 290, 4, 4, 9, 8, 74, 4, 5, 7, 117, 10, 351, 206, 4, 5, 434, 4, 10, 6, 161, 226, 4, 141, 255, 7, 7, 5, 11, 6, 83, 8, 12, 10, 152, 5, 4, 132, 9, 6, 322, 207, 7, 162, 18]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [13, 5, 3, 10, 27, 4, 4, 15, 4, 12, 77, 11, 3, 6, 5, 22, 3, 4, 3, 4, 5, 20, 3, 101, 3, 5, 7, 3, 10, 6, 94, 12, 10, 4, 33, 5, 160, 3, 5, 5, 65, 87, 11, 8, 15, 10, 407, 11, 4, 10, 4, 83, 27, 7, 8, 4, 4, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 9, 58, 5, 7, 6, 6, 4, 140, 51, 40, 335, 9, 41, 9, 54, 54, 4, 14, 5, 240, 4, 7, 4, 180, 7, 263, 41, 45, 240, 77, 4, 7, 19, 155, 4, 56, 52, 9, 5, 15, 5, 4, 7, 6, 6, 181, 4, 12, 70, 4, 4, 4, 9, 10, 7, 8, 6, 42, 62, 229, 497, 3, 11, 14, 45]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 3, 14, 92, 20, 5, 4, 3, 21, 88, 23, 11, 45, 4, 21, 49, 17, 12, 5, 4, 274, 52, 7, 4, 5, 9, 7, 4, 4, 27, 4, 7, 7, 4, 326, 274, 4, 6, 5, 124, 3, 6, 5, 5, 13, 4, 10, 11, 4, 353, 13, 4, 49, 9, 21, 56, 9, 6, 25, 195, 9, 3, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 5, 31, 5, 5, 4, 29, 130, 4, 12, 20, 8, 7, 5, 14, 13, 14, 3, 13, 11, 5, 10, 9, 90, 15, 4, 5, 7, 4, 4, 3, 18, 7, 10, 6, 5, 389, 4, 5, 4, 6, 4, 6, 20, 10, 4, 7, 11, 56, 41, 76, 90, 200, 10, 18, 6, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 8, 4, 122, 9, 7, 4, 15, 12, 25, 4, 9, 4, 12, 4, 4, 4, 6, 4, 7, 6, 4, 5, 6, 7, 8, 4, 183, 4, 7, 7, 248, 5, 18, 24, 4, 10, 30, 9, 4, 6, 4, 84, 5, 9, 4, 4, 11, 10, 499, 14, 4, 15, 8, 4, 9, 44, 10, 45]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [12, 4, 12, 4, 5, 6, 5, 10, 4, 13, 27, 5, 9, 6, 4, 27, 16, 26, 3, 6, 5, 5, 121, 10, 5, 4, 233, 4, 4, 75, 6, 12, 10, 374, 4, 18, 5, 91, 16, 8, 5, 5, 4, 192, 5, 7, 8, 4, 6, 11, 23, 5, 12, 5, 15, 40, 163, 91, 5, 37]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 4, 4, 4, 6, 7, 20, 42, 21, 258, 44, 5, 50, 42, 5, 118, 4, 29, 4, 6, 4, 77, 4, 4, 26, 5, 6, 4, 7, 4, 4, 4, 4, 4, 3, 6, 10, 7, 5, 4, 4, 4, 3, 4, 100, 4, 94, 4, 4, 6, 5, 35, 3, 324, 4, 12, 7, 15, 20, 5, 20, 7, 77]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 6, 6, 67, 4, 4, 19, 7, 37, 195, 4, 8, 28, 4, 201, 7, 12, 6, 6, 6, 7, 9, 4, 4, 432, 7, 6, 4, 4, 12, 3, 4, 240, 5, 4, 4, 4, 347, 12, 4, 4, 608, 5, 134, 102, 35, 13, 4, 133, 6, 5, 24, 4, 6, 3, 4, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4, 3, 7, 5, 11, 328, 337, 210, 16, 15, 544, 6, 16, 104, 4, 4, 4, 4, 7, 9, 152, 4, 4, 10, 6, 4, 4, 4, 4, 6, 5, 4, 4, 13, 4, 9, 4, 6, 3, 302, 5, 56, 6, 11, 4, 192, 3, 19, 8, 6, 6, 5, 16, 5, 190, 16, 5, 37, 210]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 5, 3, 4, 7, 7, 4, 26, 313, 259, 10, 44, 9, 114, 187, 8, 19, 22, 5, 9, 4, 12, 4, 7, 55, 3, 3, 5, 4, 7, 5, 4, 380, 12, 4, 7, 266, 111, 210, 5, 6, 5, 14, 3, 4, 4, 8, 24, 10, 77, 7, 10, 6, 17, 4, 20, 6, 5, 8, 7, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [25, 3, 8, 9, 11, 668, 218, 26, 11, 10, 6, 139, 4, 4, 3, 13, 3, 36, 16, 13, 53, 226, 3, 7, 15, 5, 6, 5, 12, 6, 4, 7, 138, 12, 7, 3, 38, 4, 9, 33, 6, 10, 19, 26, 378, 7, 13, 18, 22, 7, 372, 10, 16, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [6, 16, 10, 3, 4, 4, 3, 9, 8, 7, 9, 23, 5, 7, 209, 5, 6, 8, 5, 18, 4, 4, 14, 4, 7, 4, 4, 3, 14, 3, 9, 10, 7, 6, 3, 13, 8, 29, 4, 9, 12, 8, 5, 15, 9, 325, 8, 7, 53, 3, 8, 42, 5, 17, 23, 5, 7, 3, 21]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [16, 86, 103, 5, 9, 4, 14, 5, 16, 54, 17, 25, 62, 4, 16, 62, 12, 82, 14, 5, 6, 6, 89, 4, 9, 7, 6, 4, 10, 3, 242, 5, 4, 8, 17, 4, 181, 4, 5, 4, 7, 14, 5, 55, 39, 7, 8, 23, 174, 107, 504, 11, 204, 6, 8, 16, 4, 9, 5, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 5, 7, 6, 6, 22, 23, 7, 24, 10, 7, 25, 28, 72, 15, 32, 4, 9, 4, 4, 57, 4, 4, 4, 5, 84, 5, 141, 5, 12, 12, 3, 3, 4, 4, 13, 10, 4, 51, 5, 14, 260, 5, 11, 4, 4, 8, 40, 4, 55, 7, 7, 5, 15, 3, 12, 181, 5, 16, 475, 6, 115]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 15, 5, 5, 80, 4, 14, 8, 30, 12, 416, 3, 30, 31, 6, 29, 19, 4, 150, 4, 5, 5, 22, 36, 4, 4, 4, 23, 4, 125, 7, 6, 4, 10, 17, 5, 31, 6, 4, 4, 4, 6, 19, 82, 8, 4, 10, 9, 5, 4, 10, 6, 543, 3, 5, 12, 21, 5, 7, 16, 440, 5, 39]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 3, 17, 7, 8, 30, 44, 26, 6, 41, 7, 46, 53, 3, 24, 87, 5, 4, 5, 9, 28, 4, 6, 9, 101, 6, 5, 5, 7, 8, 135, 28, 55, 5, 5, 25, 4, 7, 164, 7, 143, 4, 3, 134, 16, 9, 4, 6, 9, 9, 9, 13, 13, 7, 12, 4, 8, 37, 8, 10, 166]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [7, 26, 4, 13, 5, 37, 3, 5, 4, 16, 4, 5, 6, 5, 11, 14, 8, 5, 124, 6, 4, 4, 5, 9, 7, 8, 3, 4, 8, 8, 6, 239, 4, 18, 17, 3, 6, 95, 57, 13, 4, 8, 5, 5, 14, 369, 41, 5, 6, 5, 4, 7, 6, 5, 4, 14, 36, 132, 4, 4, 396, 160, 26]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 197, 7, 7, 3, 3, 4, 25, 3, 65, 30, 6, 17, 12, 17, 11, 11, 173, 4, 7, 8, 7, 3, 8, 4, 4, 5, 19, 12, 6, 11, 13, 5, 8, 57, 20, 6, 6, 7, 10, 3, 10, 268, 12, 6, 267, 14, 11, 83, 4, 126, 4, 9, 12, 5, 48, 16, 6, 295, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 6, 7, 5, 7, 5, 6, 138, 10, 377, 6, 10, 8, 13, 4, 25, 12, 4, 14, 4, 536, 7, 58, 6, 8, 10, 5, 58, 4, 9, 5, 3, 12, 11, 4, 4, 19, 6, 5, 7, 9, 302, 4, 20, 7, 4, 114, 30, 4, 5, 4, 14, 6, 10, 14, 234, 8, 5, 10, 4, 19]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 6, 3, 5, 3, 37, 8, 282, 19, 8, 13, 16, 4, 4, 18, 193, 99, 17, 4, 4, 10, 3, 7, 7, 4, 4, 28, 5, 86, 6, 9, 7, 4, 13, 4, 3, 5, 5, 8, 5, 97, 5, 168, 33, 4, 4, 21, 23, 15, 185, 13, 6, 9, 27, 4, 16, 166, 7, 31, 6, 22, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 4, 9, 6, 4, 600, 10, 7, 11, 58, 5, 8, 494, 1039, 12, 13, 4, 4, 5, 14, 4, 253, 19, 35, 248, 12, 6, 5, 10, 4, 11, 241, 4, 18, 4, 5, 7, 9, 8, 3, 4, 4, 4, 141, 5, 8, 6, 9, 9, 14, 235, 15, 101, 5, 11, 3, 42]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 8, 12, 9, 6, 75, 13, 10, 326, 6, 15, 7, 19, 17, 5, 259, 30, 67, 229, 4, 4, 13, 140, 171, 6, 8, 9, 7, 20, 5, 10, 8, 98, 25, 6, 6, 8, 7, 209, 3, 552, 182, 6, 25, 15, 191, 49, 9, 6, 5, 24, 147, 4, 79, 8, 299, 7, 25]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [12, 8, 5, 5, 6, 5, 9, 517, 5, 7, 10, 7, 4, 5, 5, 6, 6, 14, 9, 3, 453, 125, 476, 9, 4, 66, 4, 5, 318, 4, 11, 50, 138, 4, 9, 12, 9, 5, 239, 39, 7, 5, 118, 4, 199, 3, 8, 10, 32, 153, 13, 411, 12, 8, 6, 4, 33, 26]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 11, 11, 6, 4, 21, 6, 29, 15, 33, 9, 26, 19, 33, 19, 11, 15, 6, 5, 4, 5, 7, 4, 8, 12, 81, 12, 4, 9, 14, 13, 4, 12, 11, 6, 9, 15, 447, 8, 5, 18, 4, 196, 7, 4, 9, 53, 3, 4, 22, 4, 34, 57, 401, 13, 35]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 11, 6, 38, 3, 21, 17, 39, 24, 18, 32, 33, 11, 268, 7, 8, 18, 69, 4, 3, 3, 11, 4, 146, 4, 410, 43, 489, 10, 104, 7, 4, 8, 4, 20, 8, 5, 4, 54, 20, 5, 15, 131, 7, 8, 3, 209, 10, 39, 14, 4, 5, 38, 21, 25]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 6, 5, 8, 3, 7, 20, 22, 317, 23, 8, 23, 23, 7, 20, 4, 8, 3, 4, 5, 49, 5, 4, 4, 4, 5, 167, 7, 4, 4, 71, 4, 5, 14, 7, 30, 25, 128, 5, 5, 21, 28, 6, 7, 293, 25, 250, 7, 7, 6, 7, 264]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 5, 7, 8, 20, 17, 4, 21, 11, 4, 5, 37, 7, 572, 283, 7, 5, 6, 4, 17, 6, 40, 13, 17, 3, 111, 5, 13, 4, 4, 7, 3, 3, 511, 9, 10, 6, 5, 6, 4, 10, 7, 87, 174, 10, 4, 6, 159, 13, 532, 282, 301, 19, 8, 9, 4, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [8, 5, 9, 455, 6, 8, 468, 6, 43, 7, 21, 14, 12, 12, 5, 237, 322, 180, 84, 18, 6, 9, 9, 39, 9, 77, 7, 5, 4, 114, 211, 7, 10, 4, 3, 7, 3, 10, 7, 191, 43, 11, 23, 4, 4, 3, 9, 4, 16, 10, 20, 3, 18, 454, 342, 3, 9, 126, 26]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 4, 7, 5, 5, 6, 727, 4, 15, 4, 6, 19, 9, 6, 7, 118, 4, 6, 320, 4, 5, 4, 6, 6, 6, 4, 117, 8, 338, 14, 4, 6, 19, 41, 10, 9, 9, 12, 6, 7, 8, 13, 6, 98, 4, 14, 6, 239, 7, 45, 497, 9, 8, 11, 10, 9, 11, 6, 54]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 9, 4, 8, 7, 9, 4, 31, 19, 29, 28, 13, 8, 29, 49, 36, 12, 39, 9, 167, 4, 10, 13, 5, 4, 9, 392, 7, 7, 8, 4, 6, 72, 4, 62, 4, 5, 4, 17, 8, 181, 6, 55, 22, 7, 7, 5, 10, 4, 81, 15, 6, 14, 123, 5, 42]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 4, 5, 4, 4, 38, 5, 3, 136, 11, 15, 10, 144, 10, 9, 4, 131, 3, 424, 5, 12, 4, 183, 149, 8, 7, 6, 112, 4, 11, 4, 4, 4, 4, 12, 9, 10, 40, 7, 7, 4, 3, 399, 214, 8, 8, 4, 4, 14, 8, 8, 5, 94, 9, 12, 84, 15, 7, 115, 4, 39]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [18, 7, 6, 7, 5, 7, 22, 7, 4, 6, 5, 6, 7, 12, 7, 16, 10, 3, 4, 8, 4, 8, 4, 3, 43, 165, 123, 10, 14, 4, 4, 6, 4, 90, 3, 4, 10, 8, 6, 11, 8, 106, 10, 4, 12, 5, 7, 7, 6, 28]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 17, 3, 3, 6, 7, 12, 16, 7, 11, 7, 13, 207, 38, 4, 8, 52, 9, 5, 257, 8, 8, 4, 5, 17, 10, 5, 3, 8, 7, 10, 24, 10, 11, 3, 5, 5, 38, 13, 5, 9, 5, 65, 8, 3, 3, 67, 7, 61, 7, 14, 8, 4, 8, 5, 7, 10, 27]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [11, 7, 11, 8, 6, 4, 8, 12, 6, 4, 28, 108, 5, 11, 10, 5, 4, 4, 10, 5, 4, 6, 20, 7, 3, 5, 6, 4, 350, 5, 10, 13, 7, 116, 12, 7, 5, 72, 6, 6, 5, 11, 257, 37, 11, 7, 80, 9, 19, 10, 5, 10, 66, 4, 8, 77, 4, 32, 213, 5, 86]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 9, 5, 4, 3, 11, 229, 13, 14, 10, 11, 4, 141, 8, 29, 26, 5, 5, 4, 169, 4, 13, 5, 14, 4, 244, 3, 13, 29, 4, 6, 5, 665, 4, 5, 242, 3, 203, 4, 59, 7, 5, 221, 7, 4, 10, 12, 5, 5, 282, 4, 14, 11, 4, 6, 222, 5, 24]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [15, 10, 9, 9, 12, 8, 23, 14, 21, 134, 12, 10, 5, 29, 673, 3, 9, 65, 53, 4, 28, 4, 5, 5, 16, 15, 3, 4, 117, 6, 9, 5, 4, 129, 6, 8, 21, 7, 6, 4, 4, 5, 4, 5, 4, 268, 13, 11, 203, 11, 4, 8, 5, 3, 12, 4, 9, 9, 21, 6, 25]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 5, 4, 6, 3, 3, 4, 5, 3, 5, 7, 11, 8, 49, 4, 466, 4, 4, 4, 6, 86, 422, 10, 4, 5, 7, 5, 10, 9, 4, 4, 3, 5, 115, 4, 4, 6, 4, 4, 4, 4, 26, 26, 9, 6, 15, 5, 5, 10, 285, 19, 56, 8, 4, 70]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 4, 5, 65, 5, 5, 5, 4, 6, 9, 7, 6, 31, 8, 12, 12, 4, 125, 4, 6, 9, 26, 8, 27, 4, 13, 5, 7, 8, 6, 20, 6, 6, 7, 7, 4, 16, 178, 15, 12, 5, 6, 21, 8, 5, 40, 7, 10, 7, 3, 6, 9, 7, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 5, 4, 6, 12, 9, 9, 29, 57, 4, 8, 7, 8, 198, 4, 5, 9, 5, 5, 10, 8, 4, 4, 4, 6, 9, 4, 412, 9, 4, 7, 5, 5, 6, 12, 24, 12, 15, 34, 6, 4, 11, 5, 6, 132, 6, 10, 112, 4, 22, 4, 4, 8, 9, 9, 4, 12, 10, 5, 4, 11, 32, 6, 42]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 22, 4, 12, 104, 649, 93, 15, 11, 44, 15, 14, 45, 15, 4, 5, 336, 4, 3, 8, 8, 14, 9, 6, 4, 133, 4, 6, 4, 6, 10, 11, 220, 4, 4, 4, 8, 26, 6, 95, 4, 16, 9, 23, 23, 10, 8, 265, 8, 5, 12, 9, 9, 10, 6, 9, 10, 7, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 6, 5, 47, 4, 16, 108, 6, 4, 6, 47, 3, 9, 19, 213, 4, 4, 4, 16, 9, 4, 7, 26, 4, 7, 140, 5, 62, 51, 7, 7, 7, 5, 12, 11, 4, 5, 7, 8, 9, 7, 4, 31, 11, 7, 4, 84, 4, 21, 7, 4, 8, 25, 79]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 3, 6, 10, 4, 7, 8, 25, 10, 4, 13, 4, 27, 12, 10, 6, 59, 6, 4, 4, 11, 6, 10, 5, 9, 6, 3, 91, 12, 5, 10, 6, 7, 25, 8, 10, 5, 26, 5, 115, 9, 7, 5, 7, 5, 6, 7, 12, 26, 10, 30, 6, 5, 12, 200, 7, 7, 6, 3, 26]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 8, 4, 4, 3, 80, 5, 13, 9, 14, 4, 5, 5, 10, 9, 421, 159, 4, 4, 9, 16, 4, 14, 231, 11, 4, 6, 10, 4, 6, 4, 11, 10, 7, 9, 7, 5, 49, 255, 11, 6, 9, 7, 7, 5, 12, 218, 11, 5, 6, 14, 145, 64, 6, 9, 13, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [3, 6, 10, 139, 5, 7, 28, 29, 3, 5, 41, 23, 24, 5, 26, 525, 6, 8, 7, 4, 5, 11, 8, 4, 4, 131, 13, 7, 5, 6, 5, 5, 327, 10, 9, 66, 8, 12, 12, 17, 423, 444, 4, 7, 5, 3, 9, 7, 17, 7, 6, 8, 12, 10, 116, 9, 4, 8, 7, 152, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 4, 7, 4, 4, 11, 11, 4, 4, 6, 8, 6, 15, 13, 54, 8, 11, 10, 19, 8, 108, 4, 210, 9, 3, 29, 9, 3, 9, 91, 8, 9, 10, 8, 7, 54, 26, 7, 52, 10, 9, 10, 49, 4, 358, 22, 172, 12, 10, 11, 8, 7, 113, 7, 9, 5, 9, 10, 5, 25, 9, 10, 55]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [4, 5, 12, 4, 5, 10, 5, 12, 3, 9, 3, 9, 55, 11, 7, 81, 9, 4, 6, 5, 7, 10, 3, 23, 51, 11, 584, 282, 6, 4, 13, 4, 645, 4, 4, 13, 4, 4, 9, 33, 4, 205, 161, 17, 34, 4, 159, 6, 176, 5, 30, 9, 18, 5, 7, 52, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 6, 7, 4, 4, 6, 10, 20, 12, 20, 420, 5, 14, 46, 56, 12, 17, 6, 6, 299, 18, 14, 8, 6, 33, 13, 7, 67, 3, 9, 4, 7, 10, 7, 10, 18, 7, 4, 112, 3, 5, 17, 15, 3, 4, 12, 8, 3, 11, 278, 8, 6, 20, 4, 9, 7, 22, 6, 3, 14, 21]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [19, 4, 4, 10, 4, 8, 7, 17, 4, 5, 41, 17, 13, 8, 10, 5, 479, 14, 17, 7, 7, 4, 5, 6, 10, 5, 9, 12, 63, 18, 4, 12, 8, 3, 30, 5, 4, 10, 9, 139, 30, 12, 4, 7, 7, 15, 8, 8, 11, 7, 6, 8, 9, 71, 10, 19, 4, 7, 5, 54]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [11, 5, 3, 4, 4, 4, 6, 9, 33, 14, 50, 35, 12, 4, 32, 11, 3, 48, 237, 6, 479, 4, 4, 3, 4, 5, 4, 7, 9, 167, 4, 6, 4, 8, 5, 58, 6, 5, 7, 6, 5, 4, 7, 90, 10, 10, 11, 11, 100, 6, 193, 4, 114, 20, 82, 8, 5, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 11, 11, 6, 11, 16, 9, 7, 19, 61, 16, 35, 10, 80, 72, 139, 6, 10, 7, 7, 7, 4, 9, 10, 6, 11, 18, 5, 8, 5, 5, 9, 39, 7, 6, 5, 7, 314, 4, 9, 318, 9, 243, 7, 9, 238, 8, 94, 6, 7, 29, 4, 8, 8, 191, 80, 34, 6, 40]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 6, 4, 6, 163, 4, 7, 7, 3, 5, 7, 4, 6, 9, 6, 5, 4, 8, 6, 7, 3, 281, 8, 4, 383, 7, 4, 8, 10, 9, 4, 9, 7, 67, 22, 6, 5, 9, 4, 80, 4, 7, 92, 6, 212, 17, 4, 6, 25, 6, 5, 280, 6, 3, 6, 304, 5, 6, 5, 195]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [3, 10, 4, 5, 5, 5, 7, 22, 5, 3, 154, 9, 4, 35, 5, 77, 8, 13, 15, 15, 6, 9, 7, 100, 5, 4, 6, 13, 5, 40, 4, 9, 4, 14, 6, 20, 6, 8, 8, 7, 71, 331, 7, 53, 4, 223, 5, 7, 71, 28, 7, 13, 45, 204, 8, 16]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 198, 8, 18, 7, 5, 5, 9, 14, 5, 10, 4, 10, 10, 6, 4, 11, 10, 7, 10, 8, 9, 4, 91, 155, 5, 9, 278, 124, 4, 9, 3, 5, 13, 150, 3, 11, 102, 3, 8, 9, 47, 5, 11, 43, 60, 7, 235, 10, 5, 16, 183, 9, 6, 6, 265, 4, 94]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 3, 4, 6, 7, 47, 40, 21, 39, 8, 129, 10, 38, 21, 9, 43, 12, 8, 80, 3, 44, 4, 7, 54, 9, 7, 356, 4, 153, 7, 4, 3, 9, 9, 153, 34, 188, 4, 6, 3, 5, 11, 6, 4, 178, 275, 12, 340, 10, 61, 6, 10, 3, 4, 67, 15, 5, 6, 49, 20]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [12, 3, 9, 3, 4, 5, 107, 5, 5, 4, 4, 8, 14, 21, 5, 6, 13, 65, 3, 8, 4, 126, 76, 3, 3, 7, 9, 10, 5, 244, 5, 9, 12, 4, 5, 3, 193, 6, 6, 4, 68, 12, 5, 3, 11, 14, 11, 10, 10, 10, 32, 9, 12, 12, 7, 20]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 9, 4, 7, 15, 277, 17, 46, 12, 39, 7, 8, 8, 22, 17, 9, 101, 5, 4, 6, 6, 5, 7, 7, 11, 6, 279, 7, 4, 8, 8, 6, 9, 10, 10, 24, 11, 7, 3, 7, 9, 6, 4, 376, 4, 4, 4, 9, 5, 7, 6, 7, 4, 5, 5, 10, 17, 7, 125, 6, 67]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 9, 10, 8, 7, 5, 32, 137, 5, 56, 480, 10, 6, 25, 6, 8, 4, 422, 6, 7, 57, 4, 9, 9, 7, 7, 28, 127, 4, 3, 7, 6, 4, 10, 6, 10, 36, 9, 5, 4, 8, 15, 29, 10, 9, 5, 4, 6, 25, 25, 151, 7, 13, 18, 14, 132]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 5, 9, 3, 9, 13, 11, 117, 11, 3, 15, 5, 35, 7, 84, 8, 6, 12, 10, 88, 4, 3, 7, 10, 14, 6, 255, 7, 9, 8, 6, 7, 5, 13, 4, 9, 6, 4, 11, 4, 11, 7, 3, 190, 5, 7, 6, 9, 23, 14, 19, 133, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 5, 9, 53, 5, 10, 26, 17, 6, 12, 164, 4, 14, 12, 7, 44, 58, 4, 8, 11, 17, 59, 368, 5, 7, 5, 3, 4, 11, 9, 3, 13, 19, 5, 11, 5, 6, 8, 9, 5, 33, 10, 23, 9, 6, 170, 10, 5, 7, 8, 9, 6, 7, 5, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [8, 6, 16, 4, 10, 356, 42, 3, 41, 7, 4, 111, 13, 7, 8, 10, 4, 17, 27, 8, 16, 164, 7, 19, 4, 3, 4, 7, 7, 4, 14, 17, 18, 38, 18, 14, 6, 297, 4, 6, 10, 5, 127, 8, 17, 4, 74, 85, 12, 167, 9, 15, 3, 78, 187, 5, 21]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
termination = MathOptInterface.INFEASIBLE
objective_value = 0.03236897160200819
