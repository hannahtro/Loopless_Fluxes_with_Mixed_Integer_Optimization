┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcE24377_1341
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcE24377_1341
----------------------------------
number of metabolites : 1972
number of reactions : 2763
number of genes : 1341

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2763 flux variables and 5135 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 28, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 18, 16, 16, 17, 19, 17, 16, 16, 11, 11, 16, 11, 11, 11, 11, 12, 7, 4, 16, 2, 2, 7, 3, 2, 6, 2, 2, 3, 71, 3, 3, 3, 6, 2, 73, 6, 12, 12, 12, 12, 112, 2, 2, 13, 12, 12, 12, 54, 6, 72, 3]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 2, 4, 3, 3, 4, 3, 3, 4, 5, 57, 4, 3, 3, 3, 17, 3, 8, 12, 40, 6, 5, 3, 10, 4, 3, 5, 11, 6, 3, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 4, 3, 4, 3, 2, 4, 5, 2, 4, 4, 7, 4, 4, 4, 5, 177, 7, 9, 4, 5, 7, 9, 41]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 16, 16, 24, 16, 17, 21, 16, 39, 13, 14, 13, 14, 13, 13, 15, 16, 14, 13, 13, 14, 13, 14, 22, 13, 11, 11, 11, 11, 13, 11, 11, 11, 4, 6, 3, 20, 8, 4, 5, 2, 4, 5, 3, 6, 7, 4, 38, 4, 31, 4, 10, 10, 10, 10, 11, 11, 10, 10, 10, 4, 5, 4, 4, 6, 14, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 22, 18, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14, 12, 12, 12, 12, 12, 12, 12, 3, 2, 13, 9, 4, 3, 3, 4, 14, 4, 11, 11, 11, 11, 11, 12, 12, 11, 11, 11]
length(C_list) = 49
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 7, 6, 2, 5, 3, 11, 2, 2, 2, 16, 13, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 3, 4, 7, 4, 8, 4, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 6, 3, 9, 6, 13, 5, 3, 4, 72, 3, 12, 7, 6, 7, 9, 37, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4, 8, 4, 143, 5, 5, 20, 3, 140, 4, 89, 7, 4, 11, 21]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 7, 4, 5, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 5, 5, 4, 4, 6, 4, 4, 4, 8, 6, 4, 5, 6, 6, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 9, 28, 7, 5, 6, 5, 4, 5, 14]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 3, 21, 4, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [16, 5, 5, 6, 6, 3, 5, 7, 6, 6, 6, 6, 4, 4, 10, 7, 4, 10, 6, 6, 4, 4, 5, 7, 7, 3, 5, 4, 5, 4, 5, 3, 6, 6, 5, 10, 3, 4, 4, 5, 6, 5, 4, 5, 7, 6, 4, 4, 4, 7, 7, 7, 10, 4, 4, 5, 3, 4, 7, 8, 7, 7, 4, 4, 4, 7, 7, 5, 4, 5, 5, 5, 5, 26, 6, 4, 6, 4, 4]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 8, 6, 5, 6, 15, 279, 5, 14, 6, 4, 6, 6, 5, 10, 5, 6, 6, 4, 4, 24, 6, 12, 9, 7, 5, 5, 6, 12, 65, 9, 6, 14, 5, 9, 3, 10, 4, 6, 6, 7, 8, 5, 7, 5, 7, 9, 6, 5, 8, 8, 7, 5, 6, 5, 7, 6, 4, 7, 7, 7, 14, 9, 79, 6, 8, 7, 7, 5, 7, 5, 6, 9, 4, 5, 6, 8, 6, 4, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 18, 17, 20, 22, 6, 16, 18, 14, 11, 21, 6, 6, 6, 3, 6, 15, 6, 14, 14, 6, 15, 9, 16, 24, 11, 11, 15, 6, 11, 11, 13, 15, 11, 11, 7, 4, 7, 6, 5, 6, 9, 10, 6, 5, 5, 6, 6, 5, 5, 8, 5, 6, 6, 79, 6, 19, 14, 9, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 3, 3, 4, 26, 4, 4, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 5, 9, 5, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 4, 5, 5, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.982478476208037
thermo_feasible = true
