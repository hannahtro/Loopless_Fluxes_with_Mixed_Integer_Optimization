┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSSON_1240
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSSON_1240
----------------------------------
number of metabolites : 1936
number of reactions : 2693
number of genes : 1240

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
max_cuts = 40
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2693 flux variables and 4994 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 11, 12, 11, 11, 11, 11, 11, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 15, 15, 15, 21, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 33
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 130, 3, 3, 2, 4, 2, 314, 3, 2, 2, 2, 2, 4, 2, 2, 5, 3, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 3, 4, 9, 168, 2, 2, 2, 3, 3, 20, 3, 3, 10]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 16, 4, 4, 2, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 4, 38, 2, 3, 2, 21]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 63, 5, 4, 3, 3, 2, 5, 4, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 3, 3, 4, 4, 7, 3, 5, 4, 3, 4, 46, 4, 5, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 5, 10, 8, 6, 10, 8, 6, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 3, 5, 47]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 5, 45]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826451535580722
thermo_feasible = true
