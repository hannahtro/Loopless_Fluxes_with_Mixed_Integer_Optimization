┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1368_DH5a
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1368_DH5a
----------------------------------
number of metabolites : 1951
number of reactions : 2779
number of genes : 1368

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2779 flux variables and 5214 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 19, 17, 17, 21, 17, 17, 17, 15, 14, 14, 11, 11, 11, 14, 15, 11, 14, 11, 11, 26, 14, 2, 7, 3, 3, 2, 8, 6, 14, 2, 14, 15, 4]
length(C_list) = 10
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 17, 17, 17, 17, 17, 17, 17, 39, 25, 14, 11, 11, 11, 14, 11, 11, 16, 18, 11, 6, 14, 2, 2, 2, 3, 2, 14, 3, 14, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 7, 6, 17, 17, 17, 17, 17, 17, 17, 14, 15, 14, 16, 11, 11, 14, 13, 11, 14, 11, 11, 3, 14, 2, 6, 3, 2, 6, 7, 3, 35, 3, 2, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 36, 18, 18, 18, 18, 18, 18, 15, 15, 15, 18, 11, 11, 15, 11, 11, 15, 11, 11, 2, 15, 3, 3, 6, 15, 3, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 6, 20, 17, 17, 17, 17, 17, 17, 15, 14, 14, 21, 13, 11, 14, 12, 11, 112, 12, 11, 18, 14, 4, 6, 7, 6, 6, 2, 22, 16, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 17, 17, 17, 17, 234, 17, 17, 14, 14, 14, 12, 11, 11, 14, 11, 11, 14, 11, 11, 8, 14, 6, 3, 6, 8, 6, 8, 3, 14, 7, 9, 7, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 21, 20, 20, 20, 20, 20, 20, 17, 17, 17, 11, 11, 11, 17, 11, 11, 17, 11, 11, 19, 17, 26, 4, 3, 6, 6, 6, 3, 17, 6, 10, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 17, 17, 17, 84, 17, 19, 17, 16, 14, 23, 11, 12, 16, 14, 11, 11, 14, 11, 11, 2, 14, 8, 6, 8, 3, 49, 24, 6, 14, 8, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 7, 17, 17, 17, 30, 21, 17, 17, 14, 46, 14, 11, 11, 11, 16, 11, 11, 14, 14, 11, 6, 14, 7, 18, 6, 6, 6, 16, 7, 6, 6, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 4, 3, 4, 4, 3, 3, 10, 126, 4, 4, 2, 10, 7, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 3, 4, 2, 2, 9, 8, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 4, 8, 4, 7, 4, 5, 2, 6, 2, 65, 5, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 7, 3, 3, 8, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 7, 10, 8, 8, 8, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 7, 4, 8, 2, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 3, 97]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823964446089648
thermo_feasible = true
