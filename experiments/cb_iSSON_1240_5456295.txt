┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSSON_1240
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSSON_1240
----------------------------------
number of metabolites : 1936
number of reactions : 2693
number of genes : 1240

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 135
max_cuts = 13
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2693 flux variables and 4994 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 2, 2, 2, 2, 97, 2, 6, 4, 3, 2, 3, 2, 2, 3, 4, 4, 7, 3, 5, 3, 3, 2, 5, 13, 29, 4, 4, 4, 3, 3, 3, 6]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 3, 4, 3, 3, 3, 3, 2, 4, 4, 4, 4, 5, 3, 4, 5, 3, 4, 5, 4, 30, 3, 3, 4, 2, 9, 3, 4, 6, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 5, 3, 4, 4, 22, 4, 5, 5, 4, 68, 6, 6, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 6, 5, 8, 9, 2, 2, 6, 5, 5, 3, 146, 22, 2, 7, 4, 5, 7, 4, 8, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 27, 5, 2, 9, 3, 5, 4, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 4, 4, 5, 5, 4, 4, 5, 6, 6, 6, 4, 4, 5, 5, 4, 4, 5, 7, 6, 8, 4, 5, 6, 5, 6, 8, 16, 9, 89, 4, 7, 4, 11, 4, 6, 4, 9, 5, 133, 5, 16, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 5, 4, 5, 5, 8, 4, 4, 4, 4, 4, 3, 6, 4, 5, 4, 4, 4, 5, 4, 5, 10, 11, 167, 10, 6, 8, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 7
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826450753012022
thermo_feasible = true
