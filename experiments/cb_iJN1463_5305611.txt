WARNING: Dual bound 0.586118 is smaller than the objective of the primal solution 0.586119. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN1463
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN1463
----------------------------------
number of metabolites : 2153
number of reactions : 2927
number of genes : 1462

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 146
max_cuts = 59
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2927 flux variables and 5473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 2, 4, 6, 5, 3, 3, 3, 132, 2, 5, 6, 4, 314, 6, 4, 8, 5, 6, 213, 6, 8, 5, 10, 3, 6, 7, 7, 25, 30, 7, 8, 27, 15, 13, 7, 11, 18, 12, 12, 11, 15, 11, 105, 29, 11, 11, 38, 15, 11, 11, 11, 11, 11, 11, 11, 31, 17, 11, 19, 11, 5]
length(C_list) = 59
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 3, 6, 2, 3, 5, 4, 4, 3, 6, 7, 6, 5, 22, 10, 6, 3, 20, 6, 6, 28, 5, 5, 6, 15, 8, 5, 151, 16, 4, 12, 3, 6, 5, 4, 9, 3, 7, 5, 10, 11]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 2, 3, 2, 2, 2, 2, 3, 6, 6, 91, 5, 5, 4, 7, 4, 4, 5, 2, 4, 4, 6, 6, 8, 6, 4, 4, 4, 4, 4, 5, 2, 6, 8, 5, 2, 5, 5, 5, 5, 8, 8, 7, 7, 7, 85, 7, 33, 7, 94, 9, 8, 7, 8, 7, 7, 7, 7, 7, 7, 14, 7, 7, 7, 7, 7, 6, 5, 6, 2, 5, 3]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 5, 3, 7, 4, 4, 3, 5, 2, 2, 4, 3, 3, 6, 203, 6, 4, 3, 8, 2, 3, 6, 4, 2, 7, 5, 3, 4, 7, 7, 204, 3, 7, 6, 7, 4, 4, 2, 6, 5, 5, 13, 5, 27, 3, 3, 4, 3, 3, 5, 3, 15, 3, 199, 40, 6, 29, 3, 3, 4, 4, 5, 6, 6, 5]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 4, 4, 10, 3, 4, 125, 3, 4, 3, 6, 5, 4, 3, 3, 3, 4, 6, 9, 2, 4, 6, 8, 5, 4, 5, 5, 4, 4, 6, 3, 4, 7, 3, 9, 7, 5, 9, 5, 4, 6, 4, 4, 4, 4, 4, 3, 8, 9, 4, 4, 4, 4, 4, 4, 89, 4, 5, 5, 6, 8, 4, 4, 5, 6, 4, 6, 183, 4]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 6, 7, 35, 5, 6, 3, 2, 6, 6, 21, 31, 5, 19, 4, 19, 15, 6, 44, 8, 19, 6, 4, 203, 4, 4, 7, 9, 9, 6, 6, 8, 6, 4, 9, 9, 20, 22, 4, 17, 7, 7, 7, 7, 7, 7, 7, 7, 8, 5, 8, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 8, 8, 8, 7, 5, 7, 8, 9, 4, 7, 4]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 9, 147, 2, 5, 4, 3, 7, 4, 35, 7, 8, 7, 8, 4, 26, 6, 79, 36, 7, 8, 5, 7, 7, 7, 17, 15]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 8, 4, 4, 12, 4, 9, 7, 8, 7, 7, 8, 4, 4, 10, 7, 11, 2, 19, 7, 7, 4, 67, 17, 4, 12, 14, 18, 6, 8, 5, 12, 20, 30, 8, 5, 192, 14, 12, 179, 12, 16, 12, 13, 12, 12, 17, 33, 12, 13, 12, 13, 31, 12, 17, 30, 235, 13, 22, 21, 12, 47, 14, 6, 7, 5]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 18, 4, 9, 6, 4, 10, 7, 8, 46, 4, 5, 8, 7, 6, 5, 4, 4, 6, 4, 10, 8, 6, 6, 4, 6, 12, 9, 14, 198, 6, 5, 9, 4, 33, 5, 7, 4, 7, 4, 9, 6, 4, 10, 9, 8, 8, 82, 8, 8, 8, 8, 8, 8, 9, 8, 8, 8, 8, 8, 8, 9, 8, 8, 20, 8, 8, 8, 8, 8, 6, 8, 19, 7, 9, 4, 4, 10, 5]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 4, 6, 9, 7, 6, 3, 6, 7, 5, 5, 21, 6, 5, 110, 4, 7, 20, 5, 7, 6, 7, 5, 6, 6, 44, 13, 5, 7, 50, 14, 6, 6, 6, 6, 7, 2, 10, 7, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 5, 4, 7, 4, 4, 4, 33, 6, 21, 4, 5, 6, 6, 5, 8, 9, 5, 5, 5, 5, 10, 9]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 30, 7, 3, 14, 3, 12, 32, 10, 42, 14, 33, 17, 42, 5, 32, 42, 32, 14, 287, 16, 7, 12, 16, 3, 19, 6, 10, 16, 6, 15, 19, 7, 17, 13, 15, 3, 18, 30, 43, 16, 23, 14, 21, 23, 45, 59, 10, 17, 14, 16, 16, 14, 14, 14, 83, 24, 18, 13, 13, 13, 13, 26, 16, 15, 160, 20, 168, 13, 13, 13, 15, 28, 15, 17, 12, 5, 13, 116, 14, 19, 17, 6]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 3, 6, 3, 3, 4, 4, 6, 4, 8, 9, 38, 6, 3, 110, 7, 4, 4, 3, 4, 36, 4, 6, 5, 5, 106, 8, 34, 7, 120, 4, 5, 13, 15, 4, 5, 5, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 7, 3, 7, 4, 4, 3, 3, 3, 13, 3, 5, 7, 4, 3, 8, 3, 7, 5, 7, 4, 3, 11, 34, 15, 6, 11, 5, 3, 5, 5, 4, 4, 5, 4, 20, 3, 3, 3, 4]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 6, 6, 35, 6, 8, 6, 13, 9, 3, 7, 6, 4, 6, 7, 6, 6, 13, 57, 14, 7, 13, 11, 14, 13, 6, 14, 6, 8, 3, 4, 13, 19, 6, 6, 6, 6, 9, 31, 14, 270, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 2, 6, 6, 6, 4, 7, 25, 15, 4, 10, 9, 4, 7, 9, 103, 15, 3, 5, 5, 19, 7, 10, 8, 10, 4, 136, 10, 38, 4, 12, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 3, 10, 169, 4, 15, 5, 4, 5, 9, 4, 32, 4, 6, 7, 8, 16, 4, 4, 10, 7, 43, 4, 5, 8, 5, 15, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 15, 5, 6, 7, 19, 5, 6, 7, 8, 7, 8, 3, 7, 6, 15, 9, 7, 6, 7, 7, 5]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 4, 5, 5, 6, 15, 5, 4, 7, 3, 6, 3, 4, 6, 5, 4, 6, 6, 4, 4, 6, 6, 5, 23, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 9, 7, 6, 4, 6, 15, 6, 6, 21, 7, 6, 5, 69, 6, 7, 15, 8, 9, 5, 4, 4, 7, 5, 7, 13, 9, 8, 9, 6, 176, 6, 9, 7, 7, 6, 8, 7, 5, 167, 8, 4, 9, 6, 10, 8, 21, 6, 7, 5, 5, 12, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 4, 47, 8, 8, 8, 4, 9, 4, 11, 6, 6, 4, 7, 8, 7, 6, 7, 5, 4, 4, 7, 9, 7, 4, 53, 7, 10, 6, 6, 26, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [10, 31, 4, 4, 10, 5, 85, 31, 5, 39, 9, 10, 45, 3, 32, 40, 10, 31, 10, 39, 31, 9, 16, 16, 11, 19, 7, 29, 39, 10, 19, 19, 10, 41, 50, 210, 15, 11, 14, 12, 11, 15, 11, 11, 11, 11, 11, 11, 11, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 9, 11, 8, 5]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 6, 6, 4, 4, 4, 7, 4, 7, 4, 8, 4, 7, 5, 5, 8, 6, 192, 8]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 4, 25, 5, 10, 5, 5, 4, 4, 3, 6, 24, 155, 3, 3, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 7, 50, 4, 152, 105, 124, 4, 5, 4, 4, 14, 4, 5, 169, 6, 5, 9, 17, 5, 5, 31, 8, 8, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 8, 7, 4, 258, 6, 9, 6, 4, 5, 5, 6, 9, 4, 5, 5, 4, 8, 5, 6, 4, 4, 4, 9, 4, 7, 5, 175]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 5, 55, 5, 6, 17, 6, 5, 7, 5, 5, 9, 5, 9, 9, 7, 8, 117, 8, 13, 39, 6, 7, 6, 113, 6, 6, 6, 8, 7, 15]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 5, 7, 10, 4, 10, 3, 3, 11, 3, 9, 6, 7, 5, 16, 9, 3, 6, 5, 7, 4, 15, 6, 4, 10, 7, 7, 8, 7, 7, 6, 49, 10, 21, 101, 11, 5, 7, 4, 173, 4, 3, 9, 3, 15]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [11, 61, 4, 61, 10, 7, 5, 3, 12, 7, 7, 6, 9, 21, 6, 4, 11, 6, 6, 6, 6, 5, 4, 6, 7, 12, 19, 15, 4, 6, 4, 5, 6, 6, 6, 10, 120, 245, 11, 6, 17, 8, 10, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 6, 6, 6, 15, 7, 6, 11, 8, 10, 7, 49]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 7, 5, 3, 19, 10, 4, 6, 4, 8, 4, 6, 6, 11, 119, 8, 153, 4, 4, 8, 5, 7, 5, 52, 4, 4, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 31, 7, 4, 9, 3, 36, 8, 43, 151, 73, 9, 7, 39, 15, 31, 13, 47, 39, 8, 9, 8, 8, 7, 33, 18, 22, 7, 11, 4, 7, 34, 39, 9, 7, 103, 20, 4, 21, 13, 8, 42, 7, 49, 25, 13, 10, 10, 13, 10, 10, 16, 11, 10, 16, 10, 177, 11, 10, 10, 10, 12, 12, 10, 10, 14, 10, 10, 54, 10, 7, 41, 7, 9, 8, 248]
length(C_list) = 59
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 32
termination = MathOptInterface.OPTIMAL
objective_value = 0.586117544848869
thermo_feasible = true
