ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [12, 3, 6, 6, 3, 4, 6, 201, 8, 15, 19, 5, 44, 20, 20, 15]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 3, 29, 7, 19, 254, 21, 93, 3, 15, 15, 19, 15, 5, 17, 4, 20, 20]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 20, 6, 97, 11, 19, 4, 261, 230, 292, 3, 15, 19, 102, 24, 20]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 8, 18, 8, 12, 20, 33, 114, 34, 4, 15, 19, 6, 20, 20, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 20, 39, 6, 3, 19, 116, 10, 9, 5, 15, 19, 135, 20, 20]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [25, 7, 6, 18, 15, 6, 6, 19, 19, 47, 4, 17, 19, 15, 11, 17, 38, 20]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 18, 3, 6, 3, 24, 3, 13, 6, 6, 15, 19, 18, 4, 22, 20]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 6, 7, 6, 28]
AssertionError("!(isempty(C_list_filtered))")
