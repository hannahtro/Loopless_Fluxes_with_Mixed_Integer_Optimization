┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 223
max_cuts = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6, 34, 248, 82, 24, 4, 35, 3, 3, 52, 165, 32, 3, 19, 6, 23, 69, 36, 6, 19, 148, 57, 3, 15, 18, 24, 3, 15, 213, 64, 11, 32, 221, 22, 35, 31, 51, 70, 56, 560, 126, 4, 6, 51, 10, 71, 47, 265, 22, 159, 32, 14, 39, 15, 32, 52, 24, 32, 70]
length(C_list) = 22
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [11, 6, 7, 20, 7, 7, 40, 3, 11, 3, 7, 108, 7, 5, 30, 11, 7, 7, 15, 20, 16, 28, 7, 12, 7, 16, 7, 30, 4, 29, 182, 7, 30, 7, 7, 28, 4, 7, 11, 195, 58, 21, 97, 20, 3, 3, 4, 10, 7, 15, 10, 7, 7, 18, 7, 10, 7, 22, 54, 7, 7, 7, 7, 4, 12, 27, 12, 7, 11, 5, 198, 6, 34, 14, 34, 23, 7, 39, 45, 9, 47, 7, 4, 7, 33, 15, 7, 11, 139, 7, 7, 176, 7, 127, 50, 14, 7, 7, 7, 12, 7, 7, 7, 7, 12, 7, 322, 7, 7, 8, 7, 7, 7, 121, 9, 312, 7, 13, 7, 8, 49, 29, 7, 7, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 18, 4, 3, 67, 4, 10, 3, 4, 4, 4, 3, 10, 4, 4, 4, 28, 12, 4, 43, 4, 11, 4, 14, 4, 31, 3, 4, 32, 76, 4, 4, 4, 4, 4, 4, 11, 4, 4, 4, 48, 39, 7, 7, 157, 4, 4, 4, 4, 4, 4, 4, 6, 7, 4, 17, 4, 9, 4, 32, 4, 229, 68, 4, 307, 3, 4, 13, 4, 5, 194, 27, 4, 11, 4, 4, 4, 4, 47, 57, 4, 4, 29, 85, 7, 23, 52, 65, 4, 4, 21, 4, 14, 6, 76, 4, 4, 37, 4, 4, 4, 4, 4, 4, 31, 31, 4, 4, 4, 4, 4, 13, 4, 4, 55, 4, 4, 4, 4, 4, 25, 4, 4, 4, 5, 4, 4, 4, 4, 4, 3, 4, 4, 4, 86, 4, 14, 4, 4, 4, 8, 31, 49, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 18, 18, 4, 4, 4, 10, 4, 4, 5, 4, 4, 38, 10, 39, 4, 4, 20, 461, 4, 27, 4, 19, 4, 123, 5, 77, 3, 42, 60, 43, 7, 4, 4, 4, 79, 3, 40, 27, 4, 212, 4, 10, 4, 4, 4, 3, 19, 4, 4, 4, 3, 5, 12, 418, 8, 77, 4, 4, 3, 368, 4, 4, 4, 5, 4, 85, 4, 42, 3, 10, 5, 4, 69, 6, 3, 4, 4, 10, 6, 4, 64, 45, 130, 52, 3, 4, 42, 41, 4, 3, 4, 4, 4, 81, 615, 4, 5, 5, 9, 4, 4, 4, 46, 5, 4, 4, 4, 267, 4, 4, 3, 4, 4, 9, 10, 5, 4, 4, 4, 4, 70, 5, 4, 4, 3, 4, 4, 4, 4, 624, 4, 4, 348, 17, 3, 4, 3, 4, 4, 3, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 39, 4, 4, 4, 4, 7, 29, 3, 30, 3, 3, 4, 7, 3, 4, 4, 8, 73, 33, 5, 19, 12, 4, 24, 3, 28, 26, 3, 53, 28, 3, 4, 4, 4, 3, 7, 4, 4, 35, 4, 32, 3, 4, 30, 10, 4, 4, 8, 4, 39, 7, 186, 4, 3, 3, 3, 39, 79, 6, 4, 26, 4, 4, 29, 11, 4, 4, 4, 4, 22, 4, 4, 3, 23, 3, 4, 32, 4, 4, 4, 4, 5, 3, 4, 254, 4, 5, 4, 4, 4, 10, 24, 33, 4, 4, 4, 3, 32, 38, 4, 4, 4, 7, 4, 15, 10, 4, 4, 4, 485, 4, 3, 4, 7, 9, 4, 4, 3, 8, 4, 4, 4, 141, 4, 3, 5, 4, 3, 4, 4, 10, 3, 463, 4, 4, 4, 12, 4, 4, 4, 4, 28, 4, 8, 4, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 18, 4, 4, 9, 4, 7, 50, 4, 5, 8, 5, 4, 7, 4, 3, 4, 4, 21, 9, 9, 79, 4, 19, 12, 4, 26, 7, 4, 26, 75, 4, 25, 4, 4, 4, 4, 4, 3, 7, 4, 4, 64, 75, 4, 18, 6, 3, 5, 4, 4, 4, 51, 4, 4, 4, 4, 4, 4, 20, 6, 4, 22, 4, 6, 4, 441, 4, 238, 77, 4, 4, 3, 22, 48, 4, 72, 4, 4, 4, 3, 3, 24, 11, 4, 5, 31, 23, 3, 4, 4, 62, 4, 184, 3, 4, 4, 8, 10, 26, 33, 32, 4, 4, 4, 61, 4, 4, 4, 135, 284, 5, 3, 10, 4, 4, 3, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 75, 3, 4, 4, 4, 4, 4, 4, 4, 5, 3, 4, 59, 4, 4, 8, 4, 4, 3, 4, 89, 5, 573, 4, 4, 5, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 4, 4, 4, 4, 7, 38, 4, 55, 3, 4, 3, 7, 126, 4, 4, 26, 100, 4, 28, 3, 10, 4, 12, 158, 70, 69, 69, 39, 40, 5, 6, 3, 3, 4, 4, 4, 7, 4, 15, 57, 24, 4, 4, 30, 70, 30, 4, 4, 4, 4, 4, 4, 4, 15, 4, 62, 4, 4, 6, 4, 3, 6, 21, 5, 208, 71, 51, 70, 4, 26, 4, 51, 4, 20, 4, 4, 3, 4, 3, 3, 4, 4, 10, 17, 4, 59, 19, 4, 46, 55, 118, 4, 3, 4, 4, 39, 373, 5, 3, 6, 58, 4, 4, 4, 4, 4, 4, 4, 10, 6, 4, 4, 4, 4, 3, 4, 7, 4, 212, 10, 4, 4, 88, 3, 4, 4, 4, 4, 4, 4, 4, 5, 8, 4, 6, 4, 4, 4, 4, 4, 4, 5, 5, 3, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 4, 89, 4, 17, 23, 368, 3, 31, 4, 4, 91, 9, 94, 102, 4, 20, 10, 4, 95, 4, 19, 4, 15, 4, 4, 15, 4, 4, 27, 60, 3, 4, 4, 4, 3, 50, 9, 3, 4, 4, 52, 65, 4, 4, 27, 5, 4, 4, 4, 93, 4, 4, 4, 176, 90, 4, 4, 4, 25, 9, 7, 74, 28, 28, 6, 4, 3, 27, 5, 87, 4, 4, 5, 4, 87, 4, 13, 4, 4, 10, 3, 92, 57, 66, 4, 17, 39, 3, 28, 85, 4, 4, 3, 4, 4, 105, 4, 4, 4, 4, 29, 88, 88, 4, 4, 5, 3, 4, 4, 4, 12, 3, 5, 4, 4, 6, 4, 4, 10, 10, 4, 3, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 96, 4, 4, 5, 3, 4, 4, 7, 4, 4, 4, 4, 13]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 4, 4, 344, 4, 7, 5, 4, 4, 4, 4, 7, 6, 4, 4, 4, 20, 29, 4, 22, 4, 19, 12, 8, 25, 6, 26, 48, 4, 54, 6, 4, 4, 4, 104, 4, 4, 4, 57, 33, 7, 4, 515, 29, 6, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 3, 4, 39, 6, 4, 35, 5, 6, 7, 4, 15, 15, 7, 4, 39, 4, 48, 4, 4, 55, 4, 4, 26, 4, 7, 34, 10, 4, 4, 45, 109, 69, 4, 40, 4, 55, 60, 47, 4, 3, 4, 48, 374, 26, 33, 4, 4, 9, 5, 4, 3, 4, 34, 34, 4, 4, 4, 4, 4, 4, 4, 10, 4, 4, 4, 6, 4, 4, 12, 4, 7, 4, 4, 4, 9, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 8, 3, 4, 5, 4, 4, 25, 60, 5, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 53, 4, 81, 9, 4, 32, 5, 163, 24, 163, 64, 121, 7, 120, 68, 4, 165, 20, 8, 126, 82, 125, 18, 12, 163, 116, 6, 95, 80, 4, 95, 4, 95, 163, 107, 7, 141, 141, 47, 81, 9, 4, 4, 4, 114, 52, 65, 90, 7, 8, 53, 4, 4, 20, 44, 3, 7, 79, 107, 4, 4, 217, 4, 4, 4, 87, 4, 94, 83, 9, 4, 77, 122, 116, 105, 4, 4, 35, 10, 3, 122, 31, 65, 11, 107, 4, 5, 97, 5, 64, 4, 4, 80, 77, 71, 82, 22, 53, 52, 101, 48, 97, 114, 8, 10, 95, 71, 105, 114, 4, 104, 7, 163, 104, 4, 3, 114, 171, 125, 4, 4, 4, 163, 134, 114, 86, 52, 4, 114, 95, 150, 4, 96, 3, 92]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 13, 33, 4, 4, 61, 4, 9, 3, 3, 38, 5, 4, 4, 9, 4, 4, 4, 11, 21, 10, 9, 31, 4, 19, 4, 14, 11, 4, 60, 4, 4, 27, 158, 9, 8, 4, 4, 6, 4, 9, 4, 4, 4, 77, 27, 4, 4, 4, 4, 4, 5, 4, 12, 4, 14, 4, 4, 25, 84, 10, 22, 6, 4, 14, 4, 18, 13, 4, 4, 5, 22, 4, 4, 4, 4, 4, 9, 43, 10, 29, 14, 24, 31, 23, 4, 48, 4, 80, 4, 44, 4, 4, 4, 4, 19, 4, 4, 4, 4, 4, 4, 4, 14, 4, 45, 4, 4, 6, 9, 4, 9, 10, 4, 4, 4, 9, 4, 4, 22, 10, 4, 12, 4, 95, 28, 11, 9, 4, 11, 4, 17, 4, 74, 12, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 14, 5, 6, 6, 5, 12, 10, 9, 32, 9, 33, 10, 10, 114, 9, 5, 11, 12, 10, 20, 10, 12, 31, 12, 29, 13, 14, 11, 23, 33, 32, 25, 31, 9, 19, 5, 12, 5, 35, 14, 16, 10, 58, 27, 11, 34, 34, 33, 15, 3, 9, 8, 12, 11, 11, 10, 421, 16, 16, 8, 14, 48, 8, 33, 34, 5, 33, 14, 12, 11, 6, 29, 9, 6, 9, 13, 9, 6, 10, 5, 9, 12, 12, 96, 31, 3, 9, 43, 13, 30, 75, 12, 46, 5, 5, 10, 5, 14, 27, 12, 6, 11, 12, 16, 13, 6, 5, 13, 13, 11, 13, 11, 12, 5, 11, 12, 13, 11, 16, 9, 12, 23, 182, 10, 14, 6, 3, 6, 10, 11, 9, 5, 14, 13, 14, 11, 11, 12, 5, 9, 11, 6, 6, 192, 6, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [11, 14, 11, 72, 4, 7, 6, 4, 36, 4, 12, 11, 4, 4, 6, 8, 7, 33, 7, 8, 59, 4, 46, 8, 22, 12, 35, 3, 239, 37, 35, 7, 7, 71, 8, 4, 7, 6, 7, 7, 4, 61, 55, 4, 73, 74, 73, 9, 13, 9, 8, 9, 10, 9, 10, 213, 4, 33, 8, 6, 8, 4, 3, 467, 95, 4, 3, 6, 10, 3, 12, 7, 4, 10, 18, 7, 5, 64, 48, 11, 7, 5, 11, 68, 4, 33, 73, 16, 46, 11, 8, 6, 4, 58, 12, 11, 7, 8, 13, 68, 8, 5, 5, 7, 18, 8, 4, 194, 4, 10, 8, 10, 13, 11, 6, 8, 4, 11, 9, 8, 13, 5, 4, 7, 9, 4, 11, 11, 13, 204, 4, 9, 10, 9, 4, 9, 75, 7, 9, 12, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 18, 48, 10, 17, 10, 7, 19, 4, 79, 11, 9, 4, 7, 7, 8, 14, 20, 8, 4, 422, 8, 19, 13, 10, 11, 20, 19, 4, 23, 9, 9, 10, 7, 4, 9, 13, 4, 7, 11, 11, 4, 9, 13, 13, 10, 11, 7, 355, 18, 13, 4, 254, 18, 11, 467, 45, 10, 23, 10, 20, 19, 4, 20, 10, 13, 13, 97, 11, 23, 4, 10, 22, 9, 9, 12, 13, 40, 10, 4, 22, 6, 23, 3, 12, 33, 4, 7, 11, 7, 9, 25, 10, 10, 11, 5, 7, 4, 73, 13, 11, 9, 9, 10, 3, 12, 10, 10, 8, 6, 9, 11, 4, 9, 9, 4, 4, 216, 8, 111, 13, 4, 4, 4, 8, 53, 4, 4, 4, 9, 7, 7, 7, 10, 11, 11, 8, 9, 4, 4, 18, 10, 10, 11, 13, 4, 4, 12]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 14, 13, 19, 11, 10, 159, 11, 7, 24, 8, 23, 24, 9, 6, 6, 8, 11, 8, 20, 7, 13, 33, 14, 19, 11, 11, 11, 24, 25, 3, 9, 9, 24, 7, 8, 7, 9, 8, 242, 17, 8, 6, 9, 31, 10, 19, 26, 58, 11, 8, 154, 7, 8, 10, 7, 12, 10, 11, 11, 13, 38, 6, 6, 10, 9, 25, 27, 9, 28, 7, 9, 9, 10, 31, 10, 11, 17, 8, 5, 7, 10, 9, 9, 7, 12, 8, 23, 8, 78, 10, 11, 10, 11, 10, 9, 9, 10, 7, 10, 32, 72, 11, 9, 80, 69, 34, 11, 12, 7, 52, 8, 68, 7, 9, 9, 8, 11, 8, 8, 8, 9, 7, 6, 6, 9, 9, 18, 11, 9, 8, 9, 8, 11, 12, 10, 7, 16, 8, 8, 7, 12, 9, 10, 9, 6, 7, 9, 6, 11, 11, 7, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 4, 3, 3, 33, 11, 4, 11, 4, 19, 3, 16, 3, 3, 4, 53, 3, 4, 3, 3, 4, 4, 53, 3, 3, 3, 6, 4, 4, 5, 4, 4, 3, 4, 3, 3, 4, 56, 4, 4, 4, 4, 10, 3, 106, 5, 7, 3, 3, 3, 3, 4, 4, 61, 69, 405, 4, 9, 4, 4, 53, 130, 52, 5, 33, 62, 3, 3, 4, 4, 53, 3, 4, 8, 3, 4, 3, 4, 54, 7, 21, 4, 4, 4, 4, 3, 3, 4, 4, 3, 4, 8, 4, 251, 3, 3, 4, 4, 4, 4, 4, 4, 52, 4, 4, 4, 4, 3, 3, 3, 54, 149, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 14, 12, 216, 10, 88, 100, 220, 7, 24, 210, 43, 210, 78, 11, 7, 64, 102, 210, 20, 373, 123, 11, 123, 19, 3, 15, 208, 102, 217, 211, 99, 23, 11, 217, 3, 10, 3, 78, 210, 99, 7, 246, 241, 75, 224, 25, 216, 228, 233, 233, 80, 85, 3, 85, 3, 25, 6, 24, 22, 53, 25, 27, 12, 215, 3, 8, 13, 103, 12, 3, 12, 116, 88, 85, 3, 12, 44, 9, 3, 116, 56, 74, 112, 58, 10, 63, 13, 69, 3, 3, 124, 79, 222, 19, 6, 85, 84, 250, 89, 227, 11, 3, 23, 100, 114, 10, 101, 79, 85, 229, 3, 100, 7, 209, 13, 226, 124, 6, 6, 124, 5, 210, 132, 227, 122, 85, 89, 6, 229, 103, 133, 8, 218, 4, 4, 8, 211, 78]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [8, 14, 8, 120, 10, 94, 10, 12, 6, 5, 131, 149, 80, 4, 6, 260, 88, 149, 28, 12, 132, 10, 19, 4, 8, 132, 25, 6, 31, 23, 8, 32, 11, 11, 80, 133, 97, 6, 8, 99, 106, 48, 28, 3, 6, 7, 99, 74, 84, 80, 21, 4, 5, 4, 141, 6, 4, 38, 127, 6, 7, 4, 7, 32, 11, 90, 97, 64, 4, 4, 126, 97, 4, 27, 43, 9, 4, 126, 33, 63, 4, 70, 10, 24, 44, 3, 67, 4, 92, 89, 25, 75, 106, 101, 100, 4, 6, 9, 99, 4, 4, 97, 6, 243, 87, 150, 4, 4, 137, 124, 73, 4, 3, 4, 98, 4, 10, 132, 4, 79]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 14, 8, 7, 3, 9, 34, 3, 336, 3, 28, 9, 3, 21, 6, 9, 10, 9, 8, 24, 10, 11, 19, 8, 11, 25, 11, 27, 23, 10, 28, 3, 4, 4, 6, 10, 11, 3, 66, 16, 6, 11, 11, 8, 11, 11, 6, 4, 8, 4, 9, 10, 9, 24, 4, 6, 16, 9, 465, 9, 4, 15, 4, 8, 7, 15, 12, 9, 9, 9, 8, 4, 69, 8, 8, 33, 11, 11, 48, 8, 8, 8, 9, 4, 8, 35, 9, 8, 24, 75, 9, 4, 63, 12, 7, 8, 12, 9, 4, 9, 10, 3, 5, 3, 14, 11, 4, 5, 8, 9, 11, 4, 9, 9, 8, 3, 9, 6, 8, 22, 7, 4, 9, 10, 10, 553, 8, 8, 8, 8, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [11, 13, 4, 229, 10, 83, 256, 213, 5, 4, 240, 28, 239, 230, 59, 6, 59, 247, 9, 239, 56, 4, 233, 6, 233, 19, 8, 8, 241, 25, 25, 9, 69, 51, 3, 28, 10, 4, 193, 230, 239, 104, 6, 71, 5, 8, 40, 50, 71, 3, 4, 54, 6, 227, 230, 71, 212, 263, 71, 223, 8, 25, 6, 4, 122, 53, 212, 9, 4, 212, 4, 11, 8, 76, 8, 213, 73, 4, 7, 49, 243, 76, 4, 20, 247, 9, 4, 248, 53, 14, 13, 65, 4, 43, 52, 4, 4, 52, 84, 233, 10, 4, 25, 19, 120, 223, 222, 223, 222, 61, 48, 256, 29, 7, 8, 4, 7, 10, 4, 16, 4, 4, 5, 4, 6, 6, 240, 3, 4, 14, 200, 4, 239, 233, 59, 59, 233, 12, 241, 237, 52, 221, 5, 4, 19, 4, 8, 250, 4, 232, 237, 28, 39, 3, 233, 4, 4, 240, 230]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [12, 17, 4, 18, 13, 11, 9, 9, 6, 5, 10, 10, 9, 44, 6, 45, 25, 31, 8, 9, 4, 3, 29, 4, 19, 4, 8, 4, 212, 25, 26, 26, 9, 4, 25, 8, 9, 3, 4, 4, 7, 13, 4, 8, 10, 4, 3, 19, 35, 9, 12, 5, 8, 9, 7, 12, 9, 6, 5, 60, 10, 11, 9, 6, 19, 26, 3, 7, 45, 8, 12, 10, 4, 4, 8, 13, 10, 3, 9, 4, 4, 27, 239, 6, 7, 8, 3, 9, 3, 8, 3, 25, 19, 4, 10, 4, 7, 11, 8, 10, 8, 10, 28, 9, 9, 9, 9, 4, 10, 10, 4, 4, 14, 11, 6, 3, 3, 9, 4, 12, 38, 8, 9, 4, 9, 26, 4, 5, 6, 10, 8, 6, 13, 4, 4, 4, 13, 13, 9, 19, 4, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 18, 4, 4, 6, 3, 7, 19, 4, 26, 6, 4, 4, 7, 5, 4, 4, 4, 20, 9, 8, 17, 4, 10, 4, 10, 4, 13, 20, 19, 52, 4, 4, 45, 16, 3, 3, 4, 4, 4, 7, 4, 4, 4, 15, 4, 137, 4, 4, 4, 5, 4, 4, 24, 5, 4, 4, 73, 4, 58, 44, 4, 4, 66, 3, 4, 20, 19, 22, 20, 4, 4, 4, 5, 4, 21, 4, 4, 4, 4, 4, 4, 44, 4, 4, 4, 4, 13, 11, 610, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 40, 3, 4, 4, 4, 4, 4, 131, 4, 4, 9, 10, 4, 3, 4, 4, 4, 4, 7, 19, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 6, 3, 4, 217, 4, 4, 4, 5, 6, 4, 4, 4, 4, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [9, 4, 10, 18, 4, 3, 49, 4, 6, 19, 3, 56, 3, 4, 4, 18, 4, 9, 14, 3, 20, 10, 11, 12, 4, 406, 4, 11, 4, 4, 16, 10, 9, 3, 4, 12, 4, 3, 6, 3, 4, 45, 24, 4, 3, 4, 4, 4, 3, 6, 4, 8, 3, 3, 3, 4, 46, 306, 22, 4, 3, 35, 3, 4, 3, 8, 41, 18, 3, 4, 8, 4, 53, 9, 4, 4, 56, 45, 23, 51, 4, 9, 45, 4, 45, 6, 3, 4, 4, 4, 10, 13, 9, 4, 10, 4, 4, 4, 4, 4, 9, 5, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 8, 4, 4, 45, 4, 3, 5, 5, 4, 4, 4, 4, 45, 13, 3, 3, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 9, 5, 11, 10, 29, 7, 5, 3, 4, 4, 3, 7, 4, 249, 3, 20, 8, 8, 41, 3, 14, 3, 8, 13, 35, 26, 27, 35, 4, 4, 26, 5, 3, 6, 3, 7, 6, 4, 53, 37, 5, 4, 69, 40, 6, 3, 3, 6, 4, 3, 3, 4, 3, 7, 4, 3, 20, 7, 92, 89, 3, 6, 7, 13, 27, 3, 4, 3, 3, 22, 4, 22, 3, 4, 116, 73, 4, 4, 35, 9, 4, 4, 56, 53, 35, 3, 151, 4, 41, 54, 4, 54, 4, 4, 3, 56, 4, 4, 3, 3, 5, 3, 4, 4, 10, 6, 56, 71, 4, 3, 10, 27, 4, 3, 6, 3, 3, 9, 3, 6, 3, 54, 5, 3, 4, 4, 4, 3, 53, 3, 80, 4, 12, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 17, 4, 21, 4, 8, 42, 3, 6, 4, 9, 3, 8, 4, 40, 99, 4, 10, 4, 30, 59, 3, 13, 11, 222, 4, 32, 11, 13, 3, 10, 4, 8, 6, 8, 6, 6, 4, 4, 11, 40, 6, 8, 4, 3, 4, 4, 94, 4, 11, 11, 12, 8, 22, 5, 10, 14, 4, 19, 603, 77, 6, 13, 6, 4, 4, 33, 4, 12, 6, 4, 4, 3, 25, 4, 3, 11, 4, 9, 7, 5, 10, 4, 9, 3, 10, 6, 8, 18, 6, 68, 8, 4, 3, 52, 12, 117, 10, 8, 5, 6, 4, 11, 9, 4, 9, 5, 20, 7, 9, 8, 12, 6, 14, 7, 4, 11, 6, 4, 12, 11, 9, 33, 14, 5, 14, 4, 12, 14, 3, 3, 4, 11, 9, 33, 7, 8, 5, 7, 12, 4, 10, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 16, 8, 4, 4, 6, 23, 11, 73, 5, 4, 8, 4, 6, 9, 4, 3, 12, 20, 8, 4, 19, 9, 19, 10, 8, 8, 4, 5, 8, 3, 8, 10, 4, 11, 3, 7, 8, 44, 6, 8, 8, 8, 4, 20, 4, 5, 11, 4, 11, 4, 4, 50, 4, 11, 7, 8, 9, 12, 15, 3, 8, 9, 33, 16, 6, 8, 23, 4, 8, 13, 4, 3, 4, 10, 11, 3, 4, 22, 4, 5, 31, 8, 12, 5, 8, 4, 9, 3, 8, 33, 31, 33, 10, 4, 10, 4, 13, 3, 4, 3, 4, 6, 3, 118, 19, 11, 4, 4, 11, 8, 11, 3, 10, 10, 5, 290, 11, 4, 9, 13, 8, 8, 8, 9, 6, 11, 9, 3, 13, 10, 5, 10, 377, 4, 13, 8, 4, 8, 4, 4, 4, 11, 8, 8, 5, 11, 43, 4, 8, 12, 9, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [12, 14, 16, 15, 12, 13, 14, 3, 7, 50, 3, 36, 13, 10, 37, 7, 4, 12, 4, 4, 64, 10, 9, 14, 19, 6, 8, 4, 50, 4, 4, 4, 4, 3, 11, 112, 8, 3, 3, 13, 3, 12, 5, 47, 33, 5, 4, 4, 4, 4, 4, 4, 3, 4, 9, 6, 4, 3, 6, 8, 12, 273, 48, 3, 7, 4, 13, 6, 8, 10, 52, 8, 13, 10, 4, 8, 8, 4, 39, 88, 8, 8, 47, 58, 50, 63, 3, 4, 60, 13, 4, 5, 3, 6, 7, 4, 4, 3, 48, 124, 8, 6, 4, 4, 12, 13, 8, 10, 94, 4, 4, 12, 8, 5, 4, 4, 11, 8, 3, 4, 18, 4, 13, 59, 6, 4, 15, 4, 4, 5, 33, 123, 3, 13, 48, 4, 32, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [10, 3, 9, 6, 7, 11, 9, 4, 5, 5, 4, 7, 9, 3, 11, 5, 10, 13, 66, 5, 3, 19, 9, 10, 11, 25, 25, 29, 26, 72, 4, 25, 61, 6, 9, 9, 6, 7, 11, 8, 53, 55, 5, 7, 3, 126, 9, 3, 11, 4, 4, 7, 3, 3, 8, 39, 6, 65, 9, 26, 11, 26, 14, 27, 3, 16, 51, 3, 3, 68, 43, 3, 4, 4, 34, 42, 4, 43, 54, 36, 53, 4, 59, 4, 76, 59, 4, 39, 5, 6, 11, 8, 4, 25, 33, 4, 11, 7, 3, 4, 4, 10, 11, 9, 11, 5, 6, 3, 9, 3, 12, 6, 11, 3, 9, 4, 11, 11, 3, 11, 11, 10, 4, 4, 3, 75, 9, 7, 3, 10, 11, 10, 8, 13, 25, 4, 6, 4, 13]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 4, 10, 4, 3, 10, 6, 4, 6, 5, 4, 7, 5, 9, 374, 7, 4, 11, 3, 26, 7, 10, 29, 8, 19, 8, 3, 31, 32, 11, 6, 7, 28, 4, 15, 9, 4, 11, 4, 6, 8, 9, 4, 3, 26, 8, 9, 4, 8, 4, 4, 4, 3, 14, 3, 3, 5, 4, 9, 9, 127, 5, 4, 6, 4, 4, 4, 9, 31, 8, 9, 4, 4, 4, 9, 3, 8, 4, 11, 7, 10, 39, 4, 112, 11, 4, 4, 7, 10, 3, 4, 3, 7, 6, 10, 4, 3, 36, 9, 3, 4, 11, 4, 6, 9, 59, 7, 9, 4, 43, 3, 8, 9, 3, 4, 6, 6, 7, 11, 9, 11, 11, 4, 4, 9, 10, 11, 9, 9, 7, 3, 13, 4, 4, 55, 28, 9, 10, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 10, 10, 3, 10, 10, 5, 32, 128, 34, 7, 4, 77, 6, 9, 7, 9, 51, 4, 5, 19, 5, 8, 70, 11, 23, 3, 7, 26, 4, 5, 13, 67, 11, 8, 5, 9, 8, 7, 25, 62, 32, 4, 33, 4, 33, 8, 10, 20, 6, 4, 7, 11, 3, 8, 10, 9, 10, 11, 39, 9, 3, 12, 33, 34, 9, 307, 33, 9, 10, 3, 10, 3, 3, 8, 10, 6, 56, 5, 9, 13, 13, 3, 32, 9, 42, 106, 69, 69, 3, 8, 8, 9, 17, 10, 33, 3, 7, 4, 7, 5, 10, 37, 7, 11, 8, 4, 8, 9, 8, 9, 11, 11, 13, 8, 39, 11, 7, 4, 4, 18, 5, 9, 6, 9, 15, 4, 11, 4, 10, 12, 7, 8, 9, 8, 5, 9, 11, 7, 12, 13, 59, 9, 4, 80, 36]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 17, 9, 10, 8, 86, 8, 6, 5, 4, 3, 3, 11, 6, 11, 4, 12, 9, 24, 14, 9, 19, 5, 8, 30, 6, 14, 3, 11, 28, 10, 15, 5, 4, 4, 3, 6, 8, 12, 13, 51, 6, 4, 4, 4, 9, 10, 6, 4, 9, 6, 4, 4, 4, 25, 6, 11, 4, 10, 3, 5, 12, 12, 96, 11, 11, 3, 4, 4, 7, 36, 22, 11, 58, 10, 4, 4, 4, 11, 37, 5, 13, 5, 3, 6, 10, 10, 164, 4, 13, 11, 3, 9, 13, 12, 12, 24, 4, 4, 4, 10, 10, 8, 61, 9, 76, 10, 9, 3, 13, 6, 10, 52, 10, 4, 11, 74, 11, 7, 12, 4, 11, 13, 4, 4, 11, 4, 11, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [12, 3, 14, 22, 7, 3, 4, 12, 6, 29, 3, 31, 13, 4, 32, 6, 11, 3, 11, 3, 74, 4, 11, 11, 19, 11, 10, 9, 4, 29, 29, 265, 68, 24, 3, 5, 3, 3, 3, 6, 10, 90, 3, 66, 10, 18, 37, 40, 3, 11, 62, 3, 12, 3, 4, 3, 13, 3, 13, 39, 6, 3, 4, 30, 41, 11, 30, 30, 3, 12, 46, 12, 18, 3, 31, 4, 229, 9, 3, 36, 9, 13, 9, 111, 65, 10, 9, 67, 3, 72, 3, 3, 25, 4, 11, 12, 11, 10, 5, 11, 9, 26, 3, 4, 4, 9, 13, 5, 3, 3, 11, 16, 3, 3, 13, 4, 3, 3, 152, 4, 11, 4, 11, 3, 11, 8, 13, 14, 10, 5, 72, 6, 4, 8, 65, 10, 10, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 5, 4, 4, 3, 8, 3, 17, 4, 4, 5, 3, 4, 4, 4, 5, 4, 5, 4, 13, 46, 8, 20, 4, 4, 3, 4, 5, 3, 4, 5, 3, 4, 4, 3, 4, 3, 3, 3, 3, 5, 4, 3, 58, 4, 5, 37, 5, 55, 5, 5, 4, 5, 4, 3, 4, 87, 59, 5, 373, 3, 3, 103, 206, 4, 3, 55, 4, 475, 4, 4, 5, 3, 4, 3, 4, 227, 28, 328, 584, 3, 5, 4, 31, 13, 4, 6, 92, 339, 3, 6, 4, 4, 4, 4, 5, 4, 5, 4, 3, 3, 3, 4, 44, 43, 3, 37, 33, 162, 47, 723, 4, 3, 341, 6, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 38, 3, 88, 5, 13, 11, 35, 3, 31, 9, 6, 64, 12, 64, 4, 8, 20, 3, 4, 13, 6, 19, 61, 8, 3, 32, 34, 47, 57, 12, 4, 3, 13, 3, 12, 11, 434, 11, 7, 29, 29, 162, 35, 33, 115, 11, 3, 45, 9, 7, 13, 79, 4, 4, 23, 3, 6, 22, 35, 4, 4, 64, 4, 3, 3, 3, 77, 64, 27, 150, 4, 45, 79, 4, 5, 9, 47, 23, 3, 53, 4, 13, 40, 55, 5, 4, 3, 5, 48, 28, 3, 3, 76, 3, 269, 45, 11, 3, 3, 5, 4, 13, 14, 4, 11, 3, 4, 4, 3, 3, 4, 11, 3, 10, 3, 3, 3, 7, 4, 4, 6, 4, 4, 3, 5, 42, 4, 34, 4, 4, 4, 8, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 6, 6, 6, 30, 4, 29, 4, 4, 3, 5, 123, 3, 4, 3, 44, 4, 3, 3, 4, 10, 4, 25, 25, 27, 41, 24, 3, 25, 4, 3, 3, 4, 4, 7, 3, 3, 61, 37, 4, 3, 4, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 3, 3, 44, 6, 3, 41, 4, 4, 4, 3, 4, 4, 3, 5, 4, 4, 4, 52, 698, 24, 4, 4, 4, 6, 57, 9, 3, 4, 51, 37, 51, 5, 62, 196, 24, 61, 8, 8, 4, 4, 24, 3, 4, 4, 4, 4, 158, 4, 4, 3, 4, 10, 3, 4, 6, 88, 6, 4, 3, 4, 4, 5, 5, 5, 3, 3, 4, 24, 4, 4, 4, 3, 4, 4, 61, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [9, 16, 3, 4, 5, 87, 29, 4, 7, 5, 5, 13, 3, 3, 7, 6, 100, 4, 20, 3, 4, 20, 3, 12, 4, 3, 13, 33, 12, 4, 5, 11, 3, 5, 7, 6, 4, 3, 54, 55, 109, 69, 75, 11, 5, 14, 4, 4, 3, 6, 5, 87, 12, 3, 3, 52, 4, 6, 42, 53, 13, 3, 6, 11, 3, 4, 45, 73, 94, 13, 6, 57, 9, 5, 96, 52, 34, 38, 12, 56, 3, 34, 12, 35, 15, 13, 4, 4, 4, 4, 8, 36, 4, 78, 71, 4, 4, 3, 5, 4, 18, 11, 40, 3, 3, 4, 9, 5, 7, 12, 7, 11, 4, 4, 3, 5, 13, 86, 10, 6, 4, 5, 3, 5, 6, 13, 5, 6, 12, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 235, 4, 101, 7, 236, 7, 22, 236, 4, 236, 89, 4, 7, 7, 114, 234, 30, 158, 3, 10, 10, 236, 52, 23, 23, 91, 62, 5, 56, 3, 4, 91, 236, 4, 7, 6, 119, 119, 107, 30, 4, 3, 3, 100, 211, 116, 238, 239, 55, 3, 4, 4, 121, 70, 4, 4, 12, 26, 4, 164, 43, 326, 3, 4, 5, 308, 6, 88, 5, 79, 62, 8, 50, 122, 117, 3, 9, 3, 52, 111, 62, 5, 53, 23, 71, 58, 4, 64, 4, 4, 80, 69, 4, 126, 138, 111, 4, 42, 4, 4, 4, 10, 81, 3, 4, 5, 407, 236, 234, 5, 3, 236, 167, 73, 126, 4, 117, 4, 4, 236]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 12, 5, 40, 6, 88, 9, 11, 5, 5, 11, 6, 9, 10, 9, 5, 3, 14, 11, 32, 49, 3, 52, 354, 19, 4, 9, 10, 24, 6, 27, 26, 11, 43, 3, 5, 3, 11, 11, 5, 35, 9, 31, 52, 225, 41, 41, 4, 7, 3, 46, 4, 79, 11, 12, 39, 6, 270, 34, 5, 3, 57, 4, 3, 8, 9, 62, 8, 11, 77, 5, 10, 37, 9, 11, 59, 44, 56, 48, 9, 31, 9, 58, 3, 12, 3, 5, 24, 33, 76, 12, 31, 11, 12, 20, 10, 32, 70, 9, 5, 7, 5, 10, 8, 13, 27, 27, 4, 8, 9, 4, 4, 4, 8, 9, 37, 11, 9, 11, 78, 5, 53, 4, 9, 10, 9, 4, 3, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 67, 9, 8, 17, 224, 10, 20, 238, 28, 248, 66, 67, 7, 67, 131, 9, 245, 31, 8, 148, 19, 10, 238, 64, 66, 63, 57, 66, 4, 34, 10, 4, 239, 90, 6, 100, 99, 53, 13, 67, 102, 64, 3, 92, 92, 68, 9, 11, 10, 8, 4, 52, 12, 6, 3, 59, 55, 67, 65, 10, 64, 11, 66, 11, 3, 4, 89, 63, 9, 10, 130, 138, 239, 109, 4, 31, 41, 9, 12, 4, 64, 95, 57, 11, 65, 10, 60, 8, 9, 61, 3, 11, 148, 91, 66, 31, 4, 125, 6, 33, 9, 104, 53, 96, 9, 4, 90, 9, 92, 11, 111, 6, 246, 12, 11, 247, 9, 99, 247, 243, 11, 77, 11, 11, 91, 148, 243, 13, 33, 53, 5, 9, 240, 66]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 3, 30, 4, 8, 3, 3, 4, 6, 25, 4, 28, 14, 3, 12, 5, 11, 5, 10, 44, 5, 5, 12, 3, 19, 4, 9, 7, 22, 26, 49, 24, 48, 3, 23, 4, 4, 4, 13, 5, 4, 3, 4, 57, 33, 4, 3, 25, 23, 4, 3, 5, 3, 14, 6, 4, 3, 167, 10, 73, 28, 4, 25, 6, 39, 3, 25, 24, 11, 23, 6, 122, 15, 12, 4, 41, 4, 36, 11, 12, 4, 12, 4, 64, 9, 12, 39, 39, 72, 52, 60, 3, 4, 27, 4, 11, 13, 4, 4, 23, 19, 4, 92, 4, 3, 3, 5, 33, 13, 3, 9, 3, 11, 12, 3, 10, 4, 4, 11, 7, 4, 5, 6, 3, 5, 3, 4, 5, 5, 11, 4, 8, 4, 7, 11, 4, 4, 4, 12, 3, 6, 3, 4, 4, 3, 8, 4, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 11, 3, 18, 3, 3, 5, 5, 6, 315, 3, 17, 202, 5, 41, 4, 4, 5, 3, 3, 5, 3, 4, 9, 18, 6, 8, 3, 10, 8, 7, 3, 93, 5, 13, 399, 57, 11, 5, 477, 3, 8, 7, 6, 4, 3, 4, 3, 3, 13, 3, 3, 5, 3, 11, 4, 8, 4, 6, 3, 5, 513, 733, 7, 7, 222, 8, 4, 3, 6, 13, 23, 11, 12, 3, 11, 343, 6, 16, 46, 9, 4, 13, 3, 3, 7, 3, 4, 4, 3, 5, 8, 12, 227, 14, 545, 5, 3, 5, 4, 14, 4, 5, 12, 4, 3, 27, 13, 3, 60, 4, 11, 14, 3, 4, 3, 12, 5, 102, 5, 4, 8, 10, 10, 4, 6, 11, 11, 10, 3, 17, 11, 3, 11, 4, 11, 4, 3, 3, 3, 7, 24, 3, 14, 4, 3, 498]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 12, 4, 92, 148, 4, 5, 26, 115, 46, 129, 63, 10, 5, 5, 101, 4, 131, 20, 5, 19, 4, 38, 30, 23, 22, 24, 23, 11, 24, 4, 4, 9, 111, 5, 4, 94, 95, 69, 22, 8, 24, 23, 111, 10, 3, 145, 3, 4, 63, 4, 10, 103, 4, 4, 126, 11, 135, 14, 24, 52, 31, 24, 4, 23, 8, 3, 101, 134, 22, 10, 9, 126, 99, 94, 5, 8, 47, 9, 4, 115, 23, 4, 117, 3, 24, 76, 3, 68, 9, 93, 86, 27, 25, 127, 82, 102, 6, 106, 110, 4, 9, 9, 152, 87, 108, 5, 111, 92, 5, 129, 6, 132, 4, 6, 131, 122, 70, 96, 8, 134, 122, 3, 24, 114, 3, 126]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 4, 4, 9, 4, 99, 5, 4, 4, 3, 4, 6, 4, 4, 4, 6, 38, 4, 3, 50, 4, 10, 4, 9, 4, 25, 26, 26, 24, 3, 25, 4, 158, 3, 3, 4, 4, 93, 6, 4, 4, 66, 36, 4, 4, 4, 4, 4, 4, 7, 4, 4, 4, 4, 4, 3, 33, 4, 6, 3, 35, 4, 13, 321, 4, 3, 3, 4, 4, 7, 4, 37, 4, 4, 24, 4, 4, 3, 3, 37, 9, 4, 4, 35, 53, 47, 8, 45, 23, 28, 66, 4, 28, 5, 3, 18, 24, 7, 4, 10, 4, 3, 34, 4, 4, 3, 4, 4, 4, 10, 7, 4, 4, 4, 4, 4, 4, 6, 19, 4, 3, 3, 4, 4, 3, 5, 18, 4, 4, 36, 4, 28, 4, 4, 4, 6, 32, 3, 3, 5, 105, 66, 4, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 66, 4, 94, 6, 235, 5, 461, 125, 9, 141, 63, 90, 5, 91, 74, 3, 4, 285, 3, 16, 9, 33, 10, 35, 26, 3, 8, 94, 19, 11, 4, 46, 49, 47, 4, 9, 99, 66, 70, 97, 6, 4, 8, 3, 109, 9, 4, 8, 6, 41, 84, 10, 4, 9, 100, 4, 11, 94, 8, 5, 3, 5, 103, 93, 103, 11, 121, 73, 13, 342, 103, 64, 24, 3, 4, 104, 3, 10, 126, 101, 86, 33, 113, 3, 282, 90, 108, 111, 88, 3, 4, 9, 96, 10, 3, 94, 5, 4, 104, 4, 89, 24, 133, 66, 108, 5, 4, 6, 4, 5, 4, 11]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [9, 16, 4, 18, 38, 3, 45, 10, 10, 18, 3, 3, 10, 9, 5, 3, 10, 3, 37, 4, 3, 19, 11, 9, 8, 22, 19, 27, 31, 60, 4, 32, 10, 10, 3, 9, 5, 264, 10, 11, 10, 40, 22, 23, 3, 9, 10, 3, 7, 3, 5, 3, 5, 31, 4, 37, 4, 13, 3, 9, 22, 3, 3, 324, 9, 12, 44, 9, 63, 5, 3, 9, 3, 9, 38, 178, 9, 3, 19, 44, 4, 3, 4, 86, 8, 5, 8, 4, 4, 30, 3, 4, 3, 11, 4, 13, 11, 8, 8, 10, 9, 9, 9, 4, 3, 4, 8, 3, 5, 11, 4, 9, 9, 8, 11, 4, 3, 42, 14, 8, 9, 9, 5, 4, 5, 8, 8, 3, 5, 8, 9, 49, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777572074
