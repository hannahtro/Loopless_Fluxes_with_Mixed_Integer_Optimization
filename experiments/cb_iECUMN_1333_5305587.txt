┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECUMN_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECUMN_1333
----------------------------------
number of metabolites : 1935
number of reactions : 2740
number of genes : 1332

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2740 flux variables and 5089 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 11, 2, 7, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 15, 14, 119, 13, 14, 13, 14, 13, 14, 13, 2, 15, 4, 3, 9, 2, 39, 15, 3, 49, 2, 20, 7, 39, 40, 40, 2, 7, 10, 9, 9, 4, 13, 10, 10, 2, 80, 10, 9, 54, 2, 3, 15, 14]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 2, 3, 2, 2, 3, 3, 5, 6, 3, 3, 2, 4, 5, 3, 4, 5, 2, 233, 3, 3, 3, 3, 2, 6, 4, 4, 4, 5, 4, 5, 3, 14]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 3, 6, 2, 3, 2, 3, 5, 6, 4, 5, 7, 4, 2, 3, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 4, 2, 3, 8, 87, 138, 5, 2, 3, 3, 7, 6, 8, 3, 7, 3, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 2, 3, 4, 4, 6, 38, 3, 3, 4, 6, 5, 4, 8, 63, 4, 14]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 4, 27, 3, 3, 2, 6, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 77, 8, 10, 7, 8, 7, 10, 8, 9, 48, 10, 2, 11, 11, 9, 7, 6, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 2, 3, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 3, 3, 4, 4, 5, 4, 5, 9, 11]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 12, 12, 12, 12, 12, 14, 4, 3, 3, 16, 17, 4, 16, 7, 17, 17, 6, 5, 5, 3, 3, 10, 4, 5, 4, 182, 6, 5, 9, 15, 7, 12, 4, 10, 15, 5, 3, 9, 4, 32, 7, 4, 3, 13, 3, 4, 4, 4, 10, 4, 4, 3, 5, 3, 24, 32, 4, 6, 3, 5, 27, 6, 5, 3, 3, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 40, 3, 6, 5, 5, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 13, 31, 3, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 12, 3, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826920642314464
thermo_feasible = true
