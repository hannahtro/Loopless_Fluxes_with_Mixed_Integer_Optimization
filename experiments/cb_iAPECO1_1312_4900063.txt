┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAPECO1_1312
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAPECO1_1312
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1313

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 11, 13, 11, 11, 11, 11, 11, 14, 14, 13, 16, 2, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 14, 6, 16, 16, 23, 13, 39, 14]
length(C_list) = 1
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 2, 11, 11, 12, 11, 11, 11, 11, 14, 15, 14, 15, 14, 14, 14, 14, 19, 14, 17, 18, 17, 18, 17, 17, 15, 14, 40, 15, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 11, 12, 11, 11, 14, 11, 11, 2, 16, 17, 16, 17, 16, 2, 16, 16, 16, 19, 16, 19, 20, 19, 20, 21, 19, 53, 17, 16, 42, 17, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 11, 13, 11, 11, 11, 11, 11, 16, 18, 16, 17, 16, 2, 16, 16, 16, 19, 16, 19, 20, 19, 20, 17, 18, 19, 20, 18, 62, 16, 43, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 2, 2, 12, 11, 11, 12, 13, 11, 11, 18, 14, 13, 14, 13, 13, 14, 15, 24, 13, 16, 17, 25, 17, 13, 16, 16, 23, 13, 13, 14, 18, 39, 14, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 13, 11, 11, 11, 11, 11, 11, 11, 13, 14, 13, 14, 13, 13, 13, 13, 16, 13, 16, 17, 16, 17, 15, 16, 16, 14, 14, 13, 39, 6, 14, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 11, 11, 11, 11, 11, 11, 18, 13, 16, 13, 14, 13, 3, 15, 13, 15, 16, 13, 16, 17, 16, 17, 14, 15, 16, 16, 13, 13, 14, 13, 40, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 18, 11, 11, 11, 11, 16, 17, 16, 17, 16, 16, 16, 16, 19, 16, 19, 20, 19, 20, 19, 19, 17, 16, 42, 17, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 11, 11, 11, 11, 11, 11, 13, 93, 13, 14, 13, 3, 18, 14, 13, 16, 13, 17, 17, 16, 17, 14, 15, 16, 16, 13, 13, 14, 13, 39, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 12, 11, 11, 11, 11, 11, 11, 13, 14, 13, 14, 13, 3, 13, 14, 13, 26, 48, 16, 17, 16, 17, 16, 16, 13, 18, 14, 14, 39, 14, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 11, 56, 11, 13, 11, 11, 11, 13, 14, 13, 14, 13, 4, 13, 13, 13, 16, 15, 16, 17, 16, 17, 16, 16, 13, 14, 14, 22, 39, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 6, 11, 147, 11, 11, 13, 11, 11, 13, 14, 13, 15, 13, 3, 19, 13, 13, 16, 13, 16, 17, 16, 17, 14, 16, 16, 13, 14, 13, 40, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 13, 11, 11, 11, 11, 11, 12, 13, 14, 13, 14, 13, 15, 13, 13, 16, 13, 16, 17, 85, 17, 16, 16, 13, 14, 13, 39, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 11, 11, 11, 11, 11, 14, 11, 14, 14, 17, 14, 13, 13, 13, 14, 35, 13, 17, 17, 16, 17, 13, 13, 18, 16, 13, 14, 13, 40, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 21, 11, 11, 11, 77, 11, 12, 15, 14, 13, 14, 13, 6, 13, 19, 13, 16, 13, 16, 17, 16, 17, 13, 14, 16, 16, 13, 14, 13, 39, 14, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 44, 109, 11, 153, 11, 11, 11, 11, 16, 22, 16, 17, 16, 7, 16, 16, 17, 19, 16, 19, 20, 19, 20, 17, 19, 19, 16, 17, 16, 44, 18]
AssertionError("!(isempty(C_list_filtered))")
