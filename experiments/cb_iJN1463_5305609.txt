┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN1463
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN1463
----------------------------------
number of metabolites : 2153
number of reactions : 2927
number of genes : 1462

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 88
max_cuts = 59
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2927 flux variables and 5473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 2, 4, 6, 5, 3, 3, 3, 132, 2, 5, 6, 4, 314, 6, 4, 8, 5, 6, 213, 6, 8, 5, 10, 3, 6, 7, 7, 25, 30, 7, 8, 27, 15, 13, 7, 11]
length(C_list) = 39
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 2, 12, 5, 4, 3, 2, 12, 21, 3, 3, 3, 3, 7, 3, 7, 312, 5, 10, 3, 13, 22, 4, 19]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 10, 17, 2, 3, 8, 14, 8, 12, 13, 3, 12, 12, 24, 2, 17, 12, 7, 9, 3, 9, 25, 9, 31, 35, 3, 8, 3, 9, 10, 11, 10, 171, 151]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 7, 4, 16, 3, 6, 6, 7, 12, 7, 12, 6, 4, 46, 15, 5, 5, 13, 17, 6, 42, 7, 12, 23, 6, 6, 6, 8, 10, 7, 7, 116, 5, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 3, 7, 12, 93, 20, 6, 8, 4, 12, 18, 53, 15, 12, 102, 4, 5, 76, 3, 6, 6, 109, 133, 9, 225, 5, 6, 13, 4, 6, 7, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 4, 4, 4, 4, 4, 3, 7, 4, 5, 3, 6, 6, 4, 4, 4, 3, 4, 17, 4, 3, 4, 4, 10, 5, 4, 6, 3, 42, 4, 32, 4, 5, 160, 4, 3, 4, 3]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 9, 4, 3, 6, 5, 4, 3, 7, 3, 4, 5, 4, 5, 5, 6, 4, 4, 5, 4, 9, 5, 10, 3, 5, 5, 9, 4, 5, 4, 9, 3, 5, 4, 15, 8, 10, 4, 8, 4, 5, 5, 100, 74, 116, 8]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [12, 9, 5, 6, 4, 12, 19, 12, 5, 12, 6, 12, 4, 11, 5, 7, 2, 7, 6, 5, 124, 5, 13, 9, 7, 4, 7, 10, 7, 4, 12, 8, 52, 4, 12, 6, 4, 4, 6, 5, 9, 7, 7, 6, 7, 6, 13, 4, 13, 11, 12, 12, 88]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 5, 17, 6, 9, 4, 3, 4, 4, 2, 4, 17, 4, 4, 5, 4, 6, 8, 5, 6, 6, 11, 8, 4, 6, 4, 4, 24, 234, 6, 6, 4, 10, 4, 26, 6, 7, 10, 10, 5, 7, 3, 6, 4, 4, 11, 19, 9]
length(C_list) = 50
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 12, 7, 3, 6, 6, 13, 7, 4, 8, 17, 13, 17, 7, 20, 3, 14, 14, 6, 3, 13, 4, 20, 11, 7, 119, 27, 4, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 3, 8, 4, 7, 4, 5, 8, 9, 4, 9, 8, 11, 18, 7, 6, 8, 7, 24, 7, 7, 6, 7, 6, 6, 8, 25, 9, 6, 9, 9, 9, 8, 7, 4, 7, 7, 12]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 6, 27, 6, 7, 9, 6, 5, 6, 4, 7, 9, 6, 6, 7, 7, 7, 6, 7, 3, 5, 6, 5, 6, 9, 7, 6, 3, 8, 147, 7, 8, 6, 8, 6, 6, 5, 5, 4, 7, 5, 6, 8]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 18, 7, 14, 7, 6, 9, 7, 7, 45, 7, 7, 8, 8, 4, 20, 7, 7, 7, 7, 7]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 10, 8, 9, 6, 6, 6, 7, 8, 6, 6, 6, 8, 6, 7, 75, 10, 6, 6, 6, 10, 7, 7, 6, 30, 17, 8, 7, 12, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 4, 4, 5, 6, 4, 36, 6, 5, 4, 4, 7, 4, 8, 5, 5, 4, 4, 6, 4, 18, 5, 4, 8, 5, 7, 5, 5, 4, 28, 118, 28, 124, 11, 21, 3, 11, 8, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 6, 10, 5, 6, 6, 8, 13, 4, 10, 6, 6, 4, 8, 8, 6, 6, 4, 8, 7, 8, 14, 6, 8, 7, 17, 7, 8, 7, 8, 6, 7, 4, 6, 5, 6, 7, 7, 6, 10, 4, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 20, 6, 6, 6, 6, 6, 6, 6, 13, 7, 7, 9, 9, 4, 6, 30, 7, 8, 44, 7, 9, 220, 8]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 53, 5, 5, 5, 4, 6, 7, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 4, 4, 8, 4, 8, 4, 5, 7, 8, 6, 4, 4, 10, 7, 10, 6, 8, 8, 6, 5, 6, 7, 4, 4, 6, 5, 10, 3, 8, 6, 8, 8, 10, 6, 7, 9, 4, 33, 4, 15, 13]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.586117553087411
thermo_feasible = true
