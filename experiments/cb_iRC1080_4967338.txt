┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 8, 3, 4, 4, 4, 8, 3, 6, 2, 7, 3, 5, 7, 4, 3, 4, 6, 16, 4, 4, 10, 9, 9, 6, 6, 3, 5, 110, 8, 7, 6, 9, 11, 5, 5, 4, 4, 4, 6, 3, 5, 3, 171, 4, 7, 7, 6, 3, 3]
length(C_list) = 44
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 8, 3, 8, 7, 4, 4, 6, 3, 12, 2, 3, 4, 3, 5, 6, 4, 4, 9, 8, 4, 7, 2, 4, 6, 4, 8, 3, 7, 5, 3, 5, 4, 4, 5, 90, 8, 3, 11, 12, 4, 8, 7, 12, 21, 4, 3, 9, 9, 8, 5, 6, 7, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 3, 4, 3, 3, 5, 6, 8, 3, 3, 7, 3, 4, 8, 4, 4, 7, 3, 3, 9, 4, 5, 5, 8, 8, 7, 4, 7, 13, 4, 8, 62, 4, 7, 10, 3, 7, 7, 8, 49, 8, 7, 4, 9, 8, 8, 9, 4, 8, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 3, 3, 5, 8, 3, 3, 4, 4, 3, 4, 23, 5, 4, 10, 13, 5, 4, 3, 5, 9, 16, 4, 9, 11, 3, 4, 26, 7, 25, 24, 5, 4, 4, 4, 4, 5, 4, 3, 9, 5, 10, 54, 4, 4, 5, 6, 17]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 7, 9, 8, 6, 4, 7, 3, 7, 18, 9, 178, 38, 8, 4, 9, 7, 3, 8, 7, 3, 22, 6, 17, 5, 8, 12, 7, 12, 7, 8, 4, 10, 6, 12, 15, 155, 19, 15]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 5, 3, 5, 4, 3, 4, 10, 4, 6, 7, 5, 5, 3, 27, 278, 4, 4, 4, 3, 4, 3, 8, 3, 3, 3, 4, 9, 55, 6, 5, 6, 3, 10, 7, 5, 7, 3, 8, 4, 22, 7, 7, 4, 48, 52, 3]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 13, 6, 5, 3, 5, 5, 4, 15, 184, 10, 9, 19, 14, 8, 16, 13, 5, 6, 12, 13, 34, 13, 8, 5, 16, 5, 4, 13, 12, 8, 14, 15, 4, 4, 7, 4, 5, 3, 19, 11, 16, 14]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 8, 10, 4, 6, 8, 4, 4, 4, 4, 4, 7, 9, 10, 4, 7, 5, 4, 12, 7, 8, 17, 4, 6, 6, 4, 5, 8, 12, 6, 15, 9, 7, 9, 7, 11, 4, 7, 8, 9, 6, 4, 67, 13, 7, 9, 5, 9, 8, 8, 9, 8, 7, 8, 7, 6]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 5, 16, 6, 5, 3, 5, 5, 5, 4, 5, 5, 5, 5, 5, 22, 3, 5, 5, 3, 3, 5, 5, 4, 5, 181, 5, 5, 3, 3, 3, 5, 4, 7, 7, 29, 6, 5, 5, 5, 5, 5, 5, 13, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 4]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 3, 3, 4, 7, 3, 3, 6, 4, 4, 3, 5, 8, 4, 4, 8, 4, 8, 3, 3, 9, 4, 6, 3, 5, 6, 3, 90, 9, 150, 5, 6, 4, 8, 7, 9, 15, 5, 4, 8, 4, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [14, 6, 3, 10, 5, 8, 3, 7, 5, 3, 5, 5, 10, 3, 11, 8, 7, 8, 4, 3, 8, 72, 6, 6, 8, 8, 8, 8, 8, 9, 5, 10, 9, 32, 41, 9, 105, 7, 6, 15, 10, 6, 8, 8, 5, 8]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 12, 7, 3, 3, 3, 4, 3, 4, 4, 6, 3, 4, 5, 4, 3, 8, 9, 40, 4, 4, 5, 3, 6, 9, 10, 9, 4, 3, 6, 8, 11, 5, 3, 8, 5, 9, 8, 8, 9, 5, 9, 3, 10, 8, 5, 9, 4, 7, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 5, 4, 8, 5, 3, 3, 4, 4, 11, 4, 6, 108, 11, 15, 16, 3, 6, 3, 3, 7, 8, 4, 10, 13, 4, 6, 7, 10, 9, 14, 8, 11, 10, 10, 8, 14, 9, 6, 7, 9, 16, 7, 20, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [9, 9, 10, 9, 6, 14, 7, 12, 5, 267, 133, 11, 5, 11, 13, 13, 8, 3, 9, 9, 6, 9, 7, 9, 10, 15, 15, 18, 5, 8, 15, 12, 8, 13, 7, 5, 15, 6, 5, 13, 14, 8, 48, 10, 9, 10, 11, 13, 12, 17, 9, 14, 17, 8, 8, 17, 10]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 25, 4, 4, 4, 5, 3, 8, 7, 8, 3, 4, 16, 4, 9, 10, 13, 8, 3, 3, 20, 5, 55, 4, 6, 14, 5, 6, 10, 12, 13, 15, 36]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [13, 3, 4, 8, 3, 13, 3, 7, 4, 4, 12, 8, 7, 14, 8, 5, 8, 7, 4, 8, 7, 4, 11, 327, 10, 6]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 6, 7, 5, 5, 6, 5, 4, 13, 5, 10, 30, 4, 3, 7, 3, 7, 5, 7, 12, 16, 10, 6, 42, 4, 12, 6, 318, 5, 5, 27, 9, 14, 16, 6, 14, 14, 14, 4, 6, 11, 7, 7, 15, 8, 10, 7, 10, 5, 8, 8, 10, 10, 75, 6, 8, 8, 15, 9, 15]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 4, 5, 10, 4, 4, 4, 6, 18, 60, 8, 7, 6, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [10, 2, 3, 4, 4, 11, 10, 4, 5, 4, 9, 4, 5, 12, 4, 4, 6, 9, 3, 20, 19, 11, 4, 10, 11, 5, 5, 9, 4, 20, 10, 57]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 5, 6, 12, 25, 7, 7, 4, 15, 7, 5, 5, 7, 12, 6, 81, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 4, 4, 3, 7, 3, 6, 5, 3, 5, 3, 5, 4, 3, 7, 5, 7, 6, 141, 4, 5, 5, 5, 5, 4, 4, 4, 5, 4, 4, 5, 4, 15, 8, 4, 7, 5, 4, 6, 5]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [37, 4, 4, 3, 6, 13, 30, 12, 34, 35, 27, 30, 13, 13, 28, 27, 32, 12, 44, 4, 48, 37, 29, 49, 12, 34, 30, 27, 37, 34, 22, 23, 5, 31, 20, 58, 56, 28, 5, 206, 13, 30, 118, 35, 32, 5, 36, 28, 45, 39, 28, 30]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [9, 8, 16, 10, 18, 17, 10, 17, 43, 4, 10, 8, 8, 11, 15, 16, 20, 16, 16, 11, 18, 17, 14, 14, 11, 14, 10, 16, 15, 5, 14, 185, 34, 14, 46, 15, 15, 15, 15, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [9, 4, 12, 7, 7, 3, 8, 29, 3, 3, 208, 5, 9, 3, 3, 27, 28, 31, 4, 15, 69, 4, 7, 156, 204, 138, 15, 9, 5, 3, 15, 9, 29, 3, 39, 3, 28, 8, 5, 13, 3, 4, 89, 108, 18, 16, 9, 29, 4, 11, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 3, 4, 6, 8, 8, 7, 8, 9, 11, 8, 5, 15, 11, 8, 8, 32, 88, 4, 4, 8, 11, 12, 9, 137, 8, 9, 14, 8, 9, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [12, 21, 7, 3, 4, 20, 7, 7, 6, 9, 6, 7, 102, 14, 12, 5, 18, 20, 5, 5, 11, 135, 9, 9, 5, 7, 10, 4, 7, 9, 7, 34, 8, 8, 8, 9, 10, 14, 15, 15, 16]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 5, 185, 10, 43, 8, 6, 5, 7, 6, 8, 9, 6, 28, 67]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [20, 51, 51, 20, 51, 18, 16, 18, 18, 52, 57, 18, 29, 22, 18, 18, 47, 23, 21, 57, 20, 52, 18, 22, 50, 49, 52, 19, 74, 17, 20, 18, 53, 50, 49, 51, 52, 56, 17, 46, 53, 48, 84, 49, 19, 19, 22, 22, 57, 49, 54, 16, 18, 19, 45, 17, 20, 16, 46, 17, 45, 19, 18, 52, 47, 25, 51, 18, 56, 22, 58, 26, 16, 20, 24, 15, 17, 17, 49, 17, 50]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [19, 4, 20, 22, 20, 3, 4, 26, 3, 5, 35, 4, 25, 5, 26, 28, 33, 4, 27, 4, 34, 34, 34, 32, 4, 32, 26, 23, 25, 24, 23, 7, 21, 19, 25, 5, 23, 53, 25, 25, 25, 25]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 63, 6, 5, 5, 9, 7, 21, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [27, 51, 51, 27, 54, 49, 50, 50, 46, 33, 54, 50, 50, 43, 50, 89, 35, 37, 44, 52, 45, 49, 45, 50, 51, 40, 49, 60, 53, 36, 25, 50, 49, 47, 52, 54, 51, 49, 39, 47, 46, 36, 50, 39, 58, 58, 47, 78, 203, 59, 50, 25, 31, 57, 31, 24, 50, 26, 25, 56, 46, 28, 51, 47, 28, 44, 51, 54, 53, 51, 41, 46, 49, 51, 26, 45, 65, 50, 32, 41, 32]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 45, 8, 40, 10, 29, 8, 33, 42, 9, 4, 9, 8, 10, 252, 11, 22, 8, 27, 7, 171, 41, 22, 9, 40, 22, 7, 21, 37, 5, 30, 63, 36, 23, 17]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 10, 4, 18, 13, 12, 21, 67, 17, 18, 165, 18, 6, 12, 11, 13, 4, 16, 13, 19, 18, 14, 4, 15, 12, 19, 15, 17, 18, 18, 19, 5, 8, 15, 4, 90, 17, 18]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [12, 33, 38, 50, 4, 3, 28, 8, 30, 23, 3, 12, 14, 29, 8, 30, 10, 23, 26, 12, 7, 5, 42, 13, 11, 30, 53, 42, 23, 25, 12, 6, 11, 29, 37, 30, 38, 42, 21, 5, 8, 25, 22, 37, 23, 7, 49, 18, 8, 43, 4, 17, 13, 40, 26, 9, 36, 36, 6, 10, 15, 29, 26, 34, 27, 24]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 93, 6, 4, 5, 8, 7, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 35
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
