WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982477 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcolC_1368
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcolC_1368
----------------------------------
number of metabolites : 1969
number of reactions : 2768
number of genes : 1368

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2768 flux variables and 5145 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 2, 2, 2, 3, 15, 2, 3, 2, 2, 2, 2, 2, 4, 3, 3, 3, 4, 7]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 2, 4, 3, 4, 4, 5, 2, 142, 2, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 4, 4, 3, 3, 3, 4, 5, 3, 3, 3, 3, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 2, 4, 180, 4, 3, 3, 4, 3, 5, 2, 6, 238, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 3, 11, 8, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 2, 2, 4, 7, 56, 6, 4, 2, 144]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 7, 4, 4, 7, 28, 4, 7, 7, 4, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 31, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 21, 9, 6, 5, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 206, 9, 10, 9, 9, 9, 10, 6, 4, 6, 14, 14, 15, 14, 15, 4, 5, 5, 14, 14, 11, 11, 12, 11, 12, 11, 14, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 16, 10, 29, 8, 16, 8, 7, 5, 14, 14, 15, 26, 15, 4, 3, 14, 15, 54, 11, 12, 11, 12, 11, 11, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 42, 25, 27, 28, 20, 27, 18, 14, 4, 28, 25, 35, 68, 5, 4, 4, 18, 21, 4, 24, 4, 24, 4, 11, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [26, 12, 5, 24, 23, 10, 4, 6, 22, 4, 4, 5, 4, 42, 25, 29, 4, 4, 12, 4, 22, 4, 7, 17, 23, 10, 8, 17, 6, 17, 11, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 23, 8, 19, 129, 8, 17, 6, 6, 4, 3, 18, 17, 19, 18, 20, 4, 4, 5, 4, 3, 19, 21, 10, 8, 15, 23, 15, 8, 15, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [22, 6, 6, 18, 20, 19, 20, 15, 26, 7, 9, 3, 20, 20, 18, 15, 28, 6, 7, 8, 4, 22, 10, 4, 17, 5, 13, 8, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [16, 3, 3, 11, 18, 18, 34, 16, 19, 21, 6, 3, 4, 2, 15, 18, 205, 18, 22, 7, 7, 4, 4, 4, 16, 20, 9, 11, 10, 6, 14, 11, 7, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [22, 5, 5, 9, 9, 19, 17, 4, 11, 9, 6, 6, 11, 15, 22, 21, 20, 4, 6, 6, 7, 3, 15, 17, 20, 8, 14, 9, 14, 15, 11, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 10, 11, 20, 19, 8, 6, 20, 8, 7, 23, 16, 14, 16, 24, 3, 3, 5, 4, 18, 20, 13, 4, 14, 5, 14, 31, 17, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [8, 6, 3, 11, 12, 22, 20, 22, 22, 5, 3, 4, 4, 16, 17, 4, 24, 18, 3, 6, 6, 8, 8, 20, 17, 12, 17, 13, 4, 13, 10, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 5, 2, 8, 11, 8, 19, 3, 5, 7, 11, 12, 6, 14, 13, 4, 74, 8, 3, 18, 20, 16, 6, 13, 6, 13, 19, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 18, 18, 17, 18, 18, 19, 6, 6, 5, 7, 13, 17, 17, 18, 23, 5, 4, 15, 3, 17, 5, 12, 32, 13, 13, 13, 12, 30, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 12, 17, 16, 12, 21, 17, 8, 7, 9, 33, 19, 16, 18, 5, 4, 7, 15, 16, 19, 10, 14, 14, 4, 14, 15, 127, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 20, 18, 19, 16, 5, 18, 4, 3, 5, 4, 6, 5, 16, 20, 18, 21, 21, 4, 7, 4, 4, 15, 4, 8, 27, 11, 7, 11, 14, 30, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 4, 8, 4, 11, 12, 10, 5, 47, 5, 10, 5, 16, 15, 33, 15, 18, 5, 6, 4, 5, 6, 8, 14, 4, 64, 22, 13, 12, 13, 15, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 8, 28, 9, 29, 3, 8, 4, 4, 4, 6, 5, 13, 32, 21, 13, 21, 5, 9, 3, 3, 17, 12, 4, 26, 13, 3, 14, 10, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 8, 4, 5, 8, 3, 4, 3, 3, 3, 5, 12, 4, 7, 14, 14, 6, 112, 4, 6, 3, 4, 4, 23, 3, 11, 6, 11, 10, 10, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 20, 151, 16, 8, 16, 18, 3, 4, 3, 5, 12, 4, 22, 11, 22, 5, 6, 27, 15, 3, 7, 12, 12, 12, 14, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 7, 15, 18, 21, 20, 18, 5, 5, 9, 7, 7, 76, 9, 26, 4, 4, 6, 5, 31, 14, 8, 15, 14, 4, 14, 10, 16, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [37, 3, 8, 3, 8, 9, 64, 16, 6, 4, 3, 4, 13, 4, 25, 9, 4, 5, 5, 3, 5, 4, 23, 23, 6, 4, 14, 7, 13, 4, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [14, 3, 7, 4, 4, 13, 20, 3, 5, 3, 3, 16, 26, 4, 23, 6, 4, 4, 22, 34, 8, 6, 13, 3, 15, 11, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [5, 79, 4, 5, 13, 13, 15, 14, 43, 10, 5, 18, 19, 37, 18, 4, 4, 13, 7, 21, 5, 5, 4, 10, 3, 10, 11, 12, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 3, 21, 13, 278, 11, 5, 4, 3, 4, 15, 21, 15, 13, 18, 6, 6, 4, 19, 15, 4, 93, 19, 11, 9, 10, 10, 14, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [10, 7, 15, 8, 4, 4, 6, 5, 3, 5, 5, 9, 33, 16, 5, 5, 4, 14, 6, 8, 5, 8, 4, 13, 15, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [6, 3, 27, 13, 26, 3, 4, 6, 6, 20, 35, 9, 20, 3, 5, 4, 4, 3, 3, 20, 26, 10, 11, 11, 4, 13, 16, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 4, 5, 8, 19, 4, 8, 6, 4, 4, 4, 3, 11, 28, 9, 24, 4, 61, 5, 5, 4, 26, 8, 10, 16, 4, 13, 3, 10, 156]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 11, 5, 25, 24, 24, 4, 3, 26, 4, 37, 27, 33, 9, 4, 8, 6, 15, 11, 5, 8, 5, 14, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 6, 29, 13, 3, 18, 4, 11, 5, 13, 23, 22, 15, 19, 17, 4, 5, 22, 17, 4, 115, 8, 9, 10, 9, 28, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 4, 12, 18, 14, 11, 10, 8, 7, 13, 14, 5, 16, 20, 9, 7, 17, 5, 5, 7, 6, 4, 10, 10, 4, 12, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 12, 8, 6, 3, 23, 4, 4, 5, 13, 16, 27, 22, 5, 11, 6, 27, 4, 22, 12, 4, 3, 4, 12, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [5, 17, 7, 5, 4, 8, 14, 24, 3, 4, 20, 9, 30, 16, 5, 9, 4, 6, 14, 14, 3, 35, 12, 6, 16, 15, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 7, 8, 10, 3, 8, 5, 5, 17, 13, 21, 22, 18, 5, 5, 4, 7, 14, 8, 6, 11, 11, 11, 4, 11, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 6, 10, 9, 9, 9, 4, 4, 4, 14, 14, 11, 5, 4, 4, 6, 11, 24, 14, 11, 8, 5, 4, 27, 45, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [12, 4, 7, 8, 5, 5, 4, 4, 5, 4, 4, 5, 4, 11, 3, 24, 4, 4, 5, 5, 16, 10, 4, 4, 12, 6, 4, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [19, 6, 6, 4, 23, 6, 6, 15, 10, 4, 7, 4, 7, 67, 14, 22, 11, 23, 6, 5, 8, 19, 20, 13, 10, 11, 5, 10, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [12, 5, 3, 8, 8, 10, 8, 7, 13, 8, 4, 31, 13, 14, 13, 4, 3, 6, 6, 11, 18, 14, 13, 5, 4, 3, 8, 17, 13, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 23, 5, 6, 82, 9, 7, 4, 28, 17, 23, 12, 5, 4, 8, 15, 5, 12, 26, 10, 7, 12, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [13, 4, 13, 13, 4, 6, 5, 5, 5, 4, 23, 23, 23, 5, 7, 6, 5, 28, 5, 8, 10, 12, 5, 6, 10, 10, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [16, 3, 6, 5, 7, 11, 7, 13, 16, 13, 15, 11, 10, 5, 5, 8, 6, 7, 7, 6, 14, 7, 16, 10, 12, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 58, 5, 137, 6, 8, 10, 13, 4, 7, 13, 14, 4, 13, 5, 4, 5, 4, 5, 14, 5, 8, 10, 10, 7, 5, 4, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 5, 11, 4, 9, 5, 5, 4, 34, 30, 17, 11, 13, 6, 5, 4, 13, 31, 19, 4, 6, 6, 5, 7, 27, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [37, 9, 9, 6, 36, 13, 10, 26, 4, 4, 4, 4, 13, 4, 4, 4, 7, 6, 28, 13, 8, 57, 5, 64, 12, 20, 11, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [17, 24, 5, 10, 19, 26, 4, 10, 16, 6, 4, 4, 14, 6, 15, 16, 11, 4, 6, 9, 4, 6, 5, 10, 29, 125, 6, 5, 4, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [3, 11, 6, 10, 10, 5, 5, 20, 4, 7, 4, 5, 7, 33, 8, 19, 228, 4, 6, 6, 23, 3, 20, 15, 8, 11, 30, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [12, 7, 3, 8, 8, 24, 8, 9, 8, 11, 34, 3, 13, 31, 20, 8, 6, 6, 7, 4, 15, 10, 16, 4, 12, 6, 12, 180]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 15, 31, 15, 3, 6, 10, 4, 7, 13, 4, 20, 15, 16, 4, 6, 6, 7, 9, 30, 3, 6, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [3, 5, 14, 10, 12, 20, 3, 4, 4, 6, 4, 22, 16, 6, 16, 4, 4, 18, 15, 16, 7, 6, 12, 4, 22, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [6, 13, 9, 6, 10, 10, 9, 6, 4, 4, 6, 13, 6, 8, 15, 18, 18, 6, 21, 4, 4, 6, 8, 23, 5, 16, 8, 23, 7, 8, 25, 25, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [12, 2, 5, 12, 10, 6, 25, 7, 4, 5, 4, 8, 4, 4, 6, 5, 5, 12, 4, 3, 5, 4, 4, 14, 9, 22, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [5, 17, 5, 36, 8, 10, 5, 8, 6, 3, 7, 18, 14, 27, 19, 14, 19, 7, 7, 16, 6, 19, 31, 10, 21, 12, 12, 13, 13, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [28, 5, 5, 5, 5, 6, 12, 4, 6, 4, 21, 4, 5, 20, 4, 14, 18, 4, 4, 5, 5, 9, 7, 20, 5, 13, 4, 8, 6, 6, 34, 11, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [9, 16, 7, 7, 9, 17, 6, 15, 15, 6, 3, 6, 442, 4, 6, 21, 4, 18, 6, 15, 9, 15, 6, 7, 5, 5, 5, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 10, 8, 10, 21, 17, 13, 5, 5, 10, 17, 7, 19, 26, 6, 9, 4, 14, 22, 8, 10, 5, 4, 6, 14, 6, 17, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [9, 3, 7, 14, 14, 17, 14, 14, 14, 14, 13, 11, 12, 7, 30, 32, 21, 30, 28, 13, 11, 5, 10, 5, 7, 8, 5, 6, 4, 8, 4, 9, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 19, 8, 16, 6, 4, 5, 5, 5, 11, 4, 13, 34, 7, 10, 4, 7, 6, 16, 5, 32, 3, 12, 10, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 3, 6, 5, 87, 55, 6, 4, 8, 7, 7, 15, 17, 6, 12, 4, 26, 7, 7, 7, 18, 8, 6, 10, 6, 11, 4, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 5, 5, 11, 22, 4, 7, 21, 5, 4, 5, 13, 13, 11, 21, 27, 5, 4, 7, 4, 14, 25, 9, 6, 24, 6, 22, 21, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [24, 5, 4, 11, 10, 6, 8, 10, 8, 10, 4, 8, 5, 5, 5, 6, 6, 15, 8, 19, 17, 7, 3, 6, 18, 4, 9, 10, 6, 4, 6, 6, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 5, 9, 9, 8, 3, 14, 3, 8, 11, 13, 3, 4, 16, 24, 11, 6, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [24, 3, 9, 8, 15, 13, 4, 33, 23, 18, 27, 17, 21, 5, 5, 11, 12, 9, 4, 24, 9, 32, 15, 5, 10, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 24, 4, 3, 7, 3, 6, 11, 4, 4, 43, 17, 31, 29, 40, 16, 5, 7, 12, 17, 4, 29, 11, 29, 10, 6, 48, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [15, 12, 6, 4, 4, 5, 8, 15, 27, 6, 8, 5, 33, 31, 9, 22, 6, 5, 6, 4, 17, 9, 22, 5, 7, 37, 4, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [12, 12, 82, 3, 4, 9, 9, 5, 15, 7, 8, 7, 29, 7, 21, 6, 9, 6, 7, 7, 22, 10, 10, 7, 10, 29, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [10, 7, 17, 10, 18, 10, 12, 4, 6, 4, 12, 17, 7, 22, 19, 3, 10, 8, 4, 15, 28, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [12, 6, 10, 16, 16, 8, 9, 18, 9, 5, 5, 17, 21, 4, 13, 8, 34, 9, 6, 5, 5, 15, 108, 24, 24, 12, 21, 15, 23, 24, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 16, 5, 15, 16, 16, 16, 16, 4, 9, 3, 5, 23, 121, 25, 23, 24, 18, 4, 3, 8, 40, 20, 31, 31, 12, 6, 12, 31, 31]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [7, 25, 7, 16, 16, 17, 17, 19, 16, 17, 5, 5, 10, 21, 21, 25, 21, 31, 27, 24, 34, 26, 25, 19, 26, 26, 15, 30, 26, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [33, 21, 18, 18, 18, 35, 18, 18, 18, 5, 23, 31, 34, 24, 38, 33, 4, 9, 33, 31, 34, 31, 26, 8, 12, 31, 31, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [36, 6, 25, 23, 37, 23, 22, 25, 22, 11, 25, 12, 14, 26, 25, 16, 26, 6, 37, 5, 33, 30, 19, 15, 31, 9, 24, 24, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [22, 28, 29, 16, 16, 16, 97, 16, 16, 15, 3, 7, 7, 3, 3, 27, 28, 4, 23, 25, 27, 24, 25, 25, 24, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 8, 4, 5, 4, 17, 6, 3, 6, 12, 24, 14, 5, 11, 6, 10, 6, 24, 42, 13, 12, 16, 4, 12, 12, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 16, 6, 6, 4, 4, 10, 5, 5, 8, 6, 48, 13, 6, 15, 7, 5, 3, 6, 46, 44, 7, 6, 44, 43]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 8, 6, 5, 7, 33, 4, 7, 4, 4, 10, 7, 4, 4, 6, 3, 17, 8, 14, 7, 6, 10, 4, 3, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [3, 8, 5, 4, 10, 9, 6, 7, 37, 6, 11, 6, 3, 12, 15, 6, 6, 7, 8, 5, 8, 6, 6, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 16, 16, 16, 16, 20, 15, 16, 5, 5, 34, 43, 36, 6, 15, 4, 6, 5, 4, 22, 43, 35, 35, 4, 5, 28, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [24, 15, 4, 7, 4, 12, 5, 4, 7, 9, 6, 6, 27, 5, 7, 4, 6, 5, 12, 30, 5, 24, 25, 6, 5, 24, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [29, 14, 14, 34, 28, 34, 34, 34, 34, 34, 21, 33, 28, 29, 20, 26, 31, 17, 29, 14, 89, 20, 19, 24, 29, 15, 14, 12, 19, 13, 19, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [17, 7, 7, 14, 13, 14, 21, 14, 13, 5, 7, 6, 9, 5, 16, 14, 23, 7, 6, 4, 7, 5, 58, 15, 14, 12, 12, 6, 14, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [14, 4, 6, 5, 5, 4, 5, 5, 20, 7, 10, 6, 5, 4, 6, 9, 27, 15, 4, 14, 4, 6, 24, 23, 23, 22, 5, 23, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 17, 4, 4, 5, 11, 7, 14, 7, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [25, 6, 16, 16, 26, 20, 21, 16, 19, 4, 17, 7, 4, 13, 23, 23, 22, 16, 4, 6, 4, 20, 15, 21, 30, 31, 20, 15, 15, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [12, 4, 5, 8, 11, 23, 4, 4, 22, 25, 11, 7, 10, 28, 22, 4, 12, 4, 24, 19, 5, 24, 13, 13, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 16, 4, 4, 5, 4, 7, 5, 7, 19, 3, 8, 5, 25, 5, 21, 5, 21, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [35, 3, 34, 18, 30, 18, 31, 17, 18, 18, 4, 12, 18, 35, 30, 3, 10, 10, 19, 30, 34, 25, 22, 13, 26, 7, 32, 20, 22, 43]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 6, 7, 5, 7, 12, 7, 31, 31, 5, 6, 5, 6, 4, 5, 31, 28, 29, 28, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 12, 3, 17, 17, 17, 17, 17, 17, 17, 3, 5, 13, 29, 17, 35, 4, 14, 13, 4, 4, 5, 39, 37, 35, 24, 24, 57, 24, 24, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [6, 4, 15, 10, 102, 16, 33, 10, 7, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [18, 12, 14, 13, 13, 13, 13, 13, 13, 4, 13, 18, 22, 13, 18, 18, 13, 4, 16, 18, 41, 14, 12, 14, 10, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 7, 13, 7, 15, 30, 20, 6, 18, 7, 8, 8, 9, 9, 9, 20, 8, 15, 5, 15, 12, 17, 10, 16, 18, 4, 12, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [3, 3, 27, 28, 16, 17, 16, 16, 12, 16, 18, 8, 26, 22, 23, 18, 6, 4, 22, 16, 21, 27, 18, 17, 5, 17, 16, 17, 34]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [7, 22, 6, 8, 8, 20, 9, 22, 18, 19, 21, 23, 19, 9, 10, 10, 23, 26, 21, 21, 18, 19, 23, 21, 29, 22, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [18, 12, 10, 9, 9, 9, 9, 9, 9, 9, 10, 12, 12, 10, 16, 22, 11, 6, 11, 17, 17, 14, 15, 11, 12, 13, 132, 11, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [16, 10, 6, 22, 16, 13, 17, 218, 20, 15, 20, 7, 13, 7, 19, 5, 20, 20, 13, 13, 19, 10, 19, 22, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 29, 13, 14, 13, 19, 15, 19, 174, 11, 19, 14, 20, 14, 16, 23, 14, 13, 15, 17, 15, 29, 16, 16, 20, 12, 13, 17, 36, 12, 13, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [2, 5, 8, 23, 4, 4, 10, 6, 4, 21, 4, 14, 26, 26, 21, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 9, 79, 9, 9, 4, 18, 9, 10, 12, 9, 10, 4, 8, 11, 29, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 10, 7, 14, 8, 4, 12, 10, 11, 4, 10, 9, 4, 9, 11, 8, 8, 5, 13, 9, 7, 11, 9, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 10, 8, 8, 7, 15, 6, 10, 8, 10, 4, 9, 7, 20, 9, 7, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 4, 4, 4, 5, 13, 6, 8, 16, 5, 4, 24, 7, 20, 17, 6, 15, 7, 4, 15, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 3, 7, 3, 12, 5, 6, 8, 13, 5, 4, 14, 5, 12, 4, 6, 6, 6, 5, 11, 3, 14, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 17, 12, 13, 7, 7, 13, 6, 5, 21, 12, 16, 14, 15, 6, 15, 15, 14, 14, 7, 30, 15, 19, 7, 14, 17, 18, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 4, 4, 4, 4, 5, 32, 12, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [18, 18, 13, 13, 15, 14, 10, 14, 19, 8, 13, 9, 9, 18, 12, 12, 14, 13, 9, 14, 8, 8, 9, 13, 15, 19, 9, 15, 17, 15, 10, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 5, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 6, 6, 9, 3, 3, 6, 4, 4, 8, 10, 8, 4, 12, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 5, 9, 4, 5, 7, 6, 3, 13, 6, 7, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 6, 7, 8, 9, 7, 60, 8, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 18, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 7, 8, 7, 15, 9, 8, 9, 12, 54]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [26, 17, 15, 13, 15, 13, 13, 13, 14, 21, 18, 14, 17, 9, 14, 10, 15, 21, 9, 21, 20, 13, 15, 13, 16, 19, 15, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 123
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660084
thermo_feasible = true
