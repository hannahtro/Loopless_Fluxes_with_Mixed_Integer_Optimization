ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 25
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 3, 22, 2, 10, 7, 6, 2, 3, 4, 3, 4, 3, 2, 4, 3, 9, 4, 5, 6, 6, 2, 4, 5, 197, 2, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 9, 135, 2, 2, 2, 4, 4, 4, 4, 2, 8, 3, 4, 5, 4, 8, 2, 5, 111, 4, 2, 4, 5, 2, 4, 9, 3, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 6, 4, 6, 4, 2, 3, 7, 5, 6, 4, 3, 6, 5, 3, 8, 6, 3, 9, 4, 5, 5, 5, 22, 4, 4, 491, 7, 16, 6, 5, 3, 67, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 4, 7, 6, 6, 5, 4, 7, 5, 5, 5, 9, 3, 4, 3, 3, 5, 8, 5, 4, 4, 5, 5, 3, 7, 8, 2, 5, 10, 4, 575, 2, 4, 68]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 3, 4, 4, 8, 2, 9, 7, 9, 4, 6, 5, 10, 5, 4, 5, 3, 4, 2, 5, 3, 154, 5, 5, 4, 7, 2, 40, 8, 4, 3, 5, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 6, 4, 3, 4, 5, 105, 4, 44, 4, 2, 5, 4, 4, 5, 8, 6, 4, 26, 5, 8, 9, 3, 7, 4, 3, 4, 5, 4, 133, 7, 4, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 3, 4, 9, 4, 6, 4, 3, 4, 5, 4, 4, 5, 9, 4, 4, 236, 4, 4, 9, 4, 20, 6, 7, 4, 3, 5, 5, 17, 11, 62, 8, 2, 154, 9, 4, 405]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 4, 8, 4, 13, 5, 4, 10, 4, 9, 4, 6, 7, 5, 7, 8, 5, 4, 5, 5, 4, 4, 7, 8, 10, 6, 5, 5, 12, 4, 4, 5, 7, 7, 4, 4, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 236, 7, 4, 5, 7, 10, 4, 3, 4, 4, 5, 4, 4, 4, 6, 6, 5, 9, 5, 4, 4, 6, 4, 4, 186, 4, 5, 7, 7, 2, 7, 5, 3, 4, 4, 4, 6, 7, 5, 3, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 3, 8, 3, 2, 4, 7, 4, 4, 5, 10, 6, 10, 5, 7, 4, 3, 4, 6, 2, 5, 13, 5, 7, 5, 4, 7, 12, 4, 3, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 5, 9, 9, 3, 10, 4, 7, 8, 4, 4, 4, 3, 5, 3, 6, 6, 8, 7, 3, 4, 6, 8, 200, 7, 7, 7, 7, 10, 3, 7, 3, 7, 8, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 3, 4, 4, 4, 164, 5, 6, 8, 5, 7, 4, 6, 4, 4, 169, 6, 9, 7, 7, 8, 236, 8, 7, 3, 7, 4, 8, 3, 7, 7, 9, 7, 7, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 2, 13, 3, 7, 3, 5, 4, 4, 5, 4, 6, 6, 6, 6, 8, 6, 15, 3, 215, 8, 6, 5, 4, 5, 3, 14, 3, 6, 5, 5, 5, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 5, 20, 3, 13, 4, 7, 8, 4, 2, 4, 5, 16, 4, 9, 25, 10, 4, 3, 3, 7, 5, 3, 2, 4, 4, 2, 3, 5, 129, 3, 5, 4, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 9, 3, 5, 7, 7, 7, 3, 7, 9, 9, 3, 4, 4, 6, 8, 4, 7, 124, 4, 4, 7, 8, 4, 6, 3, 4, 5, 7, 5, 8, 4, 4, 16, 3, 4, 7, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 5, 4, 7, 4, 8, 8, 9, 5, 7, 3, 3, 3, 7, 3, 4, 5, 3, 5, 4, 4, 4, 6, 10, 238, 3, 5, 5, 5, 3, 7, 6, 6, 8, 4, 3, 8, 6, 128, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 7, 4, 6, 6, 4, 4, 6, 9, 2, 3, 6, 3, 6, 3, 7, 3, 3, 3, 61, 5, 4, 7, 8, 6, 6, 6, 4, 4, 6, 10, 8, 4, 2, 8, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 10, 11, 3, 121, 5, 6, 3, 5, 7, 5, 8, 4, 4, 4, 4, 4, 6, 5, 5, 14, 7, 9, 5, 355, 4, 4, 46, 10, 9, 7, 6, 4, 7, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 8, 23, 4, 5, 4, 4, 8, 8, 5, 5, 2, 5, 5, 4, 8, 6, 6, 3, 8, 10, 57, 3, 5, 4, 33, 4, 60, 8, 3, 4, 5, 6, 3, 4, 6, 10, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 9, 4, 5, 38, 4, 9, 7, 3, 3, 7, 10, 4, 2, 6, 6, 4, 3, 3, 4, 6, 5, 3, 5, 5, 5, 18, 8, 6, 7, 4, 4, 7, 9, 3, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 3, 4, 4, 9, 2, 7, 2, 4, 5, 11, 3, 6, 5, 7, 329, 4, 6, 4, 5, 4, 3, 6, 4, 6, 6, 3, 8, 8, 4, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 10, 7, 3, 9, 210, 3, 15, 3, 4, 5, 4, 18, 4, 4, 5, 12, 9, 4, 4, 7, 5, 6, 9, 7, 7, 110, 6, 23, 3, 8, 10, 4, 4, 4, 4, 6, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 4, 6, 10, 7, 3, 9, 130, 7, 7, 13, 8, 11, 10, 7, 7, 3, 4, 8, 3, 5, 6, 10, 3, 9, 4, 3, 5, 4, 4, 5, 3, 7, 4, 5, 6, 6, 80]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 4, 7, 8, 4, 9, 3, 4, 9, 8, 8, 17, 3, 11, 491, 6, 7, 5, 4, 4, 3, 36, 13, 4, 272, 9, 4, 4, 4, 4, 4, 8, 4, 13, 4, 4, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 5, 5, 9, 3, 9, 47, 4, 5, 3, 5, 8, 6, 4, 4, 4, 8, 9, 3, 4, 283, 3, 5, 7, 5, 17, 3, 5, 7, 6, 4, 4, 4, 67]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [7, 3, 5, 4, 5, 4, 3, 244, 4, 6, 4, 4, 4, 4, 6, 4, 3, 4, 7, 8, 9, 4, 4, 4, 4, 3, 4, 10, 4, 6, 6, 5, 6, 6, 6, 3, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 27, 7, 3, 4, 10, 17, 12, 4, 3, 4, 4, 10, 4, 5, 4, 6, 11, 5, 3, 3, 7, 9, 4, 4, 12, 8, 6, 4, 4, 6, 9, 5, 6, 3, 4, 4, 10, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 8, 4, 8, 57, 9, 7, 6, 5, 9, 4, 10, 27, 4, 3, 4, 9, 3, 6, 3, 4, 6, 4, 5, 4, 4, 5, 5, 5, 28, 4, 5, 13, 4, 4, 3, 5, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 4, 5, 6, 6, 16, 3, 164, 4, 4, 5, 4, 6, 12, 4, 10, 4, 17, 8, 3, 11, 4, 17, 3, 8, 8, 10, 7, 4, 16, 4, 8, 3, 4, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 4, 4, 5, 7, 4, 5, 6, 6, 4, 5, 7, 3, 4, 4, 4, 3, 12, 8, 4, 4, 9, 3, 77, 341, 4, 11, 6, 3, 8, 7, 13, 27, 4, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 7, 3, 4, 4, 100, 3, 4, 7, 6, 4, 7, 8, 12, 4, 19, 8, 3, 8, 7, 4, 4, 3, 7, 5, 4, 3, 4, 3, 4, 7, 4, 4, 8, 4, 8, 8, 4, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 3, 45, 6, 6, 6, 39, 9, 12, 6, 7, 4, 3, 8, 9, 4, 6, 5, 7, 3, 4, 6, 4, 4, 4, 4, 4, 7, 5, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [11, 3, 8, 12, 3, 11, 6, 12, 12, 4, 14, 3, 6, 485, 16, 4, 13, 10, 3, 184, 3, 4, 7, 31, 4, 4, 7, 9, 10, 8, 14, 9, 3, 11]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [9, 3, 8, 10, 54, 7, 6, 5, 3, 6, 4, 6, 6, 5, 5, 4, 6, 6, 3, 5, 8, 4, 10, 5, 6, 15, 14, 11, 6, 8, 9, 3, 9, 231, 4, 3, 12, 12, 7, 9, 4, 9, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 5, 4, 121, 8, 7, 6, 11, 4, 4, 8, 8, 8, 6, 5, 10, 136, 6, 3, 10, 6, 11, 3, 4, 5, 10, 30, 377, 4, 8, 4, 8, 6, 8, 9, 3, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 3, 39, 7, 7, 4, 4, 9, 11, 4, 9, 10, 4, 8, 5, 4, 4, 4, 4, 9, 6, 8, 10, 7, 11, 7, 10, 5, 92, 4, 6, 9, 4, 6, 7, 7, 4, 7, 9, 5, 4, 29]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [11, 3, 5, 9, 5, 6, 11, 6, 6, 20, 4, 4, 7, 14, 7, 4, 5, 10, 4, 9, 7, 11, 12, 8, 331, 9, 9, 103, 13, 9, 3, 9, 6, 5, 13, 4, 4, 8, 95]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [11, 3, 6, 4, 5, 4, 4, 11, 7, 6, 7, 9, 6, 4, 11, 14, 8, 5, 9, 5, 6, 34, 4, 3, 7, 14, 7, 12, 3, 4, 4, 5, 5, 6, 7, 12, 7, 6, 6, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 4, 4, 12, 4, 4, 7, 4, 19, 4, 4, 9, 4, 14, 4, 4, 4, 5, 4, 4, 4, 7, 145, 6, 10, 7, 6, 11, 4, 12, 3]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [11, 3, 7, 6, 4, 3, 4, 9, 10, 4, 9, 13, 3, 10, 3, 6, 6, 8, 8, 9, 4, 3, 4, 9, 6, 11, 8, 4, 9, 6, 4, 5, 7, 181]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 4, 7, 6, 14, 8, 8, 3, 8, 4, 4, 16, 7, 3, 6, 13, 6, 6, 6, 39, 11, 13, 276, 5, 19, 6, 10, 14, 17, 7, 6, 10, 5]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [14, 14, 6, 15, 3, 8, 15, 3, 7, 8, 6, 5, 9, 12, 7, 6, 4, 3, 22, 5, 7, 6, 5, 6, 9, 5, 3, 78, 10, 8, 7, 4, 8, 7, 11, 30, 9, 9, 3, 20]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 10, 5, 4, 77, 8, 7, 28, 7, 13, 4, 7, 3, 6, 4, 9, 9, 4, 11, 17, 8, 6, 5, 8, 4, 9, 32, 5, 25, 4, 6, 12]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 10, 4, 7, 10, 5, 13, 9, 6, 5, 3, 10, 4, 9, 9, 9, 6, 9, 7, 7, 9, 11, 4, 8, 6, 8, 6, 549, 6, 14, 10, 8, 9, 6, 7, 7, 11, 167, 3, 10, 9, 7, 3, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [16, 3, 6, 5, 4, 7, 10, 8, 7, 8, 6, 10, 5, 11, 8, 12, 4, 5, 4, 9, 25, 6, 11, 7, 6, 11, 4, 165, 7, 7, 8, 10, 6, 5, 6, 6, 5, 12, 7, 10, 6, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 12, 10, 10, 373, 54, 3, 10, 6, 12, 6, 9, 8, 7, 7, 8, 9, 3, 16, 10, 7, 9, 4, 11, 3, 9, 4, 10, 8, 10, 5, 8, 10, 12, 8, 20, 4, 12, 14, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [21, 5, 4, 6, 4, 6, 7, 6, 6, 4, 5, 4, 6, 3, 13, 9, 6, 6, 15, 6, 4, 6, 5, 7, 8, 5, 4, 22, 7, 7, 4, 5, 11, 6, 7, 7, 7, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 168, 6, 5, 8, 5, 6, 3, 5, 6, 4, 6, 5, 9, 6, 3, 9, 4, 11, 14, 12, 161, 6, 5, 5, 6, 6, 111, 5, 8, 6, 4, 4, 8, 6, 6, 8, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 8, 11, 4, 9, 23, 6, 7, 442, 4, 7, 9, 6, 3, 18, 15, 368, 4, 23, 4, 6, 109, 8, 11, 9, 6, 10, 11, 240, 413, 8, 3, 7, 6, 15, 10, 4, 8, 4, 10, 8, 5, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 6, 7, 6, 4, 4, 6, 6, 5, 8, 3, 4, 6, 12, 6, 8, 10, 4, 13, 4, 4, 7, 6, 6, 158, 87, 8, 12, 4, 13, 4, 8, 6, 8, 3, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [7, 5, 39, 10, 9, 4, 9, 6, 8, 7, 5, 7, 10, 4, 17, 4, 376, 9, 5, 4, 4, 5, 28, 7, 5, 3, 9, 8, 9, 7, 23, 4, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [7, 4, 15, 7, 15, 37, 9, 10, 16, 13, 4, 15, 5, 3, 6, 4, 9, 9, 12, 7, 5, 112, 6, 10, 7, 17, 5, 6, 13, 5, 8, 3, 17, 9, 8, 14, 29, 25, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 6, 6, 4, 3, 4, 7, 5, 17, 5, 17, 8, 4, 5, 21, 13, 7, 5, 9, 10, 4, 8, 4, 5, 7, 255, 6, 4, 7, 4, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [12, 7, 7, 9, 6, 6, 6, 10, 9, 4, 5, 8, 6, 5, 8, 6, 8, 8, 3, 13, 8, 6, 8, 5, 5, 10, 8, 9, 10, 5, 6, 7, 9, 9, 4, 4, 10, 9, 9, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 4, 332, 16, 8, 6, 73, 6, 5, 8, 6, 9, 6, 3, 5, 5, 3, 8, 11, 8, 8, 6, 3, 10, 10, 9, 6, 7, 4, 14, 6, 11, 7, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 4, 4, 4, 93, 5, 5, 6, 3, 5, 12, 4, 6, 6, 7, 16, 5, 5, 3, 9, 10, 8, 4, 235, 64, 4, 9, 69, 27, 6, 5, 11, 11, 7, 3]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [9, 4, 7, 6, 5, 9, 8, 58, 5, 9, 5, 7, 3, 9, 5, 4, 9, 6, 7, 4, 4, 8, 5, 8, 7, 4, 18, 7, 6, 9, 14, 7, 5, 6, 8, 8, 6, 4, 4, 3, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 5, 6, 9, 8, 3, 9, 8, 9, 9, 45, 10, 4, 6, 8, 10, 6, 8, 8, 7, 6, 7, 6, 3, 116, 5, 3, 9, 7, 10, 9, 6, 11, 8, 11, 7, 8, 11]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [15, 9, 6, 6, 7, 8, 5, 6, 7, 8, 376, 8, 7, 6, 10, 8, 4, 14, 7, 5, 6, 10, 8, 17, 14, 108, 5, 9, 5, 9, 11, 3, 10, 9, 9, 219, 4, 8, 11, 11, 11, 9, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [15, 7, 106, 10, 13, 14, 8, 6, 9, 3, 5, 3, 4, 11, 7, 11, 21, 11, 7, 6, 15, 10, 4, 8, 14, 7, 4, 10, 12, 13, 10, 15, 9, 9, 10, 4, 157, 10, 6, 9, 11, 10]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 4, 4, 9, 12, 9, 4, 7, 6, 6, 4, 8, 5, 5, 6, 8, 4, 6, 14, 5, 11, 3, 3, 6, 8, 48, 3, 32, 3, 4, 5, 9, 6, 3, 9, 16, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 6, 4, 5, 7, 6, 3, 5, 10, 9, 10, 4, 13, 6, 5, 6, 6, 7, 9, 8, 3, 4, 9, 4, 6, 4, 4, 7, 8, 6, 6, 8, 4, 23, 3, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 5, 3, 8, 119, 11, 10, 5, 4, 7, 5, 4, 9, 7, 5, 11, 6, 7, 3, 4, 15, 9, 4, 358, 6, 4, 5, 5, 7, 6, 4, 6, 7, 4, 6, 18, 8, 31, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [15, 9, 5, 4, 4, 10, 4, 8, 14, 9, 4, 9, 252, 6, 8, 11, 7, 3, 9, 4, 6, 9, 11, 9, 7, 10, 5, 32, 4, 9, 13, 7, 7, 6, 7, 8, 7, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 53, 12, 8, 9, 6, 9, 10, 4, 9, 10, 9, 9, 10, 6, 4, 9, 3, 8, 11, 10, 6, 11, 4, 10, 5, 270, 9, 9, 26, 6, 5, 9, 8, 10, 11, 11, 6, 7, 9, 9, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 7, 10, 8, 6, 8, 11, 6, 13, 5, 7, 6, 8, 7, 7, 9, 6, 3, 8, 7, 8, 7, 5, 9, 6, 7, 7, 12, 13, 7, 7, 22, 4, 6, 8, 9, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 11, 8, 5, 10, 8, 17, 10, 9, 7, 12, 4, 6, 6, 12, 7, 9, 8, 3, 8, 11, 13, 9, 6, 6, 9, 6, 8, 7, 8, 8, 9, 6, 6, 10, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [3, 282, 144, 5, 4, 8, 6, 57, 9, 5, 5, 6, 8, 6, 5, 4, 8, 8, 7, 13, 5, 8, 5, 9, 8, 3, 12, 12, 7, 6, 9, 18, 5, 5, 6, 8, 5, 3, 5, 6, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 3, 7, 6, 10, 18, 13, 8, 8, 5, 12, 228, 11, 7, 6, 4, 9, 8, 6, 8, 4, 11, 4, 6, 8, 4, 4, 11, 8, 12, 7, 7, 4, 4, 7, 6, 5, 13, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 6, 11, 4, 7, 3, 8, 9, 6, 7, 8, 6, 11, 9, 7, 7, 8, 6, 10, 6, 18, 12, 7, 10, 12, 4, 10, 65, 6, 8, 8, 6, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 11, 9, 9, 8, 6, 8, 7, 9, 6, 12, 8, 9, 5, 7, 8, 6, 8, 8, 9, 8, 8, 10, 8, 4, 14, 7, 13, 9, 10, 6, 8, 8, 6, 189, 18, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 12, 7, 7, 6, 6, 9, 6, 7, 7, 8, 12, 6, 4, 13, 4, 4, 39, 10, 5, 15, 10, 5, 6, 7, 20, 7, 11, 5, 10, 10, 9, 7, 10, 4, 10, 6, 15, 29, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 14, 401, 4, 8, 6, 6, 7, 7, 7, 202, 12, 9, 6, 8, 10, 8, 8, 9, 5, 6, 8, 3, 6, 11, 12, 8, 4, 7, 8, 6, 15, 7, 11, 11, 5, 7, 11, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 8, 9, 7, 11, 9, 9, 9, 6, 7, 7, 10, 8, 7, 8, 11, 7, 6, 7, 7, 13, 9, 9, 4, 8, 9, 11, 7, 142, 11, 7, 9, 7, 19, 8, 10, 12, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 9, 7, 3, 6, 4, 8, 5, 7, 5, 6, 4, 5, 4, 3, 7, 5, 8, 4, 9, 4, 10, 5, 6, 6, 100, 38, 10, 6, 7, 7, 10, 8, 4, 176, 26, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [16, 9, 9, 4, 4, 5, 8, 5, 11, 5, 7, 12, 5, 6, 5, 12, 5, 3, 7, 14, 5, 9, 11, 10, 3, 4, 3, 9, 24, 5, 8, 5, 8, 11, 14, 5, 8, 9, 12, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 10, 8, 8, 13, 7, 6, 5, 7, 4, 10, 7, 74, 5, 7, 4, 15, 14, 13, 45, 4, 9, 10, 8, 14, 395, 7, 10, 9, 4, 8, 18, 8, 4, 8, 9, 6, 4, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 6, 19, 10, 4, 6, 7, 5, 4, 9, 7, 4, 5, 12, 7, 5, 19, 10, 10, 6, 8, 23, 10, 5, 223, 10, 11, 7, 9, 8, 5, 6, 4, 3, 6, 6, 9, 10, 8, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 13, 4, 10, 9, 9, 8, 12, 7, 5, 9, 6, 5, 8, 13, 10, 13, 12, 9, 8, 9, 9, 7, 7, 11, 6, 8, 8, 40, 6, 10, 8, 7, 11, 9, 75, 202]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 9, 10, 9, 9, 7, 10, 8, 4, 5, 7, 5, 11, 9, 6, 11, 5, 5, 20, 6, 4, 15, 8, 6, 6, 6, 5, 4, 8, 5, 10, 4, 3, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 11, 28, 8, 6, 9, 5, 7, 12, 5, 4, 6, 7, 8, 9, 5, 4, 9, 8, 8, 5, 5, 10, 9, 7, 8, 7, 8, 5, 12, 4, 5, 10, 6, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 8, 66, 12, 9, 9, 12, 7, 10, 5, 34, 4, 12, 142, 7, 8, 11, 9, 11, 10, 21, 7, 8, 9, 7, 6, 7, 12, 9, 10, 75, 7, 11, 537, 5, 9, 8, 10, 9, 11, 9, 11, 6, 8, 8, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [10, 8, 6, 8, 12, 8, 5, 8, 10, 6, 9, 5, 12, 6, 6, 6, 4, 398, 8, 5, 9, 14, 10, 12, 9, 8, 11, 10, 9, 3, 9, 10, 9, 5, 6, 10, 8, 7, 8, 10, 10, 5, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [13, 6, 5, 10, 8, 7, 8, 8, 10, 4, 9, 4, 9, 9, 249, 8, 40, 8, 24, 11, 6, 9, 10, 3, 9, 277, 7, 6, 5, 10, 6, 149, 7, 7, 6, 11, 3, 172, 11, 4, 9, 9, 10, 11, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [9, 3, 206, 8, 6, 5, 11, 4, 6, 4, 4, 6, 5, 9, 6, 13, 12, 6, 60, 6, 4, 6, 13, 4, 9, 5, 4, 7, 8, 8, 8, 4, 3, 4, 3, 5, 11, 6, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 9, 7, 8, 4, 9, 5, 6, 8, 5, 6, 8, 10, 6, 8, 7, 7, 7, 6, 6, 7, 7, 7, 10, 10, 8, 21, 9, 6, 7, 30, 10, 5, 11, 10, 3, 5, 6, 6, 12, 5, 7, 13, 11]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 3, 5, 10, 5, 6, 5, 37, 5, 5, 5, 6, 5, 7, 5, 8, 10, 9, 6, 14, 6, 9, 8, 6, 10, 13, 3, 4, 4, 9, 5, 4, 8, 9, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 8, 9, 9, 5, 12, 6, 5, 8, 7, 7, 5, 7, 5, 6, 8, 7, 6, 7, 7, 8, 96, 5, 8, 4, 5, 8, 7, 6, 7, 11, 7, 5, 10, 8, 6, 6, 95, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [14, 6, 118, 4, 9, 7, 4, 60, 6, 6, 8, 10, 4, 7, 8, 8, 32, 3, 12, 7, 8, 3, 56, 6, 7, 10, 5, 9, 9, 12, 224, 6, 9, 8, 4, 13, 6, 6, 8, 8, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 9, 7, 6, 12, 11, 10, 4, 11, 4, 6, 5, 6, 7, 107, 8, 9, 3, 6, 9, 14, 13, 9, 14, 6, 37, 9, 7, 12, 10, 9, 8, 47, 12, 10, 7, 110]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [2, 3, 9, 6, 6, 4, 18, 11, 4, 8, 9, 7, 12, 10, 9, 4, 9, 8, 135, 9, 6, 5, 8, 9, 29, 9, 3, 7, 10, 6, 9, 6, 7, 9, 9, 12, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 5, 3, 4, 7, 10, 7, 4, 10, 7, 6, 13, 8, 65, 12, 7, 4, 9, 7, 8, 5, 9, 168, 7, 9, 9, 7, 3, 6, 3, 5, 4, 7, 19, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 10, 8, 8, 5, 9, 6, 10, 8, 5, 9, 3, 8, 10, 7, 9, 8, 9, 6, 4, 4, 7, 20, 8, 7, 10, 10, 10, 7, 7, 10, 3, 8, 5, 3, 7, 9, 10, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [10, 9, 7, 8, 4, 6, 6, 6, 4, 11, 4, 5, 6, 5, 8, 7, 4, 7, 7, 9, 40, 6, 8, 6, 269, 9, 14, 8, 4, 5, 8, 8, 13, 13, 9, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 4, 6, 6, 4, 41, 5, 5, 10, 7, 6, 4, 9, 10, 4, 5, 10, 6, 5, 6, 10, 20, 9, 5, 181, 9, 10, 5, 9, 12]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [12, 148, 4, 6, 3, 6, 7, 12, 8, 5, 5, 9, 9, 5, 11, 8, 10, 6, 137, 4, 10, 4, 39, 8, 5, 11, 10, 12, 9, 44, 6, 10, 5, 14, 12, 8]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 6, 4, 9, 6, 6, 6, 6, 40, 11, 4, 3, 6, 9, 5, 3, 11, 7, 6, 7, 8, 13, 320, 5, 4, 6, 12, 6, 26, 9, 10, 12, 10, 5, 4, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [9, 10, 5, 9, 10, 8, 3, 3, 199, 10, 8, 4, 10, 7, 10, 8, 8, 4, 22, 18, 7, 10, 10, 3, 310, 14, 5, 8, 10, 10, 10, 6, 10, 6, 18, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 5, 12, 10, 8, 4, 10, 63, 5, 8, 3, 11, 4, 7, 6, 10, 4, 215, 3, 4, 4, 229, 10, 6, 3, 7, 10, 7, 12, 9, 6, 8, 240]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 8, 5, 4, 8, 6, 8, 5, 10, 9, 7, 3, 6, 6, 8, 4, 8, 5, 7, 8, 8, 101, 10, 5, 6, 5, 6, 6, 8, 8, 7, 7, 6, 9, 7, 6, 10, 6, 11, 7, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 8, 9, 5, 9, 9, 8, 7, 10, 10, 10, 8, 19, 10, 10, 8, 11, 160, 8, 6, 11, 6, 4, 8, 6, 8, 10, 9, 9, 7, 4, 8, 6, 9, 8, 7, 7, 6, 9, 14, 11, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 8, 10, 9, 5, 5, 263, 5, 6, 5, 9, 10, 7, 6, 5, 6, 8, 9, 7, 8, 9, 11, 4, 6, 6, 9, 10, 6, 138, 5, 4, 11, 6, 9, 5, 4, 8, 7, 9, 9, 11, 7, 3, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [6, 6, 10, 8, 9, 5, 4, 11, 12, 3, 4, 5, 4, 7, 7, 14, 12, 5, 4, 4, 3, 4, 12, 5, 6, 13, 5, 4, 3, 6, 4, 5, 5, 14]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 6, 4, 7, 4, 3, 7, 6, 3, 10, 4, 8, 5, 8, 8, 6, 5, 9, 5, 7, 9, 8, 169, 5, 5, 466, 8, 10, 9, 6, 7, 4, 6, 6, 6, 6, 4, 5, 6, 3, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 8, 7, 8, 3, 3, 9, 6, 4, 7, 8, 9, 6, 7, 6, 7, 6, 6, 4, 5, 2, 5, 12, 5, 6, 7, 7, 4, 7, 6, 6, 4, 5, 6, 6, 7, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 6, 7, 5, 5, 5, 6, 5, 4, 6, 6, 6, 6, 6, 6, 6, 7, 9, 6, 4, 4, 5, 5, 8, 6, 3, 6, 6, 6, 5, 7, 5, 8, 81, 6, 6, 5, 5, 4, 4, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [10, 6, 9, 5, 4, 8, 8, 7, 3, 8, 6, 4, 7, 8, 7, 8, 9, 5, 8, 6, 7, 12, 7, 13, 6, 8, 10, 5, 8, 7, 5, 11, 7, 8, 5, 4, 6, 7, 8, 7, 6, 7, 6, 5, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 4, 5, 5, 5, 5, 9, 5, 6, 6, 10, 5, 6, 10, 6, 5, 8, 6, 5, 9, 6, 15, 11, 428, 4, 8, 7, 4, 7, 7, 3, 3, 5, 6, 8, 343, 4, 6, 5, 7, 6, 6, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [5, 5, 17, 4, 6, 7, 8, 4, 5, 7, 309, 7, 5, 5, 4, 8, 6, 6, 5, 6, 5, 11, 3, 4, 4, 4, 5, 4, 3, 5, 5, 4, 4, 18, 4, 6, 7, 7, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [9, 11, 7, 27, 6, 7, 247, 6, 4, 5, 7, 6, 5, 8, 343, 9, 37, 15, 18, 5, 63, 5, 7, 8, 5, 3, 17, 7, 8, 5, 4, 6, 4, 7, 13, 14, 7, 8, 5, 10, 3]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [7, 5, 80, 6, 9, 7, 5, 9, 9, 11, 10, 25, 5, 9, 2, 4, 10, 7, 17, 55, 4, 8, 186, 75, 3, 3, 10, 6, 4, 4, 8, 5, 6, 6, 4, 10, 10, 3, 6, 3, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [11, 3, 291, 11, 4, 4, 8, 4, 4, 7, 3, 50, 4, 4, 10, 11, 4, 8, 5, 126, 7, 8, 7, 8, 4, 11, 9, 9, 9, 24, 8, 5, 4, 9, 6, 8, 22, 11, 9, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 6, 9, 6, 5, 10, 5, 4, 3, 8, 7, 7, 3, 5, 4, 13, 4, 5, 8, 5, 6, 10, 4, 8, 4, 5, 5, 5, 17, 5, 6, 6, 7, 7, 6, 5, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 5, 7, 7, 7, 9, 6, 4, 4, 6, 4, 7, 7, 5, 4, 7, 6, 6, 7, 5, 9, 9, 5, 5, 8, 6, 7, 11, 4, 13, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 7, 10, 4, 4, 5, 7, 10, 6, 8, 11, 6, 10, 9, 10, 7, 8, 8, 4, 12, 8, 7, 10, 7, 14, 7, 8, 8, 8, 7, 13, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 4, 6, 9, 10, 5, 3, 3, 4, 9, 4, 4, 11, 3, 3, 8, 5, 9, 11, 300, 4, 4, 8, 9, 15, 8, 9, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [5, 8, 5, 8, 7, 4, 8, 8, 7, 4, 8, 4, 78, 3, 4, 7, 7, 7, 4, 5, 4, 31, 5, 9, 4, 6, 8, 4, 4, 3, 8, 4, 7, 3, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 6, 11, 7, 4, 9, 7, 3, 9, 4, 7, 4, 4, 214, 6, 4, 10, 7, 5, 7, 9, 9, 7, 11, 6, 4, 372, 9, 8, 8, 14, 5, 20, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [15, 9, 10, 6, 8, 8, 5, 8, 177, 3, 12, 8, 6, 5, 9, 4, 11, 8, 3, 6, 8, 10, 4, 5, 3, 3, 383, 16, 5, 7, 8, 8, 10, 7, 7, 8, 15, 12, 7, 8, 7, 4, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 20, 4, 6, 3, 7, 10, 6, 4, 6, 95, 6, 4, 8, 9, 4, 6, 8, 7, 8, 31, 7, 8, 4, 5, 4, 403, 9, 12, 25, 4, 4, 7, 7, 5, 3, 4, 8, 5, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [8, 24, 3, 7, 8, 8, 3, 6, 4, 4, 9, 7, 64, 8, 6, 9, 3, 5, 4, 37, 4, 4, 4, 8, 12, 6, 10, 7, 7, 3, 9, 600, 7, 5, 6, 6, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [12, 3, 8, 6, 5, 9, 9, 8, 7, 6, 3, 8, 4, 4, 4, 11, 9, 9, 8, 10, 8, 9, 3, 70, 7, 6, 5, 4, 10, 4, 22, 46, 6, 6, 8, 5, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 9, 10, 3, 5, 4, 12, 10, 4, 11, 20, 8, 5, 5, 12, 9, 5, 11, 5, 5, 7, 4, 9, 3, 10, 5, 4, 10, 10, 10, 6, 121]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 6, 7, 8, 11, 11, 7, 5, 8, 4, 8, 11, 10, 4, 3, 6, 9, 10, 10, 3, 5, 6, 6, 8, 5, 7, 4, 25, 8, 10, 4, 10, 11, 8, 11, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 4, 5, 5, 4, 8, 3, 4, 4, 15, 6, 3, 6, 9, 4, 5, 8, 6, 3, 5, 5, 6, 7, 5, 6, 6, 264, 8, 13, 5, 4, 4, 7, 6, 3, 4, 3, 12, 5, 7, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [6, 3, 9, 4, 4, 6, 4, 5, 7, 10, 4, 5, 8, 5, 8, 7, 5, 6, 9, 3, 7, 3, 7, 13, 10, 4, 6, 8, 4, 5, 162, 7, 4, 4, 10, 7, 4, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 6, 6, 6, 12, 7, 5, 7, 10, 4, 8, 8, 9, 14, 11, 6, 3, 10, 9, 8, 9, 10, 8, 7, 8, 11, 8, 4, 10, 9, 10, 6, 10, 10, 9, 107, 8, 8, 8, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [5, 8, 8, 9, 9, 6, 9, 9, 8, 7, 8, 11, 3, 6, 9, 8, 4, 4, 8, 8, 6, 3, 15, 5, 6, 8, 4, 9, 9, 7, 7, 6, 5, 9, 9, 13, 10, 9, 8, 8, 6, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [7, 8, 13, 4, 9, 6, 9, 8, 8, 8, 6, 5, 362, 9, 9, 8, 6, 3, 10, 8, 10, 6, 7, 12, 9, 5, 4, 12, 12, 435, 9, 8, 9, 6, 9, 9, 5, 11, 10, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 7, 8, 7, 13, 7, 4, 5, 6, 5, 3, 12, 9, 7, 491, 7, 49, 5, 6, 9, 6, 7, 42, 8, 4, 10, 5, 10, 9, 9, 7, 6, 4, 7, 6, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 4, 5, 6, 13, 39, 6, 4, 12, 5, 7, 6, 10, 50, 5, 4, 8, 4, 8, 5, 4, 5, 57, 4, 6, 9, 6, 7, 25, 13, 4, 7, 7, 6, 6, 5, 453, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
[11, 4, 8, 6, 6, 11, 9, 8, 9, 4, 6, 11, 4, 8, 8, 7, 13, 11, 9, 8, 12, 8, 8, 8, 11, 21, 6, 6, 8, 9, 7, 9, 8, 7, 8, 5, 7, 25, 7, 8, 6, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 4, 5, 9, 6, 10, 7, 10, 9, 10, 253, 8, 6, 7, 54, 7, 9, 7, 12, 9, 8, 9, 9, 8, 10, 10, 9, 7, 8, 8, 9, 12, 7, 8, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 5, 187, 11, 11, 5, 17, 9, 8, 11, 7, 32, 9, 11, 9, 11, 10, 11, 5, 12, 9, 4, 20, 9, 15, 5, 9, 10, 6, 6, 3, 8, 9, 11, 8, 4, 6, 8, 5, 20, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 4, 8, 8, 10, 3, 5, 4, 4, 9, 10, 26, 6, 7, 4, 269, 4, 5, 3, 7, 181, 4, 4, 4, 6, 9, 7, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [24, 7, 14, 6, 4, 6, 50, 7, 4, 4, 6, 4, 27, 3, 5, 10, 8, 7, 4, 7, 7, 3, 8, 5, 4, 8, 13, 6, 7, 4, 4, 5, 5, 7, 3, 9, 4, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [5, 9, 7, 5, 5, 3, 3, 14, 5, 9, 5, 10, 5, 14, 9, 8, 7, 9, 7, 5, 8, 16, 4, 15, 4, 8, 4, 5, 9, 6, 3, 5, 5, 14, 18, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [3, 5, 9, 111, 7, 4, 6, 6, 5, 4, 6, 6, 5, 4, 7, 5, 14, 3, 7, 7, 5, 125, 10, 5, 4, 5, 4, 4, 4, 11, 12, 6, 6, 5, 9, 4, 4, 3, 115]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 3, 9, 4, 7, 4, 8, 4, 4, 4, 8, 4, 8, 5, 4, 8, 11, 4, 5, 6, 3, 8, 4, 7, 4, 10, 4, 6, 5, 5, 8, 5, 8, 5, 4, 6, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 4, 4, 206, 4, 9, 12, 4, 11, 7, 9, 9, 7, 20, 9, 8, 413, 4, 8, 3, 7, 6, 8, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 4, 6, 6, 7, 9, 9, 9, 7, 148, 9, 4, 9, 40, 9, 8, 6, 8, 6, 14, 9, 5, 5, 9, 80, 9, 11, 11, 229, 6, 5, 5, 7, 4, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 7, 10, 8, 4, 9, 4, 6, 4, 6, 4, 12, 3, 5, 6, 7, 9, 7, 6, 4, 12, 5, 5, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [5, 26, 6, 3, 11, 7, 10, 5, 7, 5, 5, 10, 9, 6, 6, 5, 6, 5, 8, 6, 9, 7, 7, 8, 6, 7, 8, 4, 7, 8, 12, 6, 9, 7, 9, 4, 7, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 4, 9, 10, 11, 10, 11, 11, 10, 9, 11, 9, 15, 8, 18, 10, 13, 9, 7, 5, 17, 8, 6, 9, 5, 9, 7, 7, 8, 12, 9, 12, 21, 5, 10, 6, 14, 10]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [18, 5, 9, 8, 6, 8, 10, 10, 7, 7, 10, 11, 22, 14, 7, 15, 10, 6, 6, 9, 9, 11, 8, 4, 9, 9, 11, 9, 4, 6, 14, 6, 9, 13, 15, 36, 7, 10, 10, 11, 10]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [2, 9, 9, 5, 4, 7, 6, 4, 89, 7, 9, 16, 9, 4, 132, 6, 10, 8, 10, 11, 23, 11, 13, 7, 12, 21, 6, 16, 5, 11, 9, 6, 11, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 8, 4, 5, 3, 12, 7, 3, 8, 11, 5, 7, 5, 8, 11, 7, 6, 7, 8, 3, 6, 19, 4, 4, 10, 6, 9, 257, 15, 4, 15, 4, 6, 5, 5, 4, 8, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 6, 9, 7, 10, 9, 4, 10, 8, 5, 10, 6, 10, 7, 10, 7, 7, 5, 5, 6, 5, 10, 8, 9, 11, 8, 11, 7, 10, 5, 8, 13, 20, 3, 7, 7, 7, 7, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [7, 9, 7, 4, 7, 10, 4, 7, 4, 3, 5, 4, 7, 6, 8, 6, 7, 7, 31, 7, 12, 4, 9, 4, 5, 5, 12, 7, 7, 6, 5, 80, 4, 7, 10, 6, 9, 7, 5, 10, 7, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [10, 10, 15, 15, 7, 5, 9, 59, 9, 3, 6, 17, 17, 11, 12, 14, 42, 10, 18, 5, 6, 5, 122, 16, 7, 11, 5, 19, 9, 15, 13, 7, 129, 10, 14, 10, 6, 15, 14, 16, 16, 16]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [9, 13, 6, 9, 16, 8, 12, 7, 11, 9, 12, 13, 13, 13, 20, 4, 7, 7, 8, 14, 7, 6, 3, 13, 6, 8, 5, 11, 7, 12, 4, 12, 5, 6, 13, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [5, 7, 232, 7, 13, 5, 10, 12, 4, 8, 5, 15, 17, 13, 9, 9, 5, 7, 5, 3, 4, 5, 7, 6, 6, 8, 7, 8, 8, 5, 8, 15, 7, 14, 4, 5, 7, 10, 5, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [5, 9, 248, 10, 6, 4, 6, 7, 11, 4, 6, 8, 10, 9, 9, 4, 12, 4, 7, 8, 5, 4, 6, 12, 6, 8, 5, 6, 10, 337, 3, 8, 7, 5, 6, 6, 8, 4, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [7, 10, 9, 9, 3, 11, 5, 5, 6, 3, 5, 17, 12, 6, 7, 4, 6, 4, 7, 9, 5, 6, 10, 22, 10, 9, 6, 7, 12, 5, 17, 34, 9, 5, 7, 12, 7, 11]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 4, 8, 5, 135, 12, 7, 8, 8, 14, 6, 12, 6, 7, 5, 6, 4, 7, 7, 10, 8, 7, 7, 11, 9, 8, 8, 16, 8, 6, 7, 6, 7, 8, 8, 9, 7, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 27, 5, 10, 5, 4, 8, 7, 11, 7, 9, 10, 6, 10, 7, 6, 6, 6, 7, 7, 8, 7, 5, 7, 10, 5, 6, 9, 23, 8, 4, 8, 7, 8, 3, 10, 7, 3, 5, 8, 6, 7, 325]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 107, 6, 11, 9, 8, 5, 5, 8, 12, 5, 4, 5, 3, 5, 3, 8, 6, 5, 5, 6, 15, 10, 3, 7, 6, 6, 6, 4, 6, 7, 7, 9, 7, 4, 5, 4, 5, 7, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 9, 5, 6, 13, 12, 9, 7, 7, 9, 9, 6, 6, 8, 5, 10, 5, 7, 7, 90, 5, 4, 11, 8, 6, 8, 13, 5, 8, 7, 5, 20, 7, 6, 10, 32, 11, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 3, 6, 8, 4, 8, 9, 5, 6, 5, 7, 3, 7, 4, 6, 5, 5, 8, 5, 10, 5, 9, 5, 5, 5, 261, 5, 5, 6, 6, 4, 7, 7, 5, 7, 5, 6, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 11, 5, 20, 3, 11, 5, 16, 16, 4, 5, 15, 18, 79, 5, 4, 4, 15, 18, 13, 12, 15, 7, 16, 12, 20, 4, 6, 18, 75, 11, 6, 18, 16, 18, 7, 13, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [2, 8, 6, 8, 12, 8, 4, 7, 6, 5, 5, 4, 8, 5, 7, 3, 5, 6, 24, 9, 4, 7, 8, 6, 8, 11, 4, 6, 7, 22, 10, 8, 7, 6, 36, 8, 7, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 39, 6, 8, 8, 7, 6, 8, 7, 6, 5, 8, 5, 6, 430, 7, 8, 6, 4, 5, 3, 7, 5, 4, 5, 6, 5, 4, 7, 7, 5, 7, 5, 5, 7, 8, 6, 6, 5, 6, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 3, 6, 4, 23, 5, 4, 10, 3, 6, 8, 6, 4, 5, 7, 5, 7, 9, 5, 6, 4, 6, 5, 8, 8, 7, 6, 4, 8, 392, 8, 10, 6, 8, 8, 6, 8, 6, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 8, 10, 6, 10, 5, 4, 4, 6, 8, 7, 6, 3, 4, 11, 4, 9, 6, 9, 5, 5, 7, 8, 6, 5, 83, 4, 20, 6, 7, 10, 6, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 5, 4, 6, 8, 4, 10, 7, 6, 7, 5, 5, 8, 6, 7, 8, 9, 8, 5, 30, 226, 9, 8, 8, 4, 7, 5, 6, 4, 7, 9, 4, 3, 4, 6, 8, 10, 10, 10, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 6, 4, 7, 6, 7, 7, 4, 5, 3, 6, 6, 8, 5, 6, 4, 6, 6, 8, 4, 11, 72, 4, 13, 4, 4, 8, 5, 7, 9, 4, 7, 8, 5, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 10, 8, 7, 4, 8, 7, 4, 7, 8, 8, 6, 5, 7, 4, 10, 9, 7, 5, 6, 7, 9, 6, 4, 8, 5, 12, 9, 4, 6, 8, 7, 6, 4, 9, 50]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 4, 8, 4, 6, 8, 5, 7, 7, 10, 8, 6, 5, 7, 9, 4, 5, 5, 7, 6, 6, 4, 7, 8, 301, 10, 6, 10, 5, 9, 7, 8, 11, 10, 9, 10, 4, 7, 67]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [4, 4, 39, 8, 5, 9, 6, 10, 4, 9, 10, 4, 8, 12, 8, 3, 9, 12, 200, 4, 9, 6, 6, 6, 5, 6, 66, 5, 6, 6, 7, 4, 28, 6, 4, 3, 9, 6, 5, 3, 4, 5, 6, 5, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 7, 7, 5, 9, 8, 6, 8, 6, 7, 9, 6, 8, 5, 8, 4, 7, 8, 7, 7, 6, 5, 6, 18, 350, 6, 7, 7, 5, 5, 7, 7, 7, 7, 7, 7, 7, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 6, 6, 5, 7, 14, 5, 8, 30, 8, 9, 5, 8, 12, 12, 7, 10, 5, 8, 361, 7, 8, 5, 8, 21, 9, 9, 7, 7, 6, 7, 149]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 3, 8, 4, 4, 4, 5, 4, 3, 6, 13, 8, 6, 5, 11, 6, 6, 4, 4, 6, 9, 6, 21, 5, 4, 8, 5, 5, 4, 5, 4, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [9, 7, 11, 6, 5, 12, 7, 7, 6, 10, 5, 4, 4, 6, 8, 11, 10, 6, 15, 4, 4, 4, 7, 8, 9, 4, 206, 8, 10, 11, 8, 6, 4, 3, 6, 6, 5, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 10, 6, 8, 7, 7, 7, 9, 8, 9, 11, 8, 8, 8, 5, 10, 8, 9, 10, 12, 6, 6, 8, 65, 7, 9, 6, 10, 10, 8, 8, 14, 6, 7, 10, 13, 10, 7, 197, 14, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 7, 12, 8, 9, 9, 8, 6, 8, 8, 9, 4, 8, 7, 10, 9, 8, 197, 8, 16, 4, 7, 8, 10, 8, 6, 10, 8, 11, 7, 10, 11, 9, 7, 9, 9, 9, 7, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [9, 9, 9, 14, 6, 11, 5, 10, 6, 16, 8, 5, 11, 23, 4, 9, 11, 7, 6, 11, 3, 7, 158, 192, 9, 6, 9, 26, 12, 8, 7, 6, 5, 6, 11, 5, 8, 9, 9, 6, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [6, 15, 7, 14, 7, 4, 8, 7, 6, 8, 16, 7, 4, 9, 13, 9, 10, 5, 8, 14, 6, 9, 7, 6, 6, 7, 11, 143, 9, 8, 5, 10, 237, 468, 9, 16, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 6, 6, 7, 10, 8, 11, 3, 8, 3, 6, 9, 3, 7, 6, 6, 6, 5, 9, 17, 8, 7, 10, 457, 13, 9, 18, 8, 37, 7, 12, 7, 7, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [13, 13, 38, 9, 13, 12, 16, 7, 309, 8, 9, 12, 20, 10, 9, 8, 8, 10, 9, 13, 16, 13, 4, 6, 12, 12, 8, 8, 7, 15, 9, 9, 13, 15, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [5, 9, 9, 9, 7, 8, 8, 8, 10, 5, 7, 8, 7, 10, 11, 9, 13, 7, 8, 11, 15, 10, 6, 8, 19, 8, 7, 12, 10, 6, 10, 8, 8, 9, 7, 9, 7, 9, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [4, 13, 9, 8, 8, 7, 16, 10, 8, 14, 8, 8, 6, 8, 6, 13, 8, 7, 6, 9, 9, 9, 5, 10, 11, 7, 7, 7, 52, 6, 7, 8, 6, 8, 205, 12, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [10, 4, 9, 6, 8, 15, 8, 6, 3, 7, 8, 8, 9, 5, 8, 51, 8, 7, 7, 7, 266, 8, 6, 58, 9, 10, 7, 12, 8, 3, 6, 9, 5, 5, 8, 16, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 9, 22, 12, 12, 12, 9, 8, 9, 12, 5, 9, 7, 12, 10, 11, 9, 13, 10, 17, 19, 9, 5, 196, 11, 9, 11, 11, 11, 12, 9, 10, 12, 10, 10, 10, 10, 11]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [13, 12, 6, 5, 7, 6, 8, 6, 10, 8, 6, 16, 6, 10, 14, 8, 16, 11, 14, 9, 3, 10, 14, 4, 19, 10, 7, 14, 5, 7, 12, 13, 15, 7, 4, 5, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [19, 10, 7, 10, 8, 15, 13, 18, 13, 5, 11, 7, 5, 8, 7, 16, 5, 10, 6, 17, 4, 8, 8, 80, 8, 9, 7, 6, 6, 6, 68, 17, 10, 13, 5, 10, 24]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [15, 7, 7, 5, 2, 12, 14, 10, 12, 7, 11, 8, 10, 9, 12, 8, 8, 21, 10, 380, 11, 9, 9, 5, 10, 12, 10, 7, 8, 11, 26, 10, 10, 9, 8, 6, 11, 13, 11]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [2, 10, 11, 12, 11, 16, 9, 16, 7, 8, 14, 11, 6, 412, 4, 8, 7, 13, 5, 11, 11, 9, 17, 127, 11, 11, 11, 11, 5, 11, 11, 19, 19, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [4, 15, 10, 9, 8, 10, 10, 4, 8, 14, 8, 10, 12, 18, 271, 10, 8, 16, 13, 6, 9, 9, 21, 11, 6, 9, 10, 10, 14, 7, 15, 9, 15, 4, 22, 3, 755]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [11, 6, 7, 5, 7, 11, 8, 6, 7, 12, 11, 11, 14, 14, 13, 7, 6, 6, 7, 5, 6, 9, 8, 76, 12, 8, 7, 8, 6, 9, 8, 6, 8, 12, 16, 14, 8, 223, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 3, 6, 10, 6, 6, 6, 8, 10, 5, 6, 12, 6, 6, 10, 74, 9, 9, 365, 12, 6, 4, 4, 10, 11, 197, 9]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [3, 11, 11, 8, 8, 8, 8, 6, 6, 11, 6, 10, 8, 5, 8, 8, 14, 8, 7, 6, 8, 9, 9, 17, 141, 9, 10, 8, 7, 8, 8, 6, 7, 4, 153, 7, 8, 5, 43, 7, 7, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 4, 7, 3, 11, 9, 9, 7, 5, 111, 9, 6, 9, 7, 8, 7, 9, 4, 5, 9, 8, 7, 7, 7, 8, 18, 10, 362, 9, 9, 5, 8, 12, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [6, 7, 18, 10, 8, 5, 12, 8, 13, 9, 3, 4, 28, 5, 8, 9, 4, 5, 8, 7, 11, 6, 10, 6, 6, 5, 4, 566, 10, 3, 10, 13, 11, 8, 12, 5]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [5, 12, 17, 13, 8, 12, 3, 11, 14, 45, 17, 5, 16, 4, 13, 6, 5, 12, 15, 9, 4, 5, 6, 11, 8, 7, 7, 11, 15, 13, 13, 4, 8, 9, 5, 215, 5, 4, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [6, 6, 15, 12, 8, 8, 11, 11, 5, 8, 12, 16, 8, 8, 8, 11, 14, 9, 8, 9, 11, 16, 14, 9, 7, 6, 12, 7, 3, 12, 5, 4, 6, 5, 11, 11, 5, 14, 6, 7, 9]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [11, 6, 10, 4, 8, 3, 10, 6, 12, 13, 13, 11, 7, 3, 5, 215, 7, 9, 20, 7, 7, 3, 12, 4, 7, 10, 14, 3, 16, 6, 16, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [6, 8, 9, 5, 7, 11, 9, 8, 9, 9, 10, 11, 7, 11, 11, 10, 9, 5, 4, 6, 17, 7, 7, 8, 35, 11, 7, 15, 2, 11, 7, 10, 13, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [19, 8, 13, 8, 3, 13, 8, 14, 10, 8, 6, 7, 8, 6, 7, 12, 10, 9, 8, 49, 8, 10, 4, 7, 8, 13, 3, 5, 11, 304, 8, 8, 9, 5, 8, 5, 10, 9, 11, 4, 11, 11]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [13, 8, 11, 3, 8, 10, 5, 9, 6, 4, 9, 7, 3, 5, 7, 11, 6, 4, 6, 10, 9, 4, 14, 3, 8, 4, 3, 9, 9, 10, 9, 3, 9, 6, 10, 115, 23, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 5, 7, 7, 3, 5, 4, 6, 29, 6, 6, 3, 7, 10, 10, 6, 7, 8, 3, 6, 11, 14, 3, 10, 5, 7, 7, 8, 19, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 6, 6, 13, 9, 4, 4, 6, 10, 3, 6, 6, 5, 6, 7, 4, 9, 5, 9, 17, 34, 6, 6, 10, 4, 5, 6, 10, 21, 5, 18, 5, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 15, 8, 6, 8, 6, 18, 8, 8, 8, 8, 5, 7, 8, 10, 10, 8, 11, 6, 8, 9, 10, 10, 8, 7, 8, 8, 9, 9]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [7, 81, 9, 5, 9, 9, 9, 5, 6, 6, 7, 10, 6, 8, 12, 10, 5, 7, 10, 5, 6, 7, 10, 4, 8, 431, 9, 8, 7, 7, 7, 9, 6, 8, 8, 6, 4, 7, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 14, 5, 5, 8, 8, 7, 10, 14, 3, 7, 8, 4, 8, 7, 6, 17, 7, 7, 4, 11, 4, 13, 8, 10, 9, 5, 13, 12, 22, 9, 7, 12, 5, 10, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 9, 8, 7, 5, 6, 10, 6, 8, 6, 8, 5, 10, 9, 6, 5, 10, 9, 6, 9, 6, 11, 125, 5, 9, 5, 9, 8, 8, 6, 8, 4, 9, 8, 8, 5, 11, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 5, 8, 11, 7, 9, 9, 6, 7, 9, 8, 3, 10, 8, 5, 7, 9, 7, 5, 5, 11, 8, 8, 9, 8, 6, 16, 5, 7, 7, 6, 6, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 11, 9, 8, 6, 8, 7, 6, 6, 4, 7, 9, 8, 5, 7, 8, 6, 11, 9, 10, 10, 6, 6, 8, 9, 3, 6, 8, 8, 22, 9, 9, 8, 6, 11, 7, 8, 10, 6, 16]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [12, 14, 9, 4, 13, 4, 7, 3, 8, 128, 9, 12, 4, 410, 12, 41, 8, 166, 4, 6, 3, 7, 15, 8, 9, 8, 5, 9, 9, 4, 7, 3, 4, 65, 4, 4, 4, 7, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [16, 5, 6, 8, 7, 6, 8, 6, 7, 3, 10, 7, 11, 8, 5, 6, 17, 8, 10, 7, 7, 4, 7, 10, 3, 7, 5, 12, 8, 7, 140, 7, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [6, 13, 8, 17, 7, 8, 14, 12, 8, 12, 8, 9, 18, 3, 16, 3, 8, 12, 8, 8, 3, 13, 4, 8, 13, 11, 7, 4, 5, 12, 14, 10, 5, 6, 7, 13, 9, 13, 15, 6, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [15, 7, 7, 8, 8, 8, 5, 5, 6, 26, 8, 4, 11, 9, 10, 10, 9, 9, 8, 6, 5, 7, 4, 8, 9, 13, 8, 11, 6, 29, 4, 10, 8, 7, 5, 10, 9, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [18, 11, 12, 12, 6, 12, 12, 13, 5, 14, 12, 12, 4, 13, 13, 13, 12, 7, 13, 13, 6, 12, 13, 13, 18, 12, 18, 13, 14, 44, 15, 15, 13, 19, 10, 5, 13]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [15, 11, 12, 14, 12, 13, 13, 13, 13, 11, 12, 15, 14, 12, 13, 13, 12, 14, 15, 7, 8, 9, 12, 3, 18, 13, 27, 13, 17, 16]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [18, 12, 12, 18, 15, 12, 13, 13, 16, 13, 13, 13, 13, 13, 17, 13, 13, 12, 13, 12, 13, 12, 14, 12, 13, 13, 13, 18, 13, 13, 19, 13, 13]
AssertionError("!(isempty(C_list_filtered))")
