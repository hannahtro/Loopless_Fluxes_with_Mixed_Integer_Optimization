┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYL1228
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYL1228
----------------------------------
number of metabolites : 1658
number of reactions : 2262
number of genes : 1229

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 11
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2262 flux variables and 4233 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 4, 151, 5, 2, 3, 3]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 3, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 8, 2, 3, 9, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 53, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 8, 10, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 8
termination = MathOptInterface.OPTIMAL
objective_value = 1.0426374979773756
thermo_feasible = true
