┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECNA114_1301
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECNA114_1301
----------------------------------
number of metabolites : 1927
number of reactions : 2718
number of genes : 1301

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2718 flux variables and 5045 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 16, 16, 18, 11, 11, 11, 47, 16, 15, 11, 13, 17, 2, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 2, 11, 10]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 113, 16, 42, 11, 11, 11, 11, 16, 11, 39, 11, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 181, 43, 2, 10, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 16, 17, 17, 33, 11, 11, 11, 16, 11, 12, 11, 17, 17, 16, 13, 16, 17, 13, 14, 13, 13, 13, 15, 10, 15, 4, 10, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 16, 16, 24, 11, 33, 72, 11, 16, 11, 11, 11, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 2, 85, 2, 10, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 17, 17, 18, 12, 40, 11, 11, 17, 11, 11, 11, 18, 3, 17, 17, 14, 99, 15, 34, 15, 14, 14, 14, 49, 14, 3, 11, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 16, 17, 59, 11, 11, 14, 11, 16, 11, 11, 11, 18, 16, 16, 20, 13, 14, 13, 15, 46, 13, 13, 14, 200, 4, 14, 2, 13, 10, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 20, 17, 11, 11, 11, 11, 17, 114, 14, 11, 17, 16, 16, 13, 13, 14, 169, 157, 13, 13, 7, 13, 14, 6, 10, 10]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 11, 14, 11, 12, 16, 11, 11, 11, 17, 3, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 6, 10, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 17, 17, 18, 11, 11, 11, 11, 17, 11, 11, 11, 18, 2, 19, 18, 14, 15, 15, 14, 15, 14, 14, 14, 3, 63, 11, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 6, 18, 17, 18, 11, 20, 11, 11, 24, 15, 11, 11, 18, 90, 17, 14, 14, 15, 14, 15, 14, 14, 17, 6, 6, 15, 11, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 7, 16, 17, 17, 11, 11, 11, 11, 16, 11, 11, 11, 17, 2, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 19, 6, 10, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 6, 16, 19, 17, 14, 11, 11, 11, 16, 40, 11, 142, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 18, 3, 16, 10, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 6, 23, 106, 17, 11, 11, 12, 11, 16, 11, 12, 11, 22, 6, 18, 16, 13, 14, 14, 13, 14, 13, 14, 13, 6, 15, 10, 10]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 13, 3, 3, 2, 3, 4, 4, 4, 3, 92, 4, 4, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 2, 4, 6, 6, 49]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 4, 2, 3, 3, 8, 7, 8, 5, 4, 2]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 6, 7, 2, 6, 7, 10, 7, 2, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 7, 94, 7, 31, 7, 7, 8, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 5, 4, 12, 7, 4, 4, 19, 260, 6, 3, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785423167605
thermo_feasible = true
