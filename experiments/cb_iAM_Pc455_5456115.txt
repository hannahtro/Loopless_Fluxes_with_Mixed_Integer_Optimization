WARNING: Dual bound 0.655814 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.646604 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.65567 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.657993 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.646325 is smaller than the objective of the primal solution 0.65786. The solution might not be optimal.
WARNING: Dual bound 0.582828 is smaller than the objective of the primal solution 0.65786. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.65786. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.58929 is smaller than the objective of the primal solution 0.658464. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.657993 is smaller than the objective of the primal solution 0.658671. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.587886 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.657761. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.607614. The solution might not be optimal.
WARNING: Dual bound 0.590363 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.639701 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.57525 is smaller than the objective of the primal solution 0.595963. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658695. The solution might not be optimal.
WARNING: Dual bound 0.57525 is smaller than the objective of the primal solution 0.612362. The solution might not be optimal.
WARNING: Dual bound 0.630227 is smaller than the objective of the primal solution 0.658701. The solution might not be optimal.
WARNING: Dual bound 0.6179 is smaller than the objective of the primal solution 0.629776. The solution might not be optimal.
┌ Warning: variable 698 does not have binary value: 0.999999
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:102
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAM_Pc455
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAM_Pc455
----------------------------------
number of metabolites : 907
number of reactions : 1074
number of genes : 455

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
max_cuts = 5
(indicator, big_m) = (false, true)
BIG M ADDED
model with 1074 flux variables and 2043 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 2, 3, 5, 5, 4, 3, 4, 5, 5, 3, 4, 5, 4]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 8, 4, 5, 5, 4, 3, 6, 3, 3, 7, 4, 3, 5, 5, 5, 3, 6, 4, 4, 87, 21]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 7, 5, 5, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 5, 4, 3, 10, 3, 17, 201]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 5, 3, 5, 6, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [11, 3, 3, 6, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 3, 5, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 11, 5, 9, 11, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 3, 6, 6, 6, 3, 4, 6, 4, 5, 4, 4, 5, 6, 7, 5, 13, 5, 4, 5, 9, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 10, 12, 11, 4, 11, 4, 13, 5, 10, 10, 12, 9, 13, 3, 12, 33, 8, 11, 5, 9, 11, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 3, 3, 5, 4, 5, 3, 7, 4, 4, 6, 5, 4, 15, 5, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 4, 5, 7, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 5, 4, 3, 3, 4, 4, 3, 4, 4, 205, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [14, 5, 4, 5, 5, 6, 4, 4, 4, 6, 14, 38, 5, 14, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 14, 5, 5, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 3, 4, 4, 4, 4, 14, 14, 8, 16, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 14, 8, 9, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 4, 8, 3, 3, 7, 13, 13, 3, 15, 5, 7, 7, 7, 7, 7, 7, 3, 7, 8, 7, 7, 8, 13, 4, 3, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 4, 9, 4, 8, 6, 4, 3, 3, 3, 13, 3, 8, 3, 15, 177, 4, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 16, 13, 4, 4, 3, 4, 3, 4, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [13, 4, 3, 3, 3, 4, 4, 4, 13, 4, 7, 4, 7, 3, 4, 7, 7, 7, 7, 7, 7, 16, 7, 7, 7, 7, 15, 13, 7, 8, 4, 4, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 22, 5, 3, 4, 4, 7, 7, 7, 7, 7, 7, 7, 16, 7, 7, 7, 7, 15, 13, 4, 8, 4, 8, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 3, 4, 4, 8, 8, 4, 8, 23, 4, 8, 23, 8, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14, 12, 8, 5, 7, 4, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 8, 7, 8, 6, 4, 7, 8, 6, 8, 8, 8, 5, 6, 6, 6, 6, 6, 6, 8, 6, 6, 6, 8, 12, 8, 5, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 7, 6, 7, 6, 8, 6, 6, 22, 7, 5, 7, 3, 6, 6, 6, 6, 6, 6, 6, 15, 6, 6, 6, 15, 12, 4, 8, 8, 8, 5, 3, 3, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [13, 4, 8, 6, 9, 8, 4, 3, 8, 23, 7, 8, 22, 8, 8, 6, 6, 6, 6, 6, 6, 15, 6, 6, 6, 6, 16, 12, 8, 8, 6, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 6, 3, 3, 3, 4, 4, 4, 23, 4, 13, 6, 23, 14, 5, 12, 6, 6, 12, 6, 15, 6, 6, 6, 11, 8, 4, 8, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [9, 4, 8, 4, 3, 6, 4, 8, 6, 8, 14, 6, 14, 6, 4, 12, 6, 6, 6, 12, 6, 18, 6, 11, 8, 8, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 5, 8, 6, 8, 8, 8, 9, 8, 6, 22, 8, 9, 23, 8, 6, 12, 6, 6, 12, 6, 15, 6, 6, 6, 11, 8, 9, 8, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 7, 6, 8, 8, 6, 7, 7, 8, 8, 8, 8, 8, 8, 6, 12, 12, 6, 6, 12, 12, 6, 8, 8, 8, 7, 7, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [18, 9, 7, 6, 9, 5, 7, 9, 8, 23, 5, 6, 22, 9, 8, 12, 12, 6, 12, 12, 15, 16, 8, 16, 15, 11, 8, 5, 12, 8, 8, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 8, 3, 4, 4, 7, 8, 8, 25, 8, 7, 23, 8, 3, 12, 12, 15, 6, 12, 12, 16, 6, 15, 15, 15, 15, 12, 8, 5, 4, 4, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 7, 3, 5, 14, 3, 10, 9, 23, 4, 3, 7, 210, 4, 15, 13, 17, 7, 15, 13, 16, 7, 17, 4, 17, 16, 11, 8, 4, 5, 9, 5, 8, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 3, 3, 4, 3, 14, 14, 4, 16, 13, 14, 8, 8, 8, 8, 8, 16, 8, 18, 16, 16, 8, 11, 8, 4, 4, 5, 4, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 6, 4, 3, 4, 75, 7, 4, 4, 14, 4, 14, 4, 4, 6, 14, 13, 5, 7, 14, 17, 7, 14, 8, 17, 8, 18, 17, 20, 19, 8, 12, 8, 3, 4, 4, 4, 5, 3, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 7, 7, 7, 5, 5, 8, 22, 8, 23, 8, 6, 12, 12, 15, 12, 12, 15, 15, 16, 15, 12, 8, 8, 7, 8, 3, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [15, 4, 4, 3, 3, 4, 4, 23, 4, 5, 6, 26, 4, 12, 12, 16, 12, 12, 12, 15, 16, 16, 16, 15, 12, 11, 8, 5, 18, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 4, 30, 5, 14, 14, 5, 14, 3, 14, 14, 17, 14, 14, 14, 16, 17, 17, 16, 17, 16, 11, 8, 4, 4, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 6, 5, 4, 4, 4, 5, 6, 5, 12, 8, 17]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [11, 4, 5, 5, 5, 13, 7, 12, 5, 4, 4, 13, 12, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 4, 4, 4, 12, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [24, 5, 4, 8, 10, 10, 6, 8, 8, 23, 9, 23, 14, 14, 14, 15, 16, 16, 16, 15, 11, 8, 8, 8, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 14, 14, 8, 14, 7, 22, 5, 23, 25, 8, 12, 14, 15, 12, 12, 12, 14, 15, 15, 15, 14, 11, 8, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 5, 7, 15, 5, 15, 12, 12, 12, 12, 12, 15, 19, 16, 18, 19, 15, 12, 11, 8, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [13, 24, 29, 24, 24, 24, 24, 23, 24, 24, 22, 24, 23, 23, 14, 15, 15, 15, 14, 18, 15, 15, 15, 14, 11, 25]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [13, 3, 9, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [15, 4, 4, 3, 23, 4, 22, 14, 15, 23]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 4, 25, 4, 4, 3, 5, 23, 24, 16, 17, 17, 17, 16, 8]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [3, 10, 53, 90]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 3, 4, 8, 8, 14, 14, 22, 8, 7, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [14, 4, 8, 24, 14, 32, 23, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 17, 8, 10, 19, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [13, 14, 14, 13, 13, 4, 14, 15, 14, 14, 13, 13, 16, 14, 14, 14, 14, 14, 14, 14, 13, 14, 13, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 52
termination = MathOptInterface.OPTIMAL
objective_value = 0.6297760262050867
thermo_feasible = true
