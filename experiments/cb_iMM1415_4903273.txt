ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [15, 6, 3, 3, 2, 7, 11, 2, 13, 3, 8, 2, 6, 15, 8, 29, 5, 2, 5, 5, 3, 5, 7, 4, 4, 2, 2, 7, 3, 95, 2, 7, 7, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 3, 35, 3, 7, 2, 4, 3, 9, 4, 2, 7, 4, 4, 6, 5, 4, 2, 3, 5, 2, 2, 7, 3, 2, 447]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 18, 4, 7, 3, 7, 2, 2, 6, 2, 4, 7, 4, 7, 6, 5, 3, 5, 3, 4, 5, 3, 3, 3, 4, 6, 9, 6, 5, 2, 2, 3, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 4, 3, 5, 8, 4, 8, 9, 4, 5, 3, 5, 3, 6, 4, 6, 9, 4, 4, 6, 4, 4, 5, 3, 3, 2, 8, 4, 3, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 8, 4, 7, 4, 4, 6, 5, 8, 4, 3, 7, 6, 9, 5, 4, 3, 10, 8, 4, 3, 9, 6, 4, 5, 9, 5, 5, 4, 7, 4, 179, 9, 9, 4, 8, 8, 10, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 4, 5, 4, 4, 4, 5, 5, 4, 7, 4, 5, 5, 9, 12, 10, 7, 16, 4, 4, 6, 5, 4, 5, 7, 5, 83, 4, 4, 9, 9, 8, 7, 4, 2, 5, 9, 19]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 6, 5, 3, 60, 6, 7, 5, 8, 6, 4, 4, 3, 7, 4, 4, 4, 5, 5, 3, 4, 4, 7, 8, 6, 4, 5, 3, 6, 15, 86, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 10, 6, 5, 12, 4, 6, 3, 4, 4, 4, 4, 9, 5, 6, 6, 4, 3, 6, 7, 3, 3, 4, 4, 5, 6, 4, 4, 15, 4, 6, 4, 4, 3, 6, 3, 392, 7, 4, 5, 16, 3, 5, 4, 2]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 5, 121, 3, 3, 3, 6, 3, 5, 3, 4, 4, 3, 5, 4, 4, 7, 4, 10, 5, 6, 5, 4, 4, 3, 3, 4, 3, 7, 4, 6, 4, 4, 4, 6, 7, 4, 3, 3, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 3, 9, 4, 3, 3, 6, 4, 4, 4, 4, 8, 8, 11, 5, 65, 4, 3, 5, 3, 4, 61, 135, 5, 5, 3, 29, 5, 4, 8, 7, 4, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 9, 6, 3, 4, 6, 7, 4, 3, 4, 5, 5, 3, 7, 4, 12, 3, 3, 14, 5, 4, 3, 5, 6, 7, 8, 6, 3, 6, 5, 4, 8, 4, 3, 5, 4, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [12, 3, 8, 3, 4, 3, 8, 5, 8, 5, 3, 6, 5, 7, 5, 8, 3, 3, 8, 5, 3, 3, 30, 4, 10, 7, 7, 4, 2, 9, 4, 5, 6, 5, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 4, 4, 4, 4, 61, 4, 8, 12, 7, 4, 3, 4, 4, 10, 4, 6, 3, 4, 13, 6, 4, 7, 9, 8, 7, 4, 7, 9, 6, 9, 9, 4, 4, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 18, 4, 6, 3, 4, 3, 5, 4, 315, 4, 8, 4, 47, 3, 15, 10, 5, 4, 4, 3, 3, 4, 16, 4, 4, 4, 5, 4, 4, 8, 13, 3, 4, 4, 4, 3, 3, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 3, 12, 4, 6, 3, 8, 4, 10, 4, 4, 379, 4, 3, 4, 4, 5, 4, 3, 2, 4, 5, 4, 21, 5, 4, 6, 4, 4, 40, 4, 33, 3, 3, 7, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 4, 8, 5, 9, 4, 52, 5, 4, 3, 8, 445, 48, 8, 12, 7, 4, 3, 4, 15, 5, 7, 6, 3, 4, 3, 5, 116, 14, 4, 4, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 8, 7, 8, 4, 13, 3, 3, 7, 4, 24, 4, 8, 148, 3, 5, 9, 4, 6, 4, 11, 5, 226, 8, 6, 4, 4, 6, 10, 4, 4, 6, 90, 7, 4, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 5, 10, 3, 8, 4, 4, 10, 7, 11, 5, 5, 4, 10, 4, 4, 15, 4, 7, 4, 4, 52, 6, 6, 3, 3, 6, 12, 8, 10, 8, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 9, 8, 5, 7, 3, 6, 9, 11, 9, 170, 9, 3, 5, 3, 3, 7, 3, 3, 6, 4, 4, 12, 4, 6, 5, 4, 4, 5, 6, 10, 4, 8, 3, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [25, 3, 17, 8, 5, 4, 3, 8, 5, 7, 6, 9, 6, 4, 4, 9, 6, 6, 10, 23, 4, 10, 5, 5, 8, 5, 5, 6, 8, 4, 4, 7, 2, 7, 5, 11, 4, 9, 41, 9, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 3, 5, 4, 8, 4, 11, 4, 25, 4, 4, 7, 27, 116, 5, 34, 5, 5, 9, 4, 7, 4, 9, 4, 6, 11, 5, 10, 5, 4, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 4, 3, 4, 3, 5, 8, 10, 9, 12, 11, 7, 5, 12, 7, 5, 3, 8, 4, 8, 4, 7, 4, 4, 8, 8, 18, 7, 7, 7, 9, 5, 7, 203, 9, 23, 9, 4, 7, 10, 9, 7, 9]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 6, 3, 3, 6, 6, 10, 5, 8, 8, 9, 5, 11, 4, 276, 3, 4, 8, 124, 9, 10, 9, 4, 9, 9, 5, 7, 7, 6, 10, 4, 6, 4, 4, 3, 5, 8, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 21, 8, 4, 3, 2, 7, 9, 6, 6, 4, 3, 4, 4, 6, 9, 4, 9, 4, 7, 5, 16, 36, 7, 4, 8, 3, 5, 6, 4, 5, 7, 8, 3, 4, 4, 12, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 6, 6, 4, 4, 8, 4, 8, 6, 6, 4, 4, 3, 4, 6, 4, 3, 4, 4, 4, 111, 7, 3, 4, 4, 10, 5, 6, 4, 13, 4, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 8, 5, 4, 4, 7, 7, 4, 9, 8, 3, 8, 4, 11, 4, 11, 29, 3, 4, 7, 7, 10, 8, 3, 3, 234, 4, 6, 18, 42, 3, 4, 120, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [14, 3, 5, 7, 8, 6, 3, 5, 6, 8, 3, 6, 4, 8, 6, 11, 5, 3, 9, 10, 8, 6, 4, 8, 7, 10, 28, 4, 10, 9, 7, 7, 10, 5, 236, 12, 3, 11, 8, 7, 10, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 8, 27, 158, 32, 4, 4, 4, 6, 11, 4, 8, 9, 8, 243, 69, 7, 11, 206, 4, 5, 3, 4, 5, 11, 4, 5, 13, 6, 4, 11, 8, 10, 6, 73, 7, 16, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 5, 5, 5, 6, 4, 7, 8, 120, 4, 5, 4, 8, 6, 214, 9, 9, 2, 4, 11, 9, 8, 9, 9, 3, 21, 5, 193, 4, 387, 11, 10, 3]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 9, 4, 4, 4, 9, 6, 7, 8, 8, 15, 225, 8, 13, 4, 4, 6, 4, 4, 9, 5, 3, 9, 4, 3, 12, 5, 9, 12, 26, 5, 479, 9, 8, 2]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 6, 4, 12, 4, 7, 12, 3, 7, 8, 8, 7, 7, 4, 7, 11, 5, 5, 12, 6, 4, 4, 6, 7, 8, 12, 9, 6, 8, 11, 4, 5, 9, 5, 8, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 7, 5, 3, 4, 8, 5, 10, 9, 4, 4, 6, 3, 10, 4, 8, 8, 9, 4, 4, 4, 5, 3, 7, 7, 5, 97, 4, 10, 15]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 4, 4, 4, 5, 4, 3, 9, 7, 8, 4, 10, 61, 11, 3, 8, 95, 4, 9, 5, 4, 8, 4, 4, 5, 8, 8, 6, 7, 4, 9, 8, 7, 11, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 13, 7, 7, 4, 10, 5, 3, 10, 7, 7, 8, 4, 7, 4, 5, 6, 8, 9, 3, 6, 8, 8, 5, 8, 11, 5, 9, 6, 10, 16, 11, 7, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 3, 8, 4, 11, 7, 18, 5, 10, 5, 4, 4, 5, 7, 4, 4, 10, 4, 7, 4, 4, 8, 9, 4, 9, 53, 7, 8, 6, 5, 9, 6, 4, 8, 4, 6, 4, 3, 8, 10, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 6, 7, 4, 6, 7, 4, 7, 11, 7, 11, 13, 8, 8, 4, 5, 7, 6, 3, 561, 8, 8, 13, 5, 7, 4, 10, 7, 6, 8, 6, 7, 5, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [5, 14, 8, 4, 4, 5, 9, 4, 6, 11, 21, 9, 6, 8, 9, 6, 5, 7, 8, 7, 4, 48, 4, 4, 3, 10, 5, 425, 6, 15, 5, 7, 9, 6, 20, 8, 3, 3, 18, 8, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 4, 5, 6, 6, 8, 4, 8, 6, 451, 451, 3, 5, 10, 6, 9, 30, 52, 5, 3, 10, 6, 7, 10, 112, 8, 7, 4, 16, 9, 18, 5, 4, 6, 14, 7, 6, 7, 10, 16, 3]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 3, 6, 10, 3, 8, 6, 22, 7, 7, 10, 8, 104, 8, 10, 3, 3, 12, 8, 4, 3, 11, 8, 7, 6, 18, 6, 22, 6, 9, 5, 9, 7, 6, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 8, 6, 8, 6, 5, 8, 8, 4, 13, 4, 4, 111, 253, 5, 5, 11, 4, 3, 3, 7, 7, 4, 5, 4, 5, 3, 3, 209, 14, 6, 8, 9, 3, 14, 7, 4, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 5, 7, 3, 6, 7, 10, 4, 282, 9, 4, 3, 11, 4, 11, 4, 7, 6, 4, 7, 6, 6, 4, 4, 9, 6, 12, 24, 15, 2, 2, 3, 3, 5, 3, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [29, 6, 4, 8, 5, 5, 6, 5, 10, 9, 3, 4, 5, 4, 5, 5, 5, 5, 3, 49, 3, 3, 6, 5, 3, 5, 6, 4, 4, 5, 157, 4, 5, 5, 5, 9, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 5, 3, 3, 10, 5, 4, 4, 4, 4, 3, 9, 7, 3, 9, 4, 8, 6, 3, 7, 3, 10, 3, 5, 6, 292, 5, 41, 7, 8, 4, 4, 8, 6, 9, 10, 136, 6, 4, 5, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [13, 3, 4, 3, 5, 6, 5, 6, 5, 6, 8, 9, 7, 3, 5, 4, 3, 2, 5, 6, 5, 9, 4, 5, 6, 6, 26, 6, 9, 9, 3, 7, 8, 4, 8, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [14, 124, 8, 34, 9, 7, 18, 3, 75, 9, 6, 8, 7, 5, 19, 3, 6, 6, 151, 7, 3, 5, 4, 6, 10, 12, 3, 4, 7, 7, 7, 3, 5, 4, 7, 5, 7, 8, 8, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 5, 9, 2, 8, 6, 7, 13, 6, 14, 5, 6, 9, 24, 3, 113, 19, 17, 9, 6, 10, 217, 5, 10, 4, 5, 4, 24, 17, 16, 7, 22, 5, 4, 14, 17, 10, 4, 5, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 6, 5, 3, 25, 4, 9, 4, 5, 4, 6, 8, 6, 6, 6, 8, 4, 4, 11, 4, 4, 7, 12, 18, 60, 3, 5, 7, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [23, 3, 6, 5, 9, 6, 5, 10, 2, 3, 7, 7, 11, 3, 6, 10, 11, 6, 6, 5, 11, 8, 7, 11, 6, 6, 21, 6, 8, 7, 30, 5, 6, 13, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 7, 5, 8, 7, 4, 9, 5, 3, 6, 4, 3, 308, 8, 7, 3, 4, 5, 6, 8, 7, 21, 396, 7, 5, 6, 7, 5, 4, 33, 7, 6, 5, 4, 8, 6, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [24, 3, 10, 30, 4, 11, 4, 230, 6, 11, 5, 9, 5, 3, 7, 9, 8, 8, 3, 6, 14, 37, 7, 4, 5, 11, 11, 4, 7, 8, 8, 8, 5, 10, 4, 8, 10, 16, 6, 8, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 5, 12, 5, 5, 7, 9, 7, 5, 5, 7, 5, 8, 6, 3, 7, 4, 3, 8, 3, 6, 460, 3, 9, 7, 7, 9, 7, 8, 20, 25, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 4, 7, 4, 8, 7, 9, 6, 7, 5, 5, 6, 7, 8, 6, 98, 6, 3, 3, 4, 5, 9, 5, 6, 9, 5, 4, 12, 4, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 7, 3, 8, 9, 6, 8, 4, 10, 6, 4, 6, 10, 8, 5, 7, 8, 5, 5, 4, 6, 6, 6, 5, 7, 11, 5, 7, 4, 6, 3, 10, 4, 5, 8, 9, 8, 153, 6, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [16, 4, 7, 5, 3, 5, 3, 11, 4, 5, 4, 5, 6, 4, 8, 6, 5, 12, 4, 3, 11, 8, 9, 11, 5, 7, 18, 4, 9, 415, 5, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 6, 15, 9, 12, 7, 8, 8, 10, 9, 5, 7, 14, 11, 7, 6, 7, 4, 4, 7, 11, 7, 53, 10, 6, 6, 4, 277, 11, 5, 185, 13, 8, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 9, 5, 7, 9, 3, 7, 3, 10, 10, 8, 4, 7, 6, 404, 8, 38, 168, 188, 6, 7, 8, 7, 11, 4, 10, 10, 5, 6, 9, 8, 7, 7, 9, 6, 6, 3, 8, 15]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [26, 8, 27, 18, 7, 10, 8, 6, 7, 7, 8, 7, 7, 9, 7, 9, 8, 4, 7, 7, 8, 7, 8, 3, 8, 7, 5, 8, 7, 6, 7, 9, 7, 7, 7, 9, 6, 16, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [17, 7, 6, 3, 7, 7, 4, 5, 7, 6, 6, 5, 5, 5, 6, 23, 8, 5, 12, 4, 6, 8, 388, 11, 7, 10, 11, 7, 6, 4, 7, 8, 13, 9, 11, 8, 7, 9, 6, 3, 3, 19, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 5, 4, 5, 4, 7, 4, 12, 6, 3, 5, 4, 6, 114, 8, 8, 9, 59, 4, 9, 6, 5, 7, 6, 7, 4, 7, 10, 5, 7, 10, 5, 12, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 7, 4, 151, 11, 5, 4, 5, 3, 7, 10, 3, 3, 11, 51, 423, 65, 22, 6, 7, 8, 7, 5, 6, 413, 7, 7, 7, 6, 4, 5, 8, 5, 10, 234, 11, 13, 4, 346]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 8, 7, 11, 9, 8, 11, 5, 6, 5, 11, 7, 3, 8, 4, 10, 12, 4, 5, 7, 7, 4, 6, 8, 9, 9, 5, 8, 13, 11, 5, 9, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 6, 6, 8, 8, 7, 6, 7, 3, 8, 5, 11, 11, 9, 9, 8, 6, 7, 11, 9, 4, 10, 10, 6, 12, 10, 25, 6, 5, 3, 29, 6, 8, 6, 4, 4, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [18, 5, 8, 17, 8, 5, 10, 5, 8, 3, 4, 4, 6, 8, 7, 14, 5, 5, 4, 6, 9, 8, 9, 8, 4, 8, 10, 4, 8, 6, 12, 6, 7, 5, 3, 5, 9, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 11, 8, 5, 5, 8, 4, 16, 6, 3, 11, 6, 10, 6, 9, 7, 4, 4, 8, 11, 5, 5, 7, 4, 13, 4, 6, 5, 4, 33, 5, 10, 10, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 8, 10, 6, 31, 5, 5, 3, 3, 3, 8, 7, 14, 5, 7, 7, 11, 5, 6, 14, 4, 7, 8, 8, 4, 4, 7, 7, 7, 10, 10, 7, 7, 7, 7, 10, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [11, 3, 7, 12, 9, 3, 5, 7, 4, 3, 11, 11, 8, 4, 5, 3, 3, 6, 4, 5, 10, 7, 5, 12, 6, 4, 4, 6, 12, 4, 9, 9, 5, 41, 4, 7, 5, 7, 13, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 3, 5, 6, 47, 4, 5, 6, 9, 54, 7, 5, 7, 8, 9, 3, 9, 8, 256, 9, 7, 6, 10, 6, 5, 9, 7, 6, 7, 6, 121, 7, 4, 425, 4, 5, 4, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 3, 5, 7, 12, 6, 7, 6, 6, 10, 12, 5, 6, 3, 3, 11, 11, 7, 8, 6, 9, 7, 6, 7, 8, 10, 17, 6, 8, 221, 8, 7, 4, 5, 5, 7, 3, 11, 9, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 7, 6, 6, 4, 11, 10, 8, 7, 8, 6, 7, 5, 4, 6, 14, 5, 5, 11, 5, 7, 355, 3, 4, 4, 10, 210, 5, 13, 6, 5, 7, 4, 7, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [7, 9, 6, 9, 9, 7, 7, 9, 8, 8, 8, 7, 5, 8, 9, 7, 7, 6, 10, 9, 3, 16, 8, 8, 9, 9, 8, 7, 29, 7, 10, 7, 4, 7, 8, 8, 39, 9, 8, 11, 8, 9, 5, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 7, 5, 9, 5, 4, 3, 4, 4, 43, 8, 3, 9, 10, 6, 3, 9, 10, 7, 5, 4, 10, 5, 12, 4, 7, 6, 11, 8, 5, 9, 6, 6, 8, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [14, 8, 7, 3, 5, 6, 3, 8, 8, 6, 5, 9, 4, 12, 6, 8, 9, 10, 8, 5, 9, 9, 8, 4, 5, 177, 7, 6, 8, 6, 3, 7, 10, 6, 11, 10, 11, 9, 6, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 8, 5, 6, 8, 3, 9, 4, 4, 24, 4, 8, 7, 13, 4, 7, 3, 8, 13, 3, 114, 4, 8, 5, 5, 4, 4, 10, 3, 4, 4, 4, 7, 5, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [5, 11, 6, 3, 6, 3, 4, 3, 5, 6, 8, 4, 5, 5, 5, 4, 7, 7, 5, 6, 4, 221, 4, 7, 7, 7, 7, 6, 7, 4, 4, 6, 5, 4, 7, 4, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 3, 7, 4, 7, 5, 4, 5, 4, 6, 6, 3, 2, 10, 16, 5, 3, 4, 6, 6, 7, 8, 4, 4, 5, 5, 53, 10, 6, 6, 3, 17]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 9, 85, 5, 10, 4, 6, 5, 7, 4, 6, 4, 6, 6, 6, 5, 4, 4, 4, 6, 5, 6, 5, 6, 5, 4, 5, 4, 7, 8, 3, 6, 5, 3, 7, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [6, 11, 69, 4, 4, 3, 15, 9, 4, 8, 3, 11, 8, 4, 3, 5, 7, 5, 7, 10, 7, 5, 7, 748, 5, 10, 9, 4, 4, 5, 5, 8, 4, 7, 5, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 10, 16, 7, 14, 5, 8, 7, 4, 3, 5, 11, 11, 7, 8, 4, 10, 22, 4, 4, 12, 348, 5, 8, 5, 9, 3, 6, 6, 3, 13, 7, 5, 6, 8, 3, 517, 4, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [15, 8, 5, 9, 7, 4, 3, 3, 6, 8, 4, 5, 3, 5, 6, 3, 4, 4, 61, 4, 5, 3, 8, 6, 14, 4, 9, 5, 12, 8, 3, 17, 8, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 4, 7, 4, 4, 9, 4, 4, 4, 3, 4, 9, 3, 4, 6, 4, 6, 3, 9, 4, 3, 6, 8, 6, 4, 3, 10, 8, 6, 22, 6, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [18, 8, 5, 9, 6, 8, 6, 10, 4, 7, 4, 7, 13, 7, 11, 7, 4, 3, 4, 6, 3, 5, 6, 4, 6, 10, 5, 12, 7, 9, 8, 6, 4, 17, 8, 8, 7, 6, 19]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [3, 5, 16, 5, 7, 5, 4, 4, 11, 10, 4, 9, 5, 6, 11, 7, 6, 3, 9, 7, 5, 5, 5, 10, 24, 15, 8, 12, 9, 11, 8, 12, 10, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [8, 13, 5, 7, 6, 8, 4, 4, 4, 4, 13, 5, 5, 7, 8, 9, 7, 217, 14, 3, 3, 8, 4, 6, 10, 8, 8, 4, 10, 4, 3, 5, 8, 9, 11, 5, 5, 8, 13, 11, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [15, 6, 5, 6, 7, 6, 6, 5, 7, 4, 10, 4, 195, 12, 7, 4, 3, 6, 4, 7, 8, 8, 7, 4, 8, 10, 6, 5, 10, 11, 6, 9, 4, 6, 9, 7, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 12, 8, 5, 5, 10, 3, 5, 8, 6, 10, 7, 10, 7, 11, 6, 5, 5, 9, 8, 8, 5, 6, 7, 9, 8, 8, 219, 6, 9, 6, 15, 9, 8, 8, 12, 6, 78, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 14, 8, 5, 8, 6, 13, 9, 5, 8, 9, 4, 10, 10, 14, 5, 5, 13, 5, 7, 7, 8, 10, 9, 27, 8, 336, 7, 9, 6, 5, 10, 4, 3, 9, 7, 13, 17]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 4, 11, 5, 10, 5, 6, 4, 6, 4, 7, 4, 4, 4, 5, 6, 7, 9, 7, 13, 6, 6, 7, 11, 5, 6, 9, 4, 3, 12, 103, 17, 16, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 4, 18, 6, 4, 4, 5, 6, 3, 8, 7, 3, 4, 8, 7, 4, 5, 4, 7, 5, 8, 15, 12, 7, 6, 6, 5, 7, 6, 28, 7, 4, 9, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [12, 5, 7, 6, 6, 7, 8, 6, 4, 5, 5, 7, 27, 3, 10, 10, 5, 9, 12, 10, 6, 5, 5, 9, 8, 7, 5, 13, 8, 6, 31, 222, 9, 6, 7, 4, 9, 10, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 6, 4, 8, 9, 7, 6, 9, 5, 8, 8, 5, 3, 8, 7, 9, 6, 4, 6, 8, 10, 9, 9, 3, 6, 7, 9, 7, 8, 9, 5, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 6, 7, 4, 7, 5, 4, 32, 4, 3, 6, 9, 8, 7, 3, 9, 14, 9, 9, 13, 9, 8, 9, 7, 13, 5, 6, 4, 8, 10, 7, 15, 7, 7, 9, 7, 5, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 4, 9, 9, 6, 4, 14, 3, 12, 13, 10, 4, 26, 10, 6, 5, 4, 11, 9, 4, 12, 8, 7, 4, 4, 5, 4, 5, 6, 4, 10, 7, 3, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [7, 41, 5, 5, 3, 228, 12, 8, 6, 5, 6, 4, 10, 9, 5, 6, 9, 5, 16, 7, 5, 4, 7, 6, 7, 8, 9, 3, 9, 9, 8, 7, 10, 4, 13, 4, 15, 4, 5, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [10, 18, 5, 8, 12, 4, 14, 3, 5, 9, 9, 5, 13, 9, 6, 9, 6, 10, 6, 8, 6, 5, 11, 6, 8, 2, 181, 11, 241, 4, 9, 8, 5, 25, 16, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [8, 15, 5, 8, 10, 14, 15, 9, 9, 9, 6, 9, 4, 9, 11, 8, 37, 10, 11, 28, 8, 17, 8, 9, 5, 5, 10, 11, 8, 10, 9, 10, 17, 9, 18, 6, 10, 9, 11, 10, 10, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 8, 8, 8, 4, 7, 6, 10, 3, 7, 6, 6, 8, 4, 3, 3, 7, 9, 15, 26, 7, 5, 417, 10, 7, 10, 6, 8, 6, 5, 8, 4, 5, 6, 7, 6, 3, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [22, 8, 125, 6, 7, 10, 10, 10, 6, 14, 8, 4, 11, 8, 8, 10, 8, 127, 8, 7, 7, 8, 6, 8, 10, 11, 5, 7, 9, 10, 9, 10, 12, 10, 10, 6, 11, 10, 9, 8, 11, 9, 10, 8, 9, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [23, 7, 379, 6, 6, 5, 9, 8, 29, 12, 7, 12, 12, 4, 9, 4, 10, 6, 13, 15, 6, 9, 308, 5, 9, 11, 5, 9, 5, 11, 27, 11, 5, 4, 6, 8, 11, 7, 5, 4, 9, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 7, 6, 8, 7, 15, 9, 9, 9, 10, 3, 111, 4, 12, 10, 10, 8, 103, 8, 4, 8, 5, 11, 8, 6, 7, 243, 8, 8, 3, 6, 10, 4, 11, 11, 5, 16]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [18, 7, 6, 11, 3, 6, 6, 6, 7, 5, 8, 7, 4, 8, 10, 5, 8, 5, 9, 11, 6, 6, 9, 58, 8, 27, 8, 6, 5, 6, 7, 6, 8, 6, 226, 7, 7, 4, 5, 4, 53]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [11, 5, 8, 6, 4, 6, 7, 10, 10, 4, 6, 8, 7, 7, 7, 7, 51, 15, 11, 6, 6, 10, 12, 13, 7, 6, 14, 4, 6, 10, 6, 7, 8, 143, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 8, 7, 10, 6, 6, 7, 6, 12, 11, 10, 10, 7, 10, 10, 5, 8, 9, 9, 6, 6, 9, 6, 5, 6, 7, 7, 4, 7, 4, 17, 4, 5, 8, 8, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [17, 6, 5, 5, 6, 10, 12, 7, 6, 8, 6, 8, 4, 4, 7, 6, 7, 4, 7, 17, 8, 6, 6, 5, 7, 8, 4, 4, 6, 5, 7, 11, 6, 4, 6, 6, 145, 4, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 5, 8, 4, 9, 10, 9, 9, 6, 8, 5, 9, 7, 4, 5, 7, 7, 10, 4, 6, 8, 7, 8, 8, 8, 6, 7, 11, 8, 9, 5, 7, 12, 12, 7, 3, 7, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [9, 24, 8, 6, 7, 11, 6, 9, 9, 7, 10, 12, 8, 6, 9, 7, 7, 7, 9, 8, 8, 7, 9, 575, 4, 8, 6, 15, 7, 10, 6, 7, 7, 9, 5, 710, 7, 13, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 7, 8, 9, 3, 6, 9, 9, 5, 9, 3, 8, 5, 8, 10, 12, 8, 5, 4, 9, 10, 8, 9, 4, 4, 6, 4, 5, 8, 4, 35, 33, 8, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 8, 8, 4, 7, 8, 8, 7, 11, 9, 5, 6, 9, 8, 12, 8, 7, 11, 8, 7, 6, 8, 9, 7, 7, 6, 3, 8, 6, 4, 5, 8, 7, 26, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 8, 8, 8, 4, 9, 7, 6, 6, 11, 9, 7, 4, 5, 10, 9, 7, 10, 9, 9, 6, 9, 9, 8, 10, 11, 9, 8, 7, 10, 3, 4, 27]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [18, 10, 5, 9, 8, 10, 11, 6, 13, 6, 10, 10, 5, 7, 6, 9, 8, 5, 8, 4, 6, 10, 10, 4, 74, 8, 5, 7, 9, 8, 5, 11, 8, 6, 9, 11, 10, 10, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 8, 9, 6, 9, 7, 6, 6, 6, 6, 98, 8, 13, 30, 7, 11, 7, 8, 7, 8, 4, 7, 9, 6, 6, 13, 7, 5, 7, 5, 8, 5, 6, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 5, 9, 10, 7, 6, 7, 8, 10, 9, 7, 9, 10, 8, 3, 7, 4, 7, 7, 9, 8, 6, 8, 7, 12, 10, 8, 12, 10, 8, 19, 7, 9, 7, 11, 3, 3, 10, 11, 4, 18, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [12, 12, 10, 19, 9, 7, 8, 8, 10, 8, 229, 14, 9, 10, 12, 11, 7, 9, 6, 4, 11, 4, 8, 16, 9, 9, 8, 6, 10, 7, 6, 12, 204, 10, 8, 6, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [12, 8, 60, 9, 6, 11, 8, 10, 9, 3, 5, 11, 7, 11, 4, 13, 330, 20, 12, 10, 3, 8, 9, 6, 11, 10, 13, 389, 3, 10, 10, 8, 10, 11, 10, 15, 10, 9, 9, 11, 11, 4, 6, 10, 14, 210, 134]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 4, 3, 6, 6, 5, 3, 4, 6, 7, 8, 8, 6, 8, 5, 5, 6, 10, 5, 4, 8, 16, 9, 6, 5, 9, 9, 5, 6, 28, 4, 8, 9, 6, 8, 6, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 11, 4, 8, 8, 8, 6, 6, 9, 9, 9, 8, 14, 8, 9, 4, 8, 4, 7, 7, 9, 11, 8, 11, 7, 8, 9, 11, 7, 9, 101, 7, 7, 8, 8, 6, 8, 10, 14, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [9, 11, 7, 6, 6, 7, 15, 10, 8, 9, 9, 8, 19, 12, 8, 9, 7, 8, 246, 9, 6, 4, 36, 7, 8, 12, 7, 8, 11, 8, 6, 3, 27, 3, 10, 10, 4, 8, 7, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 4, 26, 8, 8, 10, 8, 6, 9, 8, 6, 12, 10, 6, 10, 8, 4, 10, 9, 9, 4, 9, 10, 10, 3, 8, 8, 3, 11, 7, 11, 8, 4, 10, 8, 10, 11, 7, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [4, 9, 13, 9, 82, 147, 14, 11, 13, 4, 28, 12, 327, 4, 10, 7, 7, 3, 426, 15, 8, 21, 9, 8, 7, 10, 8, 4, 15, 11, 15, 8, 6, 8, 4, 3, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [6, 84, 7, 8, 9, 7, 9, 14, 9, 9, 6, 11, 4, 13, 36, 10, 11, 9, 8, 15, 6, 10, 16, 9, 11, 7, 8, 12, 6, 10, 6, 8, 70, 35, 11, 6, 11, 8, 16, 6, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [13, 7, 7, 8, 7, 10, 8, 8, 17, 6, 11, 6, 7, 10, 10, 7, 7, 7, 9, 9, 10, 4, 8, 12, 10, 5, 10, 4, 131, 8, 11, 12, 10, 7, 8, 10, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 5, 9, 8, 8, 12, 4, 8, 4, 15, 12, 8, 10, 50, 6, 6, 7, 9, 7, 7, 10, 6, 3, 4, 5, 6, 8, 6, 6, 10, 6, 6, 8, 19, 7, 6, 6, 4, 13, 9, 7, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [15, 7, 5, 8, 6, 9, 8, 6, 6, 4, 125, 8, 7, 5, 10, 5, 8, 11, 8, 10, 12, 87, 7, 9, 11, 8, 10, 6, 496, 6, 8, 9, 10, 10, 3, 11, 6, 115, 8, 4, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [9, 3, 9, 6, 4, 7, 10, 7, 6, 9, 7, 4, 4, 8, 3, 11, 8, 8, 3, 8, 5, 8, 8, 7, 8, 5, 3, 9, 7, 8, 8, 9, 9, 10, 7, 7, 11, 8, 10, 8, 16]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [8, 12, 32, 7, 8, 10, 11, 6, 10, 4, 10, 7, 10, 9, 9, 10, 7, 9, 4, 9, 10, 8, 13, 11, 4, 8, 8, 7, 6, 3, 9, 8, 7, 6, 6, 8, 10, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [17, 7, 5, 4, 11, 5, 9, 8, 5, 9, 6, 10, 6, 10, 5, 5, 5, 16, 6, 6, 11, 7, 6, 5, 7, 4, 8, 11, 7, 11, 9, 7, 9, 7, 9, 6, 5, 3, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 10, 7, 7, 5, 7, 17, 9, 9, 7, 7, 8, 5, 8, 10, 6, 5, 6, 4, 8, 7, 5, 485, 4, 13, 93, 17, 17, 9, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 5, 8, 10, 52, 103, 6, 5, 12, 8, 3, 4, 4, 4, 5, 9, 4, 7, 11, 6, 6, 9, 5, 6, 5, 6, 9, 5, 7, 38, 5, 9, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 6, 8, 7, 5, 5, 6, 12, 14, 8, 7, 10, 5, 8, 6, 6, 8, 6, 6, 9, 7, 8, 8, 6, 12, 9, 6, 15, 5, 5, 6, 11, 9, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 7, 8, 5, 6, 8, 8, 8, 7, 9, 11, 10, 6, 10, 6, 7, 6, 6, 16, 11, 10, 7, 6, 13, 10, 6, 10, 4, 5, 6, 376, 3, 7, 10, 17, 6, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 6, 6, 10, 8, 13, 11, 11, 7, 11, 5, 10, 10, 7, 12, 14, 8, 513, 7, 8, 11, 6, 42, 8, 5, 5, 9, 10, 4, 201, 13, 10, 9, 11, 12, 4, 7, 11, 5, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 5, 408, 4, 4, 6, 5, 3, 6, 4, 4, 6, 6, 6, 4, 4, 11, 7, 5, 5, 6, 9, 4, 4, 5, 7, 5, 5, 4, 7, 6, 6, 11, 5, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 4, 4, 13, 4, 9, 7, 10, 4, 7, 6, 5, 4, 524, 9, 4, 9, 6, 6, 9, 5, 8, 8, 8, 6, 225, 9, 6, 52, 7, 17, 8, 22, 5, 12, 207, 5, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[5, 9, 7, 5, 4, 4, 6, 3, 4, 10, 7, 7, 327, 10, 4, 7, 4, 4, 8, 10, 8, 10, 4, 8, 3, 5, 10, 6, 16, 5, 6, 8, 8, 3, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [5, 2, 270, 5, 20, 4, 5, 3, 6, 3, 6, 6, 2, 5, 5, 3, 5, 4, 5, 5, 4, 2, 6, 101, 7, 7, 6, 7, 7, 3, 2, 6, 4, 5, 6, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 7, 4, 4, 3, 8, 11, 7, 3, 11, 8, 6, 11, 4, 9, 8, 9, 10, 7, 372, 10, 4, 7, 10, 7, 11, 8, 39, 15, 5, 9, 10, 4, 6, 16]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [9, 9, 7, 8, 12, 7, 6, 8, 6, 48, 6, 7, 11, 13, 3, 4, 7, 5, 5, 8, 6, 121, 5, 11, 5, 8, 5, 9, 17, 5, 9, 11, 8, 13, 3, 9, 6, 8, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [21, 3, 8, 13, 10, 7, 3, 7, 19, 6, 6, 3, 6, 8, 8, 15, 6, 17, 3, 13, 18, 5, 9, 8, 25, 13, 7, 7, 6, 10, 5, 22, 4, 6, 7, 25, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 6, 11, 9, 13, 12, 8, 14, 3, 6, 6, 3, 8, 4, 5, 9, 14, 6, 7, 11, 11, 6, 125, 6, 10, 6, 5, 5, 16, 11, 4, 9, 174, 9, 11, 8, 12, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 6, 8, 7, 12, 10, 3, 7, 13, 4, 11, 4, 7, 7, 9, 10, 4, 18, 5, 10, 5, 10, 7, 3, 5, 10, 6, 11, 5, 5, 7, 119]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 8, 12, 272, 8, 8, 5, 7, 3, 3, 10, 4, 33, 8, 4, 7, 14, 7, 13, 3, 13, 7, 6, 3, 4, 12, 8, 5, 5, 10, 13, 5, 14, 70, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [5, 13, 5, 7, 10, 6, 15, 11, 3, 5, 6, 6, 5, 8, 11, 12, 9, 4, 8, 13, 6, 5, 6, 11, 9, 5, 13, 6, 9, 10, 14, 4, 13, 11, 10, 12, 9, 5, 6, 10, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 5, 6, 9, 6, 11, 4, 9, 6, 234, 7, 4, 10, 11, 5, 5, 7, 5, 157, 304, 8, 5, 10, 7, 204, 7, 5, 6, 6, 14, 10, 5, 36, 6, 8, 3]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 5, 8, 7, 18, 10, 8, 53, 42, 13, 7, 6, 11, 7, 11, 10, 7, 6, 8, 22, 10, 10, 6, 9, 9, 9, 15, 4, 11, 6, 68, 10, 7, 10, 6, 9, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [29, 17, 4, 5, 6, 4, 9, 5, 8, 5, 11, 12, 5, 4, 6, 6, 7, 6, 3, 60, 6, 7, 5, 8, 5, 6, 53, 6, 11, 7, 5, 4, 9, 5, 10, 13, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 5, 4, 9, 9, 4, 6, 8, 5, 10, 5, 4, 12, 4, 6, 11, 12, 27, 7, 6, 8, 12, 5, 7, 8, 285, 4, 10, 6, 16, 4, 10, 8, 4, 8, 6, 10, 17, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 10, 9, 12, 7, 4, 14, 7, 6, 7, 8, 9, 3, 9, 8, 7, 8, 10, 9, 8, 4, 9, 5, 3, 9, 4, 8, 9, 7, 3, 9, 11, 4, 4, 11, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [13, 14, 4, 9, 7, 10, 6, 14, 11, 10, 14, 7, 3, 15, 10, 8, 8, 4, 4, 10, 4, 10, 5, 15, 8, 4, 6, 10, 9, 5, 13, 9, 5, 13, 10, 5, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [5, 7, 9, 8, 4, 8, 9, 9, 7, 8, 4, 7, 8, 9, 9, 5, 8, 11, 17, 6, 9, 6, 10, 3, 4, 4, 6, 9, 7, 9, 8, 14, 4, 7, 11, 3, 6, 6, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 4, 4, 5, 7, 5, 4, 9, 6, 5, 6, 6, 4, 5, 11, 11, 11, 6, 6, 5, 11, 5, 4, 6, 7, 378, 6, 7, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [8, 10, 17, 6, 14, 7, 7, 4, 15, 4, 5, 15, 16, 5, 6, 7, 7, 7, 4, 4, 7, 16, 4, 4, 11, 17, 6, 5, 5, 14, 7, 11, 16, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [8, 15, 10, 4, 7, 10, 10, 4, 9, 11, 7, 8, 8, 16, 7, 8, 8, 6, 7, 6, 5, 10, 11, 6, 13, 7, 11, 8, 7, 11, 8, 3, 14, 10, 6, 6, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [30, 8, 11, 5, 6, 9, 13, 117, 12, 11, 6, 5, 8, 8, 10, 8, 10, 7, 8, 8, 8, 7, 5, 4, 11, 15, 9, 24, 10, 7, 7, 7, 9, 10, 5, 406, 10, 12, 7, 9, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 13, 7, 7, 6, 7, 10, 7, 6, 9, 7, 13, 9, 11, 10, 7, 7, 14, 8, 49, 9, 7, 126, 7, 8, 14, 6, 9, 8, 10, 6, 8, 8, 9, 14, 4, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 6, 159, 5, 11, 5, 7, 8, 12, 4, 11, 4, 8, 10, 10, 11, 13, 7, 7, 4, 5, 5, 14, 5, 8, 10, 7, 10, 11, 6, 13, 4, 10, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [19, 4, 12, 4, 4, 6, 4, 13, 7, 10, 7, 5, 12, 11, 17, 12, 8, 15, 15, 9, 6, 22, 8, 16, 7, 11, 6, 17, 5, 5, 7, 4, 15, 12, 8, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [14, 5, 8, 11, 10, 10, 3, 8, 7, 8, 12, 4, 4, 4, 7, 6, 6, 4, 5, 6, 5, 8, 4, 353, 14, 12, 16, 10, 6, 9, 12, 4, 56, 19, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [10, 72, 16, 5, 6, 9, 7, 6, 9, 2, 15, 9, 5, 9, 6, 6, 6, 5, 7, 6, 6, 6, 297, 15, 10, 3, 8, 6, 8, 20, 10, 10, 4, 6, 5, 6, 20, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 6, 5, 3, 6, 10, 11, 7, 12, 4, 5, 7, 6, 4, 7, 7, 4, 8, 6, 6, 10, 7, 4, 7, 26, 8, 9, 9, 8, 10, 10, 5, 5, 3, 10, 10, 6, 4, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 13, 4, 8, 6, 5, 5, 4, 15, 6, 24, 17, 10, 12, 20, 6, 8, 8, 9, 4, 8, 9, 9, 5, 320, 9, 8, 16, 7, 7, 8, 7, 8, 15, 11, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [14, 7, 224, 4, 20, 6, 8, 13, 6, 4, 22, 4, 7, 4, 3, 4, 6, 11, 5, 7, 10, 10, 6, 9, 14, 5, 7, 7, 18, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 4, 5, 7, 6, 4, 7, 5, 7, 7, 6, 5, 9, 4, 6, 7, 8, 8, 6, 12, 9, 9, 3, 341, 7, 7, 9, 8, 7, 402, 9, 4, 9, 6, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 6, 5, 3, 8, 9, 12, 4, 11, 3, 4, 8, 7, 4, 22, 5, 4, 6, 10, 4, 7, 12, 3, 4, 7, 7, 7, 4, 11, 13, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [9, 15, 6, 4, 3, 17, 5, 5, 4, 5, 4, 17, 9, 18, 18, 6, 7, 6, 6, 9, 6, 8, 9, 5, 5, 3, 19, 12, 17, 13, 3, 24, 18, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 4, 4, 17, 4, 494, 6, 10, 3, 7, 9, 315, 8, 7, 104, 7, 3, 6, 8, 7, 5, 5, 4, 5, 14, 4, 4, 4, 8, 8, 5, 8, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 16, 9, 7, 28, 4, 7, 8, 4, 7, 4, 5, 9, 6, 10, 6, 9, 4, 9, 6, 7, 6, 6, 4, 6, 4, 7, 8, 8, 3, 19, 8, 5, 7, 29, 5, 8, 7, 9, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [15, 6, 4, 7, 198, 4, 6, 3, 5, 4, 24, 5, 6, 5, 7, 7, 5, 9, 12, 5, 4, 5, 6, 3, 219, 8, 10, 7, 9, 7, 7, 10, 7, 23, 5, 7, 7, 6, 10, 43]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 4, 4, 11, 4, 7, 9, 8, 6, 10, 4, 7, 3, 13, 9, 6, 10, 4, 6, 25, 12, 9, 9, 10, 6, 9, 12, 4, 7, 8, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [12, 5, 7, 14, 7, 6, 20, 9, 6, 6, 6, 6, 6, 7, 8, 7, 8, 8, 4, 5, 11, 5, 6, 6, 13, 6, 6, 15, 6, 9, 3, 214, 10, 7, 5, 6, 6, 10, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [24, 11, 5, 10, 11, 7, 31, 5, 7, 8, 7, 9, 10, 8, 5, 5, 7, 16, 5, 6, 6, 215, 7, 8, 17, 21, 11, 9, 10, 10, 12, 9, 7, 8, 36]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [7, 6, 8, 9, 8, 10, 5, 8, 11, 11, 7, 10, 6, 3, 10, 5, 8, 10, 9, 8, 5, 8, 8, 5, 7, 4, 6, 3, 440, 5, 12, 4, 10]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 10, 8, 9, 10, 6, 9, 11, 54, 8, 6, 10, 44, 20, 7, 12, 10, 5, 154, 9, 8, 11, 17, 11, 8, 9, 10, 8, 7, 13, 14, 8, 9, 7, 22]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 9, 6, 6, 7, 8, 10, 7, 9, 3, 7, 7, 12, 5, 6, 35, 9, 12, 13, 6, 9, 9, 7, 12, 10, 145, 8, 21, 7, 7, 4, 6, 39, 5, 6, 6, 7, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 5, 7, 10, 4, 4, 7, 4, 6, 6, 4, 7, 9, 8, 4, 7, 4, 18, 4, 5, 9, 3, 81, 10, 147, 11, 55, 30, 6, 9, 8, 6, 6, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 4, 9, 5, 6, 10, 3, 9, 9, 4, 9, 10, 9, 4, 5, 7, 10, 11, 6, 8, 7, 6, 9, 8, 17, 16, 4, 6, 6, 6, 7, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 9, 11, 10, 8, 6, 10, 5, 10, 9, 14, 220, 11, 9, 3, 10, 11, 8, 6, 11, 4, 6, 8, 8, 4, 4, 4, 4, 4, 7, 9, 4, 8, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [13, 8, 9, 9, 11, 15, 10, 9, 7, 8, 3, 7, 10, 5, 8, 9, 8, 117, 4, 8, 167, 3, 9, 5, 3, 13, 10, 13, 9, 3, 7, 10, 3, 7, 12, 11, 8, 8, 12, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [11, 4, 10, 4, 13, 10, 6, 11, 4, 4, 8, 4, 11, 10, 6, 66, 13, 14, 9, 11, 6, 7, 11, 8, 3, 10, 8, 8, 11, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 12, 9, 8, 7, 4, 8, 4, 4, 11, 8, 7, 6, 7, 7, 49, 9, 6, 5, 6, 5, 4, 7, 9, 7, 10, 8, 7, 7, 4, 9, 6, 4, 7, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [4, 9, 12, 9, 11, 16, 12, 8, 9, 7, 9, 10, 8, 11, 11, 10, 9, 3, 8, 9, 13, 11, 14, 11, 9, 9, 10, 9, 13, 9, 10, 10, 9, 10, 4, 15, 9, 10, 11, 11, 12, 11, 50, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [12, 7, 9, 9, 10, 9, 11, 10, 6, 8, 11, 11, 9, 11, 9, 12, 13, 9, 11, 9, 13, 10, 75, 9, 13, 13, 18, 13, 11, 29, 8, 88, 35, 9, 16, 12, 13, 10, 7, 8, 220, 10, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [27, 7, 9, 3, 7, 9, 9, 5, 3, 22, 12, 7, 3, 4, 15, 15, 4, 13, 2, 4, 11, 3, 9, 7, 9, 14, 5, 7, 6, 8, 8, 12, 10, 10, 8, 11, 3, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [13, 10, 10, 12, 9, 6, 9, 12, 9, 8, 12, 21, 7, 13, 4, 5, 19, 9, 4, 8, 9, 11, 7, 10, 11, 13, 9, 12, 4, 10, 5, 15, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [12, 8, 7, 6, 6, 8, 139, 10, 12, 13, 8, 9, 10, 8, 10, 7, 11, 9, 14, 5, 10, 8, 9, 11, 18, 6, 7, 10, 6, 5, 10, 10, 7, 12, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [2, 5, 7, 7, 17, 4, 7, 9, 9, 9, 7, 6, 6, 8, 321, 21, 10, 5, 6, 6, 5, 15, 7, 5, 7, 6, 7, 10, 6, 14, 16, 4, 7, 6, 4, 7, 8, 6, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 7, 9, 7, 5, 6, 6, 9, 14, 10, 10, 3, 5, 11, 4, 33, 33, 11, 9, 9, 9, 10, 10, 4, 32, 8, 9, 10, 12, 16, 8, 10, 4, 156, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 11, 8, 9, 8, 8, 9, 14, 6, 10, 9, 6, 4, 12, 6, 7, 7, 10, 6, 5, 9, 5, 7, 6, 4, 8, 12, 11, 7, 6, 8, 5, 8, 11, 7, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [3, 9, 7, 5, 7, 10, 9, 9, 8, 8, 13, 8, 9, 8, 9, 3, 7, 7, 6, 7, 6, 8, 26, 9, 7, 7, 5, 8, 6, 5, 7, 19]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [7, 9, 5, 10, 5, 3, 8, 7, 7, 13, 7, 8, 9, 9, 13, 9, 7, 14, 12, 10, 5, 6, 5, 11, 25, 11, 28, 10, 10, 170, 7, 7, 13]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 4, 9, 5, 9, 4, 8, 6, 5, 9, 10, 3, 9, 7, 6, 11, 18, 16, 6, 11, 10, 8, 79, 8, 6, 7, 19, 7, 8, 9, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 6, 8, 3, 4, 6, 10, 10, 5, 6, 6, 6, 8, 8, 10, 35, 8, 9, 4, 8, 5, 6, 5, 9, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 9, 4, 10, 10, 7, 9, 5, 12, 6, 9, 7, 9, 9, 13, 9, 9, 6, 9, 9, 286, 13, 10, 54, 15, 5, 8, 11, 9, 10, 10, 5, 7, 6, 11, 9, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [7, 8, 11, 12, 8, 8, 7, 8, 8, 9, 3, 7, 7, 8, 8, 7, 8, 8, 5, 9, 4, 10, 4, 431, 7, 8, 10, 4, 6, 13, 8, 12, 26, 6, 102, 8, 8, 8, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 11, 6, 6, 8, 4, 12, 6, 7, 7, 18, 17, 8, 12, 6, 11, 10, 8, 4, 8, 7, 7, 8, 6, 11, 55, 13, 7, 8, 29, 8, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [7, 208, 6, 3, 9, 8, 22, 10, 11, 10, 6, 21, 8, 4, 3, 5, 8, 12, 10, 9, 6, 6, 10, 9, 15, 9, 7, 10, 11, 10, 3, 7, 9, 10, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 7, 5, 9, 9, 6, 6, 9, 4, 7, 7, 11, 11, 5, 6, 3, 4, 4, 10, 85, 3, 5, 226, 7, 3, 5, 6, 8, 5, 11, 12, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [8, 8, 11, 8, 3, 5, 10, 8, 7, 10, 7, 69, 7, 8, 4, 9, 5, 9, 3, 10, 7, 6, 8, 11, 7, 7, 10, 7, 7, 5, 12, 6, 15, 6, 3, 9, 17, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 8, 4, 8, 6, 7, 10, 7, 7, 5, 8, 7, 18, 7, 7, 7, 7, 7, 5, 6, 6, 6, 6, 8, 5, 6, 5, 6, 8, 12, 5, 3, 10, 3]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 7, 7, 6, 9, 3, 9, 8, 4, 149, 10, 10, 7, 7, 7, 10, 48, 14, 5, 10, 7, 6, 9, 6, 6, 4, 9, 9, 4, 4, 9, 6, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [12, 7, 4, 11, 14, 4, 11, 8, 10, 8, 12, 4, 12, 13, 6, 6, 11, 12, 12, 42, 5, 148, 12, 12, 6, 8, 8, 4, 9, 32, 3, 12, 23, 9, 6, 12, 7, 15, 6, 14, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [6, 4, 12, 11, 7, 5, 5, 10, 8, 8, 11, 10, 8, 14, 8, 7, 12, 9, 14, 5, 9, 16, 12, 13, 12, 8, 253, 11, 8, 8, 9, 12, 17, 30, 18, 8, 10, 15]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 9, 8, 7, 7, 10, 7, 5, 7, 6, 6, 7, 11, 9, 9, 9, 9, 3, 6, 25, 6, 5, 6, 8, 13, 8, 12, 11, 8, 7, 10, 37, 8, 5, 4, 9, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 8, 12, 6, 10, 9, 8, 6, 5, 11, 8, 9, 8, 7, 8, 9, 12, 89, 6, 10, 8, 6, 8, 10, 12, 10, 9, 13, 10, 6, 79, 12, 4, 7, 11]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [4, 5, 121, 7, 6, 11, 9, 7, 8, 8, 6, 9, 437, 6, 9, 280, 7, 6, 6, 9, 7, 6, 8, 6, 199, 86, 6, 7, 6, 10, 8, 9, 10, 8, 6, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 7, 6, 8, 5, 3, 7, 4, 6, 5, 16, 4, 5, 6, 8, 9, 4, 8, 11, 5, 4, 4, 6, 7, 6, 5, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 5, 3, 4, 5, 6, 6, 6, 46, 4, 7, 7, 6, 3, 5, 4, 5, 208, 9, 6, 4, 5, 11, 5, 6, 5, 7, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [5, 77, 8, 7, 7, 8, 6, 7, 29, 5, 8, 10, 3, 6, 9, 10, 8, 6, 6, 8, 6, 7, 7, 10, 8, 7, 9, 11, 10, 7, 7, 6, 11, 9, 9, 11, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 4, 6, 10, 7, 7, 10, 4, 11, 6, 6, 5, 8, 8, 7, 9, 10, 12, 12, 6, 11, 11, 7, 7, 6, 10, 8, 4, 7, 10, 7, 6, 10, 6, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 11, 5, 5, 9, 7, 8, 9, 11, 14, 6, 5, 5, 11, 22, 9, 13, 11, 11, 3, 8, 9, 8, 12, 9, 23, 5, 6, 8, 11, 12, 7, 5, 5, 70, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 9, 6, 7, 6, 8, 6, 6, 8, 22, 6, 4, 8, 4, 8, 5, 7, 7, 5, 3, 8, 7, 8, 4, 6, 10, 6, 8, 7, 17, 8, 5, 6, 7, 7, 45, 8, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [16, 8, 5, 9, 5, 12, 10, 9, 8, 4, 10, 11, 6, 4, 6, 11, 7, 14, 4, 9, 152, 3, 12, 4, 4, 11, 5, 3, 7, 5, 5, 7, 5, 6, 14, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 10, 10, 9, 7, 6, 12, 10, 9, 6, 9, 13, 4, 8, 12, 8, 12, 6, 9, 7, 11, 7, 9, 5, 9, 44, 9, 7, 8, 7, 8, 9, 8, 7, 8, 4, 17, 10, 13, 11, 15]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 10, 7, 5, 10, 8, 10, 4, 11, 6, 9, 9, 7, 11, 9, 51, 9, 9, 7, 10, 5, 5, 7, 54, 7, 7, 9, 7, 7, 7, 6, 8, 8, 9, 7, 8, 8, 7, 9, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 10, 8, 133, 5, 22, 9, 6, 8, 6, 7, 7, 6, 4, 8, 5, 10, 22, 8, 11, 5, 5, 12, 163, 7, 7, 8, 7, 6, 8, 10, 10, 5, 6, 10, 4, 4, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [16, 13, 7, 9, 8, 170, 9, 8, 11, 9, 3, 6, 11, 8, 7, 10, 23, 9, 4, 8, 7, 23, 9, 13, 11, 11, 8, 10, 8, 26, 157, 6, 7, 11, 22, 9, 9, 11, 8, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7, 12, 6, 3, 10, 6, 9, 7, 9, 9, 14, 6, 9, 6, 9, 5, 6, 8, 4, 8, 7, 5, 14, 5, 7, 4, 7, 4, 3, 6, 10, 9, 9, 3, 7, 6, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [3, 10, 8, 14, 9, 8, 11, 13, 12, 10, 10, 13, 10, 12, 9, 10, 3, 7, 9, 7, 11, 12, 7, 3, 10, 9, 10, 10, 8, 9, 7, 9, 7, 11, 10, 7, 9, 14, 9, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [13, 9, 31, 9, 3, 8, 9, 10, 8, 10, 10, 7, 10, 16, 9, 9, 9, 5, 5, 9, 9, 5, 10, 5, 10, 10, 8, 6, 9, 8, 7, 18, 6, 8, 5, 9, 6, 9, 11, 6, 9, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [20, 9, 7, 7, 4, 3, 3, 9, 3, 6, 9, 6, 9, 11, 5, 3, 8, 10, 4, 6, 9, 6, 5, 7, 10, 7, 10, 8, 10, 9, 8, 11, 10, 7, 6, 10, 3, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [14, 8, 9, 10, 10, 10, 9, 3, 8, 10, 6, 10, 7, 10, 9, 9, 7, 10, 7, 8, 6, 10, 10, 9, 22, 9, 3, 6, 6, 8, 8, 4, 9, 11, 9, 9, 6, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [17, 7, 7, 8, 8, 11, 8, 8, 8, 11, 3, 8, 9, 6, 4, 8, 11, 7, 6, 6, 9, 6, 3, 8, 8, 6, 6, 5, 6, 8, 9, 10, 7, 7, 6, 7, 13, 8, 7, 7, 8, 7, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 3, 6, 5, 4, 4, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 4, 4, 5, 9, 8, 70, 98]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 88, 8, 5, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 224
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
