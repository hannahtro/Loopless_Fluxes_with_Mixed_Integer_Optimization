┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUMN146_1321
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUMN146_1321
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1319

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 109
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 16, 17, 13, 14, 13, 13, 14, 13, 14, 14, 13, 14, 13, 14, 13, 13, 13, 16, 15, 2, 2, 2, 2, 7, 3, 7, 2, 4, 2, 11, 11, 2, 32, 46, 34, 3, 45, 40, 40, 10, 9, 9, 4, 2]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 2, 3, 2, 3, 2, 81, 3, 4, 4, 3, 4, 3, 3, 5, 6, 5, 4, 155, 4, 4, 3, 4, 4, 5, 3]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 3, 2, 3, 2, 2, 2, 5, 4, 10, 10, 3, 3, 11, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 5, 4, 4, 4, 6, 4, 38, 29, 12, 46, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 15, 3, 3, 5, 7, 6, 3, 5, 7, 4, 13, 21, 5, 5, 2, 3, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 5, 9, 4, 4, 9, 4, 3, 3, 4, 4, 4, 123, 6, 5, 4, 4, 5, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 4, 2, 2, 7, 4, 4, 3, 3, 30, 6, 4, 3, 4, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 4, 13, 4, 4, 24, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 4, 5, 14, 4, 5, 5, 5, 17, 6, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 10, 10, 10, 10, 4, 15, 15, 5, 16, 7, 17, 15, 12, 12, 6, 4, 13, 5, 6, 4, 8, 12, 5, 193, 12, 6, 98, 6, 12, 12, 12, 5, 119, 26, 4, 4, 13, 8, 6, 6, 135, 4, 16, 10, 5, 30, 10, 10, 7, 4, 4, 4, 6, 4, 11, 8, 8, 6, 5]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 4, 4, 3, 4, 5, 4, 150, 24, 4, 4, 4, 9, 4, 7, 4, 65, 97, 42, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 4, 9, 11, 7, 9, 7, 11, 8, 109, 8, 9, 4, 4, 11, 9, 9, 8, 14, 9, 8, 35, 5, 5, 9, 12, 9, 8, 12, 8, 9, 13, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 6, 3, 4, 6, 5, 4, 6, 7, 4, 6, 7, 6, 6, 8, 7, 121, 5, 5, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824774648551949
thermo_feasible = true
