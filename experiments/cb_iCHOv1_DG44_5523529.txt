┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8]
length(C_list) = 24
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 82, 2, 3, 2, 4, 5, 3, 9, 16, 4, 6, 4, 7, 6, 4, 4, 4, 7, 26, 3, 5, 10, 3, 6, 3, 15, 217, 3, 3, 5, 6, 5, 170, 4, 4, 4, 5, 52, 7, 11, 9, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 9, 3, 7, 5, 4, 10, 213, 8, 5, 7, 9, 45, 13, 7, 6, 3, 4, 5, 5, 7, 4, 4, 4, 4, 6, 21, 5, 7, 3, 5, 4, 3, 6, 5, 43, 10, 81, 3, 6, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 7, 6, 6, 3, 11, 6, 8, 365, 3, 36, 6, 7, 4, 4, 4, 6, 212, 11, 6, 6, 9, 489, 10, 8, 6, 7, 8, 5, 5, 189, 3, 4, 6, 15, 5, 6, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 3, 4, 6, 4, 5, 4, 5, 4, 3, 4, 176, 5, 3, 11, 7, 195, 11, 10, 4, 8, 4, 6, 4, 63, 95, 5, 356, 165, 4, 5, 5, 8, 9, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 104, 3, 7, 3, 4, 5, 111, 3, 8, 9, 5, 18, 3, 399, 4, 4, 4, 3, 7, 4, 30, 102, 4, 5, 6, 10, 4, 4, 4, 4, 5, 5, 8, 8, 3, 5, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 4, 4, 16, 3, 7, 12, 3, 348, 3, 271, 10, 7, 4, 5, 3, 5, 7, 7, 4, 10, 6, 7, 10, 10, 5, 115, 5, 72, 10, 9, 338, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 245, 7, 4, 6, 5, 3, 3, 6, 88, 8, 4, 7, 4, 8, 4, 9, 4, 4, 5, 6, 4, 7, 43, 7, 15, 12, 3, 7, 305, 5, 7, 156, 3, 6, 6, 37, 16, 359, 4, 14, 6, 109, 5, 4, 5, 18, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 4, 4, 4, 3, 358, 6, 6, 8, 7, 5, 7, 330, 4, 7, 3, 244, 8, 7, 11, 7, 9, 7, 6, 5, 8, 8, 3, 8, 4, 3, 8, 6, 7, 422, 8, 141]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 22, 7, 3, 5, 4, 8, 6, 8, 5, 8, 7, 5, 9, 9, 23, 4, 7, 8, 7, 5, 10, 9, 4, 4, 7, 4, 6, 4, 6, 7, 4, 6, 3, 7, 7, 9, 11, 9, 4, 8, 4, 7, 6, 7, 13, 7, 181, 4, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 6, 61, 6, 6, 3, 4, 5, 31, 5, 4, 4, 5, 4, 5, 7, 14, 4, 3, 6, 4, 6, 141, 20, 10, 4, 5, 5, 14, 8, 3, 7, 24, 4, 166, 5, 4, 35, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 9, 5, 5, 7, 4, 5, 3, 8, 7, 4, 7, 6, 59, 5, 4, 7, 4, 6, 7, 4, 5, 6, 99, 4, 5, 4, 72, 5, 4, 10, 201, 4, 113, 109, 7, 7, 34, 9, 5, 6, 144]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 8, 3, 3, 5, 4, 4, 7, 5, 4, 16, 10, 4, 5, 5, 5, 4, 112, 9, 25, 5, 6, 4, 8, 24, 5, 6, 6, 5, 7, 6, 5, 6, 175, 4, 5, 6, 4, 5, 3, 5, 255, 8, 7, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 3, 6, 4, 4, 5, 7, 3, 7, 4, 5, 5, 5, 4, 7, 10, 4, 4, 5, 8, 4, 4, 5, 6, 6, 4, 9, 6, 18, 4, 46, 4, 9, 13, 5, 4, 5, 4, 4, 4, 3, 4, 8, 4, 4, 6, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 4, 4, 5, 9, 301, 4, 5, 5, 38, 4, 10, 5, 12, 4, 3, 4, 312, 6, 6, 3, 89, 4, 3, 7, 7, 7, 90, 5, 4, 5, 5, 410, 4, 5, 11, 6, 7, 6, 5, 3, 6, 15]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 27, 4, 3, 9, 5, 10, 7, 8, 5, 4, 8, 379, 6, 8, 4, 4, 5, 5, 5, 20, 3, 3, 5, 15, 6, 4, 3, 6, 4, 8, 8, 8, 8, 6, 12, 4, 6, 4, 14, 10, 5, 9, 154, 4, 15, 172, 6, 10, 3, 75, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 6, 21, 7, 20, 6, 5, 4, 4, 4, 5, 4, 4, 220, 8, 9, 5, 8, 7, 4, 11, 6, 11, 6, 4, 7, 6, 3, 151, 4, 6, 7, 5, 151, 6, 4, 68, 5, 5, 8, 21, 6, 7, 8, 8, 8, 7, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 7, 3, 3, 7, 3, 4, 4, 75, 4, 7, 7, 11, 4, 4, 157, 4, 6, 4, 4, 4, 3, 13, 3, 5, 9, 13, 6, 5, 6, 4, 4, 5, 4, 8, 34, 33, 4, 4, 12, 7, 156, 7, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 72, 7, 5, 8, 3, 5, 8, 6, 9, 4, 8, 6, 6, 19, 4, 4, 4, 5, 6, 5, 11, 4, 6, 5, 5, 5, 5, 6, 4, 7, 4, 48, 257, 4, 6, 165, 155, 4, 4, 7, 7, 5, 9, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 343, 8, 7, 7, 8, 4, 6, 4, 7, 6, 7, 6, 5, 5, 244, 8, 226, 361, 4, 5, 4, 5, 4, 8, 9, 11, 4, 10, 38, 259, 12, 7, 14, 8, 4, 4, 5, 5, 4, 6, 55, 6, 3, 6, 9, 5, 7, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 153, 81, 20, 4, 4, 7, 390, 4, 5, 4, 28, 5, 4, 4, 3, 4, 6, 6, 4, 17, 5, 4, 7, 8, 189, 6, 10, 20, 4, 4, 15, 4, 6, 56, 9, 5, 7, 87, 5, 8, 202, 9, 172, 9, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 21, 8, 15, 4, 4, 4, 257, 41, 6, 5, 4, 5, 4, 5, 5, 91, 4, 18, 7, 4, 4, 6, 4, 5, 10, 6, 19, 7, 7, 5, 5, 4, 120, 7, 5, 9, 4, 4, 4, 10, 5, 13, 9]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 170, 6, 8, 7, 4, 6, 7, 4, 6, 11, 6, 3, 6, 7, 5, 4, 4, 5, 4, 4, 5, 5, 10, 8, 7, 6, 20, 7, 25, 6, 6, 5, 5, 4, 6, 11, 4, 6, 33, 6, 4, 6, 3, 6, 10, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 11, 4, 4, 261, 7, 6, 6, 6, 6, 4, 8, 4, 4, 8, 4, 5, 6, 4, 4, 11, 6, 102, 7, 4, 7, 4, 10, 4, 8, 4, 6, 5, 4, 4, 7, 7, 5, 8, 7, 6, 4, 6, 8, 5, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 9, 11, 5, 7, 8, 4, 3, 4, 7, 4, 7, 6, 126, 4, 4, 10, 7, 4, 8, 7, 6, 6, 4, 4, 7, 10, 4, 4, 5, 5, 9, 5, 10, 8, 8, 4, 4, 8, 14, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [9, 52, 9, 6, 6, 4, 6, 4, 4, 6, 6, 4, 8, 5, 5, 5, 14, 5, 4, 111, 35, 5, 4, 4, 4, 10, 3, 10, 6, 4, 10, 25, 5, 5, 5, 9, 24, 7, 6, 12, 8, 5, 4, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [8, 122, 6, 5, 6, 6, 5, 6, 4, 6, 7, 4, 4, 7, 6, 5, 4, 5, 4, 6, 4, 7, 249, 6, 6, 5, 6, 42, 11, 6, 5, 7, 5, 4, 7, 5, 6, 8, 7, 142, 10, 226, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 207, 9, 7, 4, 4, 7, 3, 6, 5, 8, 10, 9, 213, 5, 5, 8, 10, 7, 5, 13, 3, 4, 32, 6, 8, 10, 4, 9, 4, 6, 10, 5, 6, 9, 4, 5, 6, 10, 6, 6, 4, 5, 6, 4, 4, 8, 6, 8, 6, 217]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 3, 8, 6, 5, 4, 5, 3, 4, 12, 4, 6, 344, 5, 4, 93, 17, 9, 13, 4, 8, 4, 7, 158, 17, 15, 8, 6, 10, 4, 4, 5, 8, 6, 10, 15, 9, 6, 7, 6, 127, 10, 371, 13, 7, 15, 6, 10, 173, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 6, 6, 3, 9, 8, 3, 5, 4, 5, 5, 5, 5, 169, 4, 3, 68, 26, 4, 4, 4, 5, 4, 7, 4, 4, 7, 3, 8, 6, 4, 5, 7, 76, 7, 28, 9, 6, 8, 46, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 3, 13, 9, 7, 4, 4, 5, 17, 4, 8, 6, 4, 7, 7, 8, 4, 8, 4, 5, 5, 6, 6, 137, 5, 9, 4, 3, 4, 11, 7, 7, 6, 13, 4, 4, 26, 5, 6, 379, 26, 9, 4, 7, 5, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 10, 6, 11, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 19, 5, 4, 4, 4, 5, 4, 8, 83, 6, 4, 6, 4, 8, 6, 12, 19, 4, 7, 273, 22, 5, 4, 17, 10, 3, 6, 6, 142, 11, 6, 6, 10]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 4, 4, 8, 13, 5, 5, 4, 5, 12, 5, 6, 7, 95, 9, 10, 8, 9, 5, 4, 10, 10, 4, 9, 4, 23, 4, 9, 11, 3, 4, 3, 8, 4, 4, 5, 5, 4, 4, 4, 4, 288, 3, 4, 6, 13, 163, 7, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [9, 10, 4, 5, 8, 4, 4, 9, 4, 6, 16, 6, 7, 4, 5, 7, 8, 14, 16, 10, 5, 4, 183, 5, 6, 11, 15, 5, 16, 10, 5, 4, 6, 8, 4, 4, 5, 4, 5, 4, 10, 4, 11, 7, 7, 6, 6, 8, 13, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 5, 11, 10, 7, 4, 11, 4, 4, 6, 8, 213, 4, 4, 9, 4, 8, 4, 7, 4, 4, 7, 8, 14, 6, 62, 8, 5, 5, 491, 6, 7, 4, 4, 8, 4, 8, 7, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 8, 8, 7, 5, 9, 5, 8, 4, 5, 10, 4, 9, 4, 8, 6, 19, 8, 4, 4, 4, 9, 7, 4, 8, 6, 7, 5, 151, 10, 10, 7, 9, 12, 9, 6, 12, 4, 5, 9, 8, 200, 7, 6, 7, 4, 8, 288, 9, 6, 7, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 4, 4, 4, 5, 162, 7, 4, 7, 5, 5, 4, 4, 8, 6, 6, 4, 6, 26, 7, 5, 8, 14, 4, 4, 6, 6, 8, 9, 15, 4, 10, 6, 6, 8, 9, 7, 5, 6, 23]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 5, 13, 6, 6, 4, 8, 15, 6, 5, 8, 5, 5, 132, 4, 15, 6, 4, 8, 6, 5, 9, 163, 9, 6, 9, 6, 101, 9, 4, 10, 10, 8, 10, 8, 6, 9, 5, 6, 7, 9, 9, 8, 6, 14, 295]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 4, 6, 4, 7, 10, 4, 6, 7, 8, 231, 28, 4, 4, 4, 5, 6, 12, 4, 5, 4, 4, 7, 8, 4, 6, 8, 11, 6, 7, 5, 6, 24, 13, 3, 6, 10, 10, 6, 9, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 4, 161, 4, 4, 4, 15, 6, 4, 3, 6, 7, 4, 4, 4, 10, 54, 5, 5, 6, 3, 3, 6, 6, 5, 4, 9, 404, 5, 107, 4, 6, 7, 5, 5, 7, 8, 9, 9]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [8, 152, 6, 6, 11, 7, 6, 192, 10, 6, 5, 372, 5, 8, 7, 10, 7, 8, 5, 5, 12, 9, 4, 4, 5, 4, 10, 4, 6, 8, 27, 16, 9, 15, 4, 5, 31, 4, 4, 4, 125, 8, 7, 5, 7, 9, 9]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [10, 4, 7, 4, 6, 6, 7, 4, 4, 4, 4, 10, 6, 8, 7, 4, 7, 6, 4, 4, 366, 7, 246, 5, 9, 12, 6, 6, 11, 5, 6, 7, 5, 259, 5, 5, 4, 17, 5, 6, 4, 6, 5, 80, 44, 5, 6, 126]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 13, 6, 6, 9, 45, 5, 8, 5, 7, 5, 4, 3, 5, 136, 8, 153, 10, 4, 4, 8, 4, 7, 6, 8, 216, 7, 6, 4, 8, 38, 8, 4, 5, 4, 5, 6, 10, 7, 5, 340, 51, 5, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 9, 5, 6, 4, 5, 4, 4, 5, 5, 4, 11, 5, 22, 4, 5, 4, 44, 64, 5, 4, 171, 12, 5, 4, 7, 8, 8, 16, 5, 9, 6, 4, 4, 7, 7, 4, 7, 9, 6, 6, 5, 10]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 6, 5, 6, 4, 9, 11, 4, 4, 8, 4, 7, 387, 5, 6, 9, 4, 64, 6, 4, 5, 5, 12, 4, 5, 6, 8, 8, 6, 8, 4, 4, 7, 4, 146, 3, 4, 6, 363, 6, 4, 4, 11, 4, 7, 6, 5, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [15, 6, 17, 12, 5, 8, 5, 4, 4, 9, 5, 8, 5, 12, 8, 10, 8, 8, 18, 11, 4, 5, 4, 4, 23, 356, 6, 7, 7, 4, 40, 6, 179, 6, 4, 6, 4, 4, 5, 5, 6, 5, 4, 7, 8, 4, 16, 8, 31, 9, 6, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [9, 4, 12, 7, 6, 11, 14, 9, 4, 7, 5, 4, 4, 4, 5, 43, 7, 6, 8, 8, 188, 42, 19, 6, 5, 4, 8, 5, 17, 5, 9, 8, 19, 4, 11, 7, 5, 8, 244, 5, 190, 20, 7, 4, 6, 60, 4, 6, 8, 9, 7, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 6, 10, 3, 4, 10, 4, 5, 3, 4, 15, 6, 6, 7, 7, 4, 5, 9, 6, 4, 5, 4, 4, 7, 3, 10, 6, 12, 6, 5, 10, 6, 27, 5, 4, 10, 4, 5, 8, 14, 10, 6, 7, 70]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 6, 10, 6, 14, 8, 5, 5, 8, 10, 6, 6, 4, 4, 4, 4, 6, 8, 31, 230, 5, 4, 4, 8, 7, 4, 4, 8, 9, 4, 108, 4, 5, 9, 4, 6, 6, 7, 159, 151, 4, 8, 8, 5, 10, 8, 5, 5, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [8, 345, 5, 6, 14, 6, 3, 8, 3, 14, 9, 6, 87, 4, 7, 4, 7, 9, 4, 4, 51, 4, 3, 5, 9, 4, 4, 67, 5, 6, 7, 12, 7, 5, 7, 4, 11, 11, 4, 10, 19, 6, 4, 5, 9, 6, 7, 9, 8, 7, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [5, 9, 7, 9, 10, 8, 14, 12, 269, 10, 5, 141, 8, 7, 10, 6, 7, 17, 11, 10, 7, 9, 7, 11, 5, 13, 8, 6, 5, 7, 8, 8, 5, 11, 4, 9, 7, 279, 250, 4, 10, 7, 4, 6, 5, 8, 8, 6, 135, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [8, 8, 10, 5, 9, 5, 6, 6, 4, 8, 8, 7, 5, 4, 5, 7, 7, 4, 8, 4, 6, 5, 4, 6, 6, 8, 8, 7, 6, 4, 15, 325, 5, 5, 7, 5, 5, 4, 8, 4, 4, 4, 9, 4, 9, 5, 11, 16]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 8, 15, 5, 4, 4, 4, 4, 6, 8, 8, 6, 8, 6, 63, 6, 5, 10, 8, 4, 42, 6, 5, 8, 453, 4, 8, 10, 8, 4, 39, 9, 4, 6, 5, 6, 10, 4, 9, 11, 10, 207, 4, 9, 14, 8, 6, 7, 5, 8, 8, 263, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 4, 7, 9, 6, 4, 4, 5, 7, 6, 6, 8, 6, 5, 5, 6, 11, 4, 10, 10, 25, 423, 10, 5, 4, 7, 7, 9, 6, 4, 6, 6, 6, 4, 158, 234, 115, 6, 3, 5, 55, 199, 5, 8, 7, 5, 5, 12]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
termination = MathOptInterface.INFEASIBLE
objective_value = 0.010689973084813793
