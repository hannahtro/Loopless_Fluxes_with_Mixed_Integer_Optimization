┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUMN146_1321
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUMN146_1321
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1319

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 16, 17, 13, 14, 13, 13, 14, 13, 14, 14, 13, 14, 13, 14, 13, 13, 13, 16]
length(C_list) = 2
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 11, 11, 11, 2, 16, 18, 17, 18, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 11, 11, 11, 11, 9, 16, 16, 18, 16, 17, 16, 16, 13, 13, 14, 15, 14, 13, 16, 344, 17, 19, 39, 13, 13, 14, 13, 14, 13, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 2, 113, 11, 11, 12, 17, 17, 18, 20, 20, 17, 17, 14, 14, 15, 14, 17, 14, 14, 15, 14, 14, 15, 14, 15, 72, 214, 21]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 6, 11, 11, 21, 119, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 11, 13, 11, 12, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 14, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 6, 11, 11, 11, 12, 16, 16, 17, 17, 17, 16, 16, 13, 13, 14, 120, 14, 13, 13, 17, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 7, 16, 16, 17, 73, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 17, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 12, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 11, 11, 18, 11, 19, 19, 34, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 9, 11, 11, 11, 14, 3, 24, 16, 17, 21, 17, 16, 16, 14, 13, 14, 15, 14, 13, 13, 13, 13, 16, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 11, 11, 12, 16, 18, 17, 16, 17, 16, 16, 19, 13, 14, 13, 23, 13, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 12, 11, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 11, 11, 11, 2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 16, 15, 15, 71, 14, 15, 14, 17, 14, 99, 14, 14, 15, 14, 15, 14, 14, 20]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 7, 2, 12, 16, 11, 11, 10, 31, 16, 18, 40, 17, 16, 16, 13, 13, 14, 13, 73, 13, 52, 14, 169, 15, 13, 14, 13, 14, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [8, 6, 2, 11, 22, 11, 11, 20, 16, 17, 16, 17, 17, 16, 13, 18, 15, 13, 15, 30, 13, 13, 14, 14, 13, 13, 13, 14, 13, 14, 13, 13, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 6, 11, 11, 14, 11, 16, 19, 18, 16, 17, 16, 112, 13, 13, 14, 13, 14, 13, 13, 15, 14, 13, 14, 14, 14, 13, 13, 13, 13]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 4, 3, 3, 3, 4, 2, 4, 3, 6, 3, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 2, 2, 5, 2, 15, 4, 2, 5, 14, 2, 7, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 12, 5, 61, 3, 3, 7, 8, 13, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 3, 6, 2, 7, 62, 4, 10]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 6, 14, 8, 3, 2, 7, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 4, 2, 59]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 25, 3, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 3, 3, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 4, 4, 7, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 3, 4, 12, 4, 20]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 12, 7, 12, 12, 6, 18, 76, 7, 17, 23, 4, 18, 9, 13, 6, 4, 4, 7, 4, 5, 4, 6, 9, 9, 23, 6, 11, 11, 7, 13, 18, 7, 11, 45, 9, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 2, 4, 4, 3, 5, 100, 5, 6, 4, 7, 3, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [12, 3, 2, 6, 62, 8, 4, 7, 4, 5, 6, 3, 4, 4, 8, 7, 4, 6, 6, 7, 10, 4, 5, 5, 4, 11, 6, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 13, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 3, 3, 4, 3, 3, 3, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [3, 4, 12, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 35
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785235469178
thermo_feasible = true
