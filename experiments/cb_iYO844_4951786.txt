ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYO844
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYO844
----------------------------------
number of metabolites : 990
number of reactions : 1250
number of genes : 844

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 62
max_cuts = 6
(indicator, big_m) = (false, true)
BIG M ADDED
model with 1250 flux variables and 2271 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 4, 6, 3]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 25, 5, 5, 3, 8, 5, 74, 189, 5, 8, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 114, 88, 4, 4, 17, 20, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 105, 191, 4, 6, 106, 193, 193]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 12, 131, 128, 4, 6, 9, 4, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 5
termination = MathOptInterface.OPTIMAL
objective_value = 0.11796638932577502
thermo_feasible = true
