┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECO26_1355
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECO26_1355
----------------------------------
number of metabolites : 1965
number of reactions : 2780
number of genes : 1355

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 139
max_cuts = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2780 flux variables and 5169 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 17, 17, 18, 17, 19, 17, 17, 16, 14, 15, 14, 15, 14, 14, 14, 14, 14, 15, 14, 18, 14, 14, 12, 14, 12, 11, 15, 3, 11, 17, 11, 2, 3, 7, 2, 2, 4, 2, 2, 2, 4, 2, 11, 10, 10, 83, 55, 12, 2, 2, 2, 2, 4, 18, 7, 78, 16, 6, 3, 2, 3, 48]
length(C_list) = 56
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 4, 2, 5, 4, 4, 3, 3, 8, 9, 5, 6, 3, 3, 4, 10, 3, 7, 3, 4, 3, 3, 12, 5, 4, 6, 4, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 4, 3, 4, 5, 9, 4, 2, 4, 4, 4, 4, 3, 4, 4, 5, 7, 5, 7, 8, 4, 4, 5, 3, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 6, 3, 4, 5, 5, 4, 7, 5, 5, 4, 17, 4, 5, 4, 10, 7, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 2, 3, 2, 3, 2, 13, 3, 3, 72, 4, 5, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [10, 6, 2, 5, 18, 18, 19, 18, 19, 18, 18, 13, 13, 14, 17, 19, 13, 41, 13, 15, 13, 13, 13, 14, 14, 17, 16, 13, 8, 8, 8, 8, 13, 15, 13, 6, 8, 8, 8, 3, 6, 3, 5, 10, 9, 10, 9, 4, 9, 8, 5, 6, 6, 19, 6, 7]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [7, 6, 15, 16, 19, 15, 16, 15, 15, 10, 10, 11, 10, 11, 10, 10, 10, 10, 11, 10, 11, 10, 10, 7, 9, 7, 7, 4, 3, 10, 8, 6, 6, 33, 6, 6, 4, 2, 10, 8, 7, 6, 6, 6, 8, 7, 16, 10, 2, 7, 4, 7, 9, 6, 9, 7, 2, 6, 9, 6, 5, 8, 6, 26, 6, 6]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 7, 6, 36, 2, 9, 15, 3, 218, 18]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 42, 2, 3, 3, 4, 4, 5, 10, 5, 37, 3, 4, 5, 4, 21, 9, 18, 13, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 2, 4, 3, 5, 6, 4, 4, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 13, 11, 41, 4, 4, 5, 5, 4, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 19, 4, 5, 6, 4, 5, 8, 10, 5, 6, 6, 5, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 5, 3, 4, 4, 33, 4, 4, 13, 7, 5, 4, 5, 4, 6, 106]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 3, 9, 4, 4, 21, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785275909742
thermo_feasible = true
