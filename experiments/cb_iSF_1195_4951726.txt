┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSF_1195
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSF_1195
----------------------------------
number of metabolites : 1917
number of reactions : 2630
number of genes : 1195

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 132
max_cuts = 13
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2630 flux variables and 4868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 2, 2, 2, 2, 2, 3, 4, 38, 2, 4, 2, 3, 3, 3, 3, 2, 3, 3, 2, 2, 3, 4, 3, 20, 5, 4, 3, 4, 15, 2, 2, 3, 3, 77]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 2, 4, 3, 2, 7, 3, 3, 3, 4, 4, 5, 6, 13, 3, 5, 4, 5, 3, 3, 20, 3, 6, 3, 4, 4, 35, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 3, 5, 4, 3, 4, 5, 8, 4, 6, 6, 4, 5, 6, 4, 3, 5, 10, 8, 5, 4, 6, 9, 4, 33, 7, 5, 5, 5, 5, 12, 43, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 5, 3, 5, 2, 3, 5, 8, 4, 4, 155, 4, 6, 6, 27, 7, 15, 6, 5, 4, 11, 5, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 3, 2, 2, 2, 3, 4, 4, 30, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 123, 5, 4, 5, 4, 6, 26, 4, 6, 125, 7, 6, 4, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 5, 3, 3, 5, 7, 4, 6, 5, 5, 4, 13, 13, 13, 11, 4, 89]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 13, 14, 3, 10, 3, 7, 4, 16, 8, 4, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 7, 4, 4, 4, 5, 8, 3, 7, 29, 11, 10, 207, 3, 129]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 5, 3, 3, 5, 5, 13, 4, 4, 7, 6, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 0.9145918468942544
thermo_feasible = true
