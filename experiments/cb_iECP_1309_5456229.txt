WARNING: Dual bound 0.982451 is smaller than the objective of the primal solution 0.982462. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.98247 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982451 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.98247 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECP_1309
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECP_1309
----------------------------------
number of metabolites : 1941
number of reactions : 2739
number of genes : 1309

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2739 flux variables and 5087 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 9, 3, 3, 2, 3, 3, 2, 3, 3, 6, 2, 4, 3, 22, 5, 4, 2, 2, 4, 4, 3, 3, 3, 3, 12, 4, 16]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 3, 2, 4, 3, 2, 4, 3, 5, 3, 4, 4, 5, 3, 4, 4, 3, 4, 6, 4, 22, 3, 4, 4, 4, 6, 109, 4, 11, 12, 4, 3, 2, 6, 4, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 3, 5, 3, 4, 3, 4, 5, 3, 5, 3, 4, 4, 6, 7, 4, 31, 6, 3, 70, 6, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 68, 3, 5, 4, 4, 5, 3, 4, 5, 4, 6, 4, 4, 6, 30, 5, 5, 6, 32, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 5, 2, 3, 2, 4, 2, 2, 7, 7, 4, 8, 40, 20, 9, 54, 31]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 2, 3, 4, 4, 3, 6, 18, 3, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 4, 2, 4, 11, 6, 3, 4, 13, 13, 4, 15, 7, 6, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 5, 6, 4, 4, 6, 4, 4, 4, 4, 4, 4, 36, 4, 4, 4, 4, 4, 4, 5, 181, 4, 6, 4, 7, 4, 4, 4, 5, 5, 4, 4, 5, 4, 4, 4, 5, 6, 5, 6, 4, 6, 4, 4, 4, 6, 4, 4, 17, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 6, 5, 4, 4, 6, 7, 4, 4, 7, 4, 5, 4, 7, 4, 5, 4, 6, 4, 4, 10, 66, 4, 6, 4, 45, 6, 5, 6, 6, 5, 6, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 4, 4, 5, 6, 4, 4, 4, 6, 4, 5, 6, 4, 5, 4, 4, 6, 5, 4, 6, 6, 5, 4, 35, 5, 6, 5, 4, 104, 5, 4, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [12, 7, 3, 9, 10, 12, 9, 9, 15, 16, 10, 10, 15, 16, 15, 15, 15, 4, 15, 16, 15, 16, 15, 15, 15, 16, 15, 16, 15, 15, 15, 15, 16, 15, 18, 18, 19, 18, 15, 19, 18, 18, 6, 6, 4, 15, 6, 4, 7, 5, 7, 2, 5, 7, 5, 27, 5, 9, 6, 7, 6, 4, 6, 6, 4, 6, 6, 5, 4, 7, 7, 9, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 18, 18, 18, 18, 18, 10, 11, 18, 18, 7, 10, 11, 10, 7, 10, 10, 6, 20, 10, 11, 10, 11, 10, 11, 6, 7, 16, 22, 22, 23, 23, 17, 15, 24, 24, 22, 4, 5, 6, 4, 4, 7, 7, 4, 4, 6, 6, 6, 10, 4, 4, 4, 7, 6, 7, 7, 4, 8, 7, 9, 17, 6, 6, 3, 5, 11, 4, 6, 8, 3, 6, 6, 3, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 4, 6, 3, 2, 7, 234, 10, 4, 6, 5, 15, 10, 9, 178, 193, 9, 10, 9, 11, 19, 9, 10, 25, 10, 9, 9, 15, 11, 9, 3, 4, 11, 3, 7, 10, 5, 4, 6, 3, 4, 3, 9, 6, 8, 6, 4, 3, 3, 3, 4, 4, 4, 7, 5, 5, 4, 7, 4, 5, 4, 6, 5, 3, 6, 3, 3, 6, 4, 4, 107, 4, 5, 5, 3, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 18, 262, 18, 18, 18, 10, 15, 18, 18, 10, 11, 10, 10, 10, 12, 13, 15, 10, 10, 11, 11, 11, 10, 10, 8, 10, 22, 22, 15, 23, 22, 23, 24, 22, 8, 4, 11, 4, 6, 5, 8, 4, 7, 7, 4, 4, 6, 4, 4, 8, 4, 10, 5, 7, 6, 7, 4, 5, 6, 7, 4, 4, 7, 4, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 18, 18, 18, 18, 18, 10, 11, 18, 18, 9, 314, 11, 10, 10, 10, 4, 11, 10, 5, 11, 10, 20, 10, 11, 10, 149, 10, 10, 16, 10, 11, 10, 22, 22, 11, 23, 22, 10, 10, 23, 22, 26, 3, 4, 4, 4, 10, 4, 5, 4, 6, 5, 4, 4, 4, 9, 8, 4, 6, 5, 5, 4, 6, 5, 7, 3, 4, 5, 4, 4, 4, 5, 6, 5, 4, 6, 4, 329, 6, 4, 5, 9, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 18, 18, 18, 26, 18, 11, 12, 18, 18, 75, 11, 10, 11, 11, 3, 13, 14, 19, 12, 20, 10, 12, 10, 11, 11, 12, 16, 11, 22, 23, 24, 22, 10, 11, 24, 22, 22, 7, 5, 5, 3, 10, 4, 3, 4, 7, 4, 4, 4, 4, 3, 6, 3, 3, 10, 6, 6, 17, 6, 6, 4, 7, 4, 4, 5, 12, 4, 4, 8, 288, 6, 3, 9, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 5, 16, 18, 203, 18, 19, 18, 11, 52, 23, 18, 12, 12, 11, 12, 11, 11, 12, 11, 58, 12, 11, 21, 81, 12, 140, 12, 11, 14, 15, 11, 12, 11, 23, 23, 12, 25, 23, 11, 24, 23, 23, 73, 11, 7, 3, 11, 5, 16, 3, 3, 29, 8, 52, 6, 6, 3, 5, 8, 22, 8, 5, 7, 6, 11, 4, 4, 3, 4, 3, 6, 4, 24, 11, 8, 5, 6, 11, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 10, 10, 10, 10, 57, 10, 11, 10, 10, 10, 11, 10, 22, 10, 10, 11, 10, 10, 10, 20, 13, 11, 10, 18, 10, 11, 16, 10, 11, 10, 15, 15, 11, 16, 15, 10, 17, 16, 18, 5, 4, 4, 20, 10, 5, 5, 3, 7, 5, 9, 9, 5, 4, 11, 5, 8, 4, 19, 7, 6, 4, 4, 7, 8, 9, 14, 6, 5, 7, 4, 4, 8, 4, 4, 5, 3, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 8, 8, 11, 8, 8, 11, 12, 8, 8, 11, 63, 31, 10, 11, 6, 11, 10, 12, 11, 11, 29, 10, 12, 11, 11, 10, 11, 15, 15, 16, 16, 16, 11, 17, 16, 15, 5, 4, 5, 6, 6, 11, 4, 3, 3, 6, 4, 6, 5, 71, 11, 5, 4, 4, 4, 6, 5, 12, 82, 4, 6, 4, 4, 12, 6, 12, 4, 5, 5, 5, 4, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 10, 10, 10, 10, 10, 10, 10, 11, 10, 9, 10, 11, 4, 10, 9, 5, 161, 9, 9, 9, 20, 9, 10, 14, 10, 9, 9, 16, 9, 11, 9, 14, 13, 15, 15, 15, 14, 14, 3, 5, 4, 3, 4, 4, 3, 5, 6, 6, 4, 7, 4, 3, 8, 6, 5, 4, 7, 4, 5, 5, 6, 3, 3, 7, 21, 4, 5, 4, 5, 4, 8, 4, 6, 5, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 17, 10, 10, 10, 10, 10, 11, 10, 10, 6, 10, 15, 10, 14, 10, 10, 10, 11, 10, 11, 10, 18, 10, 11, 10, 262, 14, 14, 14, 10, 10, 15, 13, 11, 16, 13, 12, 10, 16, 15, 15, 4, 3, 4, 3, 10, 8, 5, 8, 4, 4, 5, 5, 3, 3, 7, 4, 5, 6, 4, 3, 3, 6, 110, 5, 5, 29, 7, 4, 5, 8, 5, 4, 151, 8, 5, 4, 4, 6, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 10, 8, 8, 10, 21, 9, 10, 10, 132, 9, 10, 9, 9, 9, 9, 9, 19, 10, 10, 9, 10, 9, 9, 16, 9, 10, 9, 13, 14, 10, 15, 13, 9, 9, 20, 4, 14, 4, 3, 4, 9, 9, 6, 16, 9, 6, 7, 5, 4, 4, 5, 10, 4, 5, 7, 9, 10, 4, 5, 22, 4, 24, 5, 10, 8, 6, 7, 7, 157]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 11, 10, 16, 10, 10, 9, 248, 10, 10, 9, 10, 9, 14, 9, 7, 276, 11, 175, 9, 9, 9, 10, 9, 10, 9, 9, 11, 13, 14, 243, 4, 14, 10, 10, 16, 17, 15, 6, 3, 6, 9, 20, 8, 3, 7, 7, 11, 4, 4, 4, 6, 4, 9, 5, 5, 4, 4, 4, 12, 4, 4, 5, 6, 6, 4, 5, 6, 7, 3, 4, 5, 3, 8, 4, 138, 358]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 9, 8, 8, 8, 9, 10, 11, 8, 8, 4, 15, 11, 10, 4, 10, 10, 4, 10, 16, 21, 10, 11, 10, 11, 10, 10, 21, 11, 12, 19, 12, 14, 4, 18, 11, 5, 4, 5, 4, 5, 13, 4, 6, 5, 4, 3, 7, 9, 8, 5, 10, 4, 6, 11, 13, 13, 6, 7, 5, 10, 5, 9, 3, 5, 6, 4, 4, 4, 3, 12, 11, 10, 11, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 8, 10, 150, 8, 8, 10, 11, 8, 8, 21, 11, 11, 10, 10, 3, 10, 10, 204, 11, 10, 11, 10, 16, 10, 10, 11, 24, 12, 4, 11, 14, 11, 69, 13, 12, 12, 5, 12, 4, 4, 4, 4, 30, 6, 51, 8, 4, 7, 6, 4, 2, 4, 14, 13, 4, 3, 6, 4, 8, 4, 4, 4, 7, 6, 36, 6, 14, 7, 10, 4, 36, 185, 37, 4, 13, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 10, 10, 10, 10, 25, 9, 10, 10, 10, 9, 10, 9, 9, 9, 9, 10, 11, 9, 9, 9, 9, 10, 9, 10, 13, 9, 5, 9, 10, 269, 15, 14, 10, 15, 14, 9, 9, 15, 14, 15, 9, 12, 4, 34, 9, 4, 4, 4, 5, 4, 17, 4, 19, 6, 4, 6, 3, 5, 5, 6, 5, 9, 4, 5, 4, 5, 6, 6, 4, 4, 5, 6, 5, 14, 6, 4, 6, 7, 5, 6, 11, 124]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 12, 11, 11, 11, 11, 9, 11, 11, 11, 9, 10, 9, 9, 9, 13, 10, 11, 7, 9, 11, 9, 106, 9, 15, 6, 10, 14, 5, 11, 17, 17, 9, 16, 16, 16, 4, 4, 4, 7, 10, 5, 6, 17, 16, 5, 4, 5, 5, 4, 4, 4, 3, 8, 5, 7, 13, 4, 7, 4, 12, 5, 4, 5, 16, 3, 6, 6, 7, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [13, 7, 5, 11, 11, 11, 11, 11, 9, 62, 11, 12, 6, 9, 226, 10, 7, 9, 9, 12, 9, 10, 10, 9, 9, 16, 9, 145, 9, 10, 9, 9, 13, 9, 10, 9, 15, 15, 10, 16, 14, 9, 9, 16, 15, 15, 6, 6, 4, 4, 9, 4, 3, 8, 6, 5, 7, 6, 213, 6, 12, 4, 7, 6, 7, 6, 4, 8, 10, 4, 4, 6, 6, 6, 6, 4, 28, 6, 3, 8, 6, 8, 4, 6, 6, 12, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 8, 8, 8, 8, 8, 10, 175, 8, 8, 10, 12, 10, 10, 10, 11, 10, 11, 18, 10, 11, 10, 11, 10, 10, 14, 10, 12, 12, 13, 12, 10, 14, 13, 12, 3, 6, 8, 203, 10, 5, 5, 6, 5, 56, 6, 4, 28, 14, 6, 6, 4, 10, 4, 5, 5, 9, 7, 8, 5, 5, 4, 7, 5, 6, 6, 7, 7, 4, 6, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 8, 8, 8, 127, 8, 10, 11, 8, 8, 5, 10, 32, 12, 10, 10, 4, 11, 11, 11, 7, 10, 11, 10, 11, 10, 10, 8, 77, 14, 11, 13, 11, 14, 13, 12, 5, 4, 12, 5, 17, 5, 8, 4, 4, 5, 7, 7, 4, 36, 5, 6, 5, 12, 7, 7, 3, 7, 6, 5, 6, 4, 7, 7, 3, 9, 7, 4, 7, 12, 16, 4, 8, 4, 10, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 9, 8, 9, 8, 8, 16, 35, 8, 8, 11, 12, 11, 11, 11, 114, 12, 174, 16, 11, 6, 18, 11, 12, 11, 12, 11, 11, 18, 11, 11, 11, 12, 14, 13, 11, 11, 16, 13, 13, 5, 6, 6, 6, 5, 5, 6, 6, 4, 4, 3, 4, 7, 8, 15, 6, 7, 9, 4, 5, 15, 9, 4, 5, 5, 5, 6, 6, 47, 4, 6, 6, 3, 4, 4, 3, 4, 50, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 8, 8, 8, 9, 11, 11, 12, 8, 8, 11, 12, 11, 5, 14, 13, 7, 10, 25, 11, 10, 21, 10, 11, 10, 12, 10, 11, 4, 18, 12, 12, 12, 13, 14, 15, 15, 11, 11, 16, 15, 6, 33, 8, 7, 9, 10, 9, 6, 7, 5, 7, 5, 11, 6, 5, 5, 29, 5, 7, 8, 6, 12, 5, 5, 4, 7, 7, 8, 5, 5, 7, 5, 4, 5, 6, 4, 8, 6, 9, 4, 4, 9, 4, 6, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 8, 149, 8, 8, 8, 9, 10, 10, 25, 9, 11, 9, 207, 9, 12, 16, 10, 9, 9, 6, 9, 284, 9, 11, 9, 9, 11, 10, 12, 9, 14, 6, 10, 17, 18, 13, 73, 15, 14, 15, 3, 5, 10, 4, 6, 5, 3, 3, 4, 12, 9, 5, 7, 12, 13, 4, 4, 4, 6, 5, 81, 14, 13, 8, 4, 6, 6, 11, 12, 12, 5, 4, 3, 5, 6, 7, 5, 11, 10, 4, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [9, 11, 6, 8, 72, 8, 8, 8, 10, 11, 8, 8, 10, 11, 10, 5, 10, 10, 12, 11, 6, 4, 10, 242, 10, 11, 10, 10, 4, 11, 15, 13, 11, 14, 12, 13, 74, 13, 5, 3, 5, 5, 3, 4, 6, 6, 6, 5, 4, 5, 5, 4, 10, 9, 4, 2, 6, 6, 4, 3, 4, 4, 12, 4, 5, 4, 6, 5, 10, 5, 9, 5, 5, 5, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [18, 5, 5, 9, 12, 13, 13, 14, 11, 12, 8, 8, 11, 12, 11, 11, 11, 11, 12, 11, 12, 11, 11, 11, 11, 12, 11, 12, 11, 11, 11, 20, 14, 16, 117, 14, 12, 11, 11, 14, 13, 12, 8, 5, 6, 4, 5, 6, 7, 6, 5, 3, 5, 3, 5, 7, 7, 15, 6, 5, 12, 10, 6, 3, 5, 5, 6, 7, 5, 4, 6, 12, 6, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 8, 8, 8, 9, 10, 11, 12, 10, 8, 13, 11, 10, 10, 10, 10, 11, 11, 10, 17, 10, 11, 11, 11, 13, 11, 11, 14, 10, 11, 11, 12, 12, 11, 20, 12, 10, 46, 13, 13, 12, 5, 5, 5, 6, 15, 5, 10, 7, 6, 6, 5, 6, 5, 7, 5, 5, 5, 5, 6, 12, 5, 6, 9, 7, 10, 4, 4, 4, 7, 17, 5, 7, 3, 12, 7, 8, 9, 10, 6, 3, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [10, 12, 5, 6, 10, 42, 13, 34, 9, 11, 8, 6, 9, 10, 9, 9, 9, 5, 10, 9, 5, 9, 9, 10, 9, 27, 90, 9, 4, 9, 99, 10, 9, 14, 81, 12, 16, 13, 9, 15, 14, 4, 42, 4, 6, 9, 24, 4, 4, 21, 7, 6, 14, 11, 4, 8, 6, 7, 4, 54, 15, 4, 145, 4, 9, 6, 35, 4, 6, 6, 12, 5, 8, 11, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 8, 8, 8, 8, 9, 10, 11, 8, 8, 4, 10, 11, 119, 10, 10, 3, 13, 10, 10, 10, 11, 12, 11, 74, 10, 10, 11, 11, 25, 15, 11, 11, 13, 12, 13, 5, 6, 4, 6, 6, 11, 6, 4, 13, 6, 4, 3, 3, 7, 7, 9, 9, 5, 6, 10, 6, 4, 7, 7, 7, 4, 5, 7, 4, 6, 14, 4, 6, 6, 3, 109, 5, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 8, 8, 8, 8, 11, 10, 11, 8, 8, 10, 11, 11, 10, 10, 10, 10, 11, 10, 11, 11, 10, 6, 13, 12, 12, 13, 11, 13, 14, 13, 14, 10, 4, 55, 188, 7, 8, 7, 12, 13, 5, 5, 6, 5, 4, 5, 4, 3, 5, 36, 4, 6, 11, 6, 6, 65, 5, 5, 5, 28, 8, 12, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 11, 11, 11, 14, 15, 9, 11, 11, 11, 4, 9, 10, 9, 9, 9, 11, 10, 9, 11, 9, 19, 125, 9, 6, 2, 9, 10, 9, 14, 15, 10, 17, 15, 9, 9, 17, 16, 4, 16, 6, 4, 7, 9, 17, 4, 7, 14, 5, 5, 6, 4, 14, 4, 6, 7, 18, 6, 7, 7, 13, 7, 7, 5, 13, 13, 15, 5, 8, 11, 11, 21, 74, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [17, 3, 12, 9, 9, 10, 9, 9, 9, 10, 9, 9, 9, 11, 9, 9, 9, 13, 10, 24, 9, 9, 9, 10, 9, 10, 9, 9, 3, 15, 16, 9, 10, 13, 7, 15, 12, 9, 111, 14, 10, 24, 15, 4, 7, 12, 7, 12, 8, 13, 15, 16, 15, 7, 10, 95, 13, 3, 8, 14, 15, 7, 10, 7, 8, 38, 7, 7, 14, 8, 38, 39, 39, 15, 17, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 4, 17, 9, 9, 9, 9, 9, 9, 10, 9, 10, 126, 10, 10, 9, 9, 9, 9, 10, 32, 10, 9, 10, 204, 10, 9, 9, 12, 9, 14, 13, 14, 12, 16, 13, 15, 11, 13, 8, 9, 8, 4, 10, 8, 12, 5, 6, 10, 4, 3, 8, 5, 5, 13, 8, 12, 26, 11, 9, 13, 12, 6, 9, 8, 65, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [17, 9, 5, 9, 10, 9, 9, 9, 13, 14, 9, 9, 4, 22, 14, 13, 15, 13, 14, 13, 28, 13, 5, 13, 109, 13, 14, 13, 13, 4, 13, 14, 13, 10, 14, 6, 17, 14, 18, 14, 17, 6, 6, 15, 3, 15, 9, 7, 5, 5, 4, 117, 4, 5, 10, 5, 4, 7, 8, 5, 38, 6, 8, 12, 7, 14, 8, 12, 5, 5, 28, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [8, 4, 12, 8, 8, 8, 8, 11, 10, 11, 8, 69, 4, 10, 12, 10, 10, 10, 11, 10, 14, 117, 11, 10, 10, 6, 11, 11, 10, 12, 12, 13, 13, 12, 13, 15, 4, 4, 58, 5, 6, 7, 6, 6, 4, 4, 17, 4, 5, 6, 7, 4, 6, 4, 5, 5, 6, 6, 5, 238, 8, 11, 5, 6, 15, 14, 6, 6, 6, 5, 6, 8, 5, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 13, 11, 11, 11, 11, 10, 11, 11, 11, 5, 11, 11, 11, 7, 13, 10, 10, 12, 11, 10, 29, 11, 10, 10, 10, 11, 10, 11, 11, 10, 10, 11, 10, 14, 15, 11, 16, 15, 25, 18, 16, 6, 7, 5, 8, 4, 8, 6, 15, 8, 5, 47, 7, 8, 7, 8, 5, 9, 5, 4, 4, 6, 6, 6, 7, 4, 7, 9, 11, 6, 9, 7, 4, 9, 7, 7, 10, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [11, 6, 17, 17, 19, 15, 15, 9, 10, 15, 22, 13, 10, 9, 9, 9, 4, 9, 12, 10, 16, 9, 21, 9, 10, 9, 10, 9, 9, 15, 10, 44, 20, 23, 18, 15, 21, 19, 27, 4, 10, 11, 4, 9, 3, 4, 11, 5, 5, 4, 16, 13, 11, 6, 4, 121, 11, 11, 29, 19, 16, 8, 13, 14, 20, 8, 13, 4, 15, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 13, 9, 9, 9, 9, 9, 10, 10, 9, 9, 10, 10, 9, 12, 13, 13, 10, 4, 9, 10, 12, 12, 10, 13, 12, 9, 12, 9, 12, 13, 10, 16, 13, 11, 10, 16, 16, 14, 12, 5, 4, 11, 10, 4, 6, 10, 4, 13, 6, 6, 6, 4, 12, 13, 11, 13, 14, 14, 9, 13, 12, 6, 14, 14, 16, 9, 5, 16, 10, 6, 11, 25, 12, 8, 16, 13, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 3, 10, 10, 10, 10, 12, 30, 14, 10, 10, 109, 13, 14, 14, 13, 15, 14, 15, 15, 13, 19, 13, 14, 13, 180, 13, 13, 16, 16, 15, 14, 8, 14, 20, 13, 84, 4, 18, 5, 4, 4, 13, 4, 4, 7, 5, 5, 13, 14, 4, 8, 4, 5, 4, 8, 6, 5, 9, 7, 5, 7, 15, 4, 6, 6, 7, 12, 7, 6, 5, 8, 4, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [16, 4, 2, 8, 8, 9, 8, 122, 292, 12, 88, 8, 168, 12, 10, 11, 11, 11, 11, 11, 11, 12, 11, 12, 10, 14, 14, 15, 15, 18, 14, 11, 25, 16, 21, 5, 4, 4, 4, 62, 6, 7, 4, 4, 6, 3, 4, 4, 6, 4, 3, 4, 4, 6, 6, 7, 6, 7, 5, 4, 4, 6, 3, 5, 7, 6, 6, 4, 5, 5, 4, 7, 6, 4, 15, 130]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [21, 7, 4, 8, 8, 9, 8, 8, 10, 18, 8, 8, 10, 11, 24, 10, 10, 4, 11, 11, 11, 10, 16, 10, 11, 10, 11, 9, 10, 68, 10, 11, 10, 15, 20, 11, 18, 14, 4, 13, 17, 16, 12, 9, 6, 7, 10, 4, 10, 3, 6, 5, 5, 5, 4, 6, 4, 12, 21, 10, 12, 12, 13, 5, 5, 5, 3, 6, 8, 5, 12, 6, 10, 3, 7, 9, 173]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [12, 16, 10, 36, 10, 10, 11, 127, 95, 10, 10, 10, 9, 10, 7, 9, 9, 9, 11, 4, 4, 10, 10, 9, 10, 4, 9, 9, 14, 14, 15, 13, 9, 48, 150, 3, 14, 9, 20, 8, 34, 3, 11, 15, 146, 14, 7, 6, 16, 4, 25, 12, 14, 7, 5, 20, 4, 18, 5, 5, 4, 11, 13, 13, 10, 10, 11, 12, 12, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [15, 11, 4, 12, 12, 12, 19, 34, 12, 13, 21, 12, 5, 12, 15, 8, 12, 12, 16, 9, 24, 16, 13, 12, 15, 4, 15, 19, 12, 18, 17, 17, 15, 18, 17, 12, 19, 10, 7, 10, 13, 21, 12, 12, 10, 13, 4, 69, 13, 8, 14, 15, 12, 13, 12, 5, 5, 11, 6, 8, 5, 12, 23, 12, 8, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 10, 11, 10, 10, 58, 58, 10, 10, 10, 9, 10, 9, 6, 9, 9, 6, 9, 10, 11, 13, 16, 28, 9, 10, 80, 10, 9, 9, 9, 9, 11, 14, 13, 10, 16, 13, 9, 15, 7, 16, 11, 18, 5, 11, 5, 9, 5, 8, 5, 7, 8, 16, 9, 5, 9, 16, 12, 5, 6, 6, 6, 6, 7, 14, 43, 8, 5, 6, 27, 7, 44, 44, 44, 4, 16, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 6, 3, 3, 9, 10, 11, 4, 5, 10, 11, 10, 10, 10, 6, 12, 15, 56, 15, 10, 11, 10, 11, 10, 10, 3, 4, 9, 4, 12, 11, 7, 6, 5, 5, 13, 5, 7, 12, 5, 4, 4, 21, 8, 5, 7, 11, 11, 12, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 6, 11, 9, 11, 11, 10, 10, 11, 10, 10, 13, 8, 11, 11, 10, 11, 22, 10, 8, 15, 8, 8, 11, 8, 7, 6, 12, 11, 20, 8, 11, 26, 7, 6, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 8, 9, 9, 8, 8, 12, 11, 8, 9, 14, 12, 5, 18, 10, 3, 15, 4, 11, 10, 10, 10, 10, 11, 10, 11, 15, 10, 10, 44, 13, 15, 11, 16, 13, 9, 25, 15, 14, 5, 5, 4, 14, 3, 19, 11, 6, 6, 11, 9, 5, 6, 8, 11, 6, 5, 6, 10, 4, 11, 8, 5, 14, 14, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 146, 10, 10, 10, 10, 10, 10, 10, 10, 9, 10, 9, 9, 9, 17, 10, 10, 9, 10, 9, 9, 3, 13, 21, 14, 14, 56, 15, 14, 15, 14, 14, 6, 6, 4, 4, 5, 5, 5, 12, 9, 6, 10, 8, 36, 7, 6, 6, 8, 7, 40, 7, 4, 6, 8, 36, 43, 6, 8, 6, 6, 44, 44, 45, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [10, 17, 9, 7, 16, 10, 11, 10, 11, 6, 11, 10, 10, 5, 8, 148, 12, 3, 13, 13, 11, 11, 11, 10, 11, 10, 13, 10, 8, 9, 10, 10, 6, 8, 9, 6, 11, 30, 17, 10, 21, 7, 6, 7, 5, 8, 8, 5, 8, 6, 73, 12, 14, 21, 18, 8, 11, 9, 12, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [13, 12, 6, 18, 21, 23, 15, 187, 9, 10, 22, 22, 4, 10, 9, 10, 9, 12, 23, 9, 20, 9, 10, 9, 10, 9, 10, 16, 22, 21, 26, 28, 19, 9, 21, 27, 26, 14, 11, 10, 4, 68, 11, 11, 77, 6, 12, 4, 12, 14, 47, 10, 13, 17, 16, 8, 12, 7, 13, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [10, 16, 7, 8, 8, 8, 9, 11, 6, 11, 173, 8, 5, 11, 13, 18, 11, 7, 4, 11, 6, 11, 7, 39, 12, 11, 11, 23, 8, 5, 29, 29, 11, 10, 11, 13, 12, 13, 12, 14, 5, 17, 7, 4, 9, 5, 5, 10, 18, 39, 5, 5, 7, 14, 5, 13, 7, 6, 6, 5, 5, 14, 4, 4, 5, 5, 4, 10, 13, 4, 6, 8, 12, 8, 6, 11, 12, 12, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 18, 22, 19, 22, 22, 19, 10, 12, 22, 22, 7, 12, 32, 14, 4, 4, 13, 11, 4, 10, 71, 11, 12, 11, 12, 11, 11, 10, 74, 20, 23, 22, 21, 10, 22, 26, 22, 19, 6, 5, 9, 16, 17, 10, 6, 15, 16, 14, 10, 17, 14, 12, 8, 42, 23, 19, 31, 21, 9, 19, 8, 16, 4, 5, 5, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [11, 13, 9, 84, 8, 8, 8, 11, 10, 8, 8, 8, 10, 48, 12, 97, 11, 3, 35, 21, 10, 10, 21, 10, 4, 13, 11, 5, 13, 199, 4, 5, 13, 3, 4, 7, 4, 25, 11, 17, 3, 6, 22, 4, 10, 5, 4, 7, 10, 18, 3, 16, 7, 11, 6, 5, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 10, 11, 8, 8, 68, 11, 10, 8, 26, 10, 11, 17, 16, 10, 10, 26, 19, 8, 10, 29, 10, 11, 4, 12, 23, 32, 23, 33, 27, 26, 34, 66, 5, 12, 9, 12, 5, 12, 17, 7, 13, 4, 12, 3, 14, 13, 11, 24, 5, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 8, 8, 24, 4, 8, 137, 12, 6, 8, 11, 11, 17, 12, 9, 8, 10, 9, 10, 47, 13, 15, 10, 10, 8, 32, 9, 13, 25, 30, 4, 15, 31, 28, 7, 36, 97, 32, 7, 14, 12, 6, 9, 13, 5, 13, 11, 12, 14, 15, 12, 5, 7, 15, 10, 10, 5, 12, 16, 12, 12, 7, 10, 14, 14, 7, 15, 6, 19, 23, 13, 7, 9, 14, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 28, 18, 18, 20, 8, 5, 14, 20, 5, 7, 14, 9, 6, 28, 13, 10, 8, 20, 14, 33, 13, 27, 6, 16, 17, 10, 21, 6, 28, 28, 14, 7, 27, 7, 7, 15, 11, 24, 18, 10, 15, 5, 31, 12, 10, 13, 17, 27, 7, 46, 7, 11, 14, 46, 47, 47, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [17, 6, 8, 8, 8, 29, 30, 9, 12, 10, 8, 16, 12, 17, 9, 17, 4, 7, 13, 7, 12, 8, 14, 11, 12, 32, 12, 13, 13, 6, 21, 8, 37, 14, 36, 28, 11, 11, 35, 32, 11, 7, 12, 6, 9, 6, 6, 10, 73, 6, 13, 11, 12, 12, 9, 7, 7, 6, 21, 15, 11, 25, 13, 5, 5, 6, 14, 12, 13, 14, 15, 7, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [22, 24, 5, 14, 10, 10, 10, 6, 10, 10, 10, 9, 10, 13, 15, 9, 12, 15, 7, 16, 9, 5, 10, 141, 11, 26, 10, 15, 11, 28, 15, 10, 15, 13, 11, 17, 14, 14, 6, 4, 6, 6, 13, 20, 5, 6, 23, 5, 4, 4, 6, 5, 14, 16, 15, 6, 5, 6, 6, 17, 6, 6, 7, 18, 18, 6, 6, 5, 6, 6, 5, 19, 6, 13, 16, 7, 5, 5, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 23, 9, 5, 9, 9, 20, 20, 8, 11, 9, 11, 19, 5, 4, 3, 9, 15, 10, 10, 14, 11, 9, 13, 10, 10, 11, 13, 13, 11, 131, 23, 11, 5, 26, 5, 120, 5, 5, 4, 31, 86, 5, 24, 16, 6, 29, 9, 5, 34, 8, 23, 8, 18, 20, 5, 15, 16, 5, 15, 7, 31, 64, 5, 8, 8, 4, 4, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 16, 16, 16, 18, 16, 27, 15, 16, 17, 14, 6, 15, 14, 14, 7, 4, 33, 16, 14, 17, 18, 38, 71, 9, 16, 15, 16, 18, 27, 11, 32, 8, 9, 78, 8, 7, 30, 26, 8, 11, 12, 9, 13, 190, 8, 86, 6, 13, 13, 7, 6, 19, 14, 6, 15, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [7, 16, 4, 11, 15, 24, 25, 16, 14, 10, 25, 12, 10, 34, 15, 10, 4, 4, 9, 10, 11, 10, 15, 14, 40, 11, 21, 18, 19, 10, 20, 28, 17, 14, 8, 35, 15, 15, 17, 4, 3, 8, 15, 18, 12, 5, 11, 12, 27, 13, 37, 9, 12, 11, 17, 11, 11, 12, 3, 10, 12, 11, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [2, 12, 4, 6, 8, 8, 15, 10, 10, 8, 17, 13, 10, 20, 17, 29, 9, 7, 29, 24, 17, 10, 10, 8, 21, 10, 13, 10, 24, 17, 14, 15, 21, 16, 7, 28, 16, 12, 16, 8, 12, 16, 15, 29, 16, 16, 10, 16, 29, 15, 9, 33, 10, 10, 25, 33, 4, 10, 15, 16, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [19, 11, 13, 19, 19, 20, 8, 122, 4, 4, 19, 19, 10, 24, 36, 30, 4, 31, 32, 8, 4, 21, 24, 21, 5, 9, 5, 5, 17, 10, 24, 6, 17, 20, 28, 14, 26, 5, 9, 10, 32, 8, 8, 12, 29, 21, 11, 12, 12, 26, 21, 18, 12, 9, 7, 5, 14, 20, 26, 4, 14, 4, 5, 5, 6, 4, 5, 10, 5, 11, 19, 4, 41, 4, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 16, 4, 10, 5, 15, 18, 24, 10, 24, 10, 7, 22, 10, 7, 7, 7, 21, 5, 22, 8, 5, 4, 6, 10, 15, 10, 18, 17, 21, 84, 11, 13, 5, 5, 16, 6, 13, 13, 18, 15, 15, 5, 9, 5, 15, 5, 18, 14, 7, 4, 5, 5, 23, 7, 5, 28, 7, 26, 4, 27, 4, 113, 18, 20, 8, 47, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [12, 24, 4, 11, 10, 209, 11, 11, 6, 23, 11, 10, 12, 5, 24, 8, 22, 10, 20, 17, 5, 4, 13, 20, 20, 14, 22, 13, 3, 21, 14, 14, 20, 54, 28, 55, 4, 5, 5, 15, 10, 28, 4, 25, 14, 24, 30, 12, 4, 3, 16, 4, 27, 5, 20, 5, 6, 14, 4, 4, 174, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [18, 9, 12, 14, 14, 22, 14, 12, 12, 21, 16, 16, 8, 11, 13, 22, 8, 15, 16, 7, 8, 72, 16, 22, 16, 7, 11, 35, 16, 22, 22, 21, 21, 10, 25, 21, 22, 8, 22, 25, 19, 9, 7, 20, 14, 16, 13, 10, 12, 8, 16, 13, 13, 9, 19, 13, 8, 20, 12, 12, 11, 18, 15, 11, 12, 14, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [12, 7, 14, 99, 38, 47, 40, 47, 10, 15, 47, 41, 10, 18, 35, 29, 16, 8, 16, 22, 10, 10, 38, 12, 21, 21, 12, 48, 48, 43, 12, 23, 40, 21, 24, 22, 42, 48, 18, 21, 11, 29, 15, 15, 15, 13, 34, 16, 13, 31, 111, 66, 15, 15, 19, 29, 40, 14, 73, 15, 39, 28, 12, 11, 25, 15, 13, 18, 115, 43, 52, 15, 6, 41]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [24, 22, 24, 18, 23, 20, 19, 20, 14, 33, 18, 19, 4, 11, 32, 25, 34, 23, 141, 29, 20, 33, 33, 21, 33, 21, 15, 33, 19, 32, 33, 5, 19, 33, 26, 32, 11, 26, 18, 14, 5, 5, 3, 32, 56, 21, 4, 4, 7, 17, 6, 4, 34, 19, 19, 22, 11, 5, 25, 29, 29, 25, 4, 20, 22, 5, 23, 24, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [27, 3, 3, 23, 23, 23, 34, 22, 31, 24, 23, 54, 4, 13, 18, 31, 8, 39, 27, 37, 31, 25, 5, 27, 43, 27, 27, 24, 15, 21, 31, 87, 32, 27, 17, 4, 15, 25, 28, 31, 42, 28, 20, 29, 20, 22, 5, 31, 12, 6, 22, 5, 29, 20, 22, 31, 12, 24, 21, 5, 22, 19, 7, 9, 24, 21, 5, 23, 6, 6, 9, 9, 5, 7, 13, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [25, 4, 4, 24, 24, 26, 27, 25, 25, 6, 24, 26, 56, 18, 3, 24, 25, 24, 8, 26, 11, 4, 24, 24, 25, 24, 7, 22, 15, 24, 24, 25, 24, 6, 21, 6, 16, 6, 28, 24, 24, 27, 20, 4, 4, 6, 9, 11, 7, 55, 6, 4, 6, 5, 7, 8, 18, 7, 17, 7, 5, 156, 4, 20, 6, 7, 23, 19, 24, 3, 7, 163, 20, 23, 5, 4, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [16, 3, 15, 31, 31, 30, 35, 27, 11, 30, 31, 29, 29, 6, 29, 36, 16, 8, 37, 34, 18, 12, 35, 221, 16, 15, 17, 6, 77, 40, 38, 15, 15, 22, 7, 34, 58, 36, 15, 20, 33, 15, 22, 31, 7, 15, 17, 66, 20, 17, 151, 41, 15, 16, 23, 37, 24, 12, 27, 16, 24, 18, 38]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 19, 8, 22, 111, 11, 3, 9, 22, 11, 4, 25, 18, 4, 10, 24, 22, 10, 27, 5, 41, 22, 6, 29, 21, 26, 5, 9, 5, 71, 9, 13, 79, 20, 90, 32, 5, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [9, 19, 19, 9, 13, 9, 23, 9, 36, 18, 9, 9, 12, 11, 37, 20, 36, 6, 12, 12, 14, 26, 19, 36, 37, 9, 13, 3, 9, 9, 37, 36, 20, 14, 11, 45, 17, 22, 11, 12, 12, 10, 37, 11, 6, 17, 12, 12, 11, 10, 12, 20, 10, 11, 12, 40, 10, 10, 10, 21, 26, 10, 22, 31, 12, 10, 12, 17, 34, 4, 19, 9, 10, 22, 32, 11, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [21, 16, 14, 25, 17, 34, 25, 25, 8, 26, 35, 35, 9, 60, 22, 140, 22, 17, 19, 15, 8, 22, 22, 22, 11, 20, 167, 23, 16, 12, 15, 20, 11, 28, 245, 30, 22, 103, 11, 32, 12, 148, 21, 20, 24, 8, 10, 3, 28, 12, 15, 7, 16, 4, 16, 6, 9, 13, 17, 17, 18, 13, 14, 34, 18, 17, 9, 13, 12, 27, 94, 15, 12, 9, 25, 26, 13, 14, 17, 18, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [9, 6, 4, 12, 16, 16, 17, 6, 11, 21, 16, 19, 21, 8, 20, 13, 16, 10, 11, 7, 6, 4, 11, 12, 16, 11, 6, 26, 25, 26, 22, 11, 13, 17, 5, 5, 25, 26, 11, 11, 29, 11, 13, 15, 6, 14, 15, 13, 6, 26, 16, 7, 7, 17, 16, 14, 19, 5, 13, 13, 7, 49, 7, 9, 4, 10, 7, 18, 6, 4, 13, 7, 13, 19, 20, 9, 4, 21, 18, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [30, 13, 20, 32, 9, 9, 11, 8, 32, 30, 8, 8, 13, 13, 32, 32, 36, 18, 32, 35, 13, 24, 32, 26, 32, 34, 85, 31, 33, 26, 36, 31, 22, 19, 23, 28, 33, 21, 32, 11, 13, 11, 29, 20, 33, 25, 13, 26, 13, 22, 19, 22, 41, 16, 33, 21, 12, 13, 17, 17, 13, 20, 29, 26, 18, 20, 21, 13, 3, 31, 14, 17, 22, 19, 20, 28, 15, 32, 21, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [24, 3, 22, 20, 22, 19, 19, 19, 24, 26, 19, 21, 31, 24, 24, 24, 18, 25, 19, 26, 25, 24, 25, 15, 28, 24, 24, 26, 17, 5, 28, 28, 24, 16, 19, 15, 20, 31, 23, 16, 13, 27, 4, 4, 18, 120, 27, 25, 21, 5, 17, 23, 4, 20, 16, 22, 29, 203, 22, 11, 28, 74, 18, 24, 6, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [10, 11, 26, 18, 18, 21, 17, 18, 17, 18, 22, 18, 13, 31, 10, 17, 17, 17, 17, 18, 3, 35, 17, 22, 17, 30, 18, 17, 18, 24, 17, 17, 24, 19, 280, 17, 25, 20, 17, 18, 22, 25, 18, 29, 19, 28, 19, 23, 10, 22, 24, 9, 24, 19, 21, 22, 19, 17, 23, 10, 18, 9, 22, 20, 16, 18, 19, 20, 10, 17, 17, 12, 62, 11, 17, 17, 12, 21, 18, 29, 21, 6, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [22, 4, 5, 16, 15, 16, 16, 16, 26, 8, 7, 83, 4, 5, 26, 26, 10, 27, 6, 7, 26, 26, 26, 6, 26, 3, 29, 29, 7, 26, 10, 8, 4, 5, 8, 4, 26, 26, 8, 5, 4, 4, 5, 7, 5, 10, 4, 7, 5, 7, 6, 6, 7, 6, 19, 8, 51, 12, 3, 5, 4, 5, 6, 8, 5, 6, 6, 8, 9, 11, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [33, 3, 23, 17, 15, 16, 16, 16, 20, 26, 17, 33, 8, 20, 30, 20, 20, 26, 18, 23, 20, 20, 20, 20, 26, 20, 30, 20, 20, 20, 25, 28, 28, 25, 32, 62, 30, 34, 20, 24, 17, 6, 19, 4, 28, 26, 20, 140, 4, 27, 26, 23, 24, 24, 22, 22, 17, 28, 36, 24, 25, 24, 18, 32, 17, 30, 24, 21, 22, 18, 21, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[7, 7, 19, 17, 16, 17, 22, 17, 23, 24, 17, 17, 5, 7, 39, 23, 23, 23, 31, 4, 25, 37, 23, 24, 25, 25, 5, 27, 23, 39, 51, 23, 23, 16, 19, 5, 6, 28, 17, 31, 23, 24, 17, 26, 29, 6, 9, 6, 23, 22, 8, 6, 7, 18, 5, 11, 19, 7, 7, 5, 8, 19, 7, 5, 20, 28, 18, 14, 22, 9, 46, 20, 145, 6, 10, 10, 6, 22, 6, 7, 7, 5, 38, 6, 11, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [8, 3, 149, 4, 5, 13, 8, 5, 8, 18, 48, 8, 17, 20, 13, 9, 22, 10, 25, 28, 19, 10, 19, 3, 6, 16, 4, 13, 23, 7, 20, 20, 9, 11, 5, 13, 7, 17, 56, 16, 5, 7, 8, 6, 12, 11, 9, 9, 12, 12, 7, 39, 12, 15, 7, 10, 13, 14, 6, 10, 7, 4, 42, 5, 10, 6, 42, 43, 43, 12, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [10, 10, 4, 20, 10, 9, 10, 9, 34, 10, 9, 32, 11, 34, 3, 34, 24, 14, 5, 24, 34, 4, 5, 34, 35, 12, 9, 21, 4, 29, 5, 7, 34, 20, 37, 7, 21, 24, 10, 11, 10, 6, 10, 4, 26, 31, 30, 8, 10, 9, 8, 12, 20, 37, 13, 15, 18, 14, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 26, 8, 31, 25, 24, 34, 43, 23, 26, 26, 8, 28, 30, 33, 22, 26, 25, 9, 30, 33, 33, 26, 31, 23, 39, 33, 33, 24, 8, 25, 25, 24, 22, 10, 35, 35, 34, 25, 28, 24, 9, 34, 36, 24, 35, 46, 38, 35, 32, 19, 35, 25, 25, 26, 38, 10, 32, 37, 38, 39, 15, 20, 33, 32, 25, 24, 22, 37, 9, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 9, 19, 6, 9, 12, 47, 15, 10, 8, 6, 5, 12, 10, 7, 9, 9, 6, 12, 15, 9, 5, 11, 6, 8, 13, 5, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 6, 6, 7, 7, 8, 11, 7, 7, 5, 21, 4, 68, 19, 3, 7, 7, 16, 11, 107, 11, 7, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [5, 4, 10, 4, 8, 19, 8, 8, 5, 6, 8, 7, 10, 5, 12, 55, 8, 29, 6, 6, 6, 5, 5, 8, 5, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 19, 19, 8, 22, 10, 10, 9, 14, 8, 11, 10, 9, 10, 10, 11, 12, 4, 10, 7, 11, 11, 9, 9, 3, 9, 10, 5, 11, 8, 10, 9, 9, 4, 5, 106, 11, 16, 32, 13, 20, 12, 8, 10, 13, 8, 51, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [13, 13, 19, 15, 13, 13, 18, 20, 10, 12, 13, 13, 14, 16, 10, 19, 17, 18, 18, 18, 13, 20, 10, 12, 12, 13, 10, 10, 14, 20, 12, 26, 15, 31, 16, 15, 17, 15, 16, 17, 18, 19, 19, 14, 13, 18, 19, 16, 22, 15, 15, 19, 12, 15, 19, 19, 85, 15, 17, 20, 15, 19, 23, 14, 15, 21, 15, 15, 21, 15, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [27, 27, 25, 18, 18, 18, 18, 17, 12, 8, 14, 19, 12, 11, 16, 23, 23, 12, 16, 12, 24, 20, 12, 19, 11, 12, 20, 26, 16, 53, 23, 22, 17, 20, 24, 24, 19, 24, 25, 15, 23, 16, 15, 19, 21, 30, 24, 19, 24, 26, 18, 19, 6, 18, 29, 19, 40, 15, 24, 16, 19, 19, 24, 16, 15, 17, 16, 31, 20, 22, 19, 20, 19, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 6, 7, 3, 92, 8, 6, 8, 9, 7, 11, 11, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 4, 36, 6, 5, 4, 5, 12, 83, 4, 44, 5, 5, 5, 9, 9, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [36, 22, 31, 28, 28, 29, 28, 29, 13, 41, 29, 30, 29, 32, 13, 23, 14, 41, 32, 6, 13, 13, 43, 39, 36, 13, 23, 49, 41, 41, 23, 26, 32, 24, 26, 31, 19, 33, 7, 57, 34, 13, 7, 32, 31, 28, 33, 11, 34, 31, 35, 31, 27, 281, 29, 17, 33, 29, 88, 30, 8, 36, 10, 27, 27, 29, 29, 20, 28, 30, 36, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [5, 11, 4, 6, 4, 6, 7, 6, 5, 12, 10, 8, 77, 11, 9, 59, 117, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [6, 5, 12, 10, 12, 7, 13, 19, 35, 10, 9, 87, 9, 8, 4, 5, 6, 13, 11, 14, 6, 8, 19, 17, 7, 11, 7, 9, 15, 5, 11, 8, 6, 11, 13, 6, 14, 5, 11, 13, 22, 31, 8, 7, 7, 8, 12, 9, 13, 12, 13, 10, 10, 16, 7, 14, 10, 12, 9, 8, 11, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [6, 17, 19, 22, 9, 16, 18, 18, 120, 19, 24, 98, 8, 103, 18, 144, 24, 25, 11, 21, 17, 4, 52, 20, 79, 20, 23, 22, 24, 38, 20, 62, 70, 21, 36, 176, 17, 8, 21, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 5, 7, 6, 5, 6, 7, 8, 6, 4, 4, 4, 5, 8, 5, 4, 5, 7, 5, 5, 5, 7, 40, 9, 4, 4, 7, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [16, 22, 21, 31, 21, 24, 27, 30, 31, 19, 35, 40, 24, 30, 31, 31, 31, 19, 37, 35, 32, 55, 31, 27, 18, 31, 31, 31, 20, 14, 18, 28, 44, 30, 33, 44, 13, 20, 52, 101, 40, 17, 35, 35, 20, 7, 50, 17, 18, 25, 39, 38, 39, 18, 28, 42, 25, 6, 20, 35, 31, 26, 42, 20, 21, 39, 40, 6, 29]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [19, 14, 6, 17, 25, 16, 18, 18, 19, 20, 17, 17, 11, 6, 4, 34, 21, 18, 20, 7, 7, 19, 20, 18, 20, 19, 15, 22, 19, 19, 19, 6, 16, 22, 7, 16, 20, 16, 6, 23, 7, 7, 7, 6, 19, 7, 66, 12, 16, 16, 26, 6, 7, 7, 3, 9, 8, 8, 4, 8, 23, 20, 18, 9, 7, 28, 8, 6, 8, 7, 18, 8, 4, 41, 8, 13, 8, 13, 6, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 18, 26, 26, 74, 26, 5, 28, 25, 29, 3, 6, 32, 11, 6, 3, 5, 18, 27, 29, 27, 28, 6, 27, 8, 27, 27, 3, 5, 4, 34, 4, 8, 21, 104, 4, 18, 6, 3, 17, 141, 5, 6, 7, 4, 6, 70, 4, 15, 5, 18, 5, 100, 5, 5, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [16, 17, 16, 52, 13, 13, 14, 24, 23, 19, 21, 17, 26, 18, 21, 13, 23, 20, 17, 16, 66, 24, 23, 23, 20, 22, 18, 21, 26, 23, 23, 15, 26, 16, 20, 21, 21, 22, 21, 20, 15, 116, 16, 31, 22, 21, 24, 18, 22, 23, 17, 16, 20, 18, 22, 14, 18, 28, 15, 21, 14, 19, 17, 23, 16, 18, 15, 19, 76, 16, 17, 18, 21, 18, 17, 14, 20, 15, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [45, 4, 27, 22, 22, 22, 22, 22, 25, 37, 22, 22, 15, 46, 25, 25, 25, 5, 20, 9, 22, 25, 25, 26, 17, 22, 28, 25, 23, 34, 4, 30, 16, 37, 15, 29, 4, 5, 20, 27, 5, 5, 21, 21, 7, 37, 18, 19, 26, 20, 5, 11, 24, 5, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [43, 24, 22, 19, 25, 16, 16, 16, 23, 26, 22, 16, 24, 18, 20, 18, 17, 22, 24, 19, 3, 21, 16, 54, 16, 21, 18, 17, 22, 16, 18, 20, 21, 21, 5, 16, 17, 18, 20, 20, 20, 22, 17, 19, 22, 17, 18, 25, 20, 18, 17, 19, 16, 18, 22, 22, 4, 22, 21, 45, 14, 19, 21, 27, 16, 19, 23, 23, 10, 85, 16, 18, 20, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 4, 9, 8, 8, 5, 11, 9, 7, 5, 11, 3, 11, 5, 288, 4, 6, 6, 4, 11, 12, 4, 14, 19, 5, 12, 9, 5, 5, 8, 4, 9, 10, 12, 9, 10, 22, 19, 10, 6, 10, 6, 19, 16, 13, 4, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 15, 12, 66, 75, 25, 19, 71, 65, 4, 16, 12, 19, 65, 17, 27, 215, 19, 25, 54, 28, 26, 71, 20, 18, 13, 26, 62, 11, 22, 26, 20, 68, 25, 66, 12, 15, 19, 27, 23, 15, 24, 32, 20, 30, 47, 159, 25, 13, 26, 27, 33, 11, 132, 25, 12, 28, 22, 25, 65, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [13, 5, 7, 4, 16, 6, 22, 3, 13, 18, 19, 12, 18, 105, 13, 13, 17, 13, 5, 14, 13, 11, 17, 11, 11, 13, 27, 13, 13, 5, 5, 162, 19, 16, 6, 4, 19, 4, 6, 4, 21, 7, 10, 35, 27, 5, 7, 7, 10, 7, 21, 5, 5, 5, 7, 4, 22, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [8, 13, 4, 13, 15, 11, 6, 11, 15, 10, 10, 10, 4, 14, 128, 4, 9, 12, 9, 13, 70, 166, 16, 30, 10, 13, 17, 15, 13, 9, 14, 40, 5, 5, 14, 13, 8, 9, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 8, 8, 8, 8, 11, 9, 10, 9, 11, 10, 9, 10, 18, 11, 12, 9, 12, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [9, 9, 6, 9, 7, 3, 8, 13, 13, 5, 7, 9, 5, 10, 10, 10, 8, 4, 9, 5, 9, 11, 10, 7, 13, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 9, 8, 7, 9, 11, 9, 9, 8, 9, 11, 7, 7, 7, 17, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [43, 12, 25, 18, 16, 19, 25, 16, 20, 24, 16, 13, 32, 19, 21, 40, 22, 36, 24, 40, 27, 29, 22, 21, 11, 32, 22, 21, 18, 18, 20, 11, 16, 21, 23, 19, 24, 15, 21, 19, 16, 24, 4, 4, 37, 16, 21, 27, 36, 21, 28, 32, 39, 19, 20, 37, 39, 21, 32, 26, 27, 12, 21, 25, 33, 20, 23, 17, 27, 115, 156, 21, 30, 19, 21, 26, 19, 22, 33, 30, 166]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 4, 4, 29, 7, 7, 7, 8, 6, 8, 7, 3, 8, 5, 5, 62, 8, 9, 7, 8, 7, 9, 7, 107, 13, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 7, 6, 9, 5, 8, 23, 8, 6, 8, 6, 7, 6, 7, 8, 7, 8, 7, 7, 25, 15, 9, 13, 8, 7, 10, 6, 165, 75, 22, 25, 55, 48, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [13, 13, 12, 12, 4, 13, 9, 15, 17, 14, 20, 10, 13, 13, 16, 16, 12, 15, 13, 13, 10, 10, 12, 12, 13, 13, 16, 12, 13, 40, 12, 17, 12, 24, 12, 13, 13, 14, 19, 14, 10, 13, 13, 13, 13, 11, 11, 15, 22, 12, 32, 26, 16, 16, 65, 13, 21, 12, 13, 14, 10, 12, 12, 14, 13, 13, 13, 13, 12, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [33, 6, 7, 15, 13, 13, 13, 16, 10, 12, 13, 13, 9, 4, 12, 10, 10, 6, 11, 10, 10, 12, 4, 26, 73, 12, 15, 3, 27, 4, 24, 20, 4, 12, 27, 19, 8, 28, 5, 38, 9, 19, 17, 8, 7, 6, 24, 5, 4, 13, 17, 5, 19, 21, 9, 9, 4, 16, 18, 15, 5, 5, 13, 4, 5, 23, 7, 15, 14, 4, 6, 4, 12, 6, 24, 10, 167]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [10, 14, 10, 8, 10, 9, 12, 11, 14, 12, 14, 4, 144, 4, 12, 14, 14, 10, 12, 14, 14, 14, 12, 10, 25, 172, 15, 93, 15, 15, 18, 24, 12, 14, 26, 20, 19, 12, 35, 45, 27, 19, 92, 10, 23, 8, 14, 9, 12, 9, 30, 10, 15, 32, 31, 12, 8, 23, 36, 19, 288, 8, 14, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [16, 4, 3, 13, 13, 13, 13, 13, 16, 16, 13, 13, 8, 12, 16, 10, 4, 12, 17, 22, 9, 5, 16, 16, 11, 16, 11, 4, 19, 4, 16, 13, 10, 14, 16, 15, 8, 6, 8, 11, 5, 18, 13, 17, 9, 6, 10, 16, 11, 15, 8, 247, 6, 18, 10, 8, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 126
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660068
thermo_feasible = true
