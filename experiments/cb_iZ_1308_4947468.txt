┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iZ_1308
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iZ_1308
----------------------------------
number of metabolites : 1923
number of reactions : 2721
number of genes : 1308

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5051 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 3, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 2, 13, 14, 13, 14, 13, 13, 14, 2, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 13, 14, 15, 14, 13, 11, 11, 13, 11, 19, 11, 11, 13, 13, 11, 13, 13, 14, 13, 14, 13, 13, 2, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 6, 13, 18, 13, 14, 13, 19, 11, 13, 11, 11, 11, 11, 13, 14, 64, 11, 13, 13, 14, 13, 14, 13, 20, 48, 13, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 7, 13, 14, 13, 22, 13, 11, 13, 13, 11, 11, 11, 11, 13, 25, 80, 14, 11, 13, 3, 13, 14, 13, 14, 13, 13, 2, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 17, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 13, 23, 13, 2, 13, 14, 13, 14, 13, 13, 16, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 13, 127, 13, 14, 13, 37, 11, 13, 11, 12, 11, 11, 14, 14, 11, 13, 13, 14, 13, 16, 13, 13, 17, 15, 4, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 274, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 14, 11, 14, 13, 14, 13, 14, 13, 13, 13, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 28, 13, 14, 13, 14, 13, 11, 15, 185, 11, 11, 11, 11, 13, 11, 57, 13, 13, 2, 13, 14, 13, 14, 13, 13, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 8, 13, 14, 13, 14, 13, 11, 11, 13, 11, 12, 11, 11, 13, 50, 11, 13, 13, 14, 13, 14, 13, 13, 80, 14, 7, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 6, 14, 15, 14, 15, 16, 11, 11, 14, 11, 11, 11, 11, 56, 15, 39, 11, 14, 15, 14, 14, 15, 14, 15, 14, 14, 74, 16, 15, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 6, 14, 15, 14, 15, 152, 11, 11, 14, 11, 11, 12, 11, 14, 15, 15, 300, 14, 14, 3, 14, 24, 14, 99, 15, 14, 15, 15, 16, 5, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 6, 13, 15, 13, 14, 13, 13, 11, 13, 11, 11, 11, 11, 13, 14, 20, 11, 13, 7, 19, 14, 22, 15, 13, 13, 13, 16, 16, 21, 3, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 13, 14, 13, 14, 13, 11, 11, 13, 21, 11, 11, 11, 13, 25, 11, 14, 13, 14, 13, 14, 14, 13, 13, 69, 13, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 13, 15, 13, 23, 13, 11, 11, 13, 11, 11, 12, 11, 13, 14, 14, 11, 13, 7, 13, 14, 14, 14, 13, 13, 13, 14, 2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 14, 14, 13, 14, 16, 192, 11, 13, 11, 11, 14, 12, 13, 13, 17, 11, 13, 14, 50, 8, 13, 14, 13, 18, 13, 13, 15, 14, 14, 4, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 6, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 19, 15, 90, 13, 5, 13, 14, 13, 14, 13, 13, 14, 17, 15, 3, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 12, 13, 13, 14, 13, 14, 76, 13, 13, 3, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 13, 14, 13, 15, 13, 13, 11, 15, 11, 11, 11, 11, 17, 22, 22, 11, 17, 24, 6, 114, 14, 13, 14, 13, 13, 13, 13, 14, 113, 6, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 16, 14, 13, 14, 13, 11, 11, 13, 11, 13, 12, 11, 13, 24, 11, 13, 13, 14, 13, 15, 13, 13, 14, 11, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 71, 14, 13, 15, 14, 11, 11, 13, 12, 11, 11, 11, 14, 13, 14, 11, 13, 14, 13, 14, 14, 13, 14, 13, 13, 13, 15, 14, 2, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [8, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 95, 11, 20, 11, 13, 6, 13, 14, 13, 30, 13, 13, 83, 15, 14, 18, 6, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 6, 13, 14, 13, 14, 13, 12, 11, 13, 11, 11, 11, 11, 13, 24, 11, 13, 6, 13, 14, 13, 19, 16, 13, 14, 13, 3, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [7, 6, 13, 15, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 14, 11, 13, 6, 18, 14, 13, 14, 13, 13, 13, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 4, 14, 2, 11, 19, 2, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 26
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784896876921
thermo_feasible = true
