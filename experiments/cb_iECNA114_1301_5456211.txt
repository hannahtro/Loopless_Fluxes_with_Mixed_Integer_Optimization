┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECNA114_1301
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECNA114_1301
----------------------------------
number of metabolites : 1927
number of reactions : 2718
number of genes : 1301

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2718 flux variables and 5045 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 9, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 4, 2, 4, 3, 3, 3, 3, 3, 5, 2, 4, 3, 4, 12, 3, 4, 5, 3, 3, 3]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 3, 3, 5, 5, 3, 3, 3, 4, 4, 5, 4, 5, 4, 3, 7, 3, 15, 2, 4, 3, 5, 3, 5, 2, 3, 3, 4, 145, 6, 9, 3, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 5, 4, 3, 8, 5, 2, 6, 6, 4, 3, 5, 3, 6, 4, 4, 7, 4, 3, 36, 6, 7, 4, 5, 11, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 23, 2, 5, 3, 10, 3, 3, 3, 3, 4, 4, 120, 16, 5, 4, 6, 4, 48, 27, 6, 12, 5, 4, 9, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 2, 2, 8, 2, 8, 10, 9, 40, 4, 6, 6, 2, 11, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 3, 6, 3, 4, 6, 4, 5, 25, 4, 5, 7, 3, 3, 10, 5, 16, 11, 6, 5, 3, 110, 10, 34, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 8, 3, 22, 4, 3, 4, 45, 23, 138, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 10, 11, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 5, 16, 18, 17, 63, 11, 11, 7, 16, 11, 11, 11, 17, 16, 20, 13, 16, 14, 13, 15, 13, 13, 13, 17, 6, 13, 16, 39, 10, 12, 9, 14, 9, 10, 7, 10, 14, 6, 6, 6, 13, 6, 8, 6, 10, 174, 6, 5, 11, 14, 6, 9, 13, 5, 12, 11, 6, 12, 6, 15, 14, 12, 10, 6, 14, 9, 10, 14, 6, 7, 6, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 4, 6, 4, 6, 4, 4, 151, 5, 4, 11, 4, 9, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 5, 4, 3, 4, 4, 6, 4, 4, 4, 6, 4, 6, 6, 4, 4, 4, 4, 7, 4, 4, 8, 5, 5, 7, 4, 10, 10, 9, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660033
thermo_feasible = true
