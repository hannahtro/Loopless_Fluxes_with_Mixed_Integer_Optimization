┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJO1366
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJO1366
----------------------------------
number of metabolites : 1805
number of reactions : 2583
number of genes : 1367

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2583 flux variables and 4836 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 11, 11, 11, 11, 11, 11, 11, 2, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 11, 11, 11, 11, 11, 11, 11, 7, 4, 17, 17, 18, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 16, 15, 15, 14, 23, 20, 14, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 2, 11, 12, 11, 11, 12, 11, 11, 17, 17, 19, 18, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 96, 18, 263, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 11, 11, 11, 11, 11, 11, 11, 7, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 11, 12, 11, 11, 11, 11, 11, 2, 6, 3, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 29, 101, 14, 14, 197, 14, 20, 14, 14, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 11, 11, 11, 11, 11, 11, 11, 4, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 186, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [7, 6, 2, 23, 11, 11, 11, 11, 11, 11, 7, 17, 17, 17, 18, 17, 18, 17, 14, 14, 14, 16, 16, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 11, 11, 11, 12, 11, 11, 11, 19, 19, 17, 19, 25, 17, 17, 14, 14, 14, 14, 14, 14, 14, 113, 15, 177, 16, 14, 14, 14, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 11, 11, 11, 11, 11, 11, 11, 7, 8, 7, 11, 17, 18, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 9, 30, 27, 11, 154, 11, 12, 43, 19, 226, 19, 17, 19, 18, 17, 14, 14, 14, 18, 16, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 11, 11, 11, 11, 11, 11, 11, 40, 6, 3, 6, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 16, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 12, 11, 11, 11, 11, 11, 11, 3, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 11, 13, 11, 11, 12, 11, 11, 17, 17, 17, 17, 17, 17, 17, 42, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
AssertionError("!(isempty(C_list_filtered))")
