┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 11
max_cuts = 9
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 5, 4, 2, 4, 9, 3, 3, 3]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 4, 4, 5, 5, 4, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 9, 50, 5, 4, 6, 4, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 3, 10, 7, 4, 5, 6, 4, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 7, 3, 4, 5, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 6, 6, 4, 4, 7, 3, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 65, 3, 5, 5, 5, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 4, 8, 5, 10, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 38, 5, 4, 4, 3, 4, 3, 3, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 4, 3, 5, 4, 6, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 6, 3, 4, 4, 4, 2, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 4, 3, 4, 6, 4, 4, 3, 3, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 3, 4, 6, 3, 3, 5, 31]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 6, 166, 4, 4, 8, 4, 3, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 120, 6, 7, 7, 8, 5, 4, 5, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 3, 4, 4, 3, 3, 7, 6, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 4, 5, 4, 4, 4, 5, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 3, 3, 8, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 4, 4, 3, 5, 3, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 7, 4, 5, 4, 3, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 4, 3, 4, 3, 4, 8, 3, 7, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 4, 3, 4, 4, 5, 4, 4, 12, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [10, 7, 4, 4, 6, 5, 5, 4, 6, 5, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 4, 4, 4, 4, 4, 4, 4, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 7, 6, 8, 4, 6, 5, 4, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 6, 3, 6, 4, 5, 3, 4, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 5, 3, 7, 4, 3, 7, 6, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 8, 5, 3, 5, 17, 3, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [7, 9, 8, 9, 4, 3, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [12, 6, 9, 4, 5, 5, 3, 9, 4, 5, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 10, 13, 6, 4, 18, 14, 3, 5, 4, 16, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [7, 9, 3, 4, 9, 4, 4, 7, 11, 4, 8, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [14, 6, 17, 4, 4, 13, 4, 4, 4, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 4, 3, 12, 4, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 18, 8, 6, 7, 16, 50, 17, 5, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [11, 10, 4, 6, 3, 12, 7, 6, 4, 4, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 7, 4, 4, 4, 3, 4, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 3, 3, 4, 4, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [27, 4, 4, 7, 4, 4, 5, 4, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 9, 4, 5, 4, 3, 4, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [5, 13, 4, 5, 5, 4, 4, 4, 3, 5, 2, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [7, 13, 5, 3, 4, 7, 4, 3, 4, 4, 6, 13]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 13, 4, 3, 9, 3, 3, 5, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [13, 9, 93, 3, 7, 3, 3, 4, 3, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 3, 4, 3, 5, 12, 4, 5, 3, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [36, 3, 3, 8, 3, 3, 4, 5, 3, 13]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [18, 4, 3, 4, 10, 3, 3, 3, 264, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 3, 3, 3, 3, 4, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [16, 4, 3, 3, 6, 4, 3, 3, 3, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [12, 10, 3, 3, 4, 5, 3, 3, 7, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 3, 4, 4, 3, 5, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [6, 9, 3, 11, 10, 3, 11, 11, 12, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [11, 11, 4, 5, 292, 34, 14, 8, 4, 4, 10, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [15, 6, 4, 5, 8, 5, 6, 6, 10, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [10, 9, 8, 7, 3, 5, 4, 7, 8, 6, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [19, 9, 3, 23, 6, 276, 4, 4, 4, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [22, 8, 3, 3, 3, 4, 6, 17, 3, 4, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 10, 5, 3, 5, 6, 3, 7, 4, 153]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [6, 11, 8, 4, 12, 9, 10, 11, 12, 8, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 3, 4, 10, 6, 7, 5, 9, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [3, 11, 21, 6, 20, 20, 20, 17, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [24, 20, 3, 3, 6, 8, 204, 4, 7, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 10, 3, 9, 4, 4, 10, 6, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 17, 12, 8, 15, 8, 14, 6, 5, 4, 7, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 4, 4, 8, 4, 4, 12, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [36, 4, 4, 3, 323, 11, 3, 6, 11, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [8, 5, 10, 4, 9, 11, 10, 4, 5, 10, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [17, 6, 9, 5, 5, 16, 14, 4, 3, 7, 11, 111]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [19, 23, 10, 16, 19, 12, 3, 12, 13, 13, 10, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [9, 7, 19, 3, 7, 8, 7, 14, 9, 8, 17, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [11, 13, 11, 34, 9, 10, 8, 388, 3, 12, 9, 40]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 4, 4, 7, 7, 4, 17, 16, 12, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 8, 4, 7, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [31, 8, 4, 3, 5, 4, 4, 3, 5, 4, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [16, 10, 17, 7, 10, 21, 18, 13, 23, 16, 12, 15]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 13, 12, 4, 11, 14, 4, 17, 14, 14, 14]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [26, 4, 4, 5, 4, 3, 4, 3, 5, 7, 3, 115]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 12, 23, 26, 26, 4, 35, 10, 17, 10, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [17, 9, 3, 10, 8, 8, 10, 9, 4, 25, 5, 20]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [26, 16, 15, 13, 14, 15, 14, 16, 15, 14, 13, 13]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [17, 21, 19, 4, 4, 12, 12, 13, 25, 18, 12, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [25, 9, 5, 8, 12, 10, 22, 17, 5, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [12, 8, 18, 19, 7, 7, 8, 10, 7, 8, 7, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [26, 24, 27, 21, 20, 26, 14, 22, 14, 15, 17, 23]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [24, 10, 37, 10, 23, 10, 15, 265, 8, 11, 16, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 34, 6, 39, 5, 13, 7, 5, 4, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 6, 5, 6, 5, 5, 6, 5, 6, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [8, 3, 6, 5, 7, 5, 4, 12, 5, 11, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [8, 3, 6, 7, 4, 5, 6, 6, 8, 5, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [15, 4, 3, 4, 4, 3, 9, 4, 5, 5, 4, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [7, 20, 15, 10, 9, 9, 10, 9, 11, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 5, 11, 12, 10, 4, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [13, 5, 3, 3, 6, 6, 8, 5, 5, 9, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [5, 11, 3, 4, 9, 4, 5, 8, 3, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [23, 4, 9, 3, 7, 10, 9, 12, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [8, 8, 18, 3, 19, 6, 18, 8, 20]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 6, 4, 14, 5, 15, 4, 18, 3, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [10, 8, 3, 11, 12, 9, 10, 12, 5, 14, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [18, 9, 20, 20, 18, 20, 18, 18, 17, 18, 17, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 4, 29, 18, 3, 15, 18, 31, 5, 21, 23]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [39, 3, 33, 31, 30, 13, 15, 3, 14, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [27, 3, 5, 20, 19, 4, 7, 46, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [14, 12, 9, 12, 10, 10, 8, 8, 10, 10, 7, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [18, 17, 17, 19, 16, 17, 6, 6, 17, 19, 20, 18]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [44, 13, 29, 11, 12, 4, 10, 4, 12, 14, 39, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [5, 39, 22, 5, 36, 10, 7, 22, 21, 37, 37, 35]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [13, 3, 5, 13, 18, 17, 217, 18, 12, 17]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [19, 15, 124, 15, 15, 19, 18, 22, 16, 18, 20, 20]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [8, 15, 15, 12, 6, 16, 219, 23, 11, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [21, 37, 19, 14, 18, 19, 15, 23, 20, 23, 32, 17]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [41, 8, 8, 5, 18, 10, 4, 18, 4, 8, 138, 27]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [14, 13, 12, 13, 13, 12, 12, 12, 17, 17, 13, 17]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [12, 26, 14, 16, 14, 14, 19, 12, 12, 15, 14]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [25, 8, 19, 29, 19, 31, 18, 9, 20, 21, 19, 42]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [16, 21, 20, 17, 19, 18, 17, 15, 16, 17, 19, 18]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [21, 42, 5, 4, 26, 15, 33, 28, 13, 19, 21]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [11, 11, 11, 9, 12, 10, 11, 11, 11, 10, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [12, 19, 31, 11, 10, 10, 10, 10, 14, 12, 14, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [30, 23, 26, 43, 26, 24, 27, 27, 38, 47, 34, 31]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [9, 8, 11, 17, 10, 6, 12, 8, 8, 9, 15, 9]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [11, 11, 10, 8, 9, 9, 9, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 126
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
