┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECP_1309
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECP_1309
----------------------------------
number of metabolites : 1941
number of reactions : 2739
number of genes : 1309

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2739 flux variables and 5087 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 12, 11, 12, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 2, 16, 13, 13, 14, 14, 14, 13, 13, 13, 16, 16, 95, 17, 16, 18, 17, 16, 43, 2, 2, 11, 5, 7, 2, 4, 2, 2, 2, 2, 3]
length(C_list) = 47
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 4, 9, 4, 4, 3, 3, 3, 2, 4, 2, 5, 4, 4, 18, 2, 2, 5, 4, 5, 3, 3, 3, 3, 3, 3, 4, 6, 4, 2]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 5, 4, 4, 3, 3, 7, 5, 4, 2, 2, 4, 3, 91, 4, 3, 4, 18, 3, 29, 7, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 2, 12, 3, 2, 11, 7, 2, 5, 4, 24, 6, 2]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 5, 5, 4, 6, 7, 14, 5, 6, 71, 6, 14, 6, 4, 9, 210, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 2, 4, 7, 2, 2, 2, 4, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 5, 3, 4, 5, 7, 4, 2, 5, 19, 5, 4, 4, 68]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 4, 6, 3, 6, 14, 4, 9, 7, 8, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 3, 3, 4, 3, 3, 7, 11, 13, 4, 5, 3, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 3, 11, 3, 7, 13, 20]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 5, 98, 7, 3, 4, 6, 16, 9, 5, 6, 4, 5, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 87, 3, 4, 4, 4, 4, 9, 271, 251]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 18, 4, 4, 118, 6, 5, 8, 4, 5, 4, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 2, 4, 5, 3, 42, 3, 95, 10, 10, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785423167539
thermo_feasible = true
