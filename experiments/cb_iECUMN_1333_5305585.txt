┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECUMN_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECUMN_1333
----------------------------------
number of metabolites : 1935
number of reactions : 2740
number of genes : 1332

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2740 flux variables and 5089 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 11, 2, 7, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 15, 14, 119, 13, 14, 13, 14, 13, 14, 13, 2, 15, 4, 3, 9, 2, 39, 15, 3, 49, 2, 20, 7, 39, 40, 40]
length(C_list) = 51
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 2, 2, 2, 8, 3, 2, 2, 3, 4, 2, 2, 4, 28, 4, 4, 2, 4, 4, 4, 9, 2, 64, 3, 16, 37]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 14, 2, 7, 5, 15, 2, 4, 4, 9, 2, 3, 3, 3, 4, 4, 8, 3, 4, 3, 3, 3, 4, 5, 4, 4, 3, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 2, 5, 92, 6, 2, 5, 2, 3, 7, 2, 5, 3, 11, 3, 4, 2, 2, 7, 9, 4, 9, 4, 7]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 6, 4, 6, 8, 49, 7, 3, 2, 4, 4, 30, 4, 4, 21, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 4, 3, 6, 6, 4, 5, 4, 165, 2, 6, 28, 4, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 4, 9, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 11, 5, 3, 3, 3, 3, 3, 142, 9, 40, 5, 3, 4, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [9, 10, 9, 2, 10, 9, 10, 9, 6, 9, 52, 7, 11, 21, 38, 7, 9, 10, 9, 9, 10, 9, 20, 11, 53, 11, 24, 9]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 5, 7, 31, 4, 7, 7, 15]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 4, 5, 4, 8, 4, 25, 28]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826921057214866
thermo_feasible = true
