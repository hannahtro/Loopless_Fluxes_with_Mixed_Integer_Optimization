┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 21
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 6, 230, 4, 4, 34, 2, 2, 3, 4, 7, 6, 4, 2, 6, 4, 5, 2, 3, 3, 14, 4, 5, 3, 5, 4, 2, 7, 3, 2, 4, 331, 2, 42, 6]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 2, 3, 7, 3, 4, 2, 5, 7, 3, 4, 9, 2, 4, 4, 4, 4, 4, 3, 2, 6, 4, 3, 7, 163, 4, 8, 8, 5, 4, 5, 2, 2, 4]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 6, 6, 3, 7, 4, 7, 5, 3, 3, 6, 4, 4, 6, 6, 2, 3, 10, 4, 5, 4, 4, 5, 4, 7, 4, 7, 7, 2, 7, 4, 5, 8, 4, 4, 14]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 3, 16, 6, 5, 2, 3, 6, 7, 7, 9, 3, 6, 7, 4, 8, 4, 7, 9, 2, 7, 5, 209, 9, 2, 5, 3, 5, 10, 125, 5, 2, 3, 8, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 3, 9, 2, 10, 3, 9, 3, 5, 7, 4, 5, 4, 2, 4, 3, 6, 14, 3, 8, 6, 2, 8, 6, 4, 5, 4, 8, 4, 5, 4, 174]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 5, 341, 7, 3, 4, 8, 49, 5, 5, 4, 443, 6, 4, 3, 4, 8, 6, 8, 4, 8, 3, 3, 4, 6, 5, 3, 4, 11, 7, 6, 3, 4, 7, 4, 4, 8, 6, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 4, 4, 7, 3, 5, 4, 8, 4, 5, 2, 8, 8, 3, 4, 5, 3, 9, 7, 6, 3, 8, 5, 7, 7, 4, 278, 4, 3, 4, 9, 7, 4, 9, 5, 4, 10, 5, 6, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 4, 14, 7, 7, 3, 7, 7, 4, 6, 2, 4, 3, 7, 3, 4, 5, 181, 10, 5, 4, 6, 5, 79, 3, 10, 4, 3, 5, 6, 6, 6, 5, 6, 4, 9, 5, 12]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 5, 110, 4, 214, 4, 6, 5, 9, 5, 3, 4, 6, 3, 7, 4, 4, 2, 6, 6, 7, 4, 10, 103, 23, 11, 8, 7, 5, 2, 6, 2, 14, 4, 18, 6, 4, 6, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 5, 3, 7, 3, 3, 3, 7, 5, 2, 5, 9, 45, 5, 9, 6, 9, 4, 8, 3, 7, 5, 4, 13, 4, 5, 4, 10, 4, 6, 3, 4, 4, 4, 8, 6, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [10, 5, 7, 10, 10, 9, 4, 4, 5, 7, 6, 6, 5, 3, 4, 7, 2, 4, 3, 7, 4, 14, 7, 4, 5, 8, 6, 4, 326, 4, 6, 4, 4, 5, 4, 4, 6, 5, 4, 4, 4, 6, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 6, 5, 2, 3, 4, 6, 6, 11, 5, 8, 7, 4, 4, 6, 4, 3, 5, 3, 6, 8, 7, 6, 4, 4, 5, 8, 4, 8, 4, 6, 5, 7, 10, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 5, 298, 7, 6, 9, 3, 4, 6, 7, 7, 3, 11, 4, 7, 5, 5, 7, 3, 9, 4, 5, 3, 6, 6, 69, 7, 5, 4, 3, 48, 6, 119, 2, 8, 5, 8, 5, 5, 7, 8, 11, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [9, 4, 33, 5, 8, 6, 4, 11, 4, 3, 3, 7, 3, 11, 5, 7, 16, 6, 3, 6, 3, 9, 7, 8, 3, 6, 4, 10, 7, 4, 6, 6, 5, 4, 4, 4, 6, 5, 7, 8, 5, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 9, 5, 2, 4, 4, 3, 4, 6, 135, 9, 3, 5, 5, 4, 9, 7, 4, 10, 9, 7, 11, 6, 3, 4, 2, 6, 6, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 3, 8, 4, 8, 12, 6, 8, 9, 9, 11, 7, 5, 9, 5, 11, 50, 5, 3, 6, 256, 6, 7, 6, 7, 5, 7, 10, 4, 9, 8, 6, 9, 5, 5, 5, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 5, 219, 4, 6, 30, 5, 5, 32, 7, 5, 12, 2, 10, 4, 4, 5, 6, 37, 4, 7, 8, 7, 3, 6, 11, 3, 6, 5, 81, 4, 10, 5, 5, 8, 5, 7, 7, 75, 2]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 8, 5, 5, 6, 3, 4, 4, 5, 20, 4, 8, 4, 8, 6, 8, 8, 4, 8, 5, 7, 11, 6, 5, 4, 8, 4, 4, 8, 6, 6, 8, 14, 5, 7, 4, 2]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 11, 5, 8, 3, 8, 5, 9, 9, 5, 6, 4, 6, 6, 6, 8, 6, 6, 5, 4, 6, 8, 9, 3, 5, 6, 7, 4, 53, 4, 4, 10, 5, 8, 4, 10, 4, 8, 6, 122, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 8, 7, 2, 7, 3, 4, 7, 7, 353, 4, 11, 6, 7, 7, 3, 11, 5, 4, 4, 5, 5, 9, 4, 9, 6, 6, 4, 6, 9, 7, 4, 6, 4, 5, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 7, 7, 4, 7, 5, 7, 6, 6, 10, 6, 6, 6, 5, 7, 10, 3, 8, 4, 5, 3, 6, 6, 7, 5, 6, 5, 4, 4, 5, 5, 4, 5, 41, 4, 5, 396, 2, 7, 4, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 7, 5, 5, 7, 7, 5, 5, 7, 6, 5, 10, 4, 8, 7, 8, 4, 9, 9, 8, 7, 9, 4, 10, 4, 6, 5, 6, 8, 5, 6, 2, 12, 8, 6, 4, 4, 7, 7, 7, 8, 6, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 6, 9, 5, 10, 4, 5, 4, 4, 5, 8, 10, 6, 5, 3, 9, 4, 9, 3, 11, 5, 7, 6, 5, 11, 6, 5, 6, 8, 11, 7, 4, 4, 6, 5, 4, 4, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 7, 6, 7, 7, 7, 7, 6, 4, 8, 10, 4, 4, 3, 4, 4, 5, 8, 11, 7, 6, 5, 6, 7, 329, 8, 156, 7, 8, 5, 311, 8, 7, 5, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 4, 225, 6, 6, 4, 4, 6, 5, 2, 12, 4, 4, 7, 6, 7, 7, 5, 6, 6, 5, 6, 6, 4, 375, 272, 9, 7, 9, 26, 7, 6, 7, 4, 4, 4, 9, 4, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 4, 9, 7, 7, 4, 5, 5, 4, 5, 6, 6, 9, 4, 5, 6, 6, 6, 7, 7, 6, 5, 9, 4, 7, 6, 6, 6, 9, 4, 6, 8, 4, 61, 6, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 13, 7, 8, 5, 7, 7, 5, 8, 7, 9, 4, 6, 7, 9, 3, 4, 7, 5, 4, 5, 6, 3, 7, 5, 18, 7, 6, 6, 5, 5, 4, 12, 3, 9]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 9, 20, 5, 4, 5, 9, 7, 8, 8, 4, 10, 11, 10, 5, 9, 7, 5, 5, 6, 7, 6, 5, 6, 7, 15, 5, 4, 6, 4, 8, 262, 5, 5, 5, 6, 8, 5, 8, 8, 6, 5, 4, 15]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 8, 5, 6, 11, 5, 7, 4, 6, 5, 5, 6, 4, 6, 8, 4, 4, 4, 11, 5, 7, 6, 4, 10, 4, 6, 7, 6, 5, 6, 4, 4, 5, 209, 3, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 4, 6, 10, 9, 8, 4, 8, 6, 6, 3, 9, 10, 4, 6, 8, 5, 9, 9, 7, 5, 4, 7, 9, 4, 7, 3, 4, 10, 4, 7, 298, 3, 4, 9, 5, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 7, 6, 5, 7, 5, 4, 5, 5, 8, 4, 3, 9, 5, 4, 5, 10, 13, 6, 6, 4, 6, 11, 9, 7, 3, 8, 6, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 3, 10, 5, 4, 4, 4, 5, 4, 8, 5, 91, 4, 78, 4, 13, 5, 3, 6, 12, 6, 5, 6, 6, 4, 9, 7, 24, 6, 5, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 8, 6, 5, 7, 10, 7, 4, 8, 9, 9, 9, 6, 10, 7, 6, 10, 14, 5, 8, 5, 4, 5, 5, 20, 8, 5, 6, 7, 11, 8, 7, 6, 9, 6, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [11, 5, 4, 4, 5, 5, 4, 8, 5, 189, 80, 7, 5, 4, 4, 9, 11, 4, 4, 7, 10, 5, 4, 7, 6, 6, 8, 9, 8, 386, 4, 7, 8, 40, 12, 7, 7, 5, 5, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 9, 12, 7, 4, 6, 6, 5, 4, 5, 9, 7, 4, 5, 4, 5, 5, 5, 9, 4, 7, 6, 426, 5, 6, 4, 4, 6, 4, 12, 4, 5, 5, 6, 8, 8, 6, 12]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [10, 5, 11, 7, 5, 7, 6, 4, 6, 8, 6, 7, 5, 6, 87, 53, 5, 5, 8, 7, 9, 5, 146, 10, 7, 4, 6, 8, 6, 9, 7, 7, 10, 5, 7, 8, 11, 6, 85, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 4, 4, 8, 4, 3, 7, 4, 4, 5, 10, 4, 6, 9, 5, 12, 5, 6, 11, 7, 7, 9, 10, 5, 12, 8, 7, 5, 4, 8, 6, 4, 7, 6, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 8, 109, 5, 7, 4, 8, 5, 4, 4, 7, 4, 5, 13, 8, 5, 9, 6, 7, 6, 9, 8, 5, 4, 7, 5, 7, 6, 5, 7, 4, 4, 11, 17, 9, 11, 6, 6, 9, 8, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 7, 5, 7, 270, 6, 8, 5, 4, 4, 8, 3, 16, 6, 9, 7, 10, 4, 5, 5, 7, 7, 17, 9, 8, 4, 7, 211, 4, 7, 5, 8, 4, 8, 5, 8, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 4, 4, 9, 4, 4, 5, 3, 4, 8, 8, 4, 7, 4, 4, 6, 4, 4, 4, 4, 4, 19, 8, 4, 4, 5, 4, 4, 10, 18, 5, 7, 4, 8, 9, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 8, 3, 6, 4, 6, 8, 9, 4, 4, 6, 8, 5, 6, 7, 7, 7, 179, 4, 9, 5, 9, 7, 11, 8, 7, 10, 8, 76, 34, 7, 4, 5, 5, 8, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 10, 8, 5, 5, 5, 6, 7, 9, 6, 6, 4, 7, 9, 7, 7, 6, 4, 10, 8, 10, 6, 5, 9, 8, 11, 9, 4, 4, 4, 9, 7, 6, 6, 9, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 7, 3, 6, 7, 7, 5, 9, 8, 5, 5, 8, 4, 9, 34, 5, 4, 4, 11, 7, 19, 8, 3, 4, 8, 6, 11, 9, 7, 5, 5, 13, 8, 5, 7, 5, 9, 3, 11]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 3, 6, 7, 8, 4, 6, 7, 6, 5, 8, 8, 5, 5, 4, 5, 7, 4, 8, 5, 6, 6, 6, 5, 6, 8, 6, 19, 6, 8, 8, 3, 7, 6, 7, 5, 3, 7, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 5, 6, 4, 3, 8, 7, 4, 4, 6, 7, 4, 8, 8, 5, 4, 7, 4, 4, 11, 163, 3, 7, 7, 6, 7, 7, 5, 5, 6, 7, 7, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [2, 7, 69, 7, 6, 5, 5, 5, 7, 3, 4, 4, 8, 4, 8, 10, 5, 3, 5, 7, 7, 8, 4, 120, 4, 4, 6, 5, 4, 6, 10, 4, 7, 4, 7, 7, 7, 4, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [7, 8, 102, 4, 5, 45, 11, 9, 9, 3, 3, 7, 5, 5, 6, 5, 5, 7, 7, 9, 5, 6, 7, 8, 6, 7, 9, 38, 6, 4, 4, 6, 5, 5, 8, 5, 8, 6, 5, 9, 9, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [11, 4, 302, 6, 8, 4, 6, 7, 12, 6, 5, 7, 6, 9, 7, 7, 4, 8, 4, 6, 17, 5, 4, 6, 7, 8, 178, 8, 8, 7, 8, 7, 5, 7, 3, 4, 9, 9, 66, 24]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 6, 9, 6, 7, 7, 4, 4, 5, 7, 7, 4, 6, 7, 8, 6, 7, 5, 5, 8, 8, 7, 6, 8, 8, 5, 7, 19, 6, 4, 6, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 6, 8, 8, 7, 7, 4, 4, 4, 7, 5, 6, 7, 8, 4, 6, 5, 7, 11, 6, 8, 4, 4, 5, 7, 4, 7, 11, 9, 7, 4, 11, 5, 10, 5, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 10, 5, 9, 5, 9, 3, 10, 8, 5, 8, 3, 9, 5, 3, 5, 4, 7, 4, 7, 3, 5, 7, 6, 302, 5, 8, 5, 31, 3, 7, 6, 5, 8, 5, 10]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 8, 5, 6, 6, 3, 9, 10, 8, 8, 3, 6, 7, 6, 217, 4, 6, 4, 4, 3, 4, 9, 6, 6, 5, 4, 8, 4, 5, 7, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 6, 9, 6, 7, 7, 4, 17, 6, 24, 5, 4, 8, 4, 13, 7, 5, 4, 6, 7, 20, 19, 7, 7, 6, 5, 148, 8, 8, 9, 6, 5, 4, 8, 8, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 3, 4, 5, 5, 4, 4, 5, 5, 5, 6, 5, 5, 5, 6, 3, 4, 5, 3, 6, 399, 5, 5, 5, 7, 6, 7, 5, 7, 4, 4]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [11, 9, 9, 3, 9, 8, 6, 7, 11, 9, 8, 9, 4, 11, 9, 9, 7, 9, 9, 13, 5, 7, 8, 9, 8, 37, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 3, 10, 7, 9, 9, 8, 10, 5, 6, 7, 236, 8, 47, 12, 10, 419]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 6, 9, 8, 5, 9, 8, 6, 5, 4, 5, 10, 10, 12, 4, 12, 16, 7, 7, 5, 20, 5, 5, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 7, 4, 9, 4, 9, 5, 6, 5, 5, 9, 6, 4, 4, 7, 6, 5, 4, 4, 5, 5, 7, 4, 4, 11, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 6, 347, 4, 4, 4, 4, 4, 8, 5, 4, 5, 5, 5, 8, 5, 5, 4, 6, 6, 6, 5, 6, 61, 10, 4, 16, 5, 4, 5, 6, 52, 6, 3, 5, 4, 7, 5, 9, 4, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 5, 8, 8, 6, 10, 9, 6, 6, 7, 6, 8, 6, 9, 6, 5, 9, 9, 5, 7, 6, 7, 7, 4, 7, 6, 6, 13, 4, 8, 6, 5, 7, 4, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 11, 6, 9, 7, 4, 13, 6, 6, 6, 6, 9, 6, 8, 9, 6, 6, 17, 8, 7, 6, 7, 4, 6, 6, 7, 11, 11, 9, 8, 8, 7, 10, 11, 6, 4, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 4, 4, 6, 7, 8, 7, 5, 14, 7, 7, 8, 8, 4, 6, 4, 8, 8, 297, 6, 12, 3, 6, 6, 5, 6, 65, 6, 3, 6, 8, 8, 8, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 5, 5, 5, 5, 4, 3, 4, 4, 4, 9, 5, 5, 6, 8, 4, 10, 5, 5, 5, 4, 5, 7, 3, 7, 8, 4, 4, 5, 5, 8, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 7, 6, 9, 6, 7, 4, 6, 5, 6, 7, 6, 8, 5, 9, 9, 10, 7, 6, 210, 8, 6, 6, 10, 6, 7, 9, 5, 6, 6, 9, 3, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 4, 4, 8, 7, 5, 7, 17, 6, 5, 5, 4, 4, 4, 4, 7, 4, 7, 8, 7, 9, 7, 4, 7, 8, 9, 8, 7, 15, 6, 4, 7, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 5, 29, 5, 6, 6, 7, 7, 6, 5, 8, 6, 9, 4, 5, 264, 8, 8, 7, 7, 8, 8, 64, 7, 340, 9, 7, 5, 7, 4, 6, 5, 7, 7, 7, 5, 4, 8, 9, 4, 8, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 8, 158, 6, 7, 6, 8, 17, 5, 4, 4, 8, 5, 6, 4, 8, 7, 4, 7, 9, 5, 11, 7, 6, 6, 6, 9, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 5, 8, 6, 5, 7, 6, 9, 4, 4, 10, 7, 10, 5, 6, 5, 5, 5, 177, 4, 7, 7, 3, 5, 10, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 8, 4, 4, 4, 8, 6, 6, 6, 7, 3, 7, 6, 8, 5, 6, 6, 83, 5, 6, 5, 3, 9, 5, 9, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 8, 5, 5, 4, 6, 4, 4, 5, 8, 4, 5, 7, 4, 7, 7, 6, 5, 4, 6, 5, 5, 4, 3, 4, 6, 7, 6, 6, 5, 8, 6, 6, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 6, 5, 5, 4, 5, 5, 5, 3, 4, 5, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 26, 6, 4, 4, 5, 5, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 6, 10, 5, 4, 7, 8, 5, 9, 7, 7, 7, 6, 8, 5, 9, 6, 5, 6, 5, 8, 5, 5, 36, 8, 6, 23, 5, 4, 5, 9, 56, 3, 130]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 7, 8, 9, 5, 8, 5, 7, 7, 7, 7, 6, 4, 8, 5, 7, 5, 7, 13, 7, 6, 8, 186, 8, 6, 5, 5, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 5, 5, 5, 7, 4, 8, 8, 6, 5, 22, 4, 6, 16, 53, 8, 6, 6, 9, 456, 7, 6, 29, 76]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [9, 6, 17, 9, 4, 8, 5, 11, 6, 5, 9, 12, 4, 5, 8, 5, 8, 11, 6, 8, 4, 7, 125, 8, 9, 9, 5, 53, 6, 7, 9, 18, 4, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 9, 7, 9, 7, 3, 3, 6, 4, 6, 5, 5, 6, 7, 4, 3, 4, 4, 5, 5, 4, 9, 219, 4, 370, 7, 7, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 7, 8, 6, 5, 5, 6, 6, 7, 6, 4, 11, 7, 6, 5, 7, 6, 6, 7, 7, 7, 7, 4, 5, 6, 9, 7, 7, 6, 7, 12, 8, 5, 5, 4, 6, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [6, 4, 305, 7, 8, 9, 4, 5, 7, 5, 7, 6, 5, 5, 4, 5, 10, 5, 5, 6, 6, 8, 7, 6, 8, 9, 6, 7, 4, 8, 7, 10, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 7, 7, 9, 6, 7, 6, 8, 8, 7, 4, 7, 9, 4, 7, 6, 8, 5, 6, 5, 9, 3, 29, 10, 4, 8, 10, 6, 6, 7, 8, 5, 5, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 7, 35, 5, 7, 8, 6, 6, 7, 5, 9, 6, 6, 5, 8, 7, 5, 7, 5, 9, 6, 5, 425, 56, 6, 16, 5, 16, 5, 6, 6, 5, 6, 6, 6, 9, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 3, 8, 4, 5, 4, 7, 7, 4, 6, 7, 7, 7, 51, 5, 4, 4, 7, 5, 9, 20, 7, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 5, 5, 5, 6, 8, 7, 6, 5, 6, 5, 4, 5, 4, 73, 11, 5, 4, 3, 8, 5, 7, 5, 6, 6, 4, 5, 9, 7, 8, 5, 343]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 3, 6, 6, 9, 6, 5, 7, 4, 5, 6, 4, 5, 8, 7, 5, 6, 7, 8, 6, 6, 6, 6, 12, 7, 107, 7, 242]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 4, 5, 4, 6, 9, 5, 3, 6, 6, 5, 6, 7, 5, 6, 5, 5, 5, 6, 5, 5, 5, 5, 5, 11, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 178, 6, 5, 5, 6, 8, 5, 8, 5, 9, 7, 8, 8, 8, 6, 6, 6, 5, 8, 7, 7, 6, 8, 8, 4, 7, 8, 7, 5, 9, 8, 9, 8, 6, 7, 9, 5, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 5, 6, 5, 4, 3, 7, 9, 6, 4, 13, 7, 4, 5, 6, 5, 174, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 4, 4, 5, 5, 4, 4, 8, 5, 5, 8, 5, 7, 6, 6, 4, 5, 6, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 4, 5, 6, 3, 3, 6, 4, 4, 6, 6, 4, 4, 6, 10, 432, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 89
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
