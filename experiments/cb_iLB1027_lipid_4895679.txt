┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [8, 3, 74, 7, 92, 6, 14, 3, 9, 9, 7, 7, 14, 9, 100, 7, 20, 15, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 20, 4, 4, 6, 3, 8, 3, 14, 5, 4, 3, 4, 8, 7, 7, 3, 20, 13]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [12, 8, 4, 19, 4, 5, 5, 4, 26, 4, 4, 30, 4, 4, 3, 8, 4, 4, 4, 40, 9, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 4, 5, 3, 4, 3, 10, 35, 4, 29, 3, 3, 4, 7, 4, 4, 3, 4, 20, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 19, 4, 4, 17, 6, 7, 3, 9, 33, 4, 3, 63, 7, 4, 4, 4, 4, 20, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 4, 4, 4, 4, 7, 4, 22, 32, 4, 4, 4, 16, 4, 4, 3, 20, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 20, 3, 4, 10, 4, 7, 371, 5, 6, 4, 4, 3, 7, 4, 14, 4, 4, 44, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 4, 4, 4, 4, 7, 4, 4, 7, 6, 4, 13, 7, 4, 4, 4, 22, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 19, 4, 4, 37, 4, 7, 3, 4, 16, 4, 4, 4, 7, 4, 4, 4, 4, 30, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [31, 4, 4, 18, 4, 4, 77, 4, 29, 4, 5, 32, 4, 4, 4, 9, 4, 4, 4, 4, 22, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 4, 4, 22, 4, 9, 4, 4, 470, 4, 4, 4, 6, 4, 4, 363, 4, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 66, 6, 4, 64, 4, 7, 3, 4, 53, 121, 5, 4, 7, 4, 3, 4, 22, 4, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 6, 4, 152, 7, 636, 325, 5, 7, 9, 3, 22, 6, 4, 4, 3, 31, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 3, 10, 68, 4, 3, 4, 4, 11, 7, 59, 8, 9, 66, 5, 66, 3, 11, 31]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [7, 14, 3, 4, 4, 11, 86, 11, 5, 69, 6, 20, 4, 3, 203, 5, 4, 7, 4, 207, 30, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [18, 5, 3, 6, 5, 4, 26, 4, 6, 26, 9, 17, 4, 10, 5, 4, 7, 4, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 18, 5, 4, 3, 3, 5, 3, 3, 6, 3, 3, 4, 5, 106, 3, 4, 20, 382, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 3, 10, 44, 3, 5, 5, 4, 4, 3, 3, 3, 5, 9, 14, 4, 3, 22, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 4, 3, 3, 11, 5, 5, 68, 3, 7, 9, 9, 12, 5, 184, 204, 39, 28, 5, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 56, 3, 4, 54, 68, 5, 31, 4, 33, 6, 37, 3, 5, 3, 4, 4, 19, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 37, 5, 6, 52, 3, 5, 26, 5, 49, 3, 3, 4, 5, 4, 3, 515, 4, 21, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 12, 3, 7, 3, 3, 67, 6, 6, 5, 4, 8, 3, 3, 4, 41, 4, 4, 3, 38, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 18, 11, 4, 4, 5, 5, 8, 4, 29, 3, 4, 3, 5, 4, 8, 4, 202, 9, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 13, 11, 18, 191, 3, 42, 5, 108, 38, 3, 8, 4, 4, 11, 469, 11, 18, 4, 3, 23, 10, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 9, 3, 31, 4, 295, 32, 14, 29, 3, 4, 4, 5, 5, 3, 20, 10, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 58, 36, 3, 4, 4, 6, 22, 3, 41, 9, 4, 473, 5, 4, 6, 8, 8, 20, 6, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 18, 3, 5, 18, 7, 482, 5, 3, 18, 3, 4, 5, 3, 3, 3, 8, 7, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 18, 3, 99, 10, 12, 104, 25, 4, 8, 3, 32, 3, 5, 3, 3, 4, 3, 20, 8, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [12, 11, 3, 3, 3, 5, 3, 65, 5, 42, 3, 34, 3, 4, 11, 590, 4, 8, 3, 28, 23, 38]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 18, 4, 4, 3, 4, 5, 4, 4, 7, 4, 4, 47, 5, 47, 4, 4, 8, 24, 111, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 10, 4, 4, 4, 4, 5, 4, 3, 56, 3, 4, 3, 8, 3, 3, 4, 3, 22, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 19, 4, 4, 19, 3, 342, 32, 4, 17, 4, 4, 9, 4, 5, 4, 4, 12, 15, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 19, 4, 3, 67, 3, 5, 4, 13, 48, 4, 4, 6, 46, 3, 3, 98, 3, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [3, 15, 3, 8, 3, 6, 38, 5, 48, 4, 32, 8, 4, 11, 6, 12, 7, 60, 4, 29, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 18, 4, 3, 31, 3, 5, 4, 3, 15, 3, 4, 5, 5, 4, 4, 3, 3, 28, 320, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 5, 4, 6, 5, 5, 7, 6, 9, 27, 6, 11, 96, 6, 4, 5, 3, 21, 4, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 3, 4, 3, 4, 3, 145, 3, 4, 23, 3, 5, 4, 5, 4, 3, 4, 3, 4, 3, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 12, 8, 56, 4, 6, 8, 3, 113, 38, 3, 42, 3, 3, 13, 6, 13, 3, 6, 7, 37, 6, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 3, 3, 5, 3, 5, 28, 25, 35, 10, 6, 19, 5, 19, 3, 3, 3, 28, 3, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 339, 9, 3, 8, 3, 5, 5, 4, 29, 4, 6, 4, 6, 3, 3, 3, 4, 20, 6, 9]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 59, 8, 6, 3, 4, 8, 4, 6, 25, 13, 26, 14, 4, 5, 7, 4, 4, 7, 3, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 4, 187, 38, 3, 4, 31, 3, 5, 28, 4, 4, 4, 5, 4, 5, 4, 4, 4, 4, 22, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 3, 3, 4, 5, 4, 4, 4, 6, 3, 6, 6, 4, 6, 4, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 12, 6, 4, 3, 4, 9, 13, 4, 6, 3, 301, 6, 4, 3, 6, 36, 10, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 34, 4, 3, 4, 3, 10, 31, 3, 11, 4, 4, 337, 11, 7, 4, 4, 14, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 3, 4, 4, 3, 3, 5, 7, 3, 20, 8, 6, 10, 393, 4, 4, 3, 30, 10, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 13, 7, 3, 24, 8, 5, 25, 3, 3, 4, 3, 4, 5, 107, 13, 6, 3, 40, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 8, 4, 8, 4, 6, 7, 4, 3, 4, 3, 6, 45, 777, 4, 4, 4, 7, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 18, 6, 3, 12, 3, 5, 101, 3, 8, 6, 6, 4, 173, 3, 6, 3, 6, 32, 10, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 7, 6, 3, 3, 3, 6, 4, 6, 4, 3, 3, 180, 6, 9, 3, 3, 12, 4, 6, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [8, 17, 6, 13, 6, 4, 7, 3, 7, 548, 6, 28, 7, 6, 13, 164, 6, 4, 3, 23, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [12, 6, 3, 10, 3, 6, 4, 3, 7, 3, 4, 33, 6, 4, 6, 5, 3, 14, 8, 38, 6, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 6, 30, 3, 3, 3, 40, 33, 150, 78, 4, 18, 5, 3, 7, 5, 3, 3, 30, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 5, 4, 72, 4, 6, 40, 3, 72, 3, 4, 4, 5, 4, 4, 4, 3, 20, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 18, 6, 3, 6, 4, 6, 4, 4, 6, 3, 8, 4, 5, 8, 6, 6, 31, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 7, 4, 4, 4, 3, 4, 4, 22, 4, 4, 5, 5, 3, 8, 4, 4, 20, 7, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 6, 3, 3, 512, 20, 39, 4, 3, 3, 5, 4, 4, 4, 3, 17, 8, 23]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 19, 4, 4, 3, 4, 7, 4, 25, 8, 4, 4, 6, 6, 4, 8, 3, 11, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 4, 6, 5, 4, 8, 6, 31, 6, 30, 4, 4, 3, 5, 4, 4, 6, 3, 21, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 19, 4, 3, 45, 4, 6, 8, 3, 32, 4, 4, 4, 5, 4, 4, 5, 4, 20, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 16, 3, 11, 13, 4, 18, 6, 164, 6, 5, 8, 11, 440, 13, 12, 13, 7, 24, 6, 20, 8, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 81, 3, 4, 3, 3, 11, 3, 33, 11, 3, 8, 6, 6, 7, 8, 3, 23, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 5, 3, 6, 4, 3, 6, 6, 3, 28, 4, 4, 3, 389, 4, 4, 6, 3, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 12, 4, 3, 3, 3, 7, 25, 3, 458, 4, 4, 13, 6, 13, 6, 3, 6, 23, 4, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 18, 11, 3, 3, 3, 532, 147, 4, 30, 3, 6, 5, 4, 180, 6, 4, 22, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 13, 3, 4, 27, 4, 5, 5, 4, 3, 3, 165, 4, 8, 3, 3, 11, 10]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 6, 6, 4, 4, 8, 4, 6, 32, 6, 6, 15, 6, 15, 8, 3, 4, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [19, 4, 3, 13, 3, 4, 55, 4, 6, 15, 3, 22, 4, 4, 4, 132, 11, 43, 144, 16, 27, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 12, 3, 7, 6, 5, 3, 3, 7, 3, 7, 6, 8, 12, 44, 20, 11, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 17, 6, 8, 3, 3, 3, 4, 7, 4, 4, 29, 6, 3, 4, 7, 7, 3, 20, 3, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 4, 4, 4, 3, 57, 4, 4, 3, 3, 3, 4, 14, 4, 4, 3, 3, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 18, 4, 4, 3, 4, 7, 70, 8, 60, 5, 4, 4, 32, 6, 7, 6, 3, 8, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [12, 9, 3, 6, 4, 4, 3, 6, 7, 10, 3, 30, 5, 6, 6, 7, 4, 7, 6, 10, 20, 3, 10]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 3, 5, 3, 8, 30, 3, 28, 3, 3, 7, 6, 7, 347, 9, 22, 4, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 34, 3, 3, 39, 6, 411, 3, 10, 3, 4, 6, 5, 3, 4, 4, 3, 20, 3, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 5, 3, 4, 6, 35, 5, 3, 4, 11, 5, 34, 6, 5, 5, 15, 17, 3, 3, 8, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [13, 10, 6, 19, 6, 4, 6, 3, 9, 29, 11, 34, 5, 3, 4, 48, 3, 8, 3, 3, 28, 3, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 3, 3, 4, 4, 4, 5, 3, 6, 3, 14, 4, 4, 6, 3, 127, 3, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 17, 4, 5, 172, 4, 4, 17, 4, 67, 3, 3, 3, 5, 4, 4, 4, 71, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 18, 3, 3, 3, 3, 7, 19, 7, 39, 3, 8, 6, 6, 3, 9, 6, 3, 20, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 16, 3, 18, 3, 3, 4, 6, 20, 3, 27, 3, 3, 4, 6, 7, 6, 4, 4, 20, 23, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [13, 4, 3, 3, 5, 6, 4, 7, 6, 8, 9, 3, 3, 16, 3, 59, 4, 8, 3, 11, 14, 9, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [12, 6, 3, 62, 4, 3, 32, 4, 68, 32, 5, 4, 3, 4, 4, 68, 4, 3, 3, 245, 69, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 16, 4, 13, 6, 3, 7, 509, 4, 4, 4, 11, 4, 11, 6, 4, 6, 3, 3, 3, 7]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 10, 3, 5, 7, 8, 56, 5, 8, 7, 3, 8, 15, 9, 13, 8, 8, 5, 20, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 18, 4, 3, 3, 3, 6, 50, 6, 28, 4, 5, 4, 6, 6, 8, 3, 3, 21, 5, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [22, 3, 4, 3, 3, 3, 3, 6, 3, 3, 4, 3, 3, 382, 4, 4, 5, 3, 20, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [26, 4, 3, 13, 42, 4, 6, 4, 6, 4, 3, 4, 4, 6, 23, 6, 4, 7, 3, 6, 20, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 54, 3, 9, 3, 562, 19, 4, 32, 4, 4, 31, 7, 4, 4, 4, 23, 20, 10, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 18, 4, 3, 3, 4, 5, 21, 4, 4, 6, 8, 5, 5, 7, 4, 3, 33, 44, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [9, 11, 3, 33, 4, 3, 4, 4, 5, 5, 3, 3, 4, 4, 3, 5, 6, 6, 4, 20, 3, 13]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [8, 11, 4, 4, 3, 4, 4, 5, 6, 3, 3, 28, 4, 3, 5, 4, 13, 3, 4, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 280, 4, 4, 6, 4, 11, 41, 4, 4, 4, 4, 4, 11, 4, 13, 3, 20, 5, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 19, 34, 7, 3, 3, 6, 25, 6, 24, 3, 13, 8, 13, 3, 3, 3, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 4, 3, 4, 3, 4, 25, 4, 3, 21, 4, 4, 52, 7, 52, 4, 3, 3, 28, 38, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 19, 3, 3, 3, 6, 66, 5, 3, 98, 7, 4, 4, 6, 3, 3, 4, 31, 26, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 10, 3, 11, 4, 3, 11, 143, 3, 4, 4, 4, 13, 6, 12, 8, 3, 20, 4, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 49, 3, 3, 52, 3, 5, 40, 5, 3, 3, 10, 6, 4, 7, 3, 17, 31, 56, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [19, 6, 10, 20, 3, 6, 4, 3, 6, 5, 3, 4, 4, 4, 4, 6, 4, 6, 4, 4, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 49, 4, 4, 93, 6, 205, 51, 4, 81, 3, 4, 79, 6, 79, 3, 3, 57, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 18, 4, 3, 3, 3, 5, 19, 3, 18, 4, 3, 4, 95, 3, 3, 3, 30, 39, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 13, 8, 3, 29, 6, 6, 4, 4, 6, 6, 4, 12, 6, 13, 3, 9, 20, 6, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 9, 78, 11, 4, 4, 63, 3, 4, 6, 6, 4, 5, 3, 10, 4, 4, 3, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 12, 4, 6, 23, 3, 5, 5, 5, 4, 7, 10, 3, 3, 3, 4, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 4, 4, 3, 14, 6, 4, 6, 3, 4, 6, 13, 3, 8, 6, 5, 70, 62, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [6, 15, 3, 8, 4, 3, 5, 7, 9, 4, 3, 4, 6, 6, 6, 286, 7, 11, 7, 4, 3, 4, 14]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [3, 14, 4, 13, 4, 7, 4, 4, 16, 29, 6, 3, 7, 3, 281, 8, 8, 3, 20, 7, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 28, 6, 3, 3, 8, 11, 3, 39, 77, 3, 11, 6, 11, 3, 3, 36, 9, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 3, 4, 18, 3, 3, 4, 5, 4, 4, 170, 4, 4, 24, 7, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 3, 4, 6, 3, 7, 5, 3, 3, 4, 6, 53, 38, 4, 5, 3, 3, 3, 8, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 13, 10, 18, 3, 3, 3, 3, 82, 20, 3, 4, 4, 4, 22, 5, 4, 5, 3, 6, 36, 25, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [21, 4, 3, 6, 8, 6, 7, 3, 6, 4, 6, 3, 4, 4, 8, 5, 8, 3, 23, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [12, 4, 3, 4, 13, 3, 3, 3, 6, 5, 5, 4, 4, 7, 6, 6, 3, 9, 8, 4, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [14, 3, 96, 10, 3, 4, 70, 3, 6, 3, 3, 60, 3, 3, 4, 6, 3, 3, 4, 21, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 18, 4, 3, 45, 4, 83, 20, 6, 27, 3, 3, 13, 16, 13, 3, 4, 20, 11, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [11, 4, 44, 4, 3, 3, 4, 5, 6, 4, 4, 28, 3, 3, 4, 81, 10, 4, 3, 4, 20, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 14, 4, 4, 31, 4, 6, 14, 3, 38, 3, 4, 100, 6, 3, 6, 3, 3, 11]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 36, 9, 4, 32, 3, 5, 4, 4, 4, 59, 4, 395, 4, 10, 4, 29, 4, 63]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 65, 3, 6, 4, 4, 6, 4, 3, 4, 3, 3, 6, 3, 3, 12, 3, 4, 3, 23]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 4, 4, 6, 3, 6, 4, 4, 3, 3, 4, 4, 6, 3, 3, 4, 3, 5, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 5, 4, 3, 3, 5, 17, 4, 4, 3, 4, 3, 5, 3, 4, 4, 5, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 39, 3, 3, 4, 3, 58, 3, 30, 4, 6, 4, 4, 5, 3, 20, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 35, 3, 6, 6, 6, 3, 4, 13, 4, 4, 4, 5, 4, 8, 4, 3, 6, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 3, 5, 4, 6, 6, 33, 4, 45, 8, 3, 4, 6, 3, 4, 4, 4, 4, 8, 154]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [3, 180, 4, 4, 40, 3, 10, 3, 6, 4, 3, 33, 7, 3, 8, 6, 3, 18, 3, 5, 28, 65, 40]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 8, 6, 68, 5, 570, 30, 8, 17, 3, 6, 91, 6, 89, 10, 8, 30, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [3, 6, 16, 161, 3, 4, 40, 6, 43, 19, 3, 22, 3, 4, 4, 5, 6, 3, 4, 4, 6, 17]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 9, 3, 4, 3, 3, 6, 4, 20, 30, 4, 3, 6, 3, 8, 3, 3, 157, 21, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 6, 3, 3, 4, 132, 5, 26, 4, 3, 12, 4, 3, 4, 3, 12, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 17, 3, 3, 3, 3, 8, 18, 3, 34, 3, 3, 4, 7, 4, 3, 3, 4, 37, 8, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 4, 3, 7, 3, 8, 12, 4, 4, 4, 6, 57, 3, 6, 4, 8, 4, 6, 4, 5, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 35, 12, 29, 4, 6, 34, 3, 49, 4, 4, 4, 6, 3, 8, 3, 20, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 39, 3, 6, 3, 6, 568, 29, 11, 32, 3, 6, 9, 7, 10, 57, 4, 173, 28, 36, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 10, 4, 41, 3, 6, 47, 4, 224, 4, 4, 3, 6, 4, 4, 3, 38, 33, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 18, 35, 8, 5, 4, 7, 19, 6, 57, 3, 3, 6, 6, 3, 4, 6, 20, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 4, 58, 3, 3, 5, 6, 3, 6, 30, 6, 6, 54, 103, 54, 8, 5, 4, 26, 7, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 6, 4, 3, 4, 6, 6, 4, 4, 37, 3, 4, 3, 11, 9, 6, 6, 28, 10, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 4, 4, 82, 3, 6, 3, 7, 3, 4, 3, 9, 6, 9, 3, 5, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 4, 3, 6, 6, 6, 20, 7, 32, 4, 30, 6, 6, 4, 4, 4, 23, 5, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [10, 6, 3, 19, 59, 5, 4, 4, 6, 183, 6, 43, 4, 3, 4, 14, 4, 8, 3, 5, 20, 34, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [8, 4, 12, 3, 4, 3, 10, 3, 6, 4, 4, 3, 4, 110, 6, 4, 490, 3, 4, 3, 3, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 40, 4, 3, 7, 3, 3, 3, 4, 3, 33, 6, 11, 3, 4, 4, 42, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 11, 6, 4, 6, 5, 3, 3, 5, 6, 3, 3, 4, 3, 5, 6, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 5, 3, 3, 6, 4, 412, 4, 3, 44, 5, 5, 10, 6, 12, 8, 20, 3, 5, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 17, 50, 4, 4, 4, 6, 17, 4, 5, 4, 4, 6, 4, 4, 3, 4, 4, 32, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 8, 168, 8, 3, 4, 7, 3, 7, 3, 3, 4, 3, 5, 6, 4, 6, 3, 12, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [4, 108, 6, 8, 10, 6, 4, 6, 7, 34, 4, 35, 91, 65, 6, 107, 6, 4, 6, 6, 22, 45, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 35, 10, 3, 8, 4, 5, 4, 11, 36, 7, 3, 10, 6, 8, 3, 3, 20, 4, 21]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 9, 3, 8, 3, 3, 6, 5, 6, 28, 3, 11, 10, 10, 3, 3, 4, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 32, 4, 43, 29, 3, 11, 34, 4, 26, 3, 4, 5, 11, 6, 7, 3, 4, 20, 12, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 5, 7, 4, 3, 7, 6, 37, 3, 4, 3, 3, 6, 9, 3, 11, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 3, 4, 5, 4, 4, 114, 3, 10, 4, 4, 3, 4, 8, 5, 4, 6, 4, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 33, 4, 4, 5, 4, 493, 28, 4, 35, 6, 3, 7, 4, 4, 4, 4, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 3, 4, 3, 612, 30, 5, 4, 4, 4, 235, 4, 3, 4, 6, 28, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [35, 3, 5, 4, 35, 14, 4, 3, 6, 4, 4, 30, 4, 5, 5, 6, 3, 4, 3, 3, 21, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [8, 19, 10, 3, 3, 6, 6, 13, 6, 3, 4, 4, 6, 3, 6, 6, 176, 6, 3, 172, 103, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 13, 3, 3, 3, 3, 6, 586, 3, 41, 3, 4, 4, 99, 4, 4, 4, 10, 7, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 4, 11, 8, 53, 12, 41, 54, 3, 6, 5, 6, 6, 3, 660, 6, 6, 12, 146, 14]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 6, 3, 3, 3, 9, 5, 3, 16, 3, 4, 62, 8, 62, 3, 4, 49, 44, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 16, 3, 4, 28, 4, 5, 18, 7, 5, 19, 4, 3, 6, 3, 3, 8, 4, 50, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777580345
