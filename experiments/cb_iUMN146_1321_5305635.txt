┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUMN146_1321
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUMN146_1321
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1319

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 16, 17, 13, 14, 13, 13, 14, 13, 14, 14, 13, 14, 13, 14, 13, 13, 13, 16, 15, 2, 2, 2, 2, 7, 3, 7, 2, 4, 2, 11, 11, 2, 32, 46, 34, 3, 45, 40, 40, 10, 9, 9, 4, 2, 10, 10, 35, 32, 10, 9, 9, 9, 54, 6, 3, 10, 56, 2, 2, 32]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 2, 3, 3, 14, 3, 2, 3, 2, 6, 5, 4, 5, 4, 3, 7, 65, 4, 4, 4, 4, 7, 3, 5, 61, 3, 3, 4, 46, 4, 5, 3, 85, 5, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 2, 3, 4, 6, 6, 5, 2, 3, 3, 4, 75, 6, 13, 8, 3, 15, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 10, 3, 3, 4, 4, 8, 12, 4, 8, 6, 12, 8, 4, 3, 4, 3, 4, 4, 5, 6, 6, 6, 5, 67, 6, 5, 30, 4, 6, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 3, 3, 2, 17, 2, 2, 3, 5, 2, 2, 6, 2, 2, 3, 3, 2, 15, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 6, 4, 4, 12, 4, 4, 41, 5, 134, 6, 41, 5, 5, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 3, 5, 5, 6, 4, 4, 7, 3, 7, 4, 14, 5, 8, 4, 7, 96, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 3, 3, 3, 3, 4, 4, 3, 4, 5, 4, 4, 3, 5, 2, 3, 3, 8, 4, 3, 4, 4, 5, 4, 20, 4, 6, 6, 29, 281, 3, 4, 4, 4, 3, 7, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 115, 5, 6, 4, 4, 4, 3, 6, 4, 8, 7, 4, 5, 4, 9, 5, 7]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 6, 11, 9, 4, 3, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 4, 33, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785414871363
thermo_feasible = true
