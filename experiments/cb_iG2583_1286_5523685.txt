┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iG2583_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iG2583_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2704
number of genes : 1283

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2704 flux variables and 5017 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 17, 11, 11, 99, 11, 11, 16, 16, 13, 14, 15, 20, 16, 14, 13, 13, 13, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14]
length(C_list) = 1
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 154, 17, 11, 11, 12, 106, 11, 19, 19, 16, 17, 16, 20, 19, 17, 16, 16, 16, 20, 19, 19, 17, 16, 17, 16, 17, 16, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 11, 11, 11, 11, 13, 12, 11, 17, 21, 20, 15, 19, 18, 18, 15, 14, 14, 14, 18, 17, 216, 14, 14, 14, 15, 16, 15, 14, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 13, 156, 13, 17, 16, 14, 13, 13, 13, 18, 17, 16, 13, 13, 14, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 11, 77, 11, 2, 16, 16, 14, 14, 15, 20, 21, 14, 13, 13, 13, 17, 22, 16, 13, 13, 13, 14, 13, 14, 13, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 11, 11, 11, 11, 11, 11, 3, 20, 19, 16, 17, 16, 20, 19, 23, 16, 16, 16, 20, 19, 19, 16, 16, 17, 16, 17, 17, 16, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 13, 20, 14, 17, 16, 14, 13, 13, 14, 17, 19, 16, 13, 13, 14, 14, 13, 14, 15, 13, 13, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 11, 11, 11, 11, 11, 2, 21, 19, 16, 23, 16, 20, 19, 17, 16, 16, 16, 20, 19, 19, 16, 16, 17, 17, 16, 17, 16, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 12, 11, 11, 11, 6, 17, 17, 14, 15, 14, 18, 25, 15, 14, 14, 14, 18, 17, 17, 14, 14, 15, 14, 15, 15, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 11, 12, 11, 11, 61, 11, 11, 3, 16, 16, 13, 14, 13, 17, 16, 14, 13, 13, 13, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [9, 3, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 13, 14, 13, 17, 16, 14, 13, 13, 13, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 7, 11, 11, 11, 11, 11, 11, 11, 6, 18, 16, 13, 14, 13, 17, 16, 14, 13, 14, 13, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 2, 258, 3, 2, 4, 2, 35, 15, 4, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 2, 7, 3, 36, 2, 102, 4, 3, 4, 5, 9, 6, 3, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 5, 4, 6, 6, 11, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 3, 4, 4, 13, 251, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 11, 16, 11, 11, 11, 11, 3, 27, 28, 13, 52, 14, 22, 16, 14, 13, 13, 13, 17, 16, 16, 13, 13, 14, 14, 13, 14, 13, 14, 13, 13, 16, 60, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 3, 2, 8, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 15, 7, 6, 4, 3, 2, 34]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 4, 4, 2, 3, 4, 5, 5, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 3, 7, 2, 15, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 18, 7, 4, 2, 2, 3, 2, 20, 2, 9, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 7, 13, 9, 9, 43, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 8, 9, 8, 8, 11, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 9, 6, 4, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784918654305
thermo_feasible = true
