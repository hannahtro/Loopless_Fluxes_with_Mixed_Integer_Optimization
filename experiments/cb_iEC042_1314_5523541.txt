┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC042_1314
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC042_1314
----------------------------------
number of metabolites : 1926
number of reactions : 2714
number of genes : 1314

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2714 flux variables and 5037 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 13, 13, 13, 13, 15, 13, 14, 13, 13, 14, 6, 2, 2, 3, 11, 11, 11, 11, 11, 7, 11, 11, 5, 4, 6, 2, 2, 2]
length(C_list) = 8
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 13, 13, 13, 13, 14, 13, 15, 68, 14, 14, 13, 14, 2, 3, 6, 2, 11, 11, 11, 11, 11, 7, 16, 11, 5, 7, 2, 6, 3, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 13, 13, 13, 13, 14, 14, 14, 13, 13, 13, 2, 7, 3, 11, 11, 11, 11, 11, 7, 11, 11, 2, 6, 4, 6, 5, 3, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 13, 13, 13, 13, 14, 13, 14, 13, 13, 2, 7, 3, 11, 11, 11, 12, 11, 7, 11, 11, 11, 7, 6, 6, 6, 9, 9, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 3, 13, 13, 13, 13, 14, 13, 14, 13, 112, 19, 13, 7, 6, 3, 6, 11, 11, 11, 11, 11, 7, 11, 11, 6, 9, 8, 4, 6, 71, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 17, 14, 14, 14, 15, 14, 15, 14, 14, 17, 6, 3, 8, 11, 13, 362, 11, 42, 7, 11, 11, 3, 3, 6, 5, 6, 7, 6, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 13, 13, 14, 13, 15, 13, 14, 13, 13, 13, 14, 14, 6, 3, 5, 42, 13, 19, 11, 11, 11, 7, 11, 11, 5, 6, 6, 6, 3, 7, 7, 71, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 86, 16, 35, 17, 16, 17, 16, 17, 16, 16, 16, 6, 6, 6, 11, 11, 11, 11, 11, 7, 11, 11, 6, 6, 6, 7, 6, 7, 8, 71, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 7, 13, 13, 13, 13, 14, 13, 14, 13, 84, 22, 13, 4, 6, 8, 3, 11, 11, 11, 11, 11, 7, 11, 11, 6, 6, 6, 6, 16, 4, 4, 4, 72, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 13, 13, 13, 13, 14, 13, 14, 13, 13, 7, 6, 8, 9, 11, 11, 11, 12, 11, 7, 17, 17, 7, 9, 196, 7, 7, 6, 70, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 13, 13, 13, 13, 14, 13, 14, 13, 13, 6, 46, 11, 11, 11, 11, 7, 11, 11, 14, 6, 3, 6, 8, 6, 7, 11, 12]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 13, 14, 13, 13, 14, 13, 14, 13, 13, 6, 7, 7, 6, 11, 11, 11, 11, 11, 7, 11, 11, 5, 3, 6, 13, 6, 7, 70]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 2, 16, 16, 16, 16, 17, 16, 17, 16, 16, 17, 44, 6, 13, 7, 44, 11, 11, 13, 11, 7, 13, 11, 4, 2, 6, 9, 59, 6, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 13, 88, 13, 13, 14, 13, 14, 13, 13, 6, 6, 7, 6, 11, 11, 11, 11, 11, 7, 11, 11, 6, 3, 6, 6, 11, 6, 6, 71]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 14, 39, 14, 14, 15, 14, 15, 14, 14, 164, 10, 8, 5, 104, 13, 11, 11, 11, 11, 7, 11, 11, 6, 6, 7, 3, 6, 6, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 13, 14, 13, 13, 14, 13, 14, 13, 13, 6, 6, 8, 6, 11, 11, 11, 11, 11, 7, 11, 11, 6, 6, 9, 7, 6, 6, 10, 6, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 2, 14, 13, 13, 13, 14, 13, 15, 13, 13, 14, 6, 6, 7, 11, 11, 11, 11, 11, 7, 11, 11, 8, 3, 7, 6, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 9, 14, 306, 15, 14, 15, 14, 15, 14, 14, 14, 15, 15, 14, 16, 18, 6, 7, 13, 4, 12, 185, 13, 12, 12, 8, 12, 12, 4, 6, 13, 9, 4, 71, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 11, 14, 13, 13, 13, 14, 13, 15, 13, 13, 269, 14, 7, 6, 7, 11, 11, 11, 24, 11, 7, 11, 11, 7, 7, 6, 7, 9, 10, 72, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 4, 4, 5, 5, 6, 11, 145]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 27]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 10, 21, 6, 5, 5, 5, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 4, 4, 4, 33, 37, 7, 6, 3, 4, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 159, 8, 45]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784901024751
thermo_feasible = true
