┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC55989_1330
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC55989_1330
----------------------------------
number of metabolites : 1953
number of reactions : 2756
number of genes : 1330

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 14
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 11, 7, 2, 2, 6, 14, 2, 8, 3, 69, 63, 60, 2, 30, 7, 2, 2]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 2, 2, 2, 5, 3, 3, 2, 2, 4, 2, 3, 3, 77]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 2, 2, 3, 2, 4, 3, 2, 4, 4, 6, 4, 74]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 2, 3, 3, 3, 5, 2, 8, 2, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 4, 3, 3, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 8, 3, 4, 19, 4, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 6, 74]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 17, 4, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 14, 4, 3, 4, 125]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 3, 3, 4, 4, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 4, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 4, 4, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.98247852582803
thermo_feasible = true
