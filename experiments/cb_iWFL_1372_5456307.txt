┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iWFL_1372
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iWFL_1372
----------------------------------
number of metabolites : 1973
number of reactions : 2782
number of genes : 1372

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 139
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2782 flux variables and 5173 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 4, 2, 2, 2, 4, 3, 3, 3, 5, 2, 3, 2, 3, 2, 4, 19, 3, 4, 3, 2, 5, 2, 4, 2, 3, 3, 3, 3, 7, 8, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 2, 4, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 2, 5, 3, 3, 3, 3, 4, 7, 5, 3, 3, 3, 4, 103, 5, 7, 4, 30, 4, 4, 4, 4, 4, 5, 5, 95]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 2, 4, 5, 4, 3, 7, 4, 5, 3, 3, 4, 6, 7, 7, 5, 2, 4, 4, 63, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 8, 5, 3, 6, 4, 5, 4, 6, 8, 9, 4, 9, 5, 2, 6, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 2, 4, 2, 6, 4, 4, 3, 3, 4, 3, 4, 4, 2, 7, 7, 8, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 9, 9, 7, 6, 10, 8, 9, 26, 48, 7, 8, 39]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 3, 4, 5, 38, 9, 4, 4, 4, 5, 5, 7, 5, 4, 4, 3, 23, 4, 5, 12, 4, 4, 6, 5, 4, 4, 9, 215, 133, 4, 36, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 3, 4, 5, 8, 4, 17, 4, 4, 46]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 7, 4, 14, 7, 5, 8, 8, 3, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 8, 5, 3, 4, 4, 4, 5, 7, 5, 4, 7, 9, 9, 19, 5, 27, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 12, 2, 12, 12, 12, 12, 17, 17, 18, 17, 18, 18, 17, 15, 15, 17, 19, 16, 14, 270, 14, 14, 15, 16, 15, 15, 14, 14, 37, 14, 15, 18, 15, 15, 17, 40, 14, 15, 122, 19, 7, 94, 12, 13, 12, 11, 7, 4, 49, 7, 14, 3, 10, 10, 10, 10, 18, 11, 10, 10, 10, 28, 7, 11, 16, 7, 7, 8, 16, 7, 6, 7, 8, 7, 7, 15, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 79, 3, 8, 8, 9, 3, 3, 7, 3, 73]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 10, 7, 7, 8, 12, 9, 9]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 6, 7, 30, 7, 6, 4, 12, 7, 7, 6, 16, 7, 20, 6, 12, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 5, 5, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 4, 4, 52, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 17
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660055
thermo_feasible = true
