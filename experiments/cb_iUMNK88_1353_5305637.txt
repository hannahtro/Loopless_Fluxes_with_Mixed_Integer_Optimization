┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUMNK88_1353
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUMNK88_1353
----------------------------------
number of metabolites : 1969
number of reactions : 2777
number of genes : 1353

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 111
max_cuts = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2777 flux variables and 5163 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 12, 58, 11, 11, 11, 11, 11, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14, 2, 2, 7, 3, 2, 2, 2, 6, 2, 2, 3, 54, 2, 39, 7, 2, 39, 40, 40]
length(C_list) = 49
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 4, 2, 2, 3, 3, 3, 8, 3, 4, 3, 4, 21, 3, 7, 3, 3, 3, 4, 4, 2, 3, 4, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 2, 30, 3, 3, 3, 3, 6, 5, 3, 4, 4, 121, 5, 8, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 2, 3, 137, 5, 9, 2, 3, 141, 9, 5, 3, 8, 7, 22]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 2, 13, 4, 4, 4, 5, 7, 2, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 6, 2, 21, 7, 3, 6, 16]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 29, 2, 3, 3, 4, 4, 4, 3, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 8, 3, 3, 2, 4, 6, 3, 9, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 6, 3, 6, 5, 5, 4, 4, 6, 38, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 3, 5, 3, 4, 5, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 5, 62, 5, 4, 5, 3, 4, 8, 8, 5, 5, 5, 5, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 8, 4, 4, 4, 5, 5, 4, 4, 5, 4, 7, 4, 8, 4, 6, 5, 6, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 7, 165, 6, 5, 5, 5, 49, 5, 41]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [12, 3, 3, 3, 67, 8, 4, 3, 5, 4, 284, 8, 5, 4, 7, 4, 4, 5, 6, 4, 7, 4, 5, 4, 10, 6, 4, 4, 7, 7, 48, 6, 6, 4, 4, 5, 5, 4, 3, 3, 6, 5, 7, 4, 5, 4, 4, 7, 6, 6, 8, 5, 11, 6, 5, 5, 5, 4, 4, 4, 4, 6, 4]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 5, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 12, 15, 6, 7, 10, 3, 5, 5, 4, 4, 8, 4, 6, 2, 4, 5, 8, 5, 6, 6, 4, 5, 7, 5, 3, 4, 4, 5, 5, 4, 5, 6, 12, 5, 23, 5, 4, 4, 4, 12, 4, 4, 5, 5, 4, 13, 5, 7, 5, 9, 4]
length(C_list) = 54
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 5, 2, 11, 11, 11, 14, 11, 62, 11, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 18, 13, 15, 14, 13, 13, 13, 13, 37, 14, 24, 17, 13, 13, 13, 14, 13, 14, 13, 12, 7, 10, 225, 8, 6, 5, 3, 7, 6, 5, 6, 5, 7, 3, 6, 10, 39, 7, 6, 7, 38, 39, 39]
length(C_list) = 56
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419019404
thermo_feasible = true
