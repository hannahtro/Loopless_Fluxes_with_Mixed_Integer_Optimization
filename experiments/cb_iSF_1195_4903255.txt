┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSF_1195
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSF_1195
----------------------------------
number of metabolites : 1917
number of reactions : 2630
number of genes : 1195

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 53
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2630 flux variables and 4868 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [4, 5, 16, 16, 17, 17, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 2, 7, 15, 14, 13, 13, 14, 13, 13, 14, 13, 13, 13, 14, 13, 2, 14]
length(C_list) = 34
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 4, 2, 2, 2, 3, 2, 2, 2, 3, 2, 5, 2, 2]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 3, 5, 4, 4, 3, 22, 5, 4, 5, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 3, 7, 9, 8, 2, 4, 5, 181, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 2, 4, 3, 26, 5, 4, 5, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 2, 5, 3, 3, 4, 3, 6, 11, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 2, 2, 5, 2, 4, 4, 2, 2]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 5, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [12, 4, 2, 4, 4, 7, 15, 4, 4, 3, 8, 178, 4, 8, 2, 16, 4, 3, 6, 3, 4, 4, 4, 2, 4, 5, 4, 5, 4, 4, 5, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 202]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 2, 15, 15, 14, 15, 14, 4, 9, 7, 9, 10, 7, 7, 7, 8, 7, 3, 9, 10, 9, 27, 9, 9, 9, 4, 26]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 3, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 11, 5, 10, 247, 4, 5, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.914592306432213
thermo_feasible = true
