ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
STM_v1_0
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

STM_v1_0
----------------------------------
number of metabolites : 1802
number of reactions : 2545
number of genes : 1271

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 51
max_cuts = 13
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2545 flux variables and 4745 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 8, 4, 3, 3, 12, 11, 18, 11, 39, 11, 11, 11, 16, 16, 17, 16, 18, 17, 16, 13]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 42, 2, 2, 2, 3, 4, 3, 4, 82, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 12, 4, 3, 4, 259, 4, 5, 7, 5, 4, 11, 3, 82]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 3, 319, 5, 3, 29, 8, 2, 5, 4, 5, 6, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 10, 15, 4, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 10, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 6
termination = MathOptInterface.OPTIMAL
objective_value = 0.477833727441661
thermo_feasible = true
