ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 25
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 3, 22, 2, 10, 7, 6, 2, 3, 4, 3, 4, 3, 2, 4, 3, 9, 4, 5, 6, 6, 2, 4, 5, 197, 2, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 9, 135, 2, 2, 2, 4, 4, 4, 4, 2, 8, 3, 4, 5, 4, 8, 2, 5, 111, 4, 2, 4, 5, 2, 4, 9, 3, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 6, 4, 6, 4, 2, 3, 7, 5, 6, 4, 3, 6, 5, 3, 8, 6, 3, 9, 4, 5, 5, 5, 22, 4, 4, 491, 7, 16, 6, 5, 3, 67, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 4, 7, 6, 6, 5, 4, 7, 5, 5, 5, 9, 3, 4, 3, 3, 5, 8, 5, 4, 4, 5, 5, 3, 7, 8, 2, 5, 10, 4, 575, 2, 4, 68]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 3, 4, 4, 8, 2, 9, 7, 9, 4, 6, 5, 10, 5, 4, 5, 3, 4, 2, 5, 3, 154, 5, 5, 4, 7, 2, 40, 8, 4, 3, 5, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 6, 4, 3, 4, 5, 105, 4, 44, 4, 2, 5, 4, 4, 5, 8, 6, 4, 26, 5, 8, 9, 3, 7, 4, 3, 4, 5, 4, 133, 7, 4, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 3, 4, 9, 4, 6, 4, 3, 4, 5, 4, 4, 5, 9, 4, 4, 236, 4, 4, 9, 4, 20, 6, 7, 4, 3, 5, 5, 17, 11, 62, 8, 2, 154, 9, 4, 405]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 4, 4, 4, 9, 6, 4, 6, 5, 4, 4, 3, 4, 3, 5, 4, 7, 4, 4, 7, 4, 4, 6, 8, 3, 5, 321, 3, 4, 302, 4, 27, 3, 5, 6, 4, 5, 4, 8, 5, 5, 4, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 5, 6, 7, 5, 5, 7, 4, 4, 6, 7, 7, 5, 5, 4, 4, 3, 6, 5, 5, 2, 5, 6, 6, 6, 7, 5, 6, 3, 4, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 4, 7, 4, 4, 7, 6, 8, 6, 4, 4, 2, 435, 4, 4, 3, 3, 2, 4, 4, 3, 7, 8, 8, 5, 3, 6, 4, 4, 4, 5, 7, 6, 4, 4, 3, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 8, 9, 5, 4, 4, 7, 3, 5, 6, 3, 4, 13, 7, 4, 5, 7, 8, 5, 5, 8, 4, 4, 15, 26, 5, 4, 3, 6, 5, 7, 3, 3, 9, 6, 4, 9, 4]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 9, 13, 6, 5, 4, 4, 10, 4, 5, 4, 28, 6, 6, 3, 8, 6, 8, 8, 7, 10, 6, 378, 7, 4, 5, 5, 5, 6, 7, 6, 6, 7, 322, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 7, 13, 4, 8, 4, 5, 5, 2, 4, 7, 5, 5, 5, 4, 4, 3, 4, 9, 7, 3, 3, 5, 7, 6, 97, 5, 5, 7, 5, 7, 6, 3, 6, 5, 4, 5, 10, 6, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 5, 6, 4, 4, 5, 4, 4, 5, 3, 6, 16, 8, 7, 4, 6, 5, 6, 4, 8, 2, 8, 5, 4, 5, 4, 5, 4, 5, 5, 6, 5, 8, 233, 6, 4, 5, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 5, 7, 5, 6, 4, 7, 4, 9, 4, 8, 7, 9, 4, 4, 6, 11, 8, 4, 3, 6, 9, 14, 5, 4, 5, 8, 3, 11, 11, 3, 6, 8, 2, 5, 10, 11, 88]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 10, 16, 4, 6, 6, 4, 7, 412, 4, 4, 5, 116, 8, 4, 4, 9, 9, 5, 5, 5, 6, 8, 7, 5, 11, 9, 4, 9, 4, 4, 7, 4, 4, 11, 6, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 7, 9, 7, 9, 5, 6, 10, 3, 7, 11, 246, 7, 7, 10, 3, 9, 10, 6, 6, 6, 13, 4, 7, 4, 7, 7, 8, 4, 5, 4, 2, 4, 6, 4, 4, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 6, 7, 8, 2, 4, 3, 4, 4, 5, 6, 7, 8, 6, 5, 8, 3, 13, 6, 3, 7, 5, 6, 8, 5, 6, 3, 6, 15, 6, 5, 6, 42, 6, 9, 7, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 8, 294, 5, 7, 4, 4, 4, 7, 4, 5, 4, 4, 4, 6, 6, 16, 4, 4, 485, 5, 7, 6, 4, 15, 4, 6, 6, 4, 8, 4, 4, 5, 3, 4, 344, 5, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [8, 6, 16, 4, 6, 4, 4, 5, 6, 4, 4, 6, 5, 8, 6, 4, 9, 7, 5, 4, 4, 6, 4, 3, 5, 8, 6, 18, 10, 3, 65, 6]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 6, 6, 8, 3, 7, 3, 5, 6, 6, 6, 7, 6, 8, 11, 6, 6, 5, 6, 6, 10, 5, 5, 6, 6, 6, 6, 6, 6, 8, 7, 5, 5, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 4, 3, 7, 7, 4, 6, 4, 6, 5, 4, 3, 4, 5, 4, 4, 7, 4, 7, 4, 7, 4, 6, 8, 7, 5, 7, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 7, 13, 3, 4, 4, 16, 6, 8, 9, 4, 24, 3, 4, 14, 19, 5, 3, 4, 8, 4, 10, 9, 4, 9, 6, 10, 9, 6, 9, 6, 12, 305, 8, 6, 6, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 2, 3, 3, 4, 6, 8, 4, 4, 4, 4, 5, 6, 7, 4, 3, 4, 3, 8, 4, 4, 4, 8, 3, 8, 10, 4, 4, 6, 76, 4, 3, 63, 7, 4, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 7, 4, 7, 4, 4, 4, 6, 9, 4, 3, 6, 3, 6, 7, 4, 6, 3, 4, 19, 4, 4, 8, 4, 4, 6, 6, 3, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 3, 89, 4, 12, 4, 4, 4, 4, 5, 5, 10, 4, 60, 5, 21, 5, 4, 5, 7, 7, 10, 4, 4, 4, 5, 5, 4, 5, 4, 4, 5, 16, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [16, 14, 6, 7, 8, 113, 6, 3, 4, 4, 3, 10, 4, 4, 4, 6, 4, 11, 457, 8, 12, 4, 3, 3, 4, 4, 7, 50, 4, 7, 6, 6, 10, 4, 7, 4, 3, 4, 4, 5, 4, 14]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 3, 10, 5, 5, 7, 4, 9, 4, 4, 7, 4, 4, 4, 7, 6, 3, 8, 4, 4, 5, 12, 4, 4, 4, 4, 4, 9, 3, 12, 4, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 5, 11, 3, 4, 4, 15, 3, 5, 6, 14, 9, 5, 4, 8, 11, 4, 7, 8, 12, 220, 5, 3, 7, 11, 6, 5, 4, 367, 4, 5, 6, 4, 23, 4, 3, 4, 4, 4, 4, 9, 8, 4, 79]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 59, 11, 6, 6, 7, 7, 5, 16, 4, 3, 7, 3, 12, 8, 4, 8, 6, 12, 4, 4, 4, 4, 7, 10, 11, 4, 4, 11, 6, 8, 5, 4, 4, 5, 6, 6, 5, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 9, 3, 4, 5, 8, 43, 27, 7, 4, 4, 50, 6, 9, 4, 10, 3, 164, 2, 5, 4, 5, 9, 9, 6, 4, 3, 3, 4, 4, 9, 7, 15, 5, 6, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 3, 10, 4, 6, 8, 8, 10, 4, 4, 5, 4, 19, 4, 437, 10, 4, 5, 7, 3, 3, 4, 7, 10, 8, 8, 13, 58, 10, 6, 4, 5, 8, 6, 13, 8, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 8, 3, 8, 7, 10, 7, 3, 8, 3, 187, 8, 7, 9, 3, 6, 5, 10, 5, 3, 8, 7, 3, 6, 9, 6, 12, 9, 6, 84, 4, 8, 6, 163, 11, 7, 10, 13, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 3, 7, 5, 9, 6, 11, 13, 6, 4, 7, 2, 10, 4, 3, 6, 4, 3, 9, 134, 5, 6, 5, 10, 6, 7, 6, 3, 8, 89, 139, 98, 5, 106, 3, 12, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [10, 3, 427, 10, 4, 4, 15, 10, 3, 5, 4, 7, 5, 7, 3, 8, 6, 3, 3, 5, 3, 4, 4, 3, 5, 4, 4, 3, 22, 4, 3, 14, 6, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [2, 3, 188, 3, 3, 10, 3, 6, 9, 3, 8, 4, 4, 3, 4, 11, 3, 3, 17, 6, 3, 4, 4, 6, 7, 5, 64, 2, 9, 4, 4, 3, 8, 57, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [16, 3, 5, 3, 3, 4, 8, 8, 4, 5, 6, 3, 3, 8, 3, 4, 7, 10, 4, 6, 36, 5, 8, 6, 7, 13, 7, 9, 5, 5, 15, 4, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [8, 4, 94, 8, 6, 9, 6, 6, 4, 9, 7, 8, 4, 5, 52, 6, 10, 18, 6, 6, 4, 17, 7, 6, 11, 5, 359, 3, 12, 10, 3, 15, 6, 4, 3, 4, 17, 5, 8, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 3, 7, 4, 3, 3, 5, 5, 27, 10, 4, 5, 3, 5, 3, 6, 7, 4, 3, 3, 72, 11, 6, 3, 4, 5, 8, 3, 262, 4, 5, 5, 11, 7, 5, 15, 7, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 4, 4, 5, 8, 4, 10, 4, 6, 4, 12, 6, 4, 9, 4, 6, 3, 15, 8, 4, 4, 9, 11, 10, 6, 5, 8, 8, 8, 6, 5, 4, 6, 22, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [9, 3, 9, 6, 4, 10, 9, 4, 10, 7, 3, 7, 10, 6, 4, 4, 10, 5, 6, 8, 10, 13, 3, 3, 199, 6, 6, 4, 40, 5, 4, 6, 4, 3, 7, 7, 3, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 6, 8, 12, 6, 10, 7, 7, 4, 11, 193, 5, 5, 4, 4, 10, 5, 3, 4, 362, 4, 6, 340, 3, 4, 6, 3, 5, 5, 3, 5, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 3, 6, 7, 292, 5, 6, 6, 8, 4, 10, 6, 6, 8, 6, 5, 6, 3, 7, 7, 8, 4, 3, 3, 5, 7, 4, 6, 6, 3, 7, 4, 6, 8, 7, 10, 4, 10, 11, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [5, 3, 9, 11, 3, 10, 4, 3, 11, 4, 12, 38, 4, 15, 3, 7, 3, 7, 37, 152, 4, 4, 7, 3, 6, 12, 4, 7, 5, 3, 4, 6, 3, 7, 5, 3, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 9, 6, 8, 11, 4, 4, 5, 10, 4, 3, 11, 4, 6, 3, 8, 6, 4, 3, 7, 332, 6, 257, 3, 11, 130, 7, 4, 7, 3, 6, 10, 9, 8, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 6, 5, 6, 8, 4, 4, 3, 8, 6, 6, 4, 6, 3, 3, 8, 6, 8, 11, 3, 3, 5, 9, 127, 4, 7, 6, 9, 5, 5, 4, 3, 3, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 4, 4, 4, 5, 6, 6, 3, 6, 5, 4, 4, 5, 3, 4, 9, 20, 4, 6, 12, 24, 5, 4, 13, 5, 3, 3, 8, 3, 6, 9, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [4, 12, 5, 7, 3, 9, 10, 12, 8, 4, 8, 4, 6, 220, 4, 7, 6, 3, 6, 7, 11, 9, 193, 44, 12, 3, 138, 5, 10, 6, 79, 5, 17, 5, 5, 6, 4, 5, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [4, 5, 152, 4, 5, 4, 7, 10, 4, 374, 4, 6, 11, 11, 7, 3, 17, 9, 7, 6, 5, 12, 10, 4, 4, 5, 8, 9, 6, 10, 6, 4, 9, 8, 5, 7, 6, 8, 3, 60, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [18, 5, 6, 7, 5, 6, 286, 11, 8, 7, 7, 7, 3, 470, 5, 8, 6, 3, 6, 6, 6, 5, 6, 6, 3, 5, 7, 6, 7, 4, 7, 9, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [15, 9, 4, 6, 4, 4, 4, 6, 10, 4, 6, 6, 3, 8, 4, 6, 5, 4, 9, 7, 5, 7, 3, 5, 5, 4, 5, 7, 5, 4, 483, 3, 12, 5, 5, 6, 3, 4, 6, 6, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [11, 124, 7, 7, 4, 3, 6, 3, 4, 5, 10, 4, 10, 3, 4, 7, 6, 8, 6, 7, 7, 4, 20, 6, 4, 11, 9, 3, 6, 5, 5, 7, 8, 5, 5, 7, 8, 7, 13, 6, 7, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 7, 6, 4, 4, 7, 8, 7, 6, 3, 4, 12, 7, 5, 5, 7, 5, 11, 8, 5, 6, 8, 4, 6, 6, 7, 5, 7, 7, 7, 5, 5, 7, 6, 6, 14, 3, 6, 5, 7, 240, 3]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [14, 3, 7, 7, 11, 10, 8, 6, 4, 7, 8, 5, 11, 9, 5, 7, 10, 9, 10, 3, 8, 6, 8, 8, 4, 5, 12, 5, 9, 12, 10, 16, 5, 5, 10, 5, 8, 6, 10, 11, 7, 6, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 4, 7, 5, 8, 9, 10, 7, 13, 48, 11, 10, 5, 4, 7, 3, 11, 9, 7, 9, 6, 11, 8, 5, 8, 6, 358, 6, 10, 6, 25, 4, 9, 8, 7, 9, 88, 2, 49, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 4, 10, 6, 7, 6, 9, 6, 6, 8, 9, 10, 6, 17, 7, 182, 5, 5, 8, 19, 3, 6, 6, 7, 3, 8, 4, 6, 9, 8, 4, 4, 7, 10, 6, 6, 5, 3, 4, 6, 8, 8, 10, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [21, 7, 13, 9, 10, 7, 5, 4, 5, 9, 10, 10, 5, 6, 4, 7, 9, 10, 7, 6, 3, 5, 5, 10, 6, 9, 3, 9, 5, 4, 8, 6, 5, 12, 11, 106, 3, 8, 12, 7, 3, 10, 9, 7, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [14, 10, 6, 6, 9, 9, 10, 6, 6, 5, 10, 7, 5, 6, 263, 6, 6, 11, 6, 7, 11, 4, 16, 6, 6, 5, 178, 5, 4, 4, 6, 6, 6, 10, 13, 7, 13, 8, 5, 5, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 8, 10, 3, 4, 5, 4, 6, 4, 7, 11, 10, 14, 13, 7, 131, 7, 4, 5, 12, 10, 6, 6, 5, 6, 357, 5, 7, 318, 5, 11, 9, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 3, 3, 9, 4, 6, 5, 4, 5, 7, 5, 10, 2, 5, 5, 5, 4, 9, 7, 323, 5, 5, 8, 3, 2]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 17, 3, 8, 4, 3, 6, 11, 34, 9, 8, 7, 5, 3, 9, 4, 35, 6, 293, 31, 4, 9, 8, 6, 10, 7, 11, 14, 5, 137, 7, 6, 4, 15]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 3, 22, 5, 8, 6, 7, 3, 4, 4, 5, 7, 8, 5, 5, 11, 2, 454, 14, 3, 8, 5, 10, 5, 3, 4, 10, 5, 4, 9, 11, 7, 3, 6, 40, 8, 9, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [11, 3, 19, 4, 4, 4, 6, 10, 30, 8, 3, 12, 6, 5, 4, 6, 102, 9, 8, 7, 4, 4, 12, 13, 9, 10, 5, 6, 16, 12, 58, 11, 5, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 4, 7, 7, 6, 6, 8, 8, 7, 12, 4, 6, 6, 4, 4, 5, 4, 6, 4, 10, 6, 5, 15, 5, 5, 2, 6, 144, 7, 4, 7, 96, 4, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [10, 6, 9, 6, 8, 110, 6, 8, 3, 6, 6, 7, 7, 3, 8, 7, 7, 11, 3, 7, 8, 4, 13, 5, 307, 7, 3, 4, 7, 5, 6, 5, 4, 8, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [14, 6, 7, 9, 4, 12, 4, 6, 8, 7, 8, 5, 5, 4, 7, 3, 10, 8, 7, 5, 5, 11, 11, 545, 6, 5, 5, 9, 8, 6, 4, 18, 7, 21, 177, 7, 8, 11, 6, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 5, 11, 9, 5, 7, 11, 7, 4, 5, 5, 9, 8, 3, 7, 15, 10, 7, 91, 5, 5, 9, 42, 8, 5, 4, 7, 6, 8, 4, 10, 7, 7, 9, 4, 4, 5, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [6, 13, 11, 14, 4, 8, 9, 6, 8, 7, 8, 10, 17, 5, 6, 17, 5, 6, 24, 9, 3, 6, 10, 11, 23, 6, 10, 7, 6, 12, 5, 7, 6, 7, 7, 12, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [18, 9, 9, 7, 109, 3, 11, 4, 8, 10, 6, 6, 7, 4, 6, 11, 5, 7, 10, 7, 9, 6, 8, 9, 10, 5, 6, 9, 8, 11, 13, 9, 41, 6, 14, 7, 8, 8, 12, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 91, 9, 5, 12, 6, 10, 8, 6, 8, 5, 10, 7, 9, 7, 6, 5, 6, 3, 17, 6, 6, 6, 7, 4, 7, 7, 180, 57, 8, 5, 8, 177, 6, 5, 13, 10, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 10, 9, 4, 8, 7, 7, 10, 2, 5, 8, 13, 10, 10, 13, 12, 9, 8, 7, 4, 4, 5, 9, 6, 3, 7, 8, 4, 8, 10, 9, 32]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 3, 6, 9, 7, 12, 5, 7, 8, 12, 4, 6, 7, 7, 10, 6, 14, 5, 4, 4, 401, 4, 6, 6, 96, 8, 8, 3, 69, 36, 8, 12, 8, 12, 3, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 4, 11, 3, 3, 6, 4, 4, 252, 4, 7, 4, 5, 6, 4, 4, 5, 306, 16, 3, 5, 5, 8, 2, 3, 5, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 5, 5, 8, 6, 25, 6, 7, 12, 6, 6, 11, 10, 17, 5, 6, 8, 11, 7, 6, 6, 6, 8, 100, 9, 7, 3, 7, 6, 8, 11, 11, 6, 10, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 238, 7, 8, 8, 9, 7, 4, 11, 6, 9, 4, 10, 6, 8, 9, 7, 9, 10, 9, 6, 7, 10, 4, 8, 10, 9, 9, 5, 13, 9, 9, 5, 12, 14, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 9, 8, 6, 10, 10, 8, 8, 7, 7, 10, 9, 9, 13, 2, 7, 7, 8, 11, 9, 29, 9, 8, 5, 11, 8, 7, 7, 8, 8, 4, 7, 9, 6, 20, 9, 6, 8, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 7, 7, 227, 8, 13, 11, 4, 4, 10, 4, 3, 12, 11, 6, 9, 17, 5, 10, 3, 5, 7, 4, 10, 129, 10, 8, 10, 10, 3, 8, 7, 10, 11, 5, 6, 5, 7, 4, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [9, 5, 3, 3, 6, 9, 6, 7, 6, 8, 3, 7, 4, 6, 4, 5, 6, 6, 6, 7, 6, 3, 6, 6, 4, 5, 8, 9, 8, 127, 6, 7, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 6, 10, 5, 8, 4, 9, 11, 5, 4, 8, 6, 9, 12, 9, 3, 7, 202, 7, 4, 6, 5, 7, 8, 6, 4, 46, 5, 8, 6, 9, 7, 274, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 5, 8, 9, 8, 15, 4, 8, 5, 6, 4, 4, 3, 9, 3, 10, 8, 9, 9, 4, 6, 8, 9, 4, 3, 16, 8, 4, 9, 9, 7, 10, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 9, 3, 5, 10, 7, 6, 4, 8, 8, 11, 8, 10, 8, 6, 4, 5, 5, 3, 9, 3, 4, 8, 10, 5, 9, 10, 5, 9, 8, 164, 10, 7, 11]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [19, 4, 4, 8, 4, 10, 7, 4, 10, 3, 5, 3, 6, 8, 7, 8, 3, 8, 9, 10, 15, 12, 13, 10, 5, 3, 4, 9, 9, 6, 12, 6, 4, 8, 15, 10, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 5, 45, 7, 3, 5, 17, 11, 4, 5, 8, 15, 8, 8, 9, 6, 15, 3, 7, 4, 11, 4, 5, 10, 14, 4, 8, 12, 6, 8, 4, 3, 7, 11, 12, 11, 8, 3, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [12, 5, 6, 6, 7, 9, 7, 7, 12, 8, 12, 6, 4, 7, 6, 8, 4, 11, 13, 9, 4, 10, 6, 6, 7, 7, 5, 8, 4, 8, 11, 146, 6, 7, 8, 9, 7, 5, 6, 9, 4, 26, 11, 10]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [11, 9, 133, 9, 119, 10, 7, 4, 8, 6, 5, 8, 6, 8, 7, 13, 10, 6, 5, 8, 5, 13, 4, 12, 6, 194, 8, 22, 10, 4, 6, 9, 13]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [12, 5, 11, 11, 10, 5, 6, 3, 4, 3, 3, 5, 6, 6, 3, 12, 3, 6, 10, 11, 8, 6, 11, 10, 7, 3, 7, 17, 6, 11, 8, 16, 4, 13, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 3, 9, 3, 4, 8, 6, 7, 3, 6, 4, 4, 9, 25, 6, 4, 7, 14, 7, 4, 3, 6, 5, 7, 9, 4, 5, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [13, 10, 6, 10, 6, 4, 4, 9, 8, 7, 5, 8, 5, 7, 36, 4, 3, 17, 5, 4, 5, 7, 4, 6, 4, 5, 4, 6, 6, 12, 9, 4, 14, 3, 5, 11, 5, 7, 10, 12, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [12, 3, 6, 11, 7, 8, 6, 10, 8, 3, 4, 4, 19, 14, 5, 6, 4, 5, 14, 4, 5, 4, 6, 7, 3, 3, 60, 14, 6, 11, 5, 12, 3, 21, 216, 4, 7, 6, 12, 11, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 3, 10, 7, 8, 7, 5, 12, 541, 7, 12, 5, 11, 4, 8, 9, 5, 6, 10, 4, 9, 6, 5, 92, 14, 17, 25, 186, 7, 5, 6, 8, 10, 12, 192, 7, 12, 5, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 5, 4, 4, 4, 5, 5, 12, 6, 9, 3, 4, 5, 5, 10, 4, 4, 4, 3, 3, 3, 7, 7, 3, 5, 5, 7, 9, 6, 7, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 3, 6, 7, 139, 8, 7, 11, 4, 4, 12, 7, 6, 5, 9, 4, 7, 6, 4, 7, 4, 7, 11, 9, 5, 4, 4, 20, 19, 4, 198, 6, 7, 4, 4, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [14, 9, 9, 6, 4, 12, 8, 117, 4, 4, 6, 7, 11, 5, 5, 10, 16, 4, 14, 11, 7, 7, 4, 11, 8, 9, 8, 6, 9, 11, 13, 8, 327, 9, 6, 4, 5, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [12, 12, 12, 10, 5, 6, 11, 5, 7, 13, 4, 4, 9, 4, 10, 8, 5, 11, 9, 9, 116, 7, 3, 6, 3, 9, 7, 7, 7, 8, 4, 11, 9, 6, 8, 3, 12, 48, 5, 8, 11]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [6, 11, 9, 12, 9, 9, 5, 7, 13, 5, 9, 398, 8, 14, 63, 5, 6, 9, 7, 6, 3, 9, 7, 39, 337, 86, 5, 13, 4, 9, 27, 7, 9, 4, 9, 11, 5, 11, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [24, 15, 19, 6, 6, 8, 10, 4, 4, 10, 6, 3, 5, 5, 8, 11, 3, 13, 14, 9, 7, 5, 8, 5, 17, 5, 8, 10, 6, 7, 8, 5, 7, 5, 6, 8, 3, 9, 5, 9, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 6, 7, 3, 12, 5, 12, 8, 12, 6, 3, 15, 85, 49, 10, 5, 4, 18, 8, 6, 3, 7, 4, 6, 6, 8, 3, 8, 10, 9, 7, 10, 38, 5, 6, 4, 6, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 5, 6, 6, 7, 8, 6, 3, 7, 10, 5, 4, 5, 11, 5, 7, 9, 3, 5, 4, 11, 6, 5, 6, 8, 8, 5, 5, 7, 7, 9, 6, 9, 13, 6, 10, 4, 3, 4, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 10, 4, 13, 9, 18, 9, 9, 7, 10, 23, 20, 11, 13, 10, 8, 11, 7, 2, 18, 7, 35, 8, 8, 8, 6, 13, 6, 4, 6, 9, 6, 7, 10, 9, 7, 4, 6, 4, 3, 7, 8, 10, 7, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 7, 5, 8, 9, 3, 3, 10, 11, 8, 11, 5, 3, 9, 3, 5, 184, 9, 7, 9, 6, 9, 4, 4, 235, 10, 11, 265, 4, 20, 7, 11, 12, 11, 9, 9, 18, 27, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [18, 8, 17, 5, 5, 3, 3, 5, 7, 4, 4, 5, 8, 9, 5, 4, 4, 3, 6, 9, 3, 4, 6, 10, 64, 3, 6, 5, 7, 4, 9, 502, 5, 8, 4, 6, 5, 8, 4, 28]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 7, 6, 6, 3, 8, 5, 6, 4, 7, 10, 6, 8, 4, 6, 7, 6, 7, 7, 5, 10, 7, 416, 6, 7, 5, 8, 5, 7, 4, 3, 3, 16, 7, 8, 9, 9, 11, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [16, 13, 5, 4, 37, 6, 20, 12, 11, 4, 8, 133, 20, 7, 5, 13, 29, 3, 48, 7, 189, 15, 7, 9, 7, 17, 11, 3, 7, 5, 6, 4, 5, 12, 15, 15, 168, 22, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [16, 5, 10, 7, 7, 7, 9, 12, 3, 9, 9, 6, 5, 3, 6, 4, 9, 7, 11, 6, 7, 13, 10, 7, 13, 11, 11, 5, 10, 4, 8, 3, 9, 6, 14, 4, 6, 12, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 251, 7, 8, 47, 6, 11, 8, 6, 10, 9, 225, 14, 9, 6, 6, 5, 5, 9, 6, 4, 6, 49, 100, 7, 12, 5, 5, 8, 7, 6, 5, 4, 10, 5, 16, 5, 13, 5, 11]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 4, 8, 5, 4, 20, 21, 16, 7, 7, 12, 6, 6, 4, 5, 7, 6, 4, 15, 12, 5, 7, 7, 5, 9, 7, 6, 3, 8, 3, 4, 8, 7, 6, 6, 16, 4, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [11, 3, 12, 5, 8, 7, 8, 8, 69, 7, 5, 3, 12, 6, 358, 4, 6, 16, 6, 38, 25, 5, 15, 7, 8, 51, 7, 10, 14, 4, 5, 5, 5, 6, 11, 5, 5, 11, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 14, 4, 13, 5, 4, 13, 19, 187, 6, 13, 6, 15, 4, 13, 6, 7, 6, 6, 3, 4, 15, 13, 207, 11, 9, 13, 12, 7, 13, 16, 16, 4, 15, 6, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [11, 13, 10, 7, 18, 8, 18, 7, 8, 12, 21, 14, 7, 23, 9, 4, 8, 12, 5, 4, 121, 10, 8, 11, 6, 8, 7, 3, 7, 5, 13, 6, 7, 4, 9, 13, 10, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 10, 4, 3, 10, 6, 4, 6, 9, 494, 4, 3, 11, 15, 7, 18, 6, 7, 9, 4, 7, 5, 5, 22, 23, 6, 7, 4, 9, 8, 14, 6, 4, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7, 6, 7, 6, 7, 8, 7, 7, 10, 4, 3, 6, 4, 5, 5, 8, 6, 6, 4, 8, 5, 7, 10, 5, 40, 8, 7, 7, 7, 3, 24, 7, 9, 7, 8, 7, 7, 5, 8, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 8, 11, 8, 4, 7, 9, 9, 7, 8, 4, 5, 7, 359, 3, 9, 171, 4, 8, 3, 4, 6, 7, 7, 4, 8, 143, 7, 64, 7, 7, 8, 8, 11, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 13, 10, 4, 9, 16, 4, 13, 4, 3, 4, 3, 6, 8, 49, 5, 8, 14, 6, 16, 15, 16, 10, 5, 6, 6, 8, 6, 6, 10, 9, 7, 8, 14, 14, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [6, 12, 188, 10, 9, 5, 7, 8, 4, 8, 8, 7, 5, 9, 6, 245, 6, 7, 9, 8, 4, 4, 5, 8, 8, 6, 6, 5, 5, 7, 9, 9, 7, 17, 4, 3, 8, 7, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [5, 8, 4, 199, 5, 6, 6, 6, 4, 3, 16, 7, 3, 4, 6, 6, 10, 3, 446, 6, 11, 6, 6, 5, 6, 8, 9, 6, 8, 7, 30, 6, 134, 6, 6, 5, 6, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 7, 6, 127, 6, 6, 5, 5, 9, 74, 7, 7, 4, 4, 21, 5, 3, 6, 22, 6, 6, 6, 8, 8, 7, 5, 68, 6, 13, 7, 5, 8, 8, 7, 8, 4, 8, 6, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 9, 7, 3, 5, 6, 4, 5, 8, 8, 7, 7, 6, 7, 8, 5, 7, 5, 6, 32, 4, 77, 4, 103, 433, 5, 24, 3, 7, 3, 9, 14, 4, 6, 3, 6, 6, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 4, 6, 5, 4, 6, 4, 7, 7, 6, 5, 3, 3, 7, 7, 4, 6, 8, 5, 7, 5, 6, 6, 5, 6, 4, 6, 6, 4, 4, 5, 6, 6, 7, 311, 6, 6, 19]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 8, 4, 4, 7, 4, 7, 10, 5, 6, 4, 4, 6, 6, 5, 8, 6, 5, 9, 4, 8, 7, 6, 7, 9, 5, 5, 5, 5, 44, 6, 3, 5, 10, 7, 8, 5, 8, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [10, 11, 5, 6, 6, 6, 4, 4, 5, 7, 12, 5, 4, 5, 6, 8, 6, 7, 4, 4, 5, 4, 6, 8, 5, 8, 5, 7, 6, 6, 6, 6, 6, 4, 4, 6, 4, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [10, 11, 3, 4, 5, 210, 8, 11, 4, 265, 4, 10, 4, 10, 7, 4, 4, 3, 15, 4, 6, 4, 3, 107, 6, 13, 10, 4, 12, 7, 5, 14, 3]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [11, 4, 8, 9, 5, 9, 9, 9, 5, 4, 11, 30, 6, 5, 451, 4, 3, 9, 23, 8, 3, 4, 6, 7, 8, 7, 8, 6, 3, 7, 9, 7, 11, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [5, 6, 9, 5, 5, 8, 11, 22, 6, 6, 5, 12, 4, 155, 36, 10, 6, 3, 7, 5, 9, 6, 14, 7, 6, 6, 9, 6, 10, 6, 13, 6, 5, 7, 7, 3, 11, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [10, 6, 11, 5, 10, 4, 5, 7, 11, 9, 16, 12, 4, 8, 5, 47, 14, 6, 5, 15, 7, 9, 6, 9, 17, 7, 9, 11, 10, 7, 15, 4, 9, 7, 5, 7, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 10, 6, 7, 10, 9, 9, 7, 11, 9, 6, 21, 6, 11, 6, 11, 11, 8, 9, 10, 5, 8, 8, 8, 8, 9, 10, 5, 4, 5, 5, 7, 7, 8, 9, 9, 11, 9, 10, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 5, 12, 5, 10, 6, 7, 7, 7, 8, 241, 4, 8, 9, 10, 9, 6, 8, 7, 4, 12, 5, 11, 6, 11, 9, 43, 10, 9, 5, 10, 8, 9, 7, 11, 6, 9, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 10, 3, 22, 11, 3, 10, 10, 9, 3, 22, 5, 8, 13, 10, 9, 5, 11, 7, 16, 10, 36, 11, 8, 10, 6, 4, 13, 34, 7, 5, 6, 8, 4, 6, 5, 6, 8, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 9, 9, 4, 58, 6, 20, 4, 9, 6, 6, 8, 4, 5, 5, 4, 13, 6, 7, 7, 20, 8, 12, 4, 8, 265, 5, 4, 11, 3, 4, 8, 9, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 6, 4, 5, 6, 5, 6, 5, 4, 6, 4, 5, 9, 3, 7, 8, 7, 14, 7, 11, 6, 4, 4, 9, 4, 8, 10, 9, 351, 9, 6, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [11, 14, 6, 11, 8, 4, 5, 10, 12, 14, 4, 9, 12, 6, 9, 8, 7, 9, 15, 4, 99, 11, 9, 12, 9, 15, 10, 8, 9, 8, 8, 17, 10, 8, 7, 11, 8, 43]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 8, 12, 9, 13, 10, 9, 5, 10, 10, 8, 7, 3, 11, 15, 9, 4, 9, 8, 9, 8, 6, 6, 9, 9, 14, 13, 4, 7, 10, 232, 10, 8, 9, 11, 11, 18, 11, 5, 6, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 6, 9, 78, 8, 9, 7, 8, 6, 9, 10, 8, 13, 10, 10, 8, 7, 9, 6, 7, 8, 7, 292, 9, 182, 8, 11, 13, 12, 8, 9, 228, 8, 4, 9, 9, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 8, 9, 7, 6, 7, 10, 9, 7, 5, 7, 7, 4, 7, 4, 8, 8, 8, 9, 8, 9, 9, 25, 6, 5, 9, 6, 10, 10, 4, 6, 10, 10, 9, 10, 6, 5, 6]
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 9, 4, 11, 4, 11, 11, 5, 5, 5, 11, 9, 6, 11, 11, 9, 6, 10, 5, 10, 12, 7, 7, 8, 9, 8, 10, 14, 10, 11, 4, 8, 7, 6, 9, 16, 11, 9, 11, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 6, 8, 8, 6, 7, 6, 9, 7, 8, 6, 6, 5, 6, 6, 6, 8, 12, 5, 7, 10, 6, 6, 6, 8, 97, 9, 6, 6, 8, 6, 8, 5, 7, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 8, 8, 6, 5, 9, 344, 6, 8, 5, 6, 9, 9, 7, 9, 11, 6, 8, 10, 8, 11, 10, 7, 45, 9, 10, 9, 6, 7, 8, 14, 7, 6, 10, 7, 10, 9, 9, 7, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [4, 8, 312, 4, 10, 134, 13, 4, 12, 5, 5, 14, 4, 7, 6, 6, 14, 4, 8, 11, 11, 10, 10, 9, 4, 11, 11, 8, 13, 11, 9, 25, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [6, 6, 34, 5, 8, 17, 5, 9, 7, 10, 7, 7, 4, 5, 6, 9, 7, 4, 10, 6, 5, 7, 6, 3, 11, 7, 8, 9, 7, 10, 10, 7, 7, 9, 8, 3, 10, 7, 7, 34, 7, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 6, 4, 5, 7, 9, 7, 13, 4, 7, 291, 366, 7, 6, 6, 5, 8, 3, 8, 3, 88, 6, 10, 5, 5, 8, 5, 7, 6, 7, 8, 5, 6, 9, 9, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [11, 8, 15, 6, 5, 10, 4, 9, 7, 7, 12, 7, 12, 435, 5, 6, 91, 6, 6, 8, 9, 13, 380, 6, 193, 6, 8, 15, 5, 6, 8, 9, 7, 8, 10, 7, 9, 7, 13]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 8, 6, 9, 12, 8, 5, 8, 13, 9, 10, 11, 7, 9, 11, 24, 6, 8, 11, 3, 4, 12, 11, 6, 9, 8, 4, 6, 11, 8, 8, 12, 11, 13, 9, 7, 6, 8, 10, 12, 11]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [11, 7, 5, 9, 4, 6, 7, 91, 9, 3, 5, 7, 6, 9, 6, 9, 8, 9, 7, 9, 12, 14, 7, 4, 8, 8, 179, 11, 13, 8, 7, 7, 5, 4, 153, 4, 9, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [11, 8, 10, 11, 12, 11, 12, 8, 11, 13, 10, 8, 5, 8, 10, 11, 9, 165, 11, 18, 3, 5, 10, 10, 9, 5, 7, 8, 11, 7, 7, 106, 16, 9, 9, 5, 9, 12, 13, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 4, 6, 8, 13, 8, 13, 23, 24, 13, 8, 11, 14, 5, 8, 7, 6, 10, 11, 11, 5, 4, 6, 11, 9, 9, 9, 10, 23, 16, 8, 11, 7, 8, 3, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [2, 8, 199, 6, 8, 5, 9, 7, 7, 17, 8, 4, 4, 5, 7, 7, 9, 8, 7, 11, 10, 7, 8, 9, 11, 8, 8, 9, 3, 7, 6, 7, 6, 90, 7, 8, 7, 9, 66, 7, 23, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [19, 7, 7, 4, 47, 8, 6, 9, 4, 3, 9, 5, 10, 8, 5, 11, 3, 9, 5, 7, 8, 10, 5, 9, 3, 4, 12, 7, 3, 4, 12, 8, 7, 5, 6, 9, 12, 9, 6, 7, 3, 7, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [4, 8, 184, 12, 10, 13, 14, 9, 6, 8, 9, 8, 11, 13, 7, 6, 3, 8, 15, 7, 6, 6, 11, 22, 4, 5, 6, 9, 6, 11, 14, 11, 7, 5, 5, 12, 11, 12, 8, 11, 12, 9, 10, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [22, 11, 9, 6, 14, 10, 10, 15, 8, 12, 11, 12, 12, 10, 8, 13, 10, 9, 13, 11, 14, 12, 11, 15, 11, 13, 300, 8, 5, 25, 9, 8, 13, 19, 15, 35, 313, 10, 14, 8, 5, 9, 15, 10, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 7, 8, 232, 8, 9, 8, 8, 7, 9, 8, 9, 7, 10, 5, 5, 5, 6, 5, 7, 8, 9, 42, 8, 8, 10, 7, 9, 9, 7, 9, 117, 9, 7, 5, 7, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [5, 9, 9, 10, 4, 5, 6, 14, 12, 11, 8, 13, 10, 4, 9, 4, 11, 7, 5, 9, 9, 14, 8, 8, 8, 8, 4, 5, 7, 7, 10, 7, 3, 10, 34, 11, 9, 7, 10, 7, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 6, 6, 7, 15, 4, 15, 4, 6, 7, 7, 5, 16, 246, 15, 11, 10, 12, 5, 4, 10, 3, 12, 8, 8, 9, 5, 7, 4, 4, 4, 12, 9, 12, 4, 8, 9, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 6, 7, 7, 6, 5, 5, 16, 4, 5, 8, 5, 5, 5, 7, 6, 4, 8, 8, 4, 5, 5, 4, 6, 6, 9, 7, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [11, 5, 18, 5, 7, 4, 5, 8, 7, 6, 8, 8, 8, 6, 3, 5, 13, 7, 8, 159, 3, 11, 7, 10, 8, 4, 10, 6, 5]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 5, 6, 8, 4, 12, 4, 10, 8, 14, 7, 4, 11, 9, 7, 4, 9, 6, 179, 4, 8, 8, 7, 7, 8, 7, 4, 4, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [14, 6, 6, 9, 9, 6, 11, 9, 34, 7, 8, 7, 11, 9, 7, 3, 4, 5, 17, 8, 9, 9, 10, 230, 3, 9, 6, 7, 8, 10, 8, 8, 8, 9, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 4, 6, 19, 7, 6, 6, 7, 6, 6, 6, 6, 8, 5, 5, 8, 6, 8, 6, 5, 7, 7, 6, 5, 5, 5, 7, 6, 8, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 8, 6, 6, 9, 5, 7, 8, 5, 5, 70, 8, 6, 8, 430, 7, 6, 6, 7, 5, 7, 6, 11, 8, 9, 7, 5, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [13, 6, 9, 7, 7, 5, 10, 11, 7, 13, 8, 7, 9, 74, 7, 15, 8, 7, 12, 8, 7, 8, 6, 12, 9, 6, 8, 7, 8, 4, 8, 6, 9, 7, 9, 7, 7, 3, 8, 9, 8, 7, 8, 9]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 6, 9, 15, 9, 24, 7, 6, 12, 8, 5, 14, 4, 17, 4, 6, 8, 9, 3, 6, 4, 6, 5, 122, 7, 11, 5, 10, 9, 8, 6, 3, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [5, 11, 7, 10, 7, 4, 10, 9, 3, 7, 3, 4, 8, 8, 10, 6, 10, 3, 288, 10, 4, 12, 10, 7, 13, 9, 11, 8, 73, 7, 15, 8, 8, 11, 6, 6, 7, 6, 5, 5, 8, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 14, 7, 7, 6, 9, 8, 7, 8, 6, 7, 6, 9, 8, 6, 9, 4, 9, 6, 18, 7, 129, 6, 5, 6, 9, 8, 6, 9, 12, 10, 9, 5, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 10, 10, 11, 7, 10, 12, 8, 7, 8, 12, 4, 7, 18, 12, 11, 10, 8, 12, 5, 7, 12, 7, 11, 11, 11, 11, 8, 11, 6, 10, 7, 5, 10, 5, 8, 11, 9, 11]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [6, 9, 6, 7, 3, 10, 7, 8, 8, 4, 7, 7, 7, 11, 8, 4, 42, 4, 8, 8, 6, 9, 8, 7, 6, 7, 6, 10, 4, 4, 7, 8, 4, 9, 127]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 7, 6, 6, 9, 8, 7, 8, 9, 8, 9, 9, 5, 8, 8, 6, 4, 9, 8, 9, 13, 10, 9, 8, 9, 11, 9, 7, 6, 9, 4, 7, 8, 12, 38, 5, 10, 10, 9, 7, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 5, 10, 9, 10, 6, 10, 4, 11, 8, 9, 4, 3, 4, 8, 17, 8, 8, 6, 8, 6, 68, 6, 7, 3, 8, 3, 13, 8, 6, 9, 14, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 7, 4, 5, 3, 9, 4, 5, 8, 10, 8, 7, 12, 9, 5, 11, 6, 8, 5, 10, 4, 9, 5, 8, 178, 7, 8, 4, 13, 8, 8, 12]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [16, 13, 6, 6, 9, 10, 6, 7, 3, 8, 7, 8, 14, 6, 10, 14, 7, 38, 10, 8, 5, 7, 8, 7, 16, 7, 6, 108, 9, 7, 8, 11, 505, 3, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 7, 4, 8, 28, 4, 10, 6, 14, 7, 8, 5, 5, 5, 3, 7, 4, 3, 7, 5, 6, 9, 6, 4, 8, 26, 4, 6, 15, 5, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5, 12, 4, 5, 8, 7, 4, 7, 8, 8, 9, 5, 4, 4, 5, 7, 7, 7, 7, 21, 5, 6, 7, 9, 5, 5, 5, 10, 8, 3, 4, 9, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5, 8, 4, 5, 5, 7, 6, 6, 5, 5, 12, 5, 4, 4, 10, 10, 4, 8, 5, 5, 7, 5, 8, 3, 5, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 6, 6, 3, 210, 8, 7, 5, 6, 19, 3, 7, 226, 4, 6, 7, 7, 6, 3, 6, 5, 5, 6, 15, 5, 4, 4, 6, 6, 5, 5, 6, 6, 5, 6, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 7, 80, 10, 9, 5, 5, 6, 9, 9, 10, 4, 9, 4, 4, 6, 5, 5, 301, 5, 3, 9, 7, 7, 4, 4, 6, 8, 7, 10, 9, 4, 6, 5, 11, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 6, 9, 8, 12, 7, 5, 6, 4, 4, 3, 9, 4, 7, 8, 8, 8, 3, 5, 9, 8, 74, 4, 11, 7, 10, 8, 11, 5, 8, 7, 11, 40, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 8, 5, 7, 7, 10, 9, 7, 6, 30, 5, 9, 8, 4, 7, 6, 3, 5, 68, 7, 606, 8, 5, 7, 7, 11, 10, 23, 7, 5, 9, 6, 4, 5, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 8, 8, 8, 46, 8, 8, 7, 3, 5, 225, 6, 9, 8, 7, 8, 4, 6, 9, 22, 7, 3, 119, 481, 17, 80, 20, 5, 7, 4, 7, 9, 15, 10, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 5, 5, 6, 8, 6, 7, 8, 4, 4, 10, 62, 22, 15, 7, 8, 7, 6, 6, 10, 7, 7, 7, 117, 4, 12, 4, 11, 6, 7, 7, 7, 6, 8, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 9, 6, 3, 7, 8, 7, 5, 5, 7, 7, 4, 7, 3, 4, 7, 4, 7, 8, 7, 10, 7, 9, 9, 8, 6, 7, 5, 7, 5, 6, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [10, 5, 112, 5, 6, 9, 23, 7, 9, 7, 8, 6, 5, 6, 6, 8, 7, 11, 8, 10, 8, 10, 7, 7, 4, 8, 5, 17, 15, 6, 8, 7, 3, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [7, 10, 6, 6, 7, 11, 4, 15, 8, 11, 8, 8, 8, 6, 10, 10, 4, 13, 6, 12, 8, 5, 5, 6, 6, 10, 6, 7, 4, 9, 19, 6, 6, 11, 7, 9, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 9, 8, 5, 8, 6, 4, 5, 5, 5, 5, 7, 7, 6, 3, 6, 167, 9, 5, 4, 7, 5, 6, 7, 6, 11, 8, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [11, 4, 6, 8, 8, 7, 9, 8, 7, 9, 7, 12, 8, 9, 9, 3, 8, 7, 9, 7, 6, 11, 6, 10, 9, 6, 8, 7, 23, 6, 10, 28, 9, 6, 6, 8, 7, 6, 8, 10, 5, 6, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 5, 9, 9, 5, 7, 7, 8, 6, 8, 6, 7, 11, 6, 9, 6, 6, 9, 457, 7, 7, 9, 6, 5, 7, 7, 6, 7, 9, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 3, 4, 6, 4, 6, 15, 4, 4, 5, 8, 10, 9, 8, 6, 4, 5, 7, 4, 8, 6, 8, 6, 4, 8, 9, 3, 8, 7, 4, 4, 8, 9, 5, 9, 7, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 14, 8, 12, 3, 8, 12, 14, 5, 12, 8, 13, 16, 5, 4, 14, 6, 6, 13, 12, 11, 59, 12, 15, 5, 14, 10, 10, 4, 7, 370, 13, 7, 13, 8, 7, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [6, 11, 158, 8, 7, 7, 8, 12, 3, 9, 10, 3, 14, 11, 5, 267, 13, 15, 17, 5, 5, 6, 13, 14, 7, 5, 63, 6, 9, 15, 14, 10, 7, 6, 6, 6, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 6, 5, 6, 9, 8, 7, 7, 10, 9, 113, 6, 4, 3, 8, 9, 6, 8, 7, 11, 62, 8, 7, 6, 9, 6, 5, 9, 4, 5, 6, 5, 6, 28, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 7, 16, 8, 5, 10, 8, 7, 10, 8, 9, 5, 8, 7, 7, 10, 7, 6, 5, 6, 7, 8, 7, 198, 9, 9, 7, 10, 5, 7, 6, 7, 7, 5, 9, 5, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 6, 4, 8, 7, 6, 7, 7, 4, 5, 6, 81, 4, 6, 5, 4, 3, 3, 7, 460, 13, 6, 8, 4, 7, 7, 3, 6, 5, 30, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 9, 8, 7, 6, 18, 4, 8, 7, 6, 7, 6, 7, 4, 8, 9, 5, 11, 6, 8, 4, 258, 5, 6, 7, 6, 13, 11, 9, 7, 392, 6, 12, 4, 6, 9, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 8, 11, 8, 7, 8, 44, 7, 11, 9, 12, 10, 8, 11, 10, 10, 8, 9, 6, 10, 7, 7, 11, 7, 472, 9, 5, 9, 9, 4, 20, 12, 8, 12, 8, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [5, 15, 9, 5, 7, 10, 7, 7, 7, 12, 5, 7, 11, 9, 10, 9, 7, 7, 11, 10, 4, 8, 17, 7, 11, 11, 3, 7, 11, 13, 16, 19, 19, 10, 12, 8, 8, 164]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [19, 7, 8, 10, 7, 13, 9, 5, 29, 7, 6, 13, 15, 8, 7, 7, 8, 11, 8, 9, 9, 7, 7, 16, 12, 7, 10, 8, 9, 8, 8, 7, 8, 8, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [12, 6, 5, 6, 6, 10, 6, 4, 7, 10, 7, 7, 10, 7, 6, 4, 7, 7, 8, 11, 10, 7, 489, 7, 7, 7, 12, 6, 6, 18, 13, 10, 9, 7, 63, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [11, 7, 12, 4, 3, 11, 11, 7, 8, 6, 6, 6, 5, 6, 11, 6, 5, 5, 8, 9, 10, 8, 9, 4, 6, 8, 6, 7, 8, 7, 7, 83, 9, 10, 8, 7, 5, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 6, 119, 9, 106, 4, 7, 7, 5, 8, 7, 10, 7, 12, 6, 7, 6, 11, 7, 7, 9, 8, 7, 12, 11, 8, 7, 6, 167, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 8, 7, 6, 8, 5, 7, 9, 4, 9, 9, 4, 6, 9, 8, 7, 8, 8, 8, 397, 9, 3, 6, 6, 11, 3, 7, 8, 11, 9, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [4, 5, 298, 3, 5, 3, 5, 4, 11, 6, 4, 7, 9, 6, 156, 31, 46, 4, 6, 4, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 7, 7, 7, 6, 6, 5, 3, 11, 7, 4, 11, 5, 83, 6, 5, 9, 3, 5, 7, 12, 8, 3, 8, 7, 7, 5, 7, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [12, 5, 9, 8, 5, 6, 5, 6, 6, 6, 10, 3, 5, 5, 4, 11, 6, 5, 7, 4, 8, 10, 6, 211, 9, 12, 6, 6, 10, 11, 4, 7, 10, 6, 7, 9, 11, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 8, 8, 8, 12, 8, 9, 11, 11, 11, 10, 8, 8, 10, 10, 7, 9, 11, 10, 10, 11, 10, 7, 11, 13, 8, 11, 9, 9, 9, 9, 11, 38, 12, 10, 10, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 6, 4, 3, 5, 4, 5, 12, 4, 12, 13, 12, 6, 4, 11, 4, 90, 15, 8, 3, 6, 13, 9, 11, 10, 4, 9, 3, 10, 11, 20, 8, 7, 11, 11, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 26, 5, 7, 4, 8, 11, 6, 11, 6, 4, 10, 5, 12, 12, 6, 9, 4, 4, 5, 9, 28, 15, 5, 16, 8, 7, 8, 8, 5, 15]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 8, 6, 6, 5, 13, 5, 4, 6, 6, 6, 7, 4, 5, 8, 9, 87, 7, 11, 8, 5, 24, 8, 3, 5, 9, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 3, 196, 4, 3, 8, 7, 4, 4, 12, 10, 9, 5, 5, 7, 141, 5, 4, 4, 5, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 81, 5, 10, 4, 9, 8, 7, 7, 10, 7, 9, 7, 10, 9, 9, 5, 9, 8, 13, 7, 9, 7, 7, 15, 9, 9, 8, 8, 20, 4, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 6, 4, 4, 15, 11, 8, 10, 11, 10, 11, 9, 11, 24, 4, 16, 6, 4, 13, 8, 11, 20, 9, 13, 10, 15, 10, 7, 17, 11, 11, 11, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 7, 9, 5, 16, 11, 11, 100, 8, 13, 8, 5, 7, 8, 13, 12, 19, 8, 8, 7, 3, 8, 14, 4, 386, 50, 14, 11, 10, 10, 3, 10, 10, 6, 13, 5, 14, 8, 10, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 8, 7, 8, 8, 8, 7, 9, 10, 10, 9, 8, 9, 9, 8, 10, 9, 10, 10, 9, 6, 182, 7, 11, 15, 11, 11, 12, 13, 6, 8, 8, 420, 8, 7, 13, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 10, 9, 11, 8, 13, 17, 9, 10, 11, 12, 10, 9, 8, 8, 9, 9, 8, 10, 8, 10, 9, 7, 8, 10, 7, 9, 9, 9, 8, 12, 6, 9, 10, 7, 4, 7, 9, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 10, 5, 6, 7, 7, 7, 6, 6, 5, 4, 404, 8, 9, 10, 4, 9, 10, 5, 5, 5, 6, 8, 12, 5, 7, 4, 8, 5, 7, 9, 8, 7, 7, 7, 10, 4, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [13, 3, 5, 7, 7, 10, 9, 8, 12, 3, 5, 12, 10, 10, 9, 8, 13, 218, 33, 4, 9, 11, 8, 3, 10, 6, 9, 26, 6, 11, 10, 16, 10, 47, 10, 313, 6, 9, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [4, 3, 10, 4, 3, 8, 11, 3, 4, 11, 4, 6, 8, 3, 4, 6, 9, 329, 15, 12, 11, 11, 5, 15, 6, 13, 3, 14, 11, 4, 8, 9, 9, 6, 4, 13, 14, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 11, 9, 9, 13, 3, 6, 10, 10, 10, 9, 9, 8, 9, 9, 9, 7, 9, 7, 6, 11, 443, 11, 9, 7, 11, 8, 7, 8, 18, 9, 6, 8, 7, 8, 6, 25, 10, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [4, 13, 7, 14, 14, 17, 14, 13, 10, 14, 8, 14, 415, 20, 7, 15, 14, 15, 20, 37, 18, 17, 9, 32, 16, 23, 9, 7, 9, 10, 16, 16, 21, 16, 20, 129, 8]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [15, 14, 9, 7, 4, 9, 12, 6, 12, 5, 4, 7, 10, 21, 9, 11, 3, 5, 7, 10, 10, 297, 9, 5, 16, 10, 387, 7, 13]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 9, 4, 3, 9, 10, 320, 9, 24, 11, 7, 10, 42, 6, 5, 8, 9, 3, 22, 8, 5, 14, 10, 16, 10, 32, 10, 8, 6, 10, 10, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 15, 7, 7, 12, 9, 24, 9, 4, 75, 7, 16, 10, 7, 8, 7, 5, 7, 6, 11, 13, 4, 8, 12, 8, 7, 11, 5, 8, 5, 11, 9, 11, 9, 8, 14, 5, 18, 12, 8, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 22, 10, 6, 6, 12, 6, 11, 7, 8, 8, 6, 6, 9, 9, 8, 5, 10, 7, 5, 4, 10, 9, 5, 8, 8, 7, 9, 7, 7, 90, 7, 8, 7, 10, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [6, 13, 5, 14, 6, 6, 8, 194, 4, 55, 54, 11, 9, 11, 12, 5, 9, 15, 6, 7, 5, 7, 8, 7, 5, 6, 6, 110, 4, 9, 8, 7, 7, 3, 7, 13, 6, 15]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [7, 9, 7, 7, 5, 6, 9, 5, 7, 8, 10, 12, 11, 9, 10, 4, 5, 11, 8, 6, 5, 4, 7, 88, 521, 9, 6, 5, 7, 28, 11, 7, 5, 31]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [4, 4, 182, 8, 7, 12, 7, 9, 9, 7, 7, 5, 6, 6, 7, 8, 12, 9, 6, 8, 11, 8, 9, 10, 11, 7, 8, 10, 9, 7, 9, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [14, 9, 8, 10, 23, 6, 10, 15, 12, 6, 5, 10, 8, 8, 6, 6, 6, 8, 10, 9, 10, 8, 8, 7, 8, 10, 9, 10, 13, 33, 9, 10, 10, 7, 8, 7, 7, 8, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [14, 7, 9, 7, 6, 8, 9, 6, 8, 5, 11, 4, 7, 9, 10, 6, 5, 10, 128, 20, 10, 23, 10, 11, 7, 10, 13, 7, 10, 16, 9, 7, 7, 7, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [14, 9, 6, 8, 10, 11, 9, 6, 9, 9, 10, 6, 9, 28, 9, 8, 7, 6, 9, 12, 9, 12, 7, 22, 4, 10, 160, 8, 8, 5, 10, 4, 7, 425, 9, 10, 10, 3, 4, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [9, 7, 12, 9, 14, 12, 10, 11, 11, 8, 14, 14, 12, 3, 12, 4, 10, 12, 13, 11, 11, 5, 12, 10, 10, 12, 11, 6, 5, 12, 4, 13, 13, 14, 13, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 10, 12, 3, 7, 12, 13, 8, 10, 8, 9, 11, 9, 14, 4, 9, 8, 7, 8, 5, 6, 12, 8, 10, 14, 9, 6, 5, 4, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 5, 5, 6, 11, 4, 13, 16, 31, 7, 15, 6, 7, 12, 5, 9, 7, 12, 7, 8, 4, 4, 6, 9, 6, 8, 10, 10, 118, 8, 6, 8, 8, 13, 6, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 3, 4, 8, 10, 11, 4, 19, 19, 6, 11, 5, 5, 10, 5, 6, 8, 10, 8, 4, 9, 6, 6, 7, 5, 12, 11, 9, 5, 4, 19]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [13, 224, 12, 6, 8, 10, 12, 11, 14, 6, 73, 6, 7, 6, 6, 11, 14, 7, 5, 5, 5, 282, 7, 12, 6, 7, 9, 9, 11, 10, 8, 6, 5, 8, 10, 11, 7, 10, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 4, 6, 6, 13, 62, 8, 5, 6, 4, 12, 4, 4, 5, 11, 4, 10, 11, 6, 8, 13, 15, 3, 4, 11, 7, 11, 13, 12, 5, 14, 5, 12, 12, 4, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 5, 8, 7, 7, 5, 14, 10, 9, 4, 9, 4, 3, 7, 4, 7, 8, 6, 5, 10, 9, 6, 6, 10, 4, 10, 9, 8, 6, 4, 11, 6, 5, 4, 9, 4, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [7, 12, 6, 17, 8, 13, 6, 6, 15, 7, 15, 12, 8, 150, 9, 6, 7, 11, 6, 6, 7, 7, 10, 16, 6, 6, 9, 6, 8, 7, 7, 8, 6, 10, 7, 7, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [13, 6, 7, 10, 17, 184, 6, 9, 12, 62, 11, 8, 9, 10, 5, 5, 15, 11, 7, 11, 7, 4, 7, 9, 4, 10, 212, 11, 9, 10, 29, 10, 7, 10, 42, 10, 10, 8, 11, 11, 8, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 6, 7, 7, 24, 8, 8, 9, 7, 8, 8, 10, 4, 8, 9, 8, 20, 8, 10, 4, 6, 17, 4, 8, 9, 11, 4, 10, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [7, 16, 4, 6, 4, 5, 14, 4, 8, 12, 29, 5, 4, 7, 5, 8, 10, 7, 6, 6, 8, 5, 4, 6, 6, 8, 7, 6, 9, 6, 8, 7, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 8, 3, 6, 11, 5, 3, 10, 3, 5, 10, 8, 22, 125]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 8, 4, 19, 4, 13, 5, 24, 15, 15, 5, 9, 10, 7, 25, 9, 7, 12, 10, 10, 10, 9, 12, 5, 10, 9, 11, 11, 7, 9, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [23, 9, 6, 4, 8, 9, 10, 11, 7, 4, 6, 8, 12, 9, 4, 6, 4, 9, 8, 5, 9, 9, 9, 222, 9, 5, 9, 3, 10, 6, 8, 434, 9, 21, 6, 8, 6, 5, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [11, 5, 10, 8, 7, 9, 6, 11, 10, 8, 9, 8, 10, 9, 12, 11, 12, 8, 11, 10, 6, 70, 10, 7, 10, 10, 13, 8, 13, 11, 10, 9, 12, 13, 10, 7, 9, 6, 7, 10, 6]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [14, 8, 8, 11, 9, 8, 15, 7, 8, 18, 19, 15, 8, 9, 8, 7, 9, 10, 8, 11, 13, 9, 9, 8, 12, 15, 177, 15, 9, 10, 10, 9, 8, 8, 8, 10, 11, 10, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 8, 10, 8, 15, 7, 3, 31, 8, 12, 6, 9, 9, 8, 6, 10, 15, 4, 9, 9, 6, 7, 8, 7, 4, 11, 5, 3, 5, 11, 6, 11, 8, 9, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [3, 11, 10, 10, 11, 11, 10, 11, 12, 10, 9, 9, 11, 13, 16, 11, 12, 12, 13, 10, 4, 11, 15, 12, 13, 18, 12, 11, 12, 12, 13, 11, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [10, 3, 10, 11, 5, 16, 10, 8, 4, 5, 12, 7, 5, 4, 11, 10, 9, 12, 14, 11, 6, 4, 4, 116, 10, 4, 11, 6, 10, 9, 8, 5, 4, 9, 8, 11, 8, 11]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 7, 6, 8, 6, 7, 6, 37, 6, 7, 24, 8, 4, 7, 7, 7, 8, 37, 7, 8, 7, 6, 6, 5, 7, 6, 7, 5, 10, 358, 4, 8, 8, 17, 6, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [5, 8, 4, 5, 8, 5, 12, 11, 4, 16, 11, 11, 3, 5, 8, 8, 49, 13, 3, 10, 9, 4, 338, 6, 8, 41, 28, 3, 8, 19, 6, 5, 9, 7, 6, 11, 9, 11, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [8, 76, 8, 6, 9, 4, 7, 5, 10, 4, 5, 5, 4, 6, 4, 3, 8, 4, 4, 9, 4, 3, 7, 6, 10, 5, 6, 12, 6, 4, 7, 3, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [6, 4, 8, 6, 5, 3, 5, 3, 10, 108, 37, 48, 3, 4, 6, 5, 4, 4, 118, 4, 4, 8, 6, 11, 7, 6, 6, 4, 9, 3, 6, 7, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 4, 4, 4, 4, 7, 5, 4, 6, 6, 5, 5, 7, 6, 4, 7, 5, 5, 5, 7, 5, 6, 5, 4, 4, 7, 8, 3, 10, 6, 5, 4, 11, 6, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [14, 6, 10, 6, 7, 11, 13, 5, 13, 6, 11, 7, 12, 8, 5, 12, 7, 7, 4, 7, 13, 13, 11, 153, 12, 12, 28, 12, 11, 12, 7, 9, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 9, 6, 9, 152, 6, 25, 13, 8, 13, 12, 10, 11, 5, 9, 6, 6, 9, 7, 12, 5, 7, 8, 11, 12, 4, 6, 7, 9, 5, 9, 5, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [13, 7, 6, 9, 9, 9, 7, 9, 11, 10, 305, 16, 11, 13, 17, 13, 10, 16, 9, 10, 10, 13, 8, 14, 4, 6, 9, 13, 9, 9, 15, 8, 10, 9, 8, 8, 10, 12, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 9, 13, 9, 5, 9, 3, 5, 10, 9, 13, 8, 209, 10, 4, 9, 9, 10, 8, 10, 6, 10, 9, 8, 145, 8, 9, 6, 11, 9, 10, 10, 9, 9, 9, 18, 15, 10, 12, 9, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [5, 4, 22, 9, 8, 12, 6, 10, 8, 9, 9, 10, 10, 8, 13, 7, 68, 7, 8, 10, 8, 10, 279, 8, 12, 6, 9, 13, 8, 7, 9, 8, 12, 10, 32, 9, 10, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [4, 5, 12, 7, 12, 14, 12, 10, 9, 8, 8, 10, 12, 7, 10, 4, 14, 9, 8, 13, 7, 5, 10, 5, 8, 39, 14, 7, 171, 10, 6, 9, 8, 7, 9, 304, 6, 7, 6, 10, 8, 5, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [14, 5, 9, 9, 12, 10, 10, 11, 12, 9, 8, 9, 13, 15, 7, 8, 10, 6, 15, 7, 13, 7, 5, 13, 11, 9, 9, 10, 12, 8, 8, 10, 12, 9, 9, 9, 7, 8, 8, 6, 220]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 8, 4, 8, 4, 8, 4, 9, 4, 5, 6, 6, 6, 5, 7, 9, 8, 6, 5, 6, 5, 6, 8, 7, 16, 8]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 8, 7, 7, 13, 6, 7, 14, 14, 11, 6, 6, 4, 6, 5, 5, 4, 5, 8, 189, 6, 6, 7, 9, 7, 8, 6, 6, 8, 7, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 12, 8, 4, 8, 10, 6, 9, 8, 6, 8, 10, 9, 4, 13, 10, 10, 4, 9, 5, 7, 204, 9, 21, 4, 12, 6, 4, 12, 9, 10, 7, 8, 5, 6, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [3, 8, 5, 5, 8, 8, 7, 5, 6, 10, 8, 8, 8, 6, 97, 5, 15, 10, 10, 6, 5, 6, 13, 5, 6, 6, 11, 11, 9, 9, 6, 8, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 8, 8, 6, 6, 7, 7, 7, 34, 10, 5, 7, 45, 7, 7, 3, 186, 12, 6, 13, 7, 32, 7, 9, 48, 6, 4, 7, 9, 6, 11, 4, 9, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [15, 9, 17, 50, 7, 6, 7, 10, 14, 6, 4, 4, 8, 6, 8, 9, 7, 15, 7, 8, 8, 19, 7, 8, 5, 9, 8, 14, 4, 11, 8, 6, 9, 9, 8, 7, 14, 10, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [9, 10, 12, 10, 9, 11, 10, 10, 10, 6, 8, 9, 10, 9, 11, 10, 10, 10, 3, 9, 10, 10, 67, 17, 11, 9, 12, 9, 10, 9, 5, 5, 7, 7, 7, 7, 11, 13]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 7, 5, 7, 9, 10, 7, 7, 143, 6, 6, 20, 6, 10, 8, 8, 10, 7, 10, 9, 8, 3, 6, 4, 12, 5, 5, 5, 9, 4, 12, 7, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [4, 4, 409, 7, 9, 7, 10, 9, 4, 5, 8, 6, 7, 11, 8, 6, 6, 6, 6, 9, 8, 6, 12, 7, 9, 5, 7, 7, 7, 7, 4, 6, 7, 6, 7, 4, 15, 5, 6, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 4, 5, 8, 8, 19, 21, 9, 8, 6, 5, 5, 7, 9, 8, 5, 7, 9, 4, 10, 4, 4, 10, 5, 7, 6, 9, 9, 4, 7, 6]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [9, 3, 6, 6, 8, 3, 8, 8, 8, 5, 5, 7, 4, 10, 7, 4, 4, 5, 3, 7, 4, 80, 4, 4, 7, 7, 4, 8, 5, 11, 6, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 6, 8, 6, 7, 7, 6, 4, 8, 10, 6, 6, 6, 7, 5, 6, 6, 10, 125, 8]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 3, 6, 4, 6, 6, 8, 5, 6, 5, 15, 7, 8, 4, 10, 4, 8, 5, 8, 4, 11, 15, 4, 5, 7, 35, 326, 8, 6, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 8, 5, 8, 8, 5, 10, 12, 7, 6, 19, 6, 6, 7, 179, 7, 5, 7, 4, 5, 5, 8, 5, 9, 15, 8, 13, 8, 5, 7, 5, 31, 308, 3, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
[8, 4, 9, 7, 9, 7, 8, 5, 4, 6, 11, 8, 4, 9, 4, 6, 4, 8, 5, 8, 8, 10, 5, 8, 8, 10, 5, 7, 7, 7, 6, 4, 9, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 8, 10, 9, 12, 20, 7, 7, 7, 7, 9, 7, 7, 8, 11, 4, 20, 6, 7, 10, 8, 7, 11, 6, 8, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [7, 3, 11, 8, 9, 7, 5, 3, 30, 8, 5, 6, 9, 4, 5, 8, 9, 11, 10, 8, 6, 4, 11, 8, 4, 6, 9, 7, 4, 14, 8, 4, 4, 7, 6, 9, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 7, 7, 4, 10, 8, 7, 10, 15, 8, 4, 7, 6, 7, 4, 7, 6, 6, 6, 9, 10, 7, 5, 8, 10, 5, 10, 6, 8, 9, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 4, 7, 9, 7, 4, 7, 7, 4, 8, 9, 4, 8, 8, 8, 6, 5, 11, 12, 8, 9, 4, 8, 9, 6, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 8, 4, 7, 7, 4, 5, 5, 9, 5, 13, 7, 5, 6, 26, 9, 7, 8, 7, 4, 4, 4, 4, 5, 7, 6, 7, 12, 6, 7, 6, 6, 4, 395, 6, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 7, 8, 7, 4, 12, 6, 8, 12, 8, 9, 5, 5, 7, 6, 4, 5, 8, 23, 7, 5, 7, 7, 8, 5, 7, 4, 10, 5, 6, 7, 7, 7, 5, 10, 5, 5, 12]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [8, 6, 106, 4, 6, 6, 5, 9, 5, 7, 6, 7, 5, 4, 5, 7, 2, 5, 6, 4, 3, 6, 5, 6, 6, 3, 6, 4, 5, 6, 6, 5, 4, 5, 6, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 3, 4, 8, 9, 13, 7, 6, 106, 5, 5, 44, 5, 8, 4, 6, 4, 6, 8, 8, 9, 3, 4, 5, 7, 5, 6, 4, 4, 9]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 10, 8, 6, 4, 4, 4, 9, 6, 5, 6, 6, 9, 8, 7, 118, 6, 10, 4, 4, 5, 9, 7, 9]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 9, 11, 6, 5, 8, 5, 6, 6, 8, 7, 5, 7, 7, 4, 42, 8, 8, 6, 8, 13, 9, 7, 5, 8, 6, 7, 7, 6, 9, 10, 6, 15, 8, 7, 5, 8, 5, 4, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [2, 9, 5, 8, 5, 31, 24, 6, 4, 113, 8, 4, 6, 4, 7, 7, 7, 8, 4, 7, 8, 7, 6, 9, 4, 8, 9, 7, 11, 6, 7, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 11, 6, 5, 13, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 4, 6, 4, 110, 80, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 4, 6, 4, 7, 4, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [4, 4, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 286
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
