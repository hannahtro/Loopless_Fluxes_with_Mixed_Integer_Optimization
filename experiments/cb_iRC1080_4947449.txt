┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 8, 3, 4, 4, 4, 8, 3, 6, 2, 7, 3, 5, 7, 4, 3, 4, 6, 16, 4, 4, 10, 9, 9, 6, 6]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 9, 2, 4, 3, 3, 3, 3, 4, 3, 8, 7, 4, 4, 3, 4, 5, 5, 3, 3, 8, 5, 8, 4, 3, 6, 2, 8, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 4, 5, 3, 6, 4, 400, 3, 17, 11, 4, 4, 5, 4, 3, 3, 6, 5, 7, 10, 3, 6, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [13, 3, 8, 4, 7, 4, 5, 5, 5, 4, 8, 4, 31, 5, 5, 5, 4, 9, 104, 6, 13, 6, 4, 227, 8, 108, 5, 5, 9, 6]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 8, 11, 4, 3, 3, 4, 3, 3, 7, 3, 8, 4, 3, 3, 4, 9, 8, 9, 7, 8, 3, 7, 8, 8, 4, 8, 5, 5, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 8, 4, 3, 4, 5, 5, 4, 4, 3, 5, 3, 6, 5, 5, 5, 4, 3, 4, 5, 3, 4, 3, 4, 5, 7]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 11, 7, 7, 4, 6, 7, 6, 11, 11, 11, 9, 7, 7, 4, 13, 7, 8, 6, 43, 308, 3, 7, 7, 5, 7, 8, 7, 9, 7, 4, 11, 6, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 3, 3, 3, 4, 3, 3, 3, 4, 5, 194, 5, 5, 7, 3, 4, 4, 3, 4, 4, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 3, 9, 3, 4, 9, 3, 3, 4, 10, 6, 8, 11, 33, 4, 4, 4, 5, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [35, 9, 3, 7, 4, 4, 8, 10, 7, 3, 10, 11, 8, 10, 10, 33, 10, 8, 7, 9, 7, 9, 9, 8, 7, 6, 7, 94, 10, 9, 9, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 3, 19, 5, 10, 7, 4, 8, 10, 8, 5, 7, 9, 10, 5, 10, 8, 57, 29, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 8, 4, 5, 8, 4, 3, 5, 109]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 2, 4, 4, 10, 3, 4, 17, 11, 11, 4, 8, 533, 3, 5, 4, 8, 11, 7, 8, 12, 4, 3, 150, 4, 6, 14]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 4, 3, 14, 3, 5, 3, 11, 12, 12, 3, 6, 11, 11, 13, 6, 15]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [12, 9, 7, 4, 5, 4, 18, 6, 5, 60, 6, 4, 6, 37, 5, 11, 5, 12, 13, 7, 9, 178, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 8, 4, 4, 4, 12, 7, 11, 9, 8, 3, 8, 7, 6, 6, 4, 8, 8, 8, 7, 3, 4, 6, 4, 7, 6, 11, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 14, 7, 3, 3, 3, 10, 4, 3, 10, 4, 4, 6, 9, 3, 10, 7, 7, 8, 9, 9, 4, 23, 5, 3, 10, 4, 15, 11, 5, 15, 3]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [17, 18, 4, 21, 18, 3, 18, 15, 20, 5, 15, 4, 19, 6, 19, 17, 44, 15, 18, 9, 18]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 7, 7, 4, 3, 13, 10, 3, 7, 3, 6, 5, 7, 13, 18, 7, 5, 6, 6, 8, 7, 7, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 9, 3, 13, 6, 3, 6, 13, 3, 3, 13, 3, 4, 14, 9, 4, 8, 13, 3, 118, 16, 4, 19, 12]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 9, 3, 8, 3, 8, 3, 9, 4, 4, 8, 3, 5, 13, 4, 9, 8, 7, 10, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [15, 3, 21, 3, 5, 3, 7, 8, 8, 14, 15, 5, 14, 13, 14, 23, 14, 14, 4, 7, 15, 19]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 4, 9, 18, 4, 4, 6, 8, 8, 7, 8, 11, 4, 16, 19, 3, 18, 9, 12, 12, 4, 6, 9, 16, 20, 4, 4, 4, 10]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 17, 16, 19, 18, 16, 15, 16, 18, 15, 281, 17, 18, 16, 17, 17, 14, 19, 17, 20, 20, 16, 18, 18, 19, 17, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 3, 11, 3, 3, 4, 7, 8, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 4, 8, 3, 3, 13, 5, 4, 12, 14, 36, 12, 10, 8, 13, 7, 7, 8, 18, 9, 13]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 3, 4, 10, 4, 4, 4, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 6, 4, 27, 30, 3, 6, 41, 5, 24, 19, 12, 6, 5, 6, 144, 26, 7, 13, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 9, 6, 9, 3, 3, 14, 7, 5, 3, 4, 4, 56, 3, 5, 12, 4, 4, 4, 3, 3, 13, 4, 3, 4, 4, 9, 8, 12]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [15, 8, 13, 8, 7, 8, 7, 8, 15, 13, 78, 3, 8, 14, 25, 27, 19, 22, 16, 25, 8, 9, 9, 16, 16, 12, 16, 20, 19, 7, 21, 14]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [13, 9, 7, 3, 7, 7, 8, 23, 7, 7, 8, 4, 14, 8, 8, 7, 16, 16, 8, 12, 13, 23, 7, 16]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [10, 9, 3, 11, 9, 10, 13, 11, 3, 10, 12, 11, 4, 15, 12, 5, 15, 10, 14]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [18, 15, 20, 19, 18, 19, 16, 19, 20, 20, 18, 21, 18, 16, 16, 54, 21, 20, 19, 17, 20, 19, 19, 21, 130, 22, 18]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [9, 24, 7, 7, 3, 7, 8, 62, 5, 53, 17, 6, 62, 9, 10, 6, 43, 19, 9, 4, 22, 9, 21, 22, 19, 18, 4, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 10, 11, 9, 12, 10, 10, 14, 7, 12, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [8, 4, 15, 9, 9, 3, 14, 59, 7, 4, 3, 18, 8, 14, 9, 8, 7, 22, 63, 10, 23, 7, 24, 9, 18, 11, 3, 11, 3, 17]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [3, 10, 32, 5, 4, 8, 10, 3, 10, 11, 5, 9, 21, 127, 13, 12, 9, 37]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 4, 3, 4, 5, 4, 6, 12, 5, 3, 4, 3, 4, 5, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [11, 29, 9, 8, 137, 10, 14, 16, 26, 14, 11, 13, 14, 14, 21, 11, 17, 10, 12, 9, 20, 16, 15, 11, 10, 9, 14, 9, 16, 15, 12, 9, 10, 14, 16, 18, 11, 12]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [16, 14, 4, 12, 8, 9, 10, 9, 14, 9, 10, 7, 8, 7, 14, 9, 13, 13, 10, 5, 14, 11, 8, 15, 14, 16, 39, 11, 8, 8, 15, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 27, 11, 4, 9, 14, 3, 18, 12, 4, 26, 21, 20, 17, 20, 4, 11, 19, 5, 21, 13, 11, 13, 128, 20, 26, 9, 20, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [11, 3, 9, 5, 15, 5, 5, 7, 4, 6, 4, 46, 22, 20, 3, 18, 14, 19, 5, 18, 5, 16, 22, 14, 30]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [3, 4, 16, 9, 9, 3, 10, 14, 26, 11, 9, 7, 9, 23, 7, 5, 11, 16, 22, 10, 14]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [18, 24, 14, 14, 11, 20, 293, 6, 12, 19, 14, 17, 7, 21, 8, 13, 19, 20, 19, 16, 11, 20, 19, 26, 29, 17, 24, 20, 19]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [13, 14, 14, 13, 15, 16, 39]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [14, 5, 14, 15, 16, 3, 17, 22, 14, 5, 13, 5, 13, 15, 42, 6, 13, 16, 15, 15, 17, 22, 17, 12, 18, 7, 306, 15, 12, 7, 39]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 3, 15, 17, 9, 17, 17, 6, 9, 4, 4, 4, 5, 7, 4, 4, 6, 16, 15, 11, 4, 7, 9, 3, 4, 5, 6, 4, 8, 9]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [19, 20, 28, 21, 19, 20, 19, 19, 21, 21, 20, 19, 60, 22, 22, 16, 20, 24, 22, 23, 33, 19, 22, 26, 23, 18, 19, 17, 25, 22, 23, 24, 23, 47, 25, 23]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 49
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
