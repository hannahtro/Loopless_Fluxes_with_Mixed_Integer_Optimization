┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iZ_1308
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iZ_1308
----------------------------------
number of metabolites : 1923
number of reactions : 2721
number of genes : 1308

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5051 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 3, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 2, 13, 14, 13, 14, 13, 13, 14, 2, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 13, 14, 15, 14, 13, 11, 11, 13, 11, 19, 11, 11, 13, 13, 11, 13, 13, 14, 13, 14, 13, 13, 2, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 6, 23, 14, 13, 15, 13, 11, 11, 13, 11, 11, 11, 11, 13, 13, 14, 11, 13, 13, 14, 13, 14, 13, 13, 25, 4, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 6, 14, 15, 14, 15, 14, 11, 11, 14, 11, 11, 11, 11, 14, 11, 14, 14, 15, 14, 15, 14, 14, 7, 4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 13, 14, 13, 14, 14, 13, 14, 16, 13, 2, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 6, 14, 16, 14, 16, 14, 11, 11, 14, 11, 11, 11, 11, 14, 15, 15, 11, 14, 6, 14, 15, 14, 15, 14, 14, 29, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 6, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 13, 14, 13, 14, 13, 13, 4, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [8, 6, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 12, 13, 122, 13, 16, 13, 14, 13, 13, 14, 3, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 14, 15, 16, 88, 31, 11, 11, 14, 12, 11, 11, 11, 19, 14, 15, 11, 14, 14, 2, 16, 15, 14, 15, 14, 22, 14, 14, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 13, 15, 13, 14, 13, 11, 11, 13, 11, 51, 20, 11, 13, 14, 11, 13, 6, 13, 39, 22, 18, 13, 59, 25, 14, 14, 13, 14, 13, 6, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 16, 17, 16, 17, 17, 11, 11, 16, 11, 13, 24, 16, 16, 20, 14, 16, 17, 31, 17, 16, 17, 16, 17, 18, 16, 97, 16, 6, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 26, 14, 19, 14, 15, 14, 11, 11, 14, 11, 11, 14, 12, 14, 15, 11, 14, 6, 14, 15, 14, 15, 14, 14, 15, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 13, 14, 15, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 13, 11, 13, 2, 14, 17, 13, 14, 13, 13, 13, 14, 6, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 6, 13, 19, 14, 14, 13, 11, 11, 13, 11, 11, 93, 11, 13, 73, 13, 11, 13, 6, 13, 14, 13, 14, 13, 13, 14, 14, 24, 19, 7, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 16, 17, 16, 17, 16, 12, 11, 16, 11, 11, 11, 11, 16, 11, 16, 16, 18, 16, 17, 27, 16, 17, 16, 2, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 16, 17, 16, 17, 17, 11, 11, 16, 11, 11, 11, 11, 16, 11, 16, 16, 16, 17, 16, 17, 17, 16, 16, 6, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 13, 14, 15, 14, 13, 11, 11, 14, 15, 11, 11, 11, 47, 13, 197, 11, 48, 13, 13, 7, 13, 19, 14, 14, 13, 15, 14, 13, 13, 6, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 14, 14, 13, 14, 13, 11, 11, 13, 11, 11, 13, 11, 13, 13, 17, 15, 11, 260, 16, 8, 14, 15, 13, 14, 20, 13, 13, 13, 14, 13, 6, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 16, 17, 16, 17, 16, 20, 11, 18, 13, 11, 15, 11, 18, 11, 16, 16, 5, 16, 17, 16, 17, 16, 16, 17, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 13, 184, 207, 14, 19, 11, 11, 13, 11, 11, 127, 11, 13, 14, 14, 14, 12, 13, 13, 6, 13, 14, 13, 14, 15, 13, 14, 13, 2, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 17, 93, 15, 14, 13, 11, 11, 13, 11, 101, 12, 13, 13, 14, 14, 13, 11, 13, 3, 15, 14, 13, 14, 13, 13, 13, 24, 7, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 3, 14, 15, 14, 14, 13, 13, 11, 13, 11, 11, 14, 11, 18, 13, 14, 13, 12, 14, 13, 6, 13, 14, 13, 15, 18, 17, 14, 21, 13, 8, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 13, 14, 13, 14, 13, 11, 20, 13, 12, 11, 11, 11, 13, 15, 18, 21, 13, 14, 13, 14, 13, 15, 13, 14, 46, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 14, 25, 13, 36, 13, 12, 11, 13, 11, 13, 11, 11, 13, 14, 14, 14, 11, 13, 13, 14, 67, 14, 14, 13, 13, 191, 13, 6, 7]
AssertionError("!(isempty(C_list_filtered))")
