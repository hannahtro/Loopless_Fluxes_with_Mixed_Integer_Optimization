ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iMM1415
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iMM1415
----------------------------------
number of metabolites : 2775
number of reactions : 3726
number of genes : 1375

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3726 flux variables and 6998 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 4, 2, 2, 4, 5, 3, 4, 2, 8, 2, 4, 4, 2, 6, 3, 7, 226, 4, 254, 4, 18, 4, 283, 3, 3, 2]
length(C_list) = 25
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 3, 22, 2, 10, 7, 6, 2, 3, 4, 3, 4, 3, 2, 4, 3, 9, 4, 5, 6, 6, 2, 4, 5, 197, 2, 6]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 9, 135, 2, 2, 2, 4, 4, 4, 4, 2, 8, 3, 4, 5, 4, 8, 2, 5, 111, 4, 2, 4, 5, 2, 4, 9, 3, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 5, 6, 4, 6, 4, 2, 3, 7, 5, 6, 4, 3, 6, 5, 3, 8, 6, 3, 9, 4, 5, 5, 5, 22, 4, 4, 491, 7, 16, 6, 5, 3, 67, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 4, 4, 7, 6, 6, 5, 4, 7, 5, 5, 5, 9, 3, 4, 3, 3, 5, 8, 5, 4, 4, 5, 5, 3, 7, 8, 2, 5, 10, 4, 575, 2, 4, 68]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 3, 4, 4, 8, 2, 9, 7, 9, 4, 6, 5, 10, 5, 4, 5, 3, 4, 2, 5, 3, 154, 5, 5, 4, 7, 2, 40, 8, 4, 3, 5, 5, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 6, 4, 3, 4, 5, 105, 4, 44, 4, 2, 5, 4, 4, 5, 8, 6, 4, 26, 5, 8, 9, 3, 7, 4, 3, 4, 5, 4, 133, 7, 4, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [7, 5, 5, 5, 3, 4, 9, 4, 6, 4, 3, 4, 5, 4, 4, 5, 9, 4, 4, 236, 4, 4, 9, 4, 20, 6, 7, 4, 3, 5, 5, 17, 11, 62, 8, 2, 154, 9, 4, 405]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 4, 4, 4, 9, 6, 4, 6, 5, 4, 4, 3, 4, 3, 5, 4, 7, 4, 4, 7, 4, 4, 6, 8, 3, 5, 321, 3, 4, 302, 4, 27, 3, 5, 6, 4, 5, 4, 8, 5, 5, 4, 5]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 8, 5, 6, 3, 4, 4, 5, 5, 8, 6, 9, 4, 5, 4, 6, 8, 7, 3, 4, 4, 4, 3, 6, 5, 7, 5, 6, 4, 2, 4, 6, 2, 4, 23, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 9, 5, 5, 3, 4, 3, 4, 4, 7, 6, 4, 6, 4, 4, 6, 6, 4, 4, 4, 6, 6, 4, 5, 5, 5, 6, 6, 3, 4, 13, 7, 150, 4, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 6, 4, 3, 3, 6, 8, 3, 3, 4, 9, 9, 7, 10, 11, 4, 8, 9, 7, 4, 4, 3, 7, 6, 9, 6, 7, 9, 5, 5, 2, 27, 4, 4, 5, 4, 3, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 3, 4, 4, 4, 6, 114, 120, 4, 6, 4, 5, 8, 8, 16, 6, 6, 5, 3, 4, 6, 5, 5, 6, 7, 4, 13, 5, 39, 6, 4, 4, 279, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 16, 6, 4, 24, 2, 4, 3, 4, 6, 3, 6, 5, 4, 5, 4, 5, 6, 4, 4, 4, 8, 4, 4, 6, 6, 4, 7, 5, 9, 7, 6, 7, 5, 4, 14, 6, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 4, 5, 2, 6, 4, 2, 7, 10, 4, 4, 4, 8, 7, 6, 4, 5, 12, 101, 18, 7, 5, 7, 10, 9, 6, 5, 5, 4, 522, 9, 6, 8, 6, 8, 7, 15, 9, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [10, 3, 3, 4, 4, 5, 10, 6, 4, 18, 7, 6, 10, 9, 7, 8, 7, 7, 4, 5, 5, 7, 4, 7, 5, 5, 9, 6, 4, 8, 9, 7, 6, 5, 6, 6, 9, 4, 8, 5, 4]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [21, 3, 4, 4, 3, 4, 3, 3, 9, 252, 4, 4, 3, 4, 9, 10, 6, 4, 4, 4, 4, 3, 3, 3, 4, 4, 5, 4, 3, 5, 9, 7, 4, 4, 4, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [8, 3, 49, 4, 3, 3, 8, 5, 4, 3, 9, 4, 4, 3, 4, 4, 9, 6, 4, 4, 3, 3, 51, 4, 6, 4, 15, 6, 4, 5, 8, 4, 4, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [19, 3, 3, 6, 7, 4, 4, 6, 4, 6, 4, 3, 5, 271, 8, 4, 5, 42, 7, 3, 29, 4, 7, 8, 4, 5, 3, 3, 8, 5, 7, 3, 3, 4, 4, 7, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 6, 4, 4, 65, 3, 4, 4, 5, 4, 3, 4, 8, 4, 4, 4, 4, 3, 4, 7, 4, 5, 9, 6, 3, 8, 4, 6, 4, 5, 9, 5]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [20, 3, 7, 6, 3, 5, 6, 4, 4, 5, 4, 4, 4, 4, 4, 4, 10, 5, 4, 7, 9, 3, 3, 3, 5, 4, 7, 5, 4, 5, 6, 4, 4, 24, 4, 9, 4, 5, 5, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [12, 3, 6, 8, 3, 4, 3, 3, 4, 10, 8, 8, 7, 5, 4, 4, 7, 7, 4, 4, 5, 4, 6, 4, 4, 6, 4, 8, 9, 5, 5, 4, 4, 9, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [21, 3, 7, 5, 4, 4, 6, 4, 7, 4, 12, 12, 8, 4, 10, 8, 4, 8, 6, 3, 7, 7, 5, 292, 6, 7, 7, 6, 4, 5, 10, 7, 4, 10, 5, 3, 7, 3, 25]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 220, 3, 5, 7, 6, 10, 4, 10, 8, 3, 8, 5, 7, 7, 3, 8, 4, 193, 5, 9, 102, 8, 8, 4, 222, 4, 9, 8, 8, 7, 10, 11, 7, 7, 4, 46, 4, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [21, 3, 6, 8, 3, 7, 4, 6, 3, 14, 4, 8, 4, 5, 9, 5, 7, 257, 5, 7, 9, 4, 4, 4, 10, 4, 7, 5, 5, 4, 6, 5, 11, 10, 8, 15, 123, 8, 9, 20]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 5, 8, 12, 3, 9, 4, 4, 3, 3, 9, 6, 14, 17, 5, 5, 44, 4, 5, 4, 7, 5, 4, 14, 172, 7, 3, 7, 4, 4, 3, 4, 4, 16, 5, 3, 8, 4, 4, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 8, 10, 9, 6, 9, 9, 10, 7, 6, 8, 2, 168, 11, 7, 6, 5, 10, 14, 28, 7, 7, 9, 3, 6, 7, 8, 5, 7, 7, 9, 12, 10, 176, 10, 5, 8, 9, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 4, 8, 7, 7, 9, 10, 3, 5, 4, 8, 9, 10, 3, 7, 8, 7, 7, 9, 5, 4, 7, 2, 4, 6, 64, 10, 7, 7, 6, 11, 8, 6, 3, 10, 5, 8, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 6, 10, 10, 3, 6, 6, 3, 6, 5, 8, 4, 4, 5, 12, 6, 9, 10, 4, 4, 5, 7, 4, 6, 121, 9, 6, 3, 11, 7, 10, 4, 96, 4, 10, 3, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 7, 4, 3, 4, 7, 7, 8, 4, 3, 6, 8, 6, 9, 4, 6, 7, 5, 6, 10, 7, 8, 8, 7, 8, 8, 5, 4, 26, 5, 3, 6, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 4, 8, 8, 5, 7, 10, 6, 6, 4, 8, 7, 12, 7, 6, 4, 3, 5, 5, 7, 12, 5, 4, 4, 6, 8, 5, 8, 77, 7, 3, 3, 3, 7, 7, 10, 6, 15]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [3, 3, 338, 14, 8, 4, 4, 4, 3, 9, 11, 6, 5, 3, 8, 3, 14, 6, 6, 3, 6, 4, 8, 5, 8, 6, 9, 9, 7, 3, 5, 8, 3, 6, 5, 6, 9, 3, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 3, 6, 3, 3, 10, 9, 5, 6, 6, 3, 4, 7, 4, 3, 5, 13, 8, 28, 5, 3, 5, 5, 4, 5, 4, 7, 3, 4, 4, 7, 5, 5, 4, 2, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 5, 5, 4, 4, 3, 7, 6, 3, 8, 3, 4, 7, 8, 6, 5, 5, 3, 4, 7, 4, 2, 4, 8, 5, 3, 5, 9, 3, 6, 5, 8, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [13, 3, 3, 10, 4, 4, 8, 4, 3, 4, 3, 6, 6, 3, 5, 7, 4, 3, 6, 5, 14, 15, 6, 3, 4, 4, 4, 3, 4, 3, 7, 8, 3, 6, 4, 4, 6, 4, 5, 3, 4]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 4, 3, 8, 4, 3, 3, 12, 9, 12, 8, 7, 3, 19, 8, 11, 3, 3, 7, 7, 3, 4, 7, 4, 47, 10, 3, 12, 8, 4, 3, 6, 5, 8, 4, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 4, 5, 12, 10, 9, 3, 4, 9, 8, 6, 12, 4, 5, 6, 5, 4, 4, 4, 9, 4, 4, 5, 6, 3, 3, 3, 5, 96, 7, 3, 7, 11, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 7, 9, 6, 3, 4, 8, 5, 21, 3, 5, 3, 4, 8, 6, 12, 5, 424, 9, 13, 6, 4, 55, 10, 109, 10, 10, 8, 7, 9, 8, 8, 7, 5, 9, 8, 3, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 5, 3, 12, 10, 7, 6, 69, 4, 8, 13, 5, 12, 4, 11, 9, 12, 4, 7, 3, 36, 10, 10, 8, 9, 8, 5, 4, 6, 10, 6, 4, 8, 12, 6, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 10, 3, 13, 9, 4, 9, 3, 9, 3, 6, 4, 4, 3, 4, 4, 10, 9, 4, 9, 9, 3, 9, 4, 7, 9, 7, 4, 3, 4, 8, 3, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 45, 4, 8, 6, 5, 6, 4, 7, 5, 12, 6, 5, 7, 9, 4, 9, 5, 3, 10, 3, 8, 7, 4, 3, 5, 9, 3, 11, 5, 10, 6, 4, 4, 8, 5, 3]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [12, 7, 473, 7, 6, 6, 7, 7, 7, 10, 9, 8, 4, 7, 6, 9, 7, 3, 6, 11, 6, 8, 9, 337, 4, 13, 8, 4, 9, 8, 12, 9, 8, 6, 13, 6, 126]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 4, 4, 3, 7, 13, 7, 8, 4, 3, 8, 3, 8, 10, 7, 3, 8, 4, 7, 6, 6, 5, 7, 7, 6, 17, 5, 31, 11, 7, 4, 4, 190, 5, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 3, 8, 2, 9, 6, 8, 5, 6, 9, 7, 7, 7, 3, 7, 10, 7, 5, 8, 6, 5, 9, 7, 8, 6, 7, 8, 8, 5, 8, 6, 6, 6, 4, 8, 5, 13, 11, 4, 9, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 5, 7, 6, 5, 9, 4, 7, 4, 8, 5, 9, 3, 4, 4, 7, 9, 3, 8, 9, 10, 10, 7, 5, 202, 8, 10, 6, 3, 8, 8, 3, 3, 7, 8, 10, 11, 7, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 2, 6, 3, 10, 6, 9, 11, 8, 8, 3, 10, 7, 8, 9, 7, 4, 4, 4, 111, 15, 11, 9, 4, 6, 7, 3, 125, 7, 10, 8, 14, 10, 8, 9, 10, 6, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 8, 10, 10, 9, 7, 7, 5, 5, 7, 5, 7, 3, 7, 8, 5, 23, 9, 9, 6, 7, 3, 9, 8, 6, 7, 7, 3, 5, 7, 9, 7, 7, 4, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 8, 8, 8, 7, 10, 8, 3, 7, 8, 9, 5, 7, 4, 10, 59, 8, 16, 3, 20, 12, 8, 6, 10, 8, 9, 7, 9, 355, 6, 7, 6, 8, 4, 8, 9]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 8, 6, 3, 5, 7, 8, 3, 5, 4, 9, 9, 6, 6, 8, 55, 8, 7, 6, 10, 9, 9, 7, 11, 6, 7, 8, 4, 7, 8, 8, 6, 3, 3, 5, 7, 11, 8, 4, 6, 9, 3]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 3, 3, 7, 6, 7, 10, 7, 5, 3, 6, 7, 3, 4, 7, 10, 8, 5, 5, 4, 5, 36, 5, 8, 8, 8, 6, 6, 7, 5, 9, 6, 10, 5, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 3, 9, 5, 6, 9, 5, 8, 9, 4, 11, 8, 6, 8, 5, 8, 12, 4, 6, 10, 7, 9, 6, 5, 9, 13, 3, 7, 10, 8, 6, 8, 4, 6, 6, 5, 7, 8, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 7, 11, 11, 12, 7, 16, 10, 9, 5, 10, 9, 10, 9, 8, 3, 7, 8, 7, 226, 7, 10, 5, 4, 4, 8, 4, 8, 14, 12, 12, 5, 8, 11, 8, 3, 8, 13, 3, 8, 9, 8]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [11, 8, 12, 6, 11, 9, 4, 10, 10, 6, 6, 8, 8, 29, 8, 3, 7, 8, 6, 3, 8, 8, 9, 6, 5, 8, 7, 11, 10, 7, 10, 8, 6, 8, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 6, 6, 7, 5, 4, 3, 7, 3, 7, 6, 7, 7, 5, 3, 7, 6, 4, 8, 6, 6, 9, 9, 10, 8, 8, 8, 11, 8, 9, 8, 234, 10, 5, 6, 6, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [6, 5, 300, 10, 148, 3, 443, 7, 4, 8, 6, 4, 6, 4, 7, 5, 18, 9, 6, 3, 4, 366, 7, 8, 8, 4, 9, 9, 5, 6, 6, 2, 23, 8, 13, 9, 51, 4, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 7, 10, 2, 7, 3, 7, 9, 13, 11, 143, 14, 9, 6, 5, 8, 6, 4, 12, 6, 22, 4, 4, 7, 11, 6, 9, 6, 6, 5, 8, 7, 8, 8, 5, 5, 9, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [8, 3, 9, 4, 9, 6, 7, 6, 167, 4, 10, 5, 4, 9, 4, 12, 12, 8, 10, 10, 4, 7, 15, 122, 7, 6, 10, 10, 10, 9, 9, 5, 7, 10, 5, 10, 8, 10, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 3, 6, 4, 7, 6, 4, 5, 4, 3, 4, 8, 10, 8, 4, 6, 6, 8, 5, 3, 19, 23, 4, 3, 8, 4, 5, 5, 9, 4, 3, 4, 4, 12, 5, 3, 9, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [12, 5, 6, 3, 3, 6, 5, 5, 8, 10, 11, 12, 5, 3, 6, 464, 6, 4, 5, 4, 5, 4, 5, 4, 8, 6, 169, 5, 17, 7, 110, 10, 6, 5, 9, 6, 8, 9, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 5, 4, 6, 3, 4, 8, 6, 7, 4, 4, 4, 5, 5, 15, 9, 4, 11, 8, 10, 5, 544, 6, 4, 5, 7, 12, 5, 9, 6, 3, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [14, 8, 49, 8, 7, 3, 9, 9, 11, 3, 3, 7, 11, 6, 7, 9, 21, 7, 6, 159, 5, 8, 6, 11, 5, 83, 10, 6, 3, 5, 8, 4, 8, 4, 5, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [5, 3, 7, 5, 5, 5, 7, 5, 6, 9, 9, 9, 5, 3, 3, 5, 7, 7, 3, 5, 4, 16, 6, 6, 7, 12, 5, 11, 5, 10, 8, 8, 4, 7, 7, 10, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [9, 5, 11, 5, 3, 7, 5, 198, 21, 8, 6, 5, 5, 7, 8, 6, 11, 13, 6, 5, 6, 5, 4, 11, 9, 6, 7, 9, 8, 5, 8, 30, 5, 10, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 11, 4, 3, 4, 8, 6, 14, 4, 4, 7, 3, 7, 5, 9, 5, 8, 6, 5, 13, 6, 5, 3, 9, 11, 9, 86, 7, 7, 10, 9, 3, 6, 3, 4, 40, 5, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [17, 3, 10, 3, 9, 10, 9, 9, 9, 5, 7, 6, 7, 7, 14, 11, 10, 5, 9, 5, 82, 10, 7, 5, 3, 10, 6, 3, 14, 4, 4, 9, 8, 5, 11, 5, 9, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [18, 6, 8, 9, 9, 3, 3, 10, 4, 4, 4, 5, 4, 6, 6, 7, 13, 7, 8, 4, 8, 7, 5, 8, 8, 9, 8, 7, 6, 9, 125, 22, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [20, 5, 95, 5, 10, 152, 10, 6, 4, 4, 4, 4, 4, 176, 6, 10, 6, 4, 8, 46, 57, 9, 7, 4, 7, 6, 10, 5, 6, 6, 6, 4, 6, 8, 7, 7, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 7, 10, 5, 12, 8, 4, 4, 6, 5, 6, 13, 9, 3, 10, 4, 15, 8, 10, 6, 5, 4, 11, 4, 4, 11, 11, 8, 5, 9, 7, 15, 5, 13, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [33, 3, 11, 4, 5, 7, 12, 4, 7, 5, 7, 4, 492, 6, 9, 9, 10, 7, 8, 4, 6, 8, 8, 12, 5, 4, 5, 442, 5, 11, 9, 9, 5, 4, 6, 10, 7, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 6, 3, 8, 5, 11, 8, 8, 15, 8, 8, 7, 3, 4, 4, 100, 7, 4, 4, 14, 10, 14, 6, 9, 5, 9, 6, 10, 13, 20, 8, 10, 8, 13, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 4, 6, 9, 4, 8, 15, 8, 4, 4, 10, 2, 10, 7, 9, 9, 3, 9, 8, 9, 8, 8, 4, 5, 8, 15, 8, 8, 11, 6, 5, 4, 8, 8, 6, 8, 81, 5]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 9, 8, 8, 9, 3, 8, 5, 4, 3, 8, 8, 6, 6, 6, 7, 4, 5, 6, 4, 3, 3, 7, 7, 8, 10, 7, 6, 6, 6, 10, 7, 5, 13, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 4, 13, 9, 8, 9, 7, 5, 39, 7, 15, 50, 9, 3, 4, 4, 8, 7, 8, 12, 7, 7, 4, 10, 5, 5, 12, 11, 5, 9, 83, 11, 6, 4, 36, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 6, 8, 4, 11, 4, 5, 5, 5, 6, 11, 7, 4, 7, 7, 9, 5, 46, 14, 5, 7, 4, 5, 8, 6, 4, 4, 7, 6, 8, 9, 9, 9, 4, 7, 7, 10, 88, 6, 4, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [27, 11, 36, 4, 4, 14, 6, 2, 19, 3, 4, 30, 6, 9, 4, 9, 3, 6, 10, 7, 11, 3, 5, 10, 7, 14, 95, 10, 6, 208, 7, 142, 6, 4, 9, 7, 122, 8, 11, 10]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 5, 8, 6, 4, 4, 3, 8, 5, 5, 5, 6, 8, 6, 10, 4, 5, 7, 22, 8, 99, 8, 6, 6, 6, 7, 7, 3, 8, 8, 6, 5, 6, 8, 7, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 8, 5, 5, 7, 10, 9, 7, 11, 8, 11, 6, 6, 7, 10, 39, 7, 8, 7, 12, 5, 4, 4, 10, 8, 9, 35, 4, 8, 9, 9, 6, 8, 6, 5, 4, 8, 17, 5, 8, 8, 10, 6, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [29, 10, 8, 5, 8, 15, 7, 11, 6, 9, 6, 36, 9, 4, 8, 6, 6, 133, 8, 25, 9, 12, 10, 10, 3, 9, 10, 7, 5, 10, 4, 10, 6, 16, 11, 5, 13, 9, 9, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 6, 6, 3, 4, 5, 7, 7, 7, 19, 6, 5, 13, 40, 4, 9, 5, 4, 8, 4, 6, 4, 7, 5, 9, 282, 7, 6, 11, 275, 5, 5, 9, 6, 6, 6, 7, 6, 9, 4, 3, 5, 9]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [34, 3, 4, 12, 4, 7, 6, 4, 8, 8, 11, 11, 4, 7, 5, 27, 7, 9, 10, 7, 6, 6, 20, 230, 13, 4, 3, 8, 6, 11, 5, 6, 4, 13, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [11, 7, 110, 5, 3, 16, 16, 5, 8, 14, 8, 6, 4, 4, 6, 8, 7, 8, 10, 6, 10, 7, 7, 8, 7, 8, 5, 3, 5, 7, 4, 8, 16, 5, 10, 4, 18, 7, 7, 8, 10, 9, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 12, 7, 7, 10, 6, 12, 10, 10, 9, 9, 13, 7, 5, 4, 9, 7, 10, 9, 6, 10, 9, 13, 19, 259, 68, 8, 8, 10, 7, 9, 7, 16, 59, 10, 10, 8, 103, 7, 9, 9, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [13, 4, 10, 9, 11, 8, 8, 4, 9, 11, 7, 10, 6, 6, 5, 4, 4, 98, 6, 7, 7, 6, 8, 6, 6, 9, 4, 10, 7, 13, 6, 8, 5, 8, 4, 11, 11, 6, 11, 5, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [15, 4, 6, 320, 10, 9, 5, 7, 4, 6, 9, 4, 5, 4, 8, 5, 4, 6, 5, 3, 8, 7, 5, 7, 4, 6, 12, 6, 4, 7, 10, 6, 5, 5, 6, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [9, 13, 7, 10, 7, 5, 10, 8, 6, 9, 8, 7, 10, 3, 4, 10, 11, 10, 10, 6, 11, 14, 10, 3, 9, 4, 5, 5, 9, 6, 6, 11, 6, 6, 8, 5, 10, 7, 4, 70, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [10, 8, 10, 9, 4, 8, 86, 3, 5, 5, 5, 6, 6, 5, 9, 9, 6, 6, 4, 8, 4, 13, 4, 30, 10, 10, 9, 14, 5, 10, 9, 4, 11, 10, 5, 12, 10, 11, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [12, 8, 8, 5, 8, 9, 7, 10, 15, 6, 7, 9, 5, 10, 10, 6, 10, 4, 3, 8, 5, 4, 10, 5, 8, 3, 9, 7, 10, 9, 9, 4, 7, 9, 6, 7, 6, 18, 11, 3, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [9, 6, 28, 5, 165, 7, 8, 4, 6, 6, 3, 4, 3, 5, 4, 4, 8, 8, 6, 3, 3, 4, 7, 4, 7, 5, 4, 6, 10, 5, 7, 11, 8, 28, 6, 5, 4, 6, 4, 10, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 10, 6, 8, 8, 8, 6, 9, 10, 9, 9, 14, 6, 10, 8, 6, 9, 4, 10, 10, 6, 8, 6, 8, 6, 6, 11, 190, 5, 7, 4, 6, 3, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 6, 4, 6, 4, 4, 12, 12, 3, 9, 3, 7, 7, 12, 7, 5, 7, 5, 6, 6, 6, 6, 4, 12, 5, 20, 9, 4, 86, 7, 9, 13, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [17, 5, 8, 22, 3, 11, 7, 6, 3, 3, 12, 4, 11, 6, 5, 4, 17, 10, 3, 4, 127, 11, 7, 12, 13, 5, 3, 7, 8, 14, 10, 9, 3, 10, 6, 4, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 8, 5, 8, 4, 5, 5, 6, 6, 3, 6, 4, 6, 6, 5, 10, 5, 3, 10, 3, 41, 4, 11, 5, 5, 4, 6, 4, 7, 4, 11, 4, 5, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 6, 4, 4, 9, 4, 8, 7, 8, 4, 8, 3, 12, 8, 9, 3, 8, 6, 5, 6, 10, 11, 8, 14, 5, 3, 15, 7, 6, 9, 4, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 10, 8, 8, 4, 4, 4, 11, 25, 3, 3, 5, 8, 11, 4, 10, 4, 7, 8, 5, 8, 7, 21, 4, 13, 6, 8, 4, 419, 5, 5, 4, 4, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 7, 6, 7, 3, 6, 9, 11, 5, 13, 7, 8, 19, 204, 8, 7, 5, 5, 9, 7, 7, 7, 11, 5, 9, 7, 12, 6, 5, 8, 8, 10, 7, 5, 8, 10, 4, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 8, 3, 7, 11, 10, 9, 10, 10, 12, 4, 11, 7, 12, 4, 7, 12, 10, 8, 13, 10, 8, 3, 4, 13, 8, 5, 11, 10, 9, 8, 7, 9, 9, 19, 8, 12, 10]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [5, 8, 15, 7, 10, 10, 10, 4, 7, 10, 10, 13, 7, 9, 9, 10, 8, 9, 5, 7, 7, 10, 10, 10, 7, 5, 6, 12, 13, 11, 6, 9, 8, 6, 11, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [5, 9, 321, 4, 17, 9, 4, 7, 9, 10, 10, 9, 6, 9, 10, 7, 3, 9, 9, 10, 9, 9, 5, 5, 4, 6, 5, 8, 12, 11, 8, 9, 8, 12, 10, 7, 9, 10, 9, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [25, 7, 6, 12, 7, 8, 6, 16, 4, 8, 6, 16, 9, 8, 9, 8, 7, 11, 14, 6, 11, 9, 6, 24, 5, 6, 4, 17, 8, 9, 10, 9, 15, 10, 16, 8, 8, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 10, 8, 5, 8, 15, 9, 8, 18, 4, 7, 8, 8, 6, 6, 4, 9, 12, 4, 8, 8, 10, 5, 5, 8, 8, 12, 10, 6, 5, 17, 48, 9, 6, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 7, 5, 7, 11, 10, 8, 6, 4, 10, 18, 10, 7, 13, 11, 8, 7, 9, 12, 5, 10, 5, 5, 12, 5, 8, 9, 6, 5, 7, 10, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 9, 13, 4, 12, 10, 5, 4, 6, 9, 14, 5, 5, 7, 9, 10, 4, 10, 10, 8, 6, 6, 11, 5, 104, 6, 11, 5, 11, 9, 6, 12, 4, 9, 10, 10, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 8, 8, 7, 7, 7, 4, 6, 410, 270, 7, 4, 7, 5, 8, 10, 7, 8, 11, 3, 15, 7, 7, 15, 9, 10, 12, 5, 5, 9, 13, 6, 16, 8, 5, 9, 8, 295, 112, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [28, 5, 10, 9, 8, 291, 7, 8, 10, 8, 4, 5, 7, 8, 7, 7, 21, 6, 4, 12, 209, 5, 7, 239, 14, 6, 5, 17, 8, 4, 5, 3, 5, 10, 14, 4, 13, 5, 8, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 11, 8, 9, 11, 7, 8, 9, 12, 6, 9, 8, 47, 6, 7, 11, 12, 9, 7, 8, 125, 12, 4, 8, 5, 7, 7, 537, 11, 6, 10, 11, 12, 3, 7, 9, 7, 251, 4, 13, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [13, 8, 11, 10, 20, 5, 7, 5, 3, 8, 11, 9, 6, 4, 230, 11, 7, 6, 6, 7, 9, 10, 6, 9, 7, 3, 7, 5, 11, 9, 8, 11, 9, 7, 7, 10, 6, 7, 5, 343, 12]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [8, 3, 9, 11, 10, 8, 8, 11, 7, 8, 11, 6, 13, 14, 11, 5, 8, 4, 9, 9, 10, 9, 7, 7, 7, 11, 23, 11, 3, 7, 8, 3, 9, 7, 7, 11, 9, 8, 14, 6, 96, 9, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 11, 7, 6, 12, 7, 7, 13, 9, 4, 7, 10, 8, 7, 11, 5, 80, 10, 7, 12, 13, 7, 6, 10, 11, 7, 8, 6, 14, 3, 7, 6, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [4, 6, 58, 7, 7, 8, 13, 6, 24, 6, 5, 4, 7, 7, 10, 7, 7, 9, 10, 12, 6, 6, 9, 8, 420, 6, 11, 7, 9, 9, 35, 7, 4, 7, 7, 7, 7, 6, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [2, 5, 92, 6, 11, 11, 3, 4, 8, 9, 3, 7, 4, 13, 7, 7, 482, 8, 3, 8, 7, 9, 4, 9, 7, 8, 5, 194, 11, 27, 9, 6, 8, 8, 13, 6, 13, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [9, 3, 7, 6, 3, 8, 9, 6, 8, 5, 7, 8, 7, 8, 3, 61, 9, 7, 6, 4, 6, 18, 5, 8, 8, 5, 7, 6, 8, 278, 4, 7, 7, 6, 8, 9, 229, 12, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [21, 10, 6, 6, 4, 52, 6, 3, 6, 8, 4, 3, 7, 3, 17, 6, 24, 4, 7, 5, 4, 5, 5, 5, 7, 20, 31, 4, 9, 22, 6, 72, 4, 9, 8, 5, 10, 4]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 3, 6, 12, 5, 6, 6, 297, 5, 7, 5, 9, 9, 8, 6, 6, 15, 5, 9, 5, 7, 14, 11, 10, 9, 6, 9, 4, 7, 7, 11, 7]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 8, 13, 5, 9, 5, 4, 4, 285, 4, 21, 11, 3, 9, 8, 6, 8, 21, 12, 8, 15, 9, 10, 10, 9, 9, 8, 5, 7, 11, 6, 11, 7, 7, 14, 3, 5, 5, 9, 60, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [16, 8, 8, 241, 23, 46, 12, 22, 8, 12, 6, 7, 4, 7, 4, 9, 8, 6, 11, 9, 8, 8, 3, 7, 8, 5, 9, 7, 8, 9, 7, 8, 8, 6, 17, 7, 8, 8, 5, 6, 9, 7, 184]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [7, 8, 10, 10, 10, 10, 6, 11, 8, 9, 8, 13, 13, 5, 7, 9, 7, 9, 12, 6, 11, 7, 7, 11, 7, 9, 5, 10, 9, 7, 8, 8, 11, 5, 14, 14, 9, 9, 9, 7, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 7, 7, 7, 4, 464, 8, 10, 11, 9, 8, 6, 9, 3, 6, 7, 10, 10, 7, 7, 6, 9, 8, 7, 6, 6, 7, 7, 9, 7, 8, 9, 9, 6, 7, 6, 9, 8, 3, 7]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [6, 13, 10, 9, 3, 6, 7, 13, 14, 6, 10, 11, 7, 7, 9, 5, 11, 12, 6, 8, 11, 13, 11, 9, 10, 10, 5, 10, 16, 7, 11, 7, 7, 11, 39, 30, 11, 12, 5, 12, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [8, 10, 9, 7, 10, 4, 12, 6, 7, 11, 11, 6, 4, 6, 6, 8, 6, 6, 7, 6, 6, 8, 5, 4, 5, 277, 5, 8, 7, 11, 8, 4, 6, 8, 11, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [7, 236, 5, 4, 8, 4, 8, 7, 7, 3, 7, 7, 11, 8, 11, 10, 44, 6, 10, 6, 6, 9, 7, 7, 4, 6, 6, 6, 7, 6, 6, 10, 9, 4, 94, 8, 7, 5, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [8, 9, 138, 7, 10, 9, 8, 9, 11, 9, 11, 7, 284, 7, 16, 13, 4, 9, 9, 9, 11, 11, 10, 13, 11, 5, 7, 6, 9, 4, 4, 6, 9, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 4, 7, 10, 7, 7, 6, 64, 9, 3, 10, 5, 10, 6, 9, 7, 9, 8, 3, 10, 8, 6, 14, 6, 6, 13, 9, 13, 9, 12, 9, 8, 3, 8, 7, 5, 7]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [15, 3, 9, 5, 10, 4, 6, 7, 4, 11, 9, 11, 6, 6, 5, 9, 12, 9, 15, 9, 4, 11, 13, 5, 15, 7, 5, 8, 6, 9, 6, 10, 9, 6, 9, 6, 7, 5, 5, 7]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 7, 10, 7, 14, 11, 5, 7, 10, 7, 201, 9, 7, 5, 11, 10, 18, 4, 8, 6, 8, 7, 7, 19, 9, 8, 3, 10, 4, 7, 5, 11, 3, 23]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 11, 9, 4, 37, 5, 4, 6, 6, 4, 4, 5, 6, 3, 5, 10, 7, 3, 11, 5, 9, 6, 4, 7, 7, 12, 142, 11, 11, 5, 6, 7, 5, 7, 11, 6, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [13, 6, 11, 13, 11, 7, 7, 6, 4, 8, 7, 6, 12, 10, 7, 9, 7, 3, 12, 12, 307, 13, 10, 7, 12, 6, 9, 19, 12, 12, 4, 6, 10, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [11, 11, 9, 9, 7, 9, 7, 8, 8, 7, 9, 7, 3, 4, 6, 8, 7, 9, 8, 6, 6, 10, 7, 6, 13, 12, 10, 6, 7, 9, 6, 8, 10, 4, 5, 11, 8, 6, 6, 9, 6, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [3, 10, 28, 10, 7, 10, 8, 7, 8, 51, 50, 5, 11, 9, 4, 3, 3, 10, 6, 50, 4, 11, 8, 3, 17, 5, 543, 8, 17, 6, 8, 9, 11, 9, 10, 11, 5, 11, 5, 12, 12]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [13, 11, 9, 9, 11, 12, 10, 14, 5, 13, 10, 6, 10, 9, 8, 5, 11, 10, 10, 6, 11, 10, 8, 14, 10, 11, 14, 5, 13, 10, 11, 5, 4, 12, 12, 4, 11, 15, 9, 9]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 9, 4, 4, 5, 5, 10, 4, 6, 7, 5, 4, 9, 4, 8, 6, 5, 5, 9, 96, 5, 4, 5, 6, 10, 4, 5, 8, 4, 6, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 4, 5, 7, 4, 9, 9, 7, 4, 8, 6, 5, 4, 5, 9, 8, 9, 5, 4, 9, 16, 5, 9, 4, 5, 4, 8, 8, 8, 4, 5, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 5, 10, 8, 9, 8, 12, 4, 4, 12, 5, 3, 4, 9, 13, 4, 4, 8, 4, 4, 4, 4, 93, 10, 10, 6, 8, 7, 4, 5, 5, 11, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [12, 7, 7, 3, 3, 7, 10, 8, 7, 7, 8, 5, 7, 4, 8, 8, 3, 7, 3, 4, 8, 6, 12, 8, 8, 3, 6, 6, 8, 4, 11, 7, 9, 12, 3, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 3, 7, 6, 7, 4, 7, 5, 4, 12, 8, 7, 6, 7, 227, 10, 8, 4, 4, 8, 7, 10, 5, 6, 4, 11, 10, 8, 5, 7, 6, 5, 10, 6, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [5, 9, 5, 8, 16, 3, 7, 10, 79, 3, 4, 7, 8, 15, 7, 9, 8, 3, 7, 7, 8, 5, 7, 9, 144, 5, 5, 4, 97, 4, 6, 6, 6, 7, 12]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [12, 6, 6, 4, 6, 11, 4, 9, 6, 8, 6, 6, 7, 5, 7, 9, 8, 9, 6, 7, 5, 7, 6, 8, 8, 6, 7, 32, 6, 12, 5, 6, 10, 9, 10, 4, 6, 8, 6, 6, 4, 5, 9]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 3, 7, 6, 7, 10, 13, 10, 4, 395, 5, 7, 16, 7, 10, 8, 3, 6, 4, 6, 16, 7, 315, 6, 7, 7, 8, 7, 5, 10, 274, 10, 11, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 7, 6, 9, 10, 5, 7, 13, 8, 14, 7, 4, 10, 8, 4, 5, 10, 10, 8, 3, 14, 6, 6, 13, 7, 8, 5, 6, 43, 6, 5, 4, 10, 4, 4, 4, 8]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [7, 53, 7, 15, 5, 5, 4, 17, 11, 4, 4, 6, 9, 15, 3, 5, 7, 4, 4, 9, 7, 5, 5, 10, 5, 20, 11, 7, 11, 11, 6, 10, 5, 4, 137]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 7, 33, 8, 5, 5, 7, 8, 3, 9, 8, 8, 6, 10, 4, 8, 7, 7, 8, 13, 6, 4, 8, 380, 11, 9, 8, 8, 11, 3, 4, 4, 7, 5, 5, 7, 55, 8, 7, 4, 7, 3]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [9, 11, 7, 5, 11, 4, 4, 4, 9, 4, 4, 4, 4, 6, 7, 4, 6, 10, 10, 7, 6, 12, 7, 6, 23, 8, 4, 4, 12, 4, 4, 6, 38, 6, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 14, 5, 8, 4, 9, 4, 4, 7, 40, 4, 7, 8, 5, 3, 7, 4, 8, 4, 5, 73, 6, 4, 5, 6, 4, 3, 10, 8, 18, 5, 4, 5, 9, 352, 7, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 142, 3, 12, 7, 8, 5, 3, 5, 52, 13, 5, 10, 5, 4, 5, 14, 5, 6, 11, 4, 13, 7, 7, 86, 6, 9, 3, 344, 5, 13, 6, 5, 5, 102, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [9, 13, 13, 5, 6, 5, 6, 4, 7, 4, 7, 6, 4, 8, 6, 7, 5, 7, 10, 5, 6, 4, 6, 16, 9, 6, 14, 14, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [13, 10, 7, 8, 4, 10, 4, 4, 5, 6, 9, 15, 7, 34, 10, 9, 9, 98, 9, 3, 6, 5, 4, 220, 11, 164, 5, 5, 10, 12, 5, 14, 208, 12, 15, 17, 10]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [5, 12, 9, 5, 6, 8, 8, 96, 4, 5, 4, 14, 4, 12, 6, 13, 13, 8, 6, 9, 9, 13, 5, 11, 14, 8, 117, 14, 10, 22, 9, 4, 7, 14, 5, 7, 16, 5]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [4, 10, 193, 9, 17, 15, 6, 9, 9, 13, 3, 13, 5, 5, 10, 10, 6, 10, 9, 4, 9, 10, 9, 11, 11, 10, 270, 8, 5, 9, 5, 8, 9, 11, 14, 9, 7, 7, 10, 14, 17, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 8, 9, 12, 8, 13, 10, 8, 13, 16, 466, 9, 11, 7, 8, 17, 11, 8, 8, 5, 10, 9, 6, 13, 4, 196, 12, 10, 13, 8, 9, 4, 18, 10, 10, 9, 8, 5, 11, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [10, 5, 10, 4, 6, 3, 5, 9, 11, 10, 9, 3, 159, 3, 3, 10, 7, 6, 6, 10, 562, 6, 9, 3, 10, 9, 10, 9, 10, 6, 10, 6, 13, 8, 9, 10, 10, 75, 13, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [23, 13, 9, 13, 8, 6, 6, 8, 6, 8, 9, 7, 8, 7, 12, 7, 7, 6, 12, 6, 5, 6, 7, 3, 13, 7, 30, 4, 6, 8, 6, 9, 362, 6, 8, 5, 7, 20, 10, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 10, 6, 6, 9, 6, 13, 6, 8, 6, 6, 11, 6, 6, 5, 9, 7, 11, 6, 4, 5, 7, 5, 8, 6, 6, 10, 6, 13, 13, 6, 5, 6, 5, 5, 11, 8, 10, 8, 15]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [10, 9, 8, 9, 8, 10, 6, 10, 9, 7, 61, 8, 8, 23, 2, 4, 6, 11, 11, 7, 7, 11, 6, 12, 3, 10, 8, 9, 8, 9, 11, 11, 15, 8, 14, 10, 8, 13, 7, 6, 11, 9, 12]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 24, 6, 8, 12, 6, 4, 8, 7, 9, 7, 9, 6, 6, 5, 11, 11, 8, 7, 8, 18, 8, 8, 11, 7, 9, 13, 10, 8, 6, 9, 8, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [6, 4, 244, 8, 8, 6, 7, 9, 4, 7, 7, 4, 9, 5, 5, 6, 10, 7, 6, 6, 3, 4, 9, 8, 7, 10, 7, 7, 5, 6, 6, 8, 9, 76, 18, 4, 8, 82, 5, 30, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 7, 13, 9, 10, 10, 10, 7, 5, 7, 7, 12, 14, 12, 12, 14, 6, 10, 8, 5, 7, 6, 11, 9, 13, 11, 7, 6, 8, 14, 75, 6, 9, 6, 5, 26]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 7, 7, 8, 17, 7, 8, 7, 6, 10, 5, 8, 16, 8, 23, 5, 9, 9, 6, 12, 7, 10, 10, 5, 6, 4, 8, 3, 6, 7, 9, 202, 89, 28, 6, 226, 17, 5, 9, 9, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [11, 4, 6, 12, 14, 7, 9, 8, 4, 11, 5, 6, 5, 6, 6, 12, 7, 13, 6, 8, 9, 14, 13, 9, 6, 6, 4, 5, 6, 7, 13, 9, 12, 8, 7, 8, 5, 6, 9, 6, 13, 5, 12, 9, 9, 10]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 4, 12, 5, 9, 7, 3, 7, 8, 4, 3, 5, 7, 3, 4, 5, 4, 9, 6, 8, 5, 12, 7, 4, 3, 299, 3, 8, 3, 12, 5, 6, 6, 9, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 7, 6, 8, 7, 3, 11, 8, 4, 6, 8, 8, 13, 8, 14, 8, 10, 9, 4, 6, 26, 7, 6, 5, 5, 9, 7, 17, 344, 151, 10, 10, 7, 6, 7, 8, 19, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [2, 14, 11, 11, 8, 12, 6, 27, 9, 8, 11, 9, 9, 6, 6, 16, 9, 11, 9, 6, 6, 5, 36, 9, 10, 9, 6, 11, 11, 7, 6, 10, 7, 9, 11, 7, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [8, 9, 11, 9, 4, 14, 4, 9, 8, 7, 4, 6, 10, 5, 5, 6, 7, 10, 7, 280, 8, 18, 8, 4, 11, 5, 5, 8, 11]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 5, 13, 13, 6, 6, 8, 41, 14, 13, 6, 12, 6, 5, 12, 4, 4, 7, 8, 7, 6, 7, 17, 13, 16, 4, 17, 6, 5, 3, 6, 6, 17, 6, 6, 6, 4, 17, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [29, 8, 8, 9, 8, 11, 9, 9, 180, 28, 28, 11, 8, 9, 6, 9, 17, 11, 7, 6, 10, 6, 32, 12, 4, 8, 10, 5, 10, 8, 469, 249, 8, 93, 7, 8, 6, 174, 6, 7, 9, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [10, 10, 4, 6, 12, 5, 6, 10, 11, 31, 28, 28, 6, 6, 7, 5, 5, 8, 4, 7, 68, 107, 6, 5, 238, 6, 10, 9, 8, 10, 6, 6, 6, 8, 9, 6, 9, 5, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [8, 10, 4, 5, 7, 5, 4, 5, 9, 11, 11, 28, 28, 7, 5, 4, 7, 11, 8, 6, 7, 9, 10, 15, 8, 10, 5, 4, 9, 727, 9, 6, 6, 10, 24, 6, 10, 9, 8, 10, 7, 10, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [11, 9, 6, 4, 10, 5, 10, 5, 10, 10, 8, 8, 9, 9, 6, 8, 11, 9, 8, 7, 5, 8, 8, 7, 8, 8, 8, 6, 3, 8, 7, 10, 9, 9, 7, 11, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 17, 10, 10, 11, 8, 22, 13, 11, 6, 8, 11, 144, 10, 18, 10, 7, 5, 9, 11, 9, 6, 20, 9, 8, 9, 8, 8, 7, 10, 13, 11, 10, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 10, 5, 11, 12, 10, 228, 12, 10, 7, 8, 4, 13, 5, 10, 8, 20, 7, 7, 7, 7, 10, 13, 6, 6, 26, 6, 6, 82, 9, 5, 20, 3, 5, 3]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [18, 4, 23, 5, 8, 4, 4, 22, 8, 5, 5, 7, 8, 10, 9, 6, 3, 4, 8, 7, 6, 11, 4, 7, 8, 3, 6, 6, 33, 8, 7, 5]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [8, 10, 5, 6, 10, 7, 10, 11, 4, 12, 5, 5, 8, 8, 2, 3, 11, 4, 9, 10, 10, 12, 10, 18, 9, 8, 7, 6, 4, 10, 4, 7, 8, 9, 6, 13, 51, 10, 13, 11]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [6, 6, 5, 4, 7, 7, 6, 3, 4, 7, 9, 8, 7, 6, 10, 11, 5, 9, 4, 6, 6, 7, 7, 5, 6, 7, 8, 11, 7, 6, 4, 9, 7, 4, 3, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 8, 262, 8, 10, 6, 7, 556, 7, 11, 7, 4, 4, 7, 7, 5, 11, 85, 9, 8, 5, 7, 10, 33, 8, 135, 7, 21, 5, 7, 8, 11, 8, 8, 7, 4, 7, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [14, 10, 7, 3, 8, 9, 5, 6, 5, 7, 38, 6, 6, 28, 6, 7, 7, 9, 6, 9, 6, 9, 5, 7, 4, 6, 7, 4, 9, 4, 7, 5, 6, 6, 5, 8, 56, 3, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [11, 7, 6, 5, 9, 8, 9, 7, 9, 8, 10, 6, 7, 8, 8, 10, 10, 6, 6, 10, 8, 6, 6, 10, 6, 125, 10, 7, 5, 10, 10, 8, 7, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 3, 6, 4, 8, 6, 6, 10, 5, 5, 4, 4, 5, 8, 5, 11, 9, 10, 9, 7, 4, 6, 9, 247, 8, 5, 4, 5, 8, 7, 8, 6, 35, 36, 3, 3, 31]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [5, 10, 394, 10, 10, 10, 6, 6, 5, 10, 9, 10, 7, 14, 122, 6, 7, 26, 8, 6, 8, 8, 8, 8, 8, 7, 21, 10, 8, 13, 11, 16, 6, 9, 8, 6, 11, 8, 6, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [6, 9, 25, 10, 12, 6, 9, 5, 9, 7, 7, 10, 9, 7, 4, 7, 9, 12, 8, 9, 9, 8, 5, 8, 8, 10, 340, 3, 9, 9, 9, 8, 7, 9, 5, 6, 37, 9, 8, 9, 9, 10, 8, 10]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [5, 8, 22, 13, 9, 6, 8, 7, 7, 8, 8, 7, 8, 10, 3, 10, 8, 10, 6, 8, 8, 6, 7, 6, 4, 9, 10, 7, 9, 6, 12, 12, 6, 14, 8, 8, 8, 9, 10, 9, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [7, 9, 11, 9, 10, 8, 11, 9, 13, 3, 13, 5, 5, 13, 11, 10, 14, 12, 10, 15, 22, 4, 4, 11, 10, 10, 6, 10, 7, 13, 10, 7, 20, 11, 10, 11, 4, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 4, 4, 4, 181, 6, 4, 4, 7, 6, 7, 7, 7, 7, 8, 7, 154, 15, 7, 4, 4, 6, 6, 9, 10, 4, 4, 6, 5, 18, 5, 16, 3, 5, 8, 7, 11]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 7, 5, 5, 6, 3, 4, 10, 7, 5, 9, 7, 6, 7, 7, 4, 8, 3, 6, 6, 10, 16, 4, 8, 8, 7, 5, 16, 5, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 3, 10, 7, 4, 5, 11, 5, 8, 6, 9, 4, 11, 5, 11, 8, 4, 11, 8, 10, 11, 9, 11, 6, 15, 12, 9, 12, 8, 9, 5, 3, 4, 11, 10, 8, 6, 584, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [7, 10, 11, 11, 5, 5, 6, 8, 9, 21, 10, 10, 9, 9, 6, 8, 17, 8, 13, 8, 7, 8, 13, 9, 8, 16, 9, 8, 7, 16, 4, 8, 6, 10, 9, 6, 5, 8, 326, 5]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 4, 5, 9, 13, 7, 14, 10, 11, 9, 15, 6, 14, 15, 13, 12, 8, 10, 7, 5, 7, 7, 7, 13, 8, 3, 5, 7, 4, 18, 3, 16]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 11, 13, 12, 9, 8, 15, 4, 17, 11, 3, 11, 8, 3, 17, 10, 13, 20, 9, 9, 11, 5, 4, 26, 10, 69, 48, 5, 15, 9, 5, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 6, 5, 6, 8, 3, 4, 10, 9, 7, 5, 4, 7, 11, 9, 6, 6, 9, 10, 6, 4, 9, 6, 8, 13, 13, 9, 6, 7, 9, 5, 59, 9, 6, 4, 8, 8]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 6, 4, 11, 5, 9, 3, 3, 7, 4, 6, 7, 4, 8, 8, 8, 11, 3, 11, 14, 6, 6, 8, 8, 17, 8, 7, 12, 9, 3, 6, 13, 8, 3, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 8, 8, 5, 9, 9, 15, 11, 10, 334, 5, 5, 9, 15, 5, 170, 7, 7, 8, 6, 5, 8, 13, 11, 8, 13, 295, 6, 8, 6, 280, 9, 7, 11, 10, 4, 11, 7, 5, 6, 7, 7, 8]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 9, 11, 7, 9, 7, 19, 8, 8, 8, 23, 35, 5, 5, 10, 5, 9, 9, 9, 81, 7, 8, 7, 10, 7, 10, 8, 6, 12, 9, 3, 9, 35, 9, 7, 9, 9, 250, 8, 5]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [13, 4, 9, 8, 9, 20, 10, 12, 13, 5, 5, 21, 15, 4, 7, 13, 7, 8, 23, 7, 24, 5, 222, 178, 9, 10, 10, 7, 12, 4, 9, 21, 4, 3, 19, 9, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 9, 7, 9, 3, 9, 7, 11, 8, 6, 16, 12, 8, 7, 10, 5, 9, 6, 4, 6, 58, 11, 10, 5, 6, 7, 4, 4, 10, 7, 3, 3, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [14, 9, 192, 11, 15, 3, 54, 6, 9, 8, 4, 3, 10, 4, 4, 5, 34, 7, 4, 4, 6, 8, 9, 8, 4, 4, 4, 7, 10, 18, 7, 7, 10, 8, 6, 5, 7, 3]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [6, 11, 6, 4, 4, 114, 9, 5, 8, 8, 5, 5, 7, 3, 5, 10, 11, 24, 8, 15, 11, 402, 4, 12, 4, 4, 4, 9, 3, 7, 7, 362, 6, 5, 9, 6, 7, 11, 231, 9, 70, 3]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [5, 5, 11, 4, 11, 12, 15, 5, 15, 6, 42, 7, 9, 13, 8, 6, 8, 6, 5, 12, 15, 9, 13, 6, 3, 8, 11, 7, 10, 4, 5, 12, 11, 10, 12, 6, 12, 7, 11, 6, 4, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 8, 14, 8, 7, 6, 8, 10, 6, 7, 7, 7, 10, 13, 12, 7, 7, 8, 11, 8, 7, 7, 9, 8, 6, 11, 8, 8, 10, 7, 136, 8, 4, 7, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 9, 8, 10, 7, 5, 7, 6, 8, 5, 3, 5, 5, 3, 7, 3, 7, 4, 4, 8, 5, 9, 10, 3, 6, 5, 7, 7, 3, 7, 10, 3, 6, 7, 10, 9]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [8, 10, 9, 4, 4, 5, 7, 5, 4, 4, 4, 6, 4, 6, 5, 4, 5, 15, 4, 150, 30, 5, 14, 5, 8, 5, 4, 4, 3, 7, 4, 6, 5, 174, 5, 4, 4]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 9, 6, 12, 4, 8, 10, 3, 37, 11, 4, 352, 7, 5, 10, 5, 6, 6, 12, 13, 5, 12, 3, 4, 115, 12, 5, 6, 7, 5, 3, 12, 14, 10]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [6, 4, 20, 4, 8, 8, 6, 4, 6, 5, 6, 6, 6, 5, 5, 4, 8, 13, 3, 6, 6, 6, 6, 342, 14, 5, 3, 4, 8, 5, 9, 7, 6, 8, 3, 202, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 7, 3, 9, 8, 6, 4, 6, 11, 7, 9, 8, 9, 9, 4, 8, 9, 9, 11, 9, 2, 5, 6, 6, 7, 6, 5, 8, 8, 9, 9, 8, 9, 9, 7, 12, 9, 12, 36, 5, 12, 8, 9]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [3, 7, 9, 7, 5, 8, 7, 9, 7, 7, 9, 7, 8, 13, 13, 7, 8, 9, 9, 5, 14, 6, 11, 15, 5, 5, 6, 10, 9, 156, 7, 6, 9, 10, 142, 6, 10, 7, 13, 8, 8, 10, 4, 10, 10]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [8, 5, 130, 6, 7, 9, 9, 6, 7, 9, 6, 7, 8, 9, 6, 5, 4, 12, 6, 7, 9, 6, 5, 7, 5, 6, 6, 9, 6, 6, 8, 7, 8, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [13, 8, 11, 9, 10, 8, 9, 13, 11, 9, 11, 28, 9, 34, 5, 11, 6, 8, 10, 9, 13, 11, 8, 6, 9, 17, 6, 10, 10, 8, 9, 37, 3, 10, 9, 9]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [8, 7, 101, 4, 427, 192, 10, 4, 10, 12, 4, 7, 44, 5, 4, 13, 24, 9, 6, 12, 3, 10, 5, 8, 9, 6, 14, 9, 3, 13, 8, 10]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 7, 7, 7, 7, 7, 7, 6, 11, 6, 6, 7, 11, 7, 12, 9, 7, 7, 7, 57, 459, 11, 14, 6, 9, 6, 16, 8, 7, 5, 7, 16, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [15, 6, 5, 7, 14, 8, 37, 6, 10, 10, 10, 7, 7, 10, 5, 10, 7, 9, 8, 7, 6, 6, 36, 5, 5, 4, 9, 7, 9, 29, 9, 12, 7, 6, 7, 9, 6, 7, 9, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [9, 6, 7, 11, 7, 9, 10, 10, 5, 6, 9, 10, 7, 11, 5, 11, 7, 7, 6, 10, 7, 6, 7, 12, 5, 7, 209, 6, 8, 6, 10, 11, 7, 6, 8, 8, 7, 9, 21, 3, 10]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 6, 5, 4, 8, 10, 6, 8, 7, 11, 7, 10, 9, 6, 9, 8, 6, 5, 10, 7, 6, 5, 9, 11, 6, 8, 19, 7, 5, 8, 82, 8, 7, 9, 11, 10, 6, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [14, 14, 8, 4, 7, 11, 131, 14, 11, 7, 10, 8, 4, 5, 4, 8, 7, 9, 10, 5, 7, 11, 8, 20, 8, 6, 3, 8, 10, 8, 11, 7, 8, 8, 10, 8, 14, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 7, 7, 7, 60, 7, 6, 4, 18, 4, 12, 5, 7, 8, 6, 7, 9, 4, 8, 5, 6, 8, 6, 3, 7, 6, 10, 8, 8, 47, 10, 8]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [13, 14, 5, 6, 3, 12, 6, 12, 7, 6, 10, 12, 3, 213, 13, 8, 15, 6, 8, 8, 6, 3, 10, 7, 6, 16, 112, 122, 17, 17, 7, 5, 15, 15, 17, 16, 17, 8, 16, 10]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [6, 9, 9, 9, 10, 4, 7, 7, 9, 11, 11, 12, 11, 6, 8, 13, 271, 10, 14, 6, 11, 7, 5, 10, 9, 12, 8, 13, 8, 8, 11, 12, 7, 14, 12, 12, 13, 14, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [3, 7, 6, 9, 9, 8, 9, 6, 5, 9, 4, 8, 8, 6, 7, 5, 5, 7, 9, 9, 7, 10, 8, 9, 10, 8, 11, 95, 7, 7, 11, 7, 6, 10, 6, 9, 11, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [8, 6, 8, 5, 8, 5, 7, 8, 5, 4, 8, 10, 7, 7, 5, 6, 7, 4, 7, 5, 5, 7, 4, 4, 8, 6, 8, 7, 5, 9, 6, 25, 12, 11, 15, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [7, 6, 9, 7, 3, 4, 10, 5, 8, 6, 10, 5, 10, 10, 6, 9, 13, 7, 7, 66, 8, 9, 51, 8, 4, 9, 4, 6, 11, 10, 5, 14, 9, 6, 11, 10, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [6, 14, 6, 12, 9, 11, 9, 25, 11, 17, 9, 6, 8, 21, 9, 21, 7, 6, 7, 3, 7, 8, 6, 17, 10, 15, 11, 7, 12, 8, 8, 14, 10, 10, 9, 10, 9, 7, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [16, 7, 6, 9, 7, 6, 9, 60, 9, 6, 7, 6, 7, 31, 7, 5, 5, 562, 10, 14]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 15, 10, 8, 7, 4, 6, 12, 7, 4, 8, 9, 4, 6, 7, 9, 11, 6, 10, 10, 3, 16, 8, 10, 9, 5, 7, 9, 13, 9, 8, 8, 13, 7, 7, 5, 4, 20]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [2, 9, 8, 12, 9, 5, 4, 9, 5, 9, 8, 6, 4, 9, 28, 6, 5, 11, 5, 7, 255, 11, 6, 8, 5, 6, 5, 8, 7, 3, 13, 4, 12, 11, 9, 8, 8]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [5, 10, 13, 8, 8, 7, 10, 7, 9, 6, 8, 9, 10, 8, 10, 8, 7, 9, 18, 12, 9, 9, 11, 5, 5, 71, 7, 10, 9, 4, 6, 3, 9, 11, 8, 6, 10, 12, 7, 6, 10, 10, 7, 7, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [13, 8, 5, 9, 9, 9, 11, 6, 3, 8, 8, 8, 9, 9, 9, 11, 7, 6, 10, 11, 59, 12, 12, 6, 11, 4, 8, 9, 412, 11, 6, 10, 67, 10, 11, 13, 8]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [17, 16, 5, 7, 5, 4, 27, 12, 4, 9, 7, 8, 8, 3, 6, 8, 5, 7, 10, 61, 7, 9, 6, 8, 13, 7, 14]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [15, 6, 6, 10, 7, 4, 15, 17, 11, 6, 15, 7, 10, 7, 16, 6, 10, 8, 6, 7, 7, 28, 7, 622, 18, 6, 7, 5, 6, 53, 7, 6, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [5, 6, 15, 6, 5, 10, 7, 7, 6, 11, 9, 7, 7, 7, 4, 8, 8, 13, 11, 4, 14, 10, 6, 7, 8, 10, 23, 6, 4, 10, 5, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [4, 5, 185, 11, 10, 7, 8, 5, 5, 8, 9, 9, 5, 8, 9, 7, 9, 9, 7, 8, 8, 7, 8, 9, 10, 7, 9, 8, 6, 7, 8, 6, 5, 4, 7, 4, 5, 11, 6]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [3, 9, 5, 12, 3, 10, 10, 11, 10, 10, 36, 4, 9, 10, 10, 11, 11, 11, 10, 6, 10, 12, 12, 8, 5, 8, 14, 11, 10, 10, 4, 10, 15, 26, 3, 4, 14, 10, 6, 3]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 72, 5, 3, 5, 96, 7, 14, 7, 7, 12, 7, 17, 15, 12, 9, 5, 5, 5, 119, 268, 9, 6, 442, 10, 4, 5, 7, 6, 11, 6, 6, 7, 4, 3, 3, 9, 13]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 4, 9, 5, 4, 11, 11, 4, 4, 31, 4, 9, 10, 4, 10, 20, 54, 8, 10, 7, 6, 7, 11, 8, 5, 4, 5, 7, 9, 6, 9, 9, 4, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [9, 151, 6, 7, 13, 8, 19, 11, 10, 7, 15, 10, 12, 13, 11, 9, 10, 25, 8, 10, 9, 8, 9, 10, 7, 10, 10, 11, 8, 9, 80, 11, 7, 12, 13, 11, 12, 10, 8, 9]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [10, 5, 23, 10, 114, 11, 10, 10, 10, 12, 4, 80, 11, 12, 10, 10, 5, 11, 10, 10, 14, 11, 11, 7, 13, 12, 10, 12, 12, 13, 12, 9, 10, 11, 10, 9, 11, 22, 10, 24, 10]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [7, 10, 7, 10, 11, 8, 10, 10, 14, 9, 6, 9, 10, 5, 9, 9, 16, 10, 8, 6, 7, 6, 7, 8, 7, 7, 10, 11, 7, 14, 5, 10, 10, 9, 5, 10]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [4, 14, 14, 15, 12, 12, 7, 12, 11, 5, 10, 15, 11, 10, 9, 12, 12, 6, 12, 10, 4, 16, 14, 14, 12, 6, 15, 17, 10, 13, 7, 5, 15, 6, 10, 15, 15, 12]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [4, 8, 15, 9, 5, 11, 10, 7, 5, 10, 4, 9, 11, 6, 8, 8, 8, 57, 11, 10, 11, 10, 15, 8, 8, 10, 5, 4, 11, 8, 3, 10, 10, 11, 9, 6, 10, 8, 10, 9, 9, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 9, 7, 9, 8, 7, 11, 9, 4, 3, 15, 8, 9, 8, 4, 11, 12, 6, 6, 10, 5, 9, 7, 9, 8, 9, 4, 11, 10, 5, 8, 7, 7, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [7, 10, 5, 4, 4, 8, 5, 6, 6, 7, 9, 3, 6, 11, 9, 6, 12, 8, 4, 7, 7, 8, 311, 7, 5, 3, 9, 22, 10, 8, 6, 6, 10, 7, 9, 4, 9, 6, 10, 5]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7, 5, 5, 4, 60, 5, 5, 5, 5, 6, 6, 8, 4, 6, 7, 6, 6, 6, 9, 33, 8, 6, 7, 5, 4, 6, 5, 6, 6, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 4, 3, 7, 5, 8, 4, 5, 5, 8, 5, 7, 5, 5, 5, 6, 7, 6, 5, 8, 8, 3, 5, 6, 5, 5, 4, 6, 7, 5, 14, 5, 14, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 7, 7, 8, 6, 3, 13, 10, 6, 6, 7, 6, 11, 9, 3, 13, 4, 12, 8, 10, 454, 10, 7, 9, 16, 9, 7, 6, 12, 12, 8, 7, 9, 5, 10, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 5, 4, 6, 7, 7, 10, 8, 3, 3, 7, 10, 5, 7, 6, 3, 46, 9, 6, 6, 4, 573, 4, 7, 6, 3, 6, 7, 5, 8, 35, 4, 4, 5, 4]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [10, 5, 7, 8, 5, 10, 8, 4, 11, 4, 12, 10, 4, 3, 6, 13, 10, 7, 6, 4, 4, 11, 11, 4, 7, 14, 13, 6, 10, 9, 10, 5, 14, 5, 13, 10, 10, 10, 9]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 8, 9, 6, 9, 10, 11, 16, 14, 7, 8, 10, 5, 6, 6, 9, 8, 9, 118, 16, 10, 11, 8, 11, 7, 8, 4, 6, 7, 9, 12, 4, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 8, 7, 7, 7, 10, 8, 56, 4, 6, 7, 9, 7, 5, 9, 6, 7, 9, 8, 7, 7, 6, 8, 6, 8, 5, 6, 190, 8, 6, 6, 7, 10, 8, 9, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [7, 336, 10, 8, 8, 8, 8, 10, 14, 6, 9, 7, 10, 6, 9, 10, 10, 17, 6, 12, 8, 7, 7, 8, 23, 6, 11, 10, 9, 7, 7, 19, 10, 9, 43, 8, 13, 11, 49]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 9, 6, 262, 7, 11, 11, 11, 4, 5, 8, 11, 7, 4, 9, 11, 89, 5, 8, 10, 9, 7, 11, 8, 7, 24, 5, 6, 8, 4, 8, 7, 8, 6, 4, 69, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 7, 6, 7, 7, 15, 5, 7, 3, 6, 7, 6, 7, 4, 5, 9, 4, 4, 137, 5, 5, 6, 4, 8, 6, 3, 6, 8, 10, 5, 14, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 6, 4, 6, 7, 7, 5, 4, 5, 4, 9, 8, 8, 8, 6, 7, 5, 15, 6, 9, 6, 4, 11, 9, 8, 16, 7]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [8, 8, 10, 8, 10, 54, 10, 8, 9, 19, 9, 11, 11, 8, 8, 10, 8, 6, 9, 10, 10, 5, 6, 6, 8, 36, 9, 6, 9, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [10, 7, 9, 10, 6, 7, 12, 10, 10, 11, 10, 10, 9, 9, 5, 8, 6, 9, 10, 10, 9, 8, 9, 13, 8, 16, 8, 10, 6, 13, 4, 9, 8, 9, 9, 4, 8, 4, 9, 4, 9, 101]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 8, 8, 6, 54, 38, 7, 4, 8, 8, 9, 16, 19, 11, 10, 8, 7, 8, 9, 7, 8, 7, 6, 7, 11, 8, 8, 6, 10, 9, 11, 7, 17, 24, 7, 20, 8, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [13, 9, 10, 6, 11, 10, 10, 10, 8, 11, 10, 9, 14, 10, 11, 21, 9, 456, 9, 11, 10, 5, 11, 11, 8, 20, 11, 10, 7, 14, 9, 10, 14, 9, 14, 9, 13, 15, 11, 9, 7, 10, 10, 11]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [7, 7, 13, 10, 16, 10, 15, 12, 11, 10, 8, 11, 12, 9, 10, 5, 8, 7, 11, 10, 10, 9, 5, 9, 13, 55, 11, 7, 10, 7, 10, 8, 10, 10, 9, 13, 26, 11, 10, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [4, 8, 9, 10, 5, 6, 11, 8, 10, 12, 9, 8, 9, 8, 8, 9, 9, 9, 10, 10, 6, 8, 74, 4, 5, 9, 8, 8, 10, 8, 9, 7, 12, 9, 10, 7, 9, 11, 10]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [10, 7, 11, 15, 11, 12, 12, 11, 12, 4, 21, 13, 13, 7, 13, 4, 16, 4, 13, 4, 15, 70, 16, 10, 3, 7, 11, 5, 13, 14, 9, 11, 12, 4, 6, 9, 37, 6, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 6, 4, 7, 9, 4, 4, 6, 4, 7, 7, 6, 12, 5, 7, 8, 9, 11, 10, 8, 7, 14, 6, 9]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [2, 9, 6, 6, 6, 10, 10, 10, 9, 6, 8, 7, 5, 7, 9, 18, 5, 12, 8, 4, 6, 13, 9, 7, 233, 9, 13, 6, 9, 14, 7, 9, 8, 5, 8, 8, 6, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [11, 14, 14, 10, 10, 6, 17, 7, 9, 8, 7, 16, 12, 9, 10, 9, 6, 9, 14, 9, 10, 5, 19, 9, 3, 7, 9, 11, 11, 8, 14, 11, 8, 9]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [10, 7, 11, 8, 10, 8, 14, 14, 6, 3, 8, 10, 9, 9, 10, 11, 10, 14, 10, 11, 8, 11, 7, 8, 7, 10, 10, 8, 10, 11, 151, 7, 14, 8, 11, 15]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 9, 13, 8, 7, 5, 9, 4, 11, 8, 6, 7, 5, 4, 7, 6, 8, 223, 8, 9, 9, 6, 4, 34, 9, 8, 9, 12, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [15, 6, 8, 9, 8, 11, 10, 7, 7, 11, 11, 8, 10, 11, 7, 6, 12, 9, 10, 8, 12, 341, 8, 11, 8, 12, 7, 10, 4, 7, 10, 7, 9, 8]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [6, 10, 8, 5, 5, 5, 9, 4, 9, 10, 9, 8, 4, 7, 5, 21, 10, 6, 7, 7, 9, 13, 8, 7, 10, 10, 9, 9, 9, 14, 7, 13, 8, 7, 11, 10, 10, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [5, 7, 9, 9, 8, 10, 5, 9, 9, 7, 3, 9, 5, 9, 92, 6, 7, 8, 7, 7, 7, 8, 7, 11, 9, 19, 11, 14, 8, 8, 7, 7, 9, 11, 4, 10, 8, 9, 8, 9, 12, 8]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [7, 8, 7, 12, 6, 10, 4, 11, 6, 6, 267, 10, 5, 8, 6, 4, 9, 4, 5, 10, 7, 7, 7, 6, 11, 5, 6, 6, 20, 10, 8]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 7, 8, 4, 6, 11, 8, 8, 9, 8, 10, 7, 4, 9, 8, 8, 5, 8, 6, 10, 5, 9, 5, 5, 6, 10, 9, 9, 5, 5, 7, 10, 8, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 4, 7, 6, 8, 7, 7, 6, 16, 6, 5, 5, 6, 5, 21, 8, 6, 6, 13, 6, 6, 5, 7, 6, 4, 9, 6, 7, 6, 5, 5, 14]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 4, 7, 7, 6, 7, 11, 9, 5, 7, 7, 6, 6, 187, 6, 21, 6, 5, 5, 6, 11, 3, 5, 4, 4, 6, 4, 7, 9, 9, 5, 5, 10, 7, 6]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [9, 7, 9, 7, 5, 8, 9, 5, 6, 9, 9, 6, 9, 4, 6, 7, 6, 6, 8, 6, 3, 6, 9, 4, 6, 10, 9, 8, 12, 9, 8, 6, 8, 6, 5, 5, 4, 6, 3, 8, 7]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [9, 8, 13, 9, 12, 8, 10, 8, 7, 9, 7, 6, 3, 7, 7, 6, 22, 7, 16, 6, 7, 6, 9, 13, 9, 9, 252, 8, 7, 12, 6, 9, 5, 8, 7, 77]
length(C_list) = 32
termination_sub = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 6, 7, 4, 8, 7, 15, 4, 14, 4, 7, 7, 8, 5, 6, 7, 7, 6, 6, 5, 6, 7, 6, 4, 5, 12, 4, 9, 7, 16, 6, 5, 6, 9, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 9, 11, 10, 8, 9, 9, 10, 5, 10, 9, 8, 3, 4, 4, 4, 7, 12, 4, 4, 11, 6, 5, 3, 4, 4, 5, 13, 11, 5]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [6, 14, 6, 8, 6, 11, 10, 8, 5, 9, 13, 8, 6, 9, 10, 7, 8, 8, 8, 8, 8, 10, 9, 6, 10, 7, 9, 8, 10, 9, 10, 11]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
