WARNING: Dual bound -0.982065 is larger than the objective of the primal solution -0.982083. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcE24377_1341
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcE24377_1341
----------------------------------
number of metabolites : 1972
number of reactions : 2763
number of genes : 1341

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2763 flux variables and 5135 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 28, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 18, 16, 16, 17, 19, 17, 16, 16, 11, 11, 16, 11, 11, 11, 11, 12, 7, 4, 16]
length(C_list) = 3
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 21, 16, 16, 17, 19, 17, 105, 16, 13, 13, 14, 15, 14, 13, 13, 16, 13, 13, 13, 14, 13, 15, 13, 15, 11, 26, 17, 11, 11, 13, 11, 11, 12, 2, 2, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 108, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 17, 11, 14, 16, 224, 12, 11, 15, 11, 2, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 6, 17, 117, 19, 307, 18, 19, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 11, 3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 16, 17, 28, 16, 13, 13, 14, 13, 14, 13, 170, 20, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 14, 11, 11, 11, 6, 6, 169]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 16, 18, 17, 16, 19, 17, 16, 13, 13, 16, 13, 15, 13, 26, 14, 14, 14, 13, 13, 13, 15, 69, 14, 13, 103, 11, 11, 14, 36, 14, 13, 11, 11, 13, 11, 11, 11, 3, 2, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 2, 16, 28, 17, 16, 17, 16, 16, 15, 13, 14, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 14, 15, 11, 11, 11, 11, 2, 4, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 12, 7, 2, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 7, 7, 16, 16, 17, 18, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 15, 33, 35, 17, 14, 13, 18, 25, 14, 13, 13, 11, 11, 13, 15, 13, 13, 11, 12, 11, 11, 6, 6, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 62, 16, 20, 17, 29, 16, 16, 11, 11, 16, 17, 16, 17, 11, 11, 17, 11, 83, 11, 3, 4, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 2, 16, 16, 17, 16, 35, 85, 16, 13, 13, 14, 13, 15, 94, 13, 14, 15, 14, 13, 13, 13, 14, 13, 15, 13, 46, 12, 11, 16, 14, 14, 11, 11, 13, 87, 11, 11, 3, 2, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 19, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11, 4, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11, 3, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 19, 19, 20, 19, 21, 19, 19, 16, 16, 17, 16, 17, 16, 16, 28, 16, 16, 18, 18, 17, 19, 16, 11, 11, 17, 23, 11, 11, 16, 11, 11, 11, 7, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 3, 16, 16, 17, 17, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 19, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11, 6, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 6, 22, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11, 4, 6, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 19, 29, 17, 17, 17, 16, 18, 13, 30, 14, 13, 356, 13, 14, 31, 13, 32, 14, 13, 13, 13, 14, 188, 14, 144, 14, 11, 13, 13, 18, 11, 11, 17, 19, 11, 11, 14, 6, 6, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 6, 19, 19, 20, 19, 20, 19, 19, 16, 16, 20, 16, 17, 16, 58, 20, 17, 243, 39, 22, 16, 144, 17, 16, 20, 22, 16, 11, 18, 16, 17, 13, 11, 16, 11, 11, 11, 6, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 86, 26, 16, 16, 17, 17, 16, 17, 16, 16, 11, 14, 16, 20, 11, 11, 11, 11, 11, 2, 7, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 7, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 11, 3, 7, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 19, 20, 23, 19, 20, 19, 19, 16, 16, 17, 17, 17, 16, 17, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16, 11, 11, 11, 11, 11, 11, 22, 35, 8, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 6, 30, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16, 11, 11, 11, 11, 11, 11, 11, 7, 6, 5]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 7, 16, 17, 17, 16, 17, 16, 17, 13, 13, 14, 184, 14, 13, 13, 15, 15, 13, 13, 13, 14, 13, 14, 14, 13, 11, 11, 11, 11, 13, 11, 11, 15, 6, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 4, 3, 3, 3, 2, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 4, 2, 2, 2, 2, 61, 8, 2, 8, 3, 113, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 5, 2, 4, 12, 81]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 5, 3, 26]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 130, 10, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 3, 4, 4, 3, 4, 3, 4, 6, 4, 4, 4, 6, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 29
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785085269928
thermo_feasible = true
