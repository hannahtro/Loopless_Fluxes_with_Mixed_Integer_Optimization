┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECW_1372
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECW_1372
----------------------------------
number of metabolites : 1973
number of reactions : 2782
number of genes : 1372

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2782 flux variables and 5173 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 17, 16, 21, 13, 16, 13, 15, 13, 18, 16, 14, 14, 13, 11, 13, 13, 14, 11, 14, 12, 13, 11, 14, 13, 13, 16, 11, 3, 2, 3, 3, 2, 21]
length(C_list) = 34
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 4, 2, 2, 3, 3, 2, 4, 2, 3, 2, 3, 4, 2, 4, 3, 4, 5, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 5, 4, 2, 14, 3, 4, 3, 8, 3, 4, 2, 2, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 5, 7, 4, 4, 3, 3, 4, 2, 4, 11, 3, 3, 2]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 2, 2, 4, 2, 4, 4, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 66, 4, 4, 58, 3, 6, 6, 5, 4, 8, 8, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 4, 7, 2, 5, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 3, 11, 4, 4, 4, 3, 5, 115, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 2, 7, 2, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 4, 4, 5, 26, 4, 10, 5, 4, 17, 5, 4, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 3, 9, 4, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 51, 2, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 4, 3, 4, 5, 6, 4, 4, 4, 4, 4, 4, 6, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784849173751
thermo_feasible = true
