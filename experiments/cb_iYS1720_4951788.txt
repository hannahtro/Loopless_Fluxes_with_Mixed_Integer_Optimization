┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYS1720
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYS1720
----------------------------------
number of metabolites : 2436
number of reactions : 3357
number of genes : 1707

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 67
max_cuts = 17
(indicator, big_m) = (false, true)
BIG M ADDED
model with 3357 flux variables and 6229 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 2, 4, 2, 2, 42, 2, 2, 3, 2, 2, 99, 4, 3, 3, 2, 2, 7, 2, 3, 3, 2]
length(C_list) = 17
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 2, 4, 2, 2, 2, 3, 3, 4, 4, 4, 3, 4, 3, 2, 4, 7, 4, 4, 2, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 5, 4, 4, 4, 2, 2, 8, 8, 2, 2, 2, 3, 2, 4, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 3, 49, 6, 4, 120, 5, 9, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 22, 4, 5, 363, 4, 4, 9, 41]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 4, 47, 5, 35, 18, 5, 5, 9, 5, 11, 6, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 6, 8, 3, 19, 7, 5, 193, 5, 5, 8, 4, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 15, 30, 5, 6, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 5, 5, 4, 13, 4, 7, 5, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 5, 6, 5, 93, 113, 6, 5, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 4, 4, 8, 7, 4, 4, 4, 4, 6, 18, 20, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 7, 6, 4, 6, 159, 9, 12, 30, 11]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 5, 6, 4, 4, 20, 4, 10, 5, 3, 9, 179, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 4, 4, 7, 8, 17, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 4, 5, 4, 4, 4, 209, 237, 3, 115, 6, 7, 8, 9, 7, 6, 9, 5, 5, 62]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 7, 11, 278, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.4884552032983473
thermo_feasible = true
