ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF692
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF692
----------------------------------
number of metabolites : 628
number of reactions : 690
number of genes : 692

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 14
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 690 flux variables and 1310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 4, 4]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 4, 6, 3, 5, 3, 4, 5, 2, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 39]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 6
termination = MathOptInterface.OPTIMAL
objective_value = 0.02677206562454044
thermo_feasible = true
