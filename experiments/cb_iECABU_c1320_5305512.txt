┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECABU_c1320
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECABU_c1320
----------------------------------
number of metabolites : 1942
number of reactions : 2731
number of genes : 1320

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2731 flux variables and 5071 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 13, 13, 13, 13, 17, 13, 14, 2, 12, 11, 3, 2, 7, 11, 11, 11, 11, 11, 2, 2, 2, 2, 5, 2, 3, 7, 17, 16, 17, 16, 17, 16, 16, 13, 13, 4, 4, 10, 15, 13, 14, 13, 13, 2, 14, 2, 15, 16, 14, 2, 3, 39, 7, 39, 40, 40, 2, 3]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 2, 3, 3, 3, 3, 2, 36, 4, 3, 2, 184, 6, 9, 3, 3, 3, 2, 4, 6, 5, 21, 3, 6, 5, 3, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 3, 3, 5, 3, 3, 4, 2, 4, 4, 4, 14, 4, 5, 16, 5, 2, 6, 10, 11, 20, 240]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [13, 4, 2, 14, 13, 4, 2, 7, 7, 13, 5, 7, 10, 10, 3, 4, 4, 10, 10, 4, 10, 11, 4, 4, 4, 4, 18, 17, 6, 18, 18, 17, 18, 5, 6, 5, 4, 6, 38, 145, 13, 4, 7, 7, 6, 13, 7, 4, 4, 5, 4, 20, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 2, 38, 2, 4, 9, 4, 4, 7, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 6, 7, 5, 9, 2, 9, 9, 2, 11, 6, 9, 2, 9, 4, 2, 9, 10, 9, 9, 6, 15, 9, 9, 10, 8, 11, 8]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 6, 8, 7, 8, 6, 6, 6, 8, 6, 8, 8, 6, 7, 9, 6, 6, 7, 8, 11, 23, 8, 11, 10, 10, 10, 8, 6, 11, 204, 8, 15, 9, 7]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 3, 4, 3, 4, 4, 2, 6, 4, 4, 4, 3, 4, 4, 44, 5, 4, 6, 28, 82, 4, 13, 4, 5, 7, 4, 8, 5, 5]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 4, 5, 5, 4, 5, 5, 4, 5, 5, 2, 14, 5, 2]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 208, 9, 8, 9, 48]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 10
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785191932278
thermo_feasible = true
