┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECP_1309
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECP_1309
----------------------------------
number of metabolites : 1941
number of reactions : 2739
number of genes : 1309

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2739 flux variables and 5087 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 12, 11, 12, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 2, 16, 13, 13, 14, 14, 14, 13, 13, 13, 16, 16, 95, 17, 16]
length(C_list) = 3
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 11, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 2, 29, 22, 142, 13, 13, 14, 13, 15, 13, 13, 16, 16, 14, 17, 16]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 12, 11, 15, 11, 13, 14, 12, 11, 13, 14, 13, 13, 15, 42, 21, 14, 13, 14, 13, 14, 13, 13, 13, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 2, 34, 11, 11, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 4, 16, 13, 13, 14, 13, 14, 15, 13, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 11, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 6, 14, 2, 13, 13, 14, 13, 14, 13, 13, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 11, 14, 11, 11, 11, 14, 15, 11, 11, 14, 15, 64, 18, 17, 7, 38, 16, 14, 14, 14, 14, 15, 14, 15, 14, 123, 25, 17, 17, 18, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 11, 11, 15, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 2, 13, 13, 16, 13, 14, 13, 13, 14, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 22, 11, 13, 34, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 4, 13, 13, 15, 13, 14, 13, 13, 37, 14, 16, 18, 18, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 11, 11, 11, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 4, 13, 13, 14, 13, 14, 13, 13, 16, 16, 17, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 2, 11, 11, 11, 11, 11, 13, 14, 11, 11, 13, 14, 13, 13, 13, 5, 13, 13, 14, 13, 14, 13, 13, 15, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 11, 11, 11, 11, 13, 14, 11, 11, 13, 17, 13, 13, 14, 2, 83, 25, 14, 13, 13, 15, 13, 14, 13, 13, 14, 16, 16, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 12, 11, 17, 11, 13, 13, 14, 13, 191, 13, 14, 13, 13, 14, 24, 13, 13, 14, 13, 14, 18, 13, 96, 23, 16, 16, 72, 17, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 10, 11, 11, 11, 11, 11, 14, 15, 11, 11, 14, 15, 14, 14, 14, 6, 14, 14, 15, 14, 15, 14, 14, 17, 17, 18, 17]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 5, 2, 3, 7, 18, 4, 2, 28, 3, 5, 7, 4, 6, 42]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 6, 11, 75, 11, 11, 11, 14, 15, 11, 11, 14, 15, 14, 14, 150, 14, 14, 15, 14, 15, 14, 14, 17, 17, 18, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 4, 3, 3, 3, 5, 4, 4, 4, 5, 4, 4, 3, 13, 9]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 6, 134, 2, 3, 4, 4, 9, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 2, 6, 4, 3, 9, 3, 2, 35, 17, 3, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 3, 5, 4, 17, 3, 4, 4, 24, 8, 2, 5, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 6, 11, 11, 11, 11, 12, 15, 14, 59, 12, 13, 14, 14, 13, 14, 4, 13, 17, 90, 13, 14, 13, 15, 23, 13, 13, 16, 16, 14, 17, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 3, 4, 2, 2, 4, 4, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 4, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 6, 5, 4, 6, 8, 106, 18, 20, 104, 8, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 7, 8, 5, 4, 5, 16]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 3, 4, 4, 4, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 4, 3, 5, 5, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 27
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419018608
thermo_feasible = true
