┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAPECO1_1312
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAPECO1_1312
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1313

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 109
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 11, 13, 11, 11, 11, 11, 11, 14, 14, 13, 16, 2, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 14, 6, 16, 16, 23, 13, 39, 14, 4, 54, 11, 2, 4, 9, 11, 9, 10, 10, 9, 9, 7, 2, 2, 3, 4, 2, 10, 2, 33, 32, 34, 2, 6, 2, 38, 39, 38, 2, 7, 32, 4, 7, 70]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 3, 5, 9, 2, 2, 5, 3, 4, 4, 5, 3, 6, 2, 11, 4, 3, 5, 7, 4, 6, 4, 3, 5, 3, 3, 4, 10, 7, 4, 6, 7, 5, 8, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 64, 2, 2, 3, 4, 4, 4, 16, 4, 2, 5, 5, 5, 101, 5, 28, 142, 5, 18, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 10, 10, 10, 10, 10, 10, 10, 7, 12, 13, 12, 13, 12, 48, 12, 12, 13, 15, 12, 15, 16, 15, 16, 15, 15, 12, 13, 12, 39, 13, 2, 3, 9, 2, 3, 9, 9, 9, 10, 10, 9, 9, 7, 10, 6, 5, 3, 6, 6, 2, 40, 39, 38, 7]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 3, 2, 2, 74, 10, 2, 4, 4, 51, 6, 5, 9, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 9, 2, 6, 4, 2, 3, 6, 6, 7, 34, 6, 20, 3, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 3, 3, 3, 23, 7, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 4, 313, 5, 8, 3, 5, 3, 5, 5, 10, 9, 4, 8, 9, 8, 6, 3, 9, 6, 40, 6, 5, 14, 18, 10, 5, 10, 10, 51]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 3, 25, 8, 3, 6, 5, 5, 5, 6, 4, 4, 55, 7, 4, 4, 4, 4, 4, 12, 8]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 7, 4, 7, 4, 6, 62, 8, 4, 10, 24]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 4, 4, 7, 50, 8, 5, 3, 6, 117, 9, 6, 5, 8, 4, 8, 3, 33, 8, 6, 8, 8, 6, 25, 9]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 4, 4, 6, 13, 5, 4, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 4, 10, 2, 7, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 24, 115, 5, 4, 6, 4, 3, 7, 5, 4, 6, 5, 4, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 2, 4, 6, 4, 4, 6, 4, 6, 4, 6, 5, 5, 5, 6, 4, 6, 4, 6, 5, 4, 5, 8, 6, 4, 4, 5, 253, 4, 6, 7, 4, 69, 106, 7, 8, 5, 7, 7, 6, 74, 4, 2, 4, 7, 7, 6, 5, 5, 5, 7, 3, 6, 4, 3]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 181, 4, 50, 154, 19, 24, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 3, 5, 4, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [9, 19, 38, 10, 10, 9, 9, 9, 9, 9, 11, 12, 53, 12, 11, 4, 11, 11, 11, 14, 11, 14, 15, 14, 15, 11, 14, 14, 12, 11, 37, 12, 4, 4, 4, 7, 6, 6, 7, 128, 75, 8, 8, 7, 7, 5, 6, 8, 6, 108, 57, 5, 4, 4, 7, 37, 6, 4, 13, 33, 13, 36, 37, 36, 4, 5, 6, 12, 8, 6]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824789899855206
thermo_feasible = true
