┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iNRG857_1313
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iNRG857_1313
----------------------------------
number of metabolites : 1943
number of reactions : 2735
number of genes : 1311

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 17, 18, 17, 19, 17, 17, 14, 14, 15, 14, 15, 14, 14, 11, 11, 11, 11, 11, 11, 11, 14, 14, 15, 14, 15, 4, 14, 14, 2]
length(C_list) = 2
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 16, 17, 16, 17, 16, 16, 13, 17, 14, 13, 14, 13, 13, 13, 11, 11, 11, 11, 11, 11, 11, 13, 13, 14, 13, 14, 2, 2, 13, 13, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 17, 18, 17, 18, 21, 18, 15, 14, 15, 17, 20, 14, 14, 14, 11, 11, 14, 15, 11, 11, 11, 11, 11, 67, 15, 14, 15, 14, 15, 3, 3, 14, 14, 14, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 16, 17, 16, 17, 16, 16, 13, 50, 14, 13, 14, 13, 13, 13, 11, 11, 15, 164, 11, 11, 11, 11, 12, 13, 13, 14, 13, 14, 3, 2, 4, 14, 13, 21, 16, 13, 174, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 12, 11, 11, 11, 13, 13, 14, 13, 14, 2, 2, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 19, 21, 22, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 21, 11, 11, 11, 33, 15, 25, 28, 16, 16, 25, 16, 17, 2, 15, 16, 16, 17, 17, 96, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 16, 17, 16, 17, 16, 16, 13, 13, 14, 20, 14, 13, 13, 14, 11, 11, 13, 11, 11, 11, 11, 11, 13, 13, 14, 13, 14, 4, 2, 6, 20, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 16, 17, 16, 19, 16, 16, 13, 19, 14, 13, 20, 13, 13, 14, 13, 11, 11, 15, 14, 11, 58, 15, 11, 11, 17, 13, 13, 14, 15, 14, 3, 7, 4, 13, 13, 14, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 2, 16, 18, 19, 17, 16, 40, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 84, 11, 11, 11, 13, 13, 14, 13, 14, 2, 4, 13, 13, 76, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 16, 18, 18, 17, 16, 16, 13, 13, 14, 13, 14, 13, 17, 11, 11, 15, 112, 11, 12, 11, 11, 11, 14, 13, 13, 14, 13, 14, 7, 4, 2, 13, 14, 22, 13, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 18, 18, 17, 18, 17, 44, 14, 14, 15, 14, 15, 14, 14, 14, 11, 11, 15, 11, 11, 11, 11, 14, 14, 15, 14, 15, 6, 3, 14, 15, 3, 16, 15, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 12, 16, 17, 16, 17, 16, 18, 13, 13, 14, 13, 14, 13, 13, 18, 11, 11, 11, 20, 17, 11, 11, 13, 15, 14, 14, 14, 13, 16, 3, 6, 33, 13, 13, 17, 14, 13, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 6, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13, 14, 11, 11, 14, 11, 11, 11, 11, 11, 13, 13, 14, 13, 14, 3, 2, 16, 13, 13, 92, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 21, 17, 16, 17, 16, 16, 13, 13, 14, 17, 14, 28, 25, 12, 11, 13, 11, 13, 11, 11, 13, 11, 20, 13, 13, 14, 13, 14, 4, 6, 13, 20, 22, 119, 13, 2]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 16, 22, 16, 17, 16, 16, 13, 17, 14, 13, 14, 13, 13, 16, 11, 11, 11, 12, 11, 12, 11, 14, 13, 13, 14, 13, 14, 6, 3, 6, 13, 13, 18, 15, 92, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 18, 16, 17, 16, 17, 20, 16, 14, 13, 14, 13, 16, 13, 13, 13, 11, 11, 15, 11, 11, 11, 11, 11, 13, 13, 14, 13, 14, 6, 6, 3, 54, 13, 18, 13, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 20, 36, 11, 11, 16, 14, 15, 11, 11, 11, 11, 13, 13, 34, 14, 15, 14, 6, 6, 6, 13, 13, 13, 14, 6]
length(C_list) = 39
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 30, 4, 8, 7, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 5, 2, 8, 7, 28]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 6, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 20, 7, 2, 4, 14, 6, 9, 8, 9]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 19, 4, 7, 8, 11, 4, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419019559
thermo_feasible = true
