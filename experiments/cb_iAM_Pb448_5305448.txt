WARNING: Dual bound 0.658425 is smaller than the objective of the primal solution 0.658684. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAM_Pb448
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAM_Pb448
----------------------------------
number of metabolites : 903
number of reactions : 1067
number of genes : 448

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 43
max_cuts = 21
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1067 flux variables and 2031 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 4, 4, 4, 4, 28, 6, 22, 3, 18, 3, 4, 4, 4, 29, 3]
length(C_list) = 19
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [20, 3, 4, 3, 4, 8, 8, 8, 8, 11, 5, 3, 6, 7, 9, 4, 4, 3, 8, 4, 3, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 4, 3, 3, 4, 4, 2, 4, 8, 8, 5, 4, 8, 3, 3, 5, 8, 4, 4, 8, 10, 4, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 4, 6, 3, 3, 3, 3, 4, 5, 6, 3, 7, 5, 4, 5, 4, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 3, 3, 4, 7, 4, 3, 8, 9, 8, 8, 3, 8, 3, 7, 4, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 3, 5, 6, 4, 5, 4, 5, 8, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 3, 5, 4, 5, 4, 4, 4, 3, 4, 5, 4, 3, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 3, 4, 19, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 3, 11, 12, 13, 23, 24, 24, 23, 24, 25]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [7, 3, 5, 5, 4, 11, 12, 3, 12, 14, 5, 4, 24, 25, 24]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 6, 6, 11, 6, 8, 11, 9, 12, 5, 6, 7, 9, 11, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [11, 5, 4, 3, 5, 4, 4, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 6, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 7, 4, 38]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 5, 6, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [21, 5, 13, 4, 5, 13, 13, 24, 11, 27, 26, 13, 9, 17, 9, 53, 13, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [23, 5, 13, 13, 13, 13, 13]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 9, 5, 130]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [12, 3, 4, 4, 13, 6, 5, 9, 5, 13, 5, 9, 11, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 3, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [17, 3, 3, 13, 12, 9, 4, 4, 16]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 3, 4, 178, 4, 5, 4, 6, 5, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [12, 3, 3, 3, 3, 3, 4, 5, 3, 3, 4, 6, 4, 4, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [15, 3, 4, 4, 9, 3, 12, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 3, 3, 3, 3, 6, 5, 6, 5, 6, 3, 6, 7, 3, 6, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 5, 5, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 31, 31, 31, 31, 30, 30, 27, 30, 28, 30, 34, 20, 29, 21]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [3, 5, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [9, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [3]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 6, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 10, 9, 11, 10]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 8, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [7, 10, 23, 185]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 38
termination = MathOptInterface.OPTIMAL
objective_value = 0.6586991782429902
thermo_feasible = true
