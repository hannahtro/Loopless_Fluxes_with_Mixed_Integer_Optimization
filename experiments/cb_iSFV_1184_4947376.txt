┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSFV_1184
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSFV_1184
----------------------------------
number of metabolites : 1917
number of reactions : 2621
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2621 flux variables and 4851 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 5, 2, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 46, 13, 13, 2, 14, 13, 14, 13, 13, 13, 14, 13, 16]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 7, 11, 11, 11, 12, 14, 11, 16, 16, 17, 19, 17, 11, 16, 16, 13, 13, 2, 14, 17, 14, 13, 13, 13, 13, 15, 13, 14, 13, 3, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 11, 125, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 2, 15, 19, 21, 13, 13, 13, 14, 13, 14, 2, 13, 13]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 2, 14, 13, 14, 13, 13, 13, 14, 6, 17]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 13, 11, 11, 11, 11, 11, 19, 16, 34, 16, 17, 13, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [7, 3, 7, 7, 11, 11, 11, 11, 11, 36, 17, 17, 18, 17, 18, 11, 17, 17, 14, 14, 16, 21, 101, 14, 14, 14, 15, 14, 15, 2, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 11, 11, 11, 12, 11, 16, 16, 17, 17, 19, 11, 16, 18, 13, 13, 14, 13, 14, 13, 13, 13, 14, 13, 3, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 11, 233, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 17, 13, 13, 3, 14, 13, 14, 13, 13, 13, 14, 15, 19, 13, 4, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 16, 13, 3, 14, 13, 15, 13, 13, 13, 13, 14, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 117, 12, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 13, 7, 14, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 2, 16, 11, 12, 11, 14, 11, 16, 16, 17, 16, 17, 14, 16, 16, 13, 13, 19, 17, 14, 13, 14, 13, 14, 13, 15, 2, 13, 18]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 6, 11, 15, 11, 11, 14, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 6, 14, 13, 15, 13, 13, 13, 13, 16, 16, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 6, 11, 14, 19, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 11, 15, 13, 14, 13, 13, 14, 13, 14, 13, 2, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 58, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 4, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 12, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 3, 14, 13, 14, 13, 13, 14, 13, 13, 7, 14, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 6, 3, 11, 11, 18, 21, 12, 12, 16, 16, 17, 16, 17, 12, 16, 16, 19, 26, 14, 13, 15, 13, 13, 13, 13, 13, 15, 13, 3, 13]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 6, 2, 14, 13, 14, 13, 13, 13, 14, 13, 6, 14, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 13, 18, 12, 14, 11, 11, 17, 16, 17, 22, 17, 11, 16, 16, 13, 13, 7, 15, 13, 14, 13, 22, 13, 14, 14, 2, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 11, 11, 11, 11, 11, 11, 16, 16, 21, 16, 17, 11, 16, 16, 13, 13, 6, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 6, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 6, 11, 11, 11, 11, 11, 14, 16, 16, 19, 16, 75, 11, 17, 16, 13, 17, 6, 6, 14, 13, 14, 13, 13, 13, 13, 6, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 11, 11, 11, 11, 11, 14, 17, 17, 17, 16, 17, 11, 16, 16, 13, 13, 7, 14, 13, 14, 21, 13, 17, 22, 14, 3, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 2, 12, 11, 6, 113, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 18, 13, 13, 14, 13, 15, 13, 13, 14, 13, 7, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 9, 11, 22, 13, 11, 11, 12, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 6, 6, 18, 13, 14, 13, 13, 13, 14, 14, 13, 6, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 17, 11, 16, 16, 13, 13, 6, 14, 13, 14, 13, 13, 13, 15, 14, 13, 7, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 11, 11, 11, 67, 13, 11, 16, 22, 17, 16, 17, 11, 16, 16, 14, 13, 7, 14, 15, 14, 13, 14, 14, 14, 15, 13, 13, 8, 15, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 15, 4, 4, 4, 3, 4, 3, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 2]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 6, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 28
termination = MathOptInterface.OPTIMAL
objective_value = 0.8938578114271171
thermo_feasible = true
