WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcolC_1368
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcolC_1368
----------------------------------
number of metabolites : 1969
number of reactions : 2768
number of genes : 1368

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2768 flux variables and 5145 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 2, 2, 2, 3, 15, 2, 3, 2, 2, 2, 2, 2, 4, 3, 3, 3, 4, 7, 2, 41, 3, 2, 4, 4, 5, 3, 4, 5, 3, 4, 4, 4, 89, 4, 3]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 4, 2, 11, 3, 4, 5, 3, 2, 8, 3, 3, 4, 7, 4, 3, 3, 4, 3, 11, 3, 2, 4, 4, 7, 5, 4, 5, 4, 3, 3, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 3, 3, 4, 3, 3, 17, 4, 4, 3, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 15, 4, 4, 8, 3, 4, 6, 4, 3, 4, 8, 90, 5, 7, 5, 10, 4, 5, 138, 13, 5, 29, 6, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 25, 4, 4, 3, 4, 2, 6, 4, 112, 7, 5, 5, 2, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 4, 4, 4, 3, 5, 4, 4, 5, 5, 5, 4, 5, 236, 6, 6, 4, 7, 2, 2, 5, 8, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 50, 3, 2, 2, 3, 4, 7, 6, 4, 5, 8, 136, 4, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 3, 6, 4, 6, 92, 27, 5, 12, 2, 11, 44, 12, 6, 5, 9, 5, 8, 5, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 4, 6, 6, 8, 5, 6, 4, 4, 4, 8, 4, 6, 4, 4, 6, 4, 8, 4, 14, 7, 6, 7, 4, 6, 4, 4, 6, 47, 6, 5, 5, 6, 4, 5, 4, 7, 6, 4, 4, 4, 5, 4, 5, 6, 33, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 6, 4, 4, 15, 4, 4, 3, 36]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 7, 4, 8, 6, 5, 4, 6, 8, 44, 10, 16, 8, 6, 8, 7, 80, 8, 9, 10, 18, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 22, 4, 13, 4, 14, 39, 4, 5, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 10, 5, 15, 6, 3, 6, 6, 153, 18, 25, 6, 4, 6, 118, 7, 72]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 8, 21, 9, 8, 11, 81, 11, 10, 7, 10, 82, 7, 66, 76, 12, 11, 10, 7, 26, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 7, 18, 344, 3, 77, 13]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660099
thermo_feasible = true
