┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iY75_1357
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iY75_1357
----------------------------------
number of metabolites : 1953
number of reactions : 2759
number of genes : 1358

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 83
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2759 flux variables and 5127 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 3, 16, 16, 17, 16, 20, 16, 71, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 11, 13, 13, 2, 11, 11, 11, 11, 11, 11, 2, 2, 7, 2, 4, 2, 2, 2, 40, 53, 2, 9, 2, 2, 2]
length(C_list) = 46
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 2, 2, 3, 3, 4, 3, 3, 4, 3, 3, 3, 3, 2, 100, 3, 4, 4, 5]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 3, 6, 4, 307, 18]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 128, 4, 3, 4, 4, 3, 5, 4, 6, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 2, 4, 4, 3, 4, 4, 3, 4, 2, 20, 4, 5, 2, 2, 4, 3, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 2, 175, 2, 6, 2, 2, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 6, 4, 33, 5, 4, 3, 96]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 5, 6, 3, 6, 38, 11, 8, 12]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 64, 6, 71, 81, 4, 4, 8, 6, 4, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 7, 5, 7, 4, 6, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 2, 3, 6, 4, 4, 4, 4, 5, 9, 15, 14, 7, 3, 16, 4, 74]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 8, 7, 5, 6, 4, 7, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 14
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785423167066
thermo_feasible = true
