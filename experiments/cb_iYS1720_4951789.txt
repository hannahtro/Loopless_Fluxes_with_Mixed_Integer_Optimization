WARNING: Dual bound 0.488369 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488408 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488443 is smaller than the objective of the primal solution 0.488461. The solution might not be optimal.
WARNING: Dual bound 0.488365 is smaller than the objective of the primal solution 0.488402. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488369 is smaller than the objective of the primal solution 0.488392. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYS1720
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYS1720
----------------------------------
number of metabolites : 2436
number of reactions : 3357
number of genes : 1707

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 168
max_cuts = 17
(indicator, big_m) = (false, true)
BIG M ADDED
model with 3357 flux variables and 6229 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 2, 4, 2, 2, 42, 2, 2, 3, 2, 2, 99, 4, 3, 3, 2, 2, 7, 2, 3, 3, 2, 2, 3, 89, 13, 3, 3, 4, 11, 5, 4, 4, 5, 2, 17, 3, 2, 75, 4, 4, 4]
length(C_list) = 17
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 5, 2, 3, 58, 3, 3, 3, 3, 3, 4, 4, 4, 11, 4, 4, 131, 34, 3, 3, 42, 4, 5, 5, 4, 3, 5, 6, 4, 14, 4, 5, 2, 5, 4, 15]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 4, 4, 2, 4, 5, 3, 4, 63, 4, 13, 48, 7, 7, 4, 137, 5, 5, 8, 19, 5, 6, 6, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 10, 3, 2, 4, 3, 12, 16, 5, 2, 12, 4, 4, 3, 6, 7, 7, 7, 12, 17, 14, 7, 11, 7, 162, 199, 7, 8, 7, 15, 14, 4, 7, 6, 4, 14, 8, 4, 5, 9, 4, 8, 7, 10, 6, 7, 7, 6, 7, 4, 12, 9, 4, 5, 11, 11, 11, 36, 11, 4, 4, 5, 8, 5, 5, 8, 8, 8, 10, 8, 8, 8, 11, 2, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 4, 5, 5, 6, 9, 9, 18, 5, 4, 4, 4, 5, 4, 4, 4, 7, 7, 7, 7, 9, 14, 14, 8, 7, 14, 5, 6, 7, 4, 4, 5, 8, 8, 4, 4, 15, 27, 6, 7, 4, 5, 7, 4, 5, 3, 171, 7, 5, 5, 4, 65, 4, 15, 6, 7, 8, 3, 8, 5, 7, 5, 5, 16, 8, 15, 4, 11, 24, 11, 5, 5, 17, 6, 5, 6, 13, 5, 6, 5, 13, 5, 4, 8, 8, 9, 9, 8, 8, 8, 9, 9, 12, 5, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 6, 8, 8, 5, 5, 5, 13, 5, 5, 5, 5, 15, 6, 4, 8, 8, 8, 9, 15, 15, 8, 11, 13, 8, 5, 5, 179, 8, 80, 4, 14, 13, 4, 7, 9, 5, 8, 5, 4, 5, 5, 5, 5, 5, 9, 148, 10, 5, 3, 7, 10, 179, 5, 7, 5, 7, 13, 9, 5, 13, 13, 12, 19, 45, 102, 11, 228, 13, 7, 4, 13, 6, 6, 10, 7, 4, 4, 8, 8, 8, 8, 8, 8, 8, 17, 11, 11, 7, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 10, 6, 5, 5, 5, 5, 16, 4, 3, 5, 6, 3, 4, 7, 5, 5, 5, 6, 5, 14, 17, 5, 5, 5, 5, 6, 17, 8, 6, 4, 9, 5, 4, 4, 12, 16, 6, 6, 5, 4, 12, 5, 9, 3, 4, 4, 6, 5, 3, 5, 6, 11, 5, 5, 8, 5, 5, 5, 4, 4, 5, 3, 4, 5, 25, 6, 11, 5, 10, 12, 9, 5, 3, 9, 2, 5, 4, 3, 4, 3, 6, 8, 4, 5, 6, 56, 6, 6, 6, 6, 6, 4, 9, 6, 72]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 10, 5, 5, 5, 4, 5, 6, 8, 5, 5, 5, 5, 5, 3, 11, 5, 5, 4, 7, 8, 9, 7, 16, 19, 10, 7, 7, 7, 5, 10, 4, 12, 10, 8, 6, 5, 14, 14, 11, 7, 4, 4, 8, 6, 5, 5, 35, 9, 8, 5, 4, 4, 49, 8, 5, 15, 5, 23, 179, 6, 8, 21, 5, 18, 9, 11, 4, 4, 15, 17, 12, 11, 6, 16, 4, 6, 5, 6, 5, 3, 7, 5, 5, 3, 8, 8, 8, 8, 8, 8, 8, 5, 11, 174, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [14, 10, 5, 7, 5, 5, 4, 6, 5, 8, 5, 5, 4, 4, 5, 4, 4, 6, 6, 6, 7, 6, 16, 15, 6, 6, 6, 3, 5, 4, 4, 8, 8, 7, 5, 5, 13, 14, 7, 11, 9, 5, 6, 6, 4, 5, 4, 7, 6, 5, 142, 4, 7, 7, 3, 5, 16, 4, 5, 6, 6, 6, 6, 4, 4, 4, 8, 10, 4, 50, 5, 9, 11, 13, 10, 4, 7, 10, 4, 4, 7, 3, 5, 5, 6, 5, 8, 7, 9, 7, 7, 7, 7, 7, 4, 10, 12, 40]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [13, 12, 5, 2, 6, 5, 5, 13, 6, 6, 4, 3, 7, 7, 9, 5, 4, 5, 5, 5, 6, 6, 15, 16, 5, 6, 5, 5, 4, 5, 5, 6, 7, 7, 10, 5, 13, 12, 6, 7, 5, 6, 13, 6, 135, 3, 3, 4, 7, 8, 5, 8, 97, 65, 10, 14, 11, 5, 6, 5, 4, 11, 5, 4, 4, 8, 7, 4, 18, 19, 11, 10, 9, 4, 15, 8, 4, 5, 7, 6, 3, 5, 10, 4, 7, 5, 5, 5, 5, 5, 5, 5, 7, 10, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 10, 6, 4, 6, 7, 4, 4, 8, 5, 4, 5, 4, 5, 4, 4, 5, 11, 6, 5, 5, 9, 14, 30, 6, 7, 6, 3, 5, 5, 5, 5, 97, 8, 7, 7, 7, 18, 223, 6, 6, 7, 4, 4, 48, 8, 5, 5, 3, 5, 4, 5, 7, 4, 5, 5, 4, 221, 7, 5, 7, 4, 13, 5, 13, 158, 65, 10, 5, 5, 11, 8, 5, 4, 6, 26, 4, 4, 4, 34, 5, 5, 5, 5, 6, 5, 5, 12, 4, 5, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 8, 19, 5, 5, 3, 4, 6, 5, 5, 7, 21, 6, 5, 5, 7, 6, 5, 5, 7, 7, 7, 7, 14, 14, 7, 7, 8, 5, 5, 5, 11, 5, 9, 9, 7, 5, 14, 13, 28, 7, 67, 4, 8, 4, 21, 6, 6, 5, 8, 7, 6, 7, 4, 8, 5, 49, 15, 5, 7, 8, 6, 6, 8, 5, 7, 5, 5, 9, 8, 6, 6, 16, 13, 12, 14, 5, 16, 4, 7, 4, 5, 5, 6, 5, 8, 6, 5, 4, 8, 8, 8, 17, 8, 11, 9, 91, 11, 6, 127]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [13, 3, 5, 9, 3, 4, 6, 6, 3, 5, 3, 41, 3, 9, 4, 3, 5, 6, 3, 5, 5, 38, 14, 14, 14, 3, 5, 7, 10, 5, 6, 7, 7, 5, 5, 11, 12, 17, 172, 5, 5, 8, 6, 5, 6, 58, 4, 13, 4, 5, 10, 6, 9, 15, 6, 5, 4, 4, 11, 4, 4, 8, 4, 7, 36, 12, 13, 10, 9, 7, 2, 5, 12, 5, 5, 11, 7, 5, 5, 4, 12, 8, 8, 7, 12, 7, 7, 7, 7, 3, 12, 4, 14]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 4, 4, 13, 5, 5, 6, 4, 4, 3, 20, 4, 3, 4, 6, 9, 4, 11, 3, 6, 3, 15, 14, 30, 14, 4, 4, 6, 3, 5, 4, 6, 7, 13, 4, 13, 11, 9, 6, 4, 6, 5, 5, 10, 13, 4, 58, 9, 9, 5, 5, 6, 3, 4, 4, 6, 4, 7, 9, 8, 9, 28, 6, 15, 9, 9, 8, 5, 3, 12, 4, 4, 4, 7, 8, 7, 7, 7, 7, 7, 5, 10, 5, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 15, 3, 3, 12, 5, 4, 7, 3, 4, 4, 9, 5, 3, 4, 20, 21, 20, 20, 20, 20, 3, 8, 4, 16, 16, 4, 9, 5, 12, 11, 4, 3, 12, 20, 291, 11, 67, 7, 60, 11, 7, 4, 3, 25, 90, 17, 22, 7, 9, 11, 320, 3, 9, 115, 6, 17, 8, 5, 9, 8, 10, 16, 10, 8, 7, 9, 8, 7, 6, 5, 4, 3, 4, 5, 17]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [10, 7, 4, 6, 4, 5, 125, 4, 4, 5, 3, 12, 6, 4, 3, 6, 4, 107, 14, 13, 16, 28, 30, 208, 15, 11, 9, 4, 5, 4, 43, 14, 68, 4, 3, 13, 12, 28, 7, 7, 8, 12, 4, 5, 4, 6, 4, 3, 5, 5, 3, 6, 11, 7, 18, 7, 11, 12, 9, 21, 18, 13, 6, 4, 10, 10, 7, 7, 117, 62, 8, 6, 9, 6, 9, 3, 5, 6, 4, 9, 20, 4, 6, 6, 3, 87, 15, 16, 8, 7, 18, 18, 7, 5, 14, 88, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 46, 6, 6, 6, 6, 6, 4, 5, 36, 3, 6, 4, 3, 5, 16, 12, 14, 15, 14, 14, 46, 9, 223, 4, 10, 4, 11, 95, 8, 7, 5, 9, 13, 150, 175, 7, 13, 5, 6, 5, 3, 3, 11, 107, 7, 5, 5, 5, 223, 14, 6, 14, 5, 6, 6, 4, 3, 33, 4, 3, 5, 8, 15, 7, 14, 11, 8, 6, 221, 6, 13, 29, 71, 5, 7, 6, 6, 4, 5, 4, 16, 10, 15, 4, 15, 4, 11, 4, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 5, 5, 11, 5, 6, 6, 5, 5, 5, 5, 3, 6, 6, 5, 3, 5, 13, 14, 13, 14, 13, 13, 4, 3, 12, 2, 4, 7, 6, 8, 9, 6, 15, 16, 5, 8, 5, 138, 4, 5, 5, 10, 5, 8, 9, 4, 9, 8, 15, 13, 27, 7, 5, 4, 5, 9, 49, 6, 12, 216, 4, 50, 8, 6, 5, 16, 10, 5, 4, 5, 5, 4, 15, 28, 14, 4, 5, 17, 8, 16, 16, 8, 16, 11, 11, 8, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 4, 9, 5, 4, 4, 6, 4, 4, 4, 13, 5, 11, 7, 9, 14, 15, 15, 15, 14, 14, 24, 42, 6, 12, 9, 9, 225, 109, 9, 4, 8, 28, 12, 5, 6, 10, 6, 4, 8, 5, 7, 16, 5, 7, 4, 5, 12, 6, 18, 4, 6, 6, 5, 6, 22, 16, 5, 9, 6, 14, 9, 8, 6, 4, 40, 3, 4, 9, 3, 7, 4, 13, 9, 7, 4, 20, 21, 3, 16, 17, 15, 80, 15, 15, 5, 10, 6, 167]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 6, 11, 5, 5, 5, 8, 8, 5, 39, 8, 5, 6, 5, 7, 4, 13, 31, 39, 14, 13, 13, 13, 10, 7, 5, 11, 24, 8, 7, 6, 18, 13, 6, 9, 5, 16, 8, 6, 5, 5, 8, 7, 8, 9, 6, 12, 10, 5, 9, 7, 11, 6, 6, 5, 6, 5, 7, 6, 30, 8, 6, 6, 4, 33, 5, 5, 4, 6, 12, 8, 7, 8, 8, 8, 8, 8, 8, 8, 6, 11, 13, 13, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 8, 12, 7, 4, 69, 7, 6, 7, 6, 7, 4, 3, 6, 3, 3, 6, 57, 4, 5, 16, 18, 15, 13, 4, 4, 4, 7, 19, 7, 11, 6, 7, 14, 41, 12, 6, 8, 4, 4, 6, 7, 4, 4, 6, 4, 4, 7, 7, 283, 9, 196, 98, 6, 10, 4, 6, 5, 3, 5, 4, 8, 4, 8, 9, 12, 55, 11, 6, 9, 5, 27, 5, 11, 3, 11, 7, 4, 6, 7, 7, 7, 7, 7, 8, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [11, 8, 9, 8, 5, 7, 3, 8, 10, 5, 4, 3, 14, 4, 4, 4, 2, 31, 8, 14, 16, 12, 16, 14, 13, 13, 12, 4, 6, 7, 6, 11, 9, 12, 13, 16, 8, 5, 10, 5, 3, 4, 5, 5, 12, 6, 7, 9, 9, 11, 12, 6, 5, 18, 13, 6, 6, 13, 6, 7, 12, 10, 6, 6, 34, 9, 4, 10, 7, 7, 4, 18, 28, 33, 23, 21, 21, 22, 23, 7, 10, 5, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [11, 10, 4, 4, 9, 4, 3, 5, 13, 4, 8, 13, 6, 3, 5, 5, 12, 12, 11, 128, 23, 12, 12, 19, 9, 9, 6, 5, 4, 5, 8, 7, 10, 4, 15, 12, 12, 18, 5, 4, 8, 24, 110, 165, 17, 3, 4, 4, 12, 29, 17, 4, 11, 12, 5, 12, 5, 5, 4, 216, 13, 7, 4, 6, 10, 6, 5, 5, 5, 4, 4, 6, 4, 4, 7, 6, 15, 7, 7, 7, 5, 12, 62, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 6, 7, 4, 5, 3, 6, 5, 6, 5, 5, 6, 4, 9, 7, 7, 4, 12, 13, 12, 14, 408, 14, 12, 9, 5, 8, 9, 4, 16, 5, 10, 4, 56, 14, 11, 12, 8, 12, 10, 4, 32, 5, 6, 6, 4, 4, 4, 10, 11, 6, 139, 14, 7, 6, 9, 11, 10, 8, 6, 7, 5, 5, 7, 6, 8, 10, 6, 5, 12, 4, 5, 50, 7, 6, 7, 6, 4, 6, 22, 26, 22, 25, 23, 24, 12, 13, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 4, 6, 6, 4, 4, 4, 6, 7, 5, 6, 5, 3, 7, 7, 13, 5, 53, 16, 76, 12, 12, 9, 4, 5, 7, 6, 5, 6, 4, 7, 83, 7, 4, 13, 14, 9, 16, 10, 8, 6, 4, 7, 10, 4, 4, 45, 7, 5, 6, 11, 9, 9, 15, 5, 59, 4, 7, 4, 17, 5, 4, 13, 8, 6, 7, 7, 10, 10, 6, 7, 13, 8, 3, 5, 5, 8, 5, 11, 21, 21, 13, 21, 20, 22, 20, 4, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 7, 4, 4, 4, 4, 4, 10, 4, 3, 15, 4, 11, 5, 150, 13, 17, 15, 13, 88, 5, 3, 5, 3, 6, 16, 5, 10, 13, 12, 14, 4, 6, 7, 14, 6, 5, 14, 5, 18, 11, 9, 5, 11, 5, 10, 3, 4, 6, 8, 5, 47, 10, 9, 11, 8, 4, 7, 4, 5, 15, 6, 6, 23, 22, 57, 23, 22, 26, 25, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [7, 10, 4, 5, 19, 12, 4, 4, 12, 9, 3, 41, 41, 41, 41, 7, 4, 332, 4, 18, 4, 18, 18, 5, 9, 6, 4, 9, 6, 7, 30, 39, 7, 12, 15, 10, 6, 126, 261, 6, 3, 148, 9, 3, 6, 4, 9, 22, 9, 10, 16, 5, 5, 9, 15, 7, 4, 10, 9, 3, 4, 8, 16, 10, 5, 6, 12, 6, 6, 8, 9, 14, 10, 7, 7, 24, 21, 24, 91, 29, 24, 21, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [13, 8, 7, 4, 4, 3, 4, 22, 4, 6, 7, 4, 4, 6, 7, 7, 5, 10, 14, 9, 14, 16, 15, 14, 12, 12, 10, 12, 4, 6, 6, 7, 7, 9, 14, 7, 13, 12, 6, 7, 5, 5, 27, 10, 8, 8, 6, 7, 12, 9, 9, 12, 5, 9, 5, 4, 6, 15, 11, 4, 4, 7, 4, 8, 6, 10, 6, 7, 5, 3, 4, 5, 11, 5, 15, 23, 6, 5, 4, 16, 16, 16, 62, 17, 17, 5, 14, 4, 7, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [9, 10, 7, 4, 8, 14, 4, 6, 7, 8, 3, 5, 15, 5, 10, 8, 12, 12, 13, 14, 14, 12, 5, 9, 5, 12, 16, 10, 11, 8, 11, 5, 6, 14, 13, 11, 14, 6, 12, 10, 6, 5, 20, 15, 7, 6, 10, 11, 13, 9, 17, 10, 12, 17, 4, 90, 11, 8, 54, 5, 6, 9, 12, 7, 6, 9, 6, 15, 6, 12, 4, 4, 6, 12, 7, 6, 13, 12, 7, 23, 12, 23, 8, 22, 24, 13, 45, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 14, 44, 9, 4, 4, 4, 10, 5, 7, 4, 5, 6, 24, 12, 20, 57, 18, 21, 20, 18, 18, 9, 4, 4, 7, 10, 13, 9, 19, 16, 177, 10, 27, 6, 13, 6, 18, 13, 16, 7, 17, 19, 11, 12, 33, 46, 49, 9, 17, 7, 16, 6, 4, 41, 11, 17, 14, 10, 12, 12, 21, 21, 24, 21, 23, 22, 70, 13, 18, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 13, 3, 4, 4, 4, 4, 9, 10, 9, 8, 6, 14, 7, 4, 4, 17, 18, 10, 11, 17, 17, 17, 10, 10, 8, 10, 135, 4, 9, 12, 16, 6, 19, 16, 77, 18, 9, 9, 6, 4, 10, 6, 7, 15, 18, 5, 4, 4, 11, 4, 14, 4, 7, 8, 9, 10, 9, 6, 4, 8, 9, 5, 9, 14, 10, 7, 7, 6, 4, 6, 14, 8, 4, 11, 4, 12, 5, 26, 26, 5, 27, 12, 12, 12, 6, 18, 9, 221]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 8, 7, 4, 4, 6, 6, 4, 54, 4, 9, 5, 4, 120, 8, 4, 7, 6, 143, 9, 5, 6, 9, 8, 6, 10, 8, 57, 21, 7, 5, 7, 8, 5, 8, 6, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 21, 5, 11, 4, 5, 6, 6, 6, 5, 12, 3, 16, 9, 9, 17, 68, 16, 20, 122, 5, 4, 4, 11, 9, 16, 6, 15, 17, 4, 14, 217, 175, 5, 5, 4, 4, 9, 10, 13, 16, 7, 11, 6, 7, 8, 11, 6, 30, 6, 10, 11, 11, 14, 6, 4, 10, 11, 18, 5, 5, 5, 5, 20, 18, 17, 21, 111, 17, 17, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [16, 10, 5, 7, 7, 5, 6, 5, 5, 3, 4, 6, 39, 39, 42, 40, 6, 15, 8, 15, 16, 18, 15, 8, 4, 9, 5, 5, 10, 6, 9, 8, 38, 4, 16, 14, 4, 10, 40, 13, 5, 8, 4, 119, 8, 7, 8, 5, 8, 5, 10, 8, 12, 4, 8, 4, 6, 114, 5, 5, 4, 12, 6, 5, 165, 6, 9, 6, 5, 5, 57, 4, 5, 5, 6, 18, 18, 17, 21, 52, 18, 24, 4, 7, 7, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 5, 8, 6, 9, 4, 4, 6, 4, 17, 9, 4, 16, 9, 3, 8, 16, 44, 15, 16, 15, 15, 15, 4, 4, 8, 11, 10, 9, 4, 16, 14, 7, 8, 6, 11, 9, 11, 3, 5, 9, 4, 9, 5, 4, 4, 9, 5, 15, 14, 12, 8, 10, 6, 12, 10, 15, 11, 8, 3, 12, 5, 6, 6, 6, 10, 7, 4, 6, 4, 4, 24, 25, 21, 23, 25, 24, 21, 9, 13, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [8, 11, 4, 5, 4, 4, 12, 12, 4, 4, 4, 5, 5, 4, 4, 6, 5, 7, 6, 16, 17, 17, 17, 16, 19, 6, 7, 5, 4, 10, 10, 8, 7, 8, 7, 3, 13, 12, 4, 5, 12, 8, 6, 9, 22, 4, 5, 5, 9, 4, 7, 9, 7, 11, 5, 5, 5, 9, 5, 8, 6, 5, 41, 7, 4, 11, 5, 3, 6, 7, 10, 3, 5, 15, 5, 6, 7, 8, 7, 6, 7, 6, 8, 7, 50, 13, 6, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [9, 10, 4, 7, 4, 3, 7, 85, 5, 6, 8, 8, 4, 191, 3, 6, 4, 10, 7, 16, 22, 16, 16, 7, 7, 7, 7, 26, 6, 9, 6, 4, 13, 12, 4, 6, 5, 5, 46, 5, 4, 5, 4, 7, 4, 4, 4, 60, 7, 5, 9, 4, 7, 5, 4, 6, 4, 14, 12, 11, 11, 5, 4, 4, 6, 6, 11, 4, 4, 6, 5, 6, 4, 7, 8, 7, 7, 7, 7, 9, 7, 19, 14, 5, 62]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 11, 11, 4, 6, 9, 11, 6, 16, 13, 4, 8, 131, 7, 11, 15, 4, 15, 16, 15, 15, 15, 6, 5, 11, 10, 12, 6, 7, 221, 204, 12, 7, 25, 9, 16, 14, 6, 15, 6, 6, 6, 9, 14, 164, 7, 10, 13, 5, 12, 20, 8, 12, 9, 13, 23, 6, 20, 7, 13, 13, 6, 7, 7, 11, 21, 5, 13, 8, 29, 18, 6, 11, 19, 223, 10, 7, 10, 10, 10, 10, 14, 12, 10, 32, 19, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 9, 10, 5, 13, 7, 10, 11, 8, 10, 8, 9, 10, 5, 4, 9, 8, 9, 2, 6, 10, 5, 6, 10, 4, 6, 9, 216, 11, 8, 13, 10, 8, 7, 11, 76, 8, 11, 18, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [15, 4, 6, 3, 9, 4, 8, 10, 10, 12, 9, 40, 42, 41, 41, 5, 14, 9, 13, 9, 13, 15, 9, 9, 9, 5, 7, 9, 6, 10, 7, 7, 39, 3, 13, 12, 4, 8, 4, 39, 8, 4, 8, 11, 4, 8, 4, 11, 7, 11, 12, 5, 9, 10, 11, 12, 7, 24, 7, 11, 10, 43, 5, 9, 10, 6, 9, 46, 6, 4, 3, 5, 8, 7, 6, 5, 7, 8, 10, 8, 14]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 4, 4, 4, 7, 9, 5, 5, 5, 15, 5, 130, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 10, 6, 4, 88, 8, 5, 6, 10, 5, 14, 9, 6, 9, 5, 18, 14, 15, 14, 15, 139, 15, 14, 6, 10, 157, 4, 4, 8, 6, 5, 202, 8, 15, 13, 16, 9, 8, 26, 7, 11, 43, 4, 7, 4, 4, 13, 6, 15, 6, 5, 13, 14, 4, 5, 9, 12, 5, 8, 13, 6, 17, 9, 52, 4, 6, 6, 10, 5, 8, 10, 8, 5, 13, 5, 3, 5, 4, 7, 6, 11, 5, 7, 16, 75, 5, 16, 15, 15, 16, 20, 6, 18, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 4, 5, 5, 10, 9, 6, 4, 6, 4, 5, 6, 3, 4, 12, 15, 16, 15, 23, 15, 15, 107, 5, 5, 5, 10, 4, 6, 7, 49, 6, 4, 13, 13, 3, 6, 8, 9, 7, 15, 3, 2, 4, 8, 5, 134, 11, 4, 5, 12, 5, 9, 12, 5, 3, 5, 4, 4, 7, 38, 7, 10, 5, 9, 7, 5, 7, 9, 10, 7, 6, 7, 4, 10, 6, 4, 16, 7, 7, 16, 7, 7, 15, 5, 7, 7, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [10, 3, 4, 4, 4, 6, 3, 5, 8, 5, 62, 56, 57, 57, 4, 11, 13, 14, 13, 14, 13, 14, 13, 4, 4, 19, 14, 6, 6, 137, 138, 198, 215, 55, 7, 13, 15, 6, 5, 55, 28, 4, 35, 5, 11, 7, 5, 4, 8, 26, 8, 12, 4, 8, 13, 4, 87, 25, 25, 29, 7, 10, 5, 24, 7, 4, 26, 22, 157, 26, 22, 25, 24, 24, 6, 32, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 9, 20, 4, 6, 9, 4, 7, 4, 4, 12, 10, 12, 13, 14, 14, 15, 13, 13, 13, 11, 10, 9, 5, 9, 12, 14, 7, 9, 13, 13, 12, 3, 4, 4, 4, 11, 4, 4, 7, 3, 9, 10, 12, 8, 13, 11, 12, 14, 5, 187, 10, 15, 11, 4, 8, 5, 4, 5, 6, 4, 12, 11, 4, 6, 7, 10, 16, 7, 7, 17, 4, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 5, 8, 13, 7, 11, 5, 29, 6, 6, 5, 109, 9, 5, 7, 7, 7, 9, 27, 13, 169]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [2, 7, 6, 16, 4, 5, 6, 6, 7, 6, 4, 6, 10, 5, 6, 6, 7, 50, 18, 16, 16, 6, 6, 6, 7, 6, 7, 7, 6, 6, 7, 7, 6, 4, 20, 12, 6, 47, 3, 6, 6, 6, 7, 6, 6, 6, 10, 6, 5, 193, 9, 13, 132, 6, 15, 33, 6, 350, 7, 10, 6, 81, 68, 5, 5, 6, 14, 5, 6, 5, 20, 6, 7, 8, 10, 4, 10, 7, 14, 293, 7, 7, 7, 40, 5, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [9, 11, 12, 6, 8, 8, 4, 4, 4, 18, 7, 4, 4, 18, 87, 10, 11, 23, 29, 15, 17, 57, 16, 15, 17, 5, 7, 5, 15, 6, 13, 3, 10, 11, 13, 12, 9, 12, 15, 7, 4, 6, 7, 11, 7, 4, 5, 4, 12, 5, 5, 7, 4, 11, 10, 4, 9, 4, 6, 7, 8, 230, 18, 7, 4, 123, 5, 5, 82, 3, 6, 12, 17, 4, 5, 16, 17, 7, 7, 55, 7, 6, 4, 7, 10, 18]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [24, 12, 9, 9, 9, 9, 13, 8, 4, 18, 14, 6, 11, 12, 9, 14, 15, 19, 17, 14, 14, 14, 10, 28, 16, 5, 13, 30, 16, 11, 26, 61, 15, 8, 6, 15, 10, 10, 5, 12, 8, 9, 9, 25, 14, 5, 11, 29, 117, 18, 8, 6, 12, 5, 14, 9, 10, 8, 7, 12, 6, 5, 76, 44, 10, 6, 13, 12, 20, 18, 19, 18, 20, 19, 19, 8, 13]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [23, 13, 8, 14, 16, 5, 3, 4, 6, 5, 5, 4, 37, 13, 4, 7, 26, 4, 10, 18, 17, 11, 17, 17, 10, 43, 13, 4, 126, 12, 4, 12, 9, 29, 33, 37, 16, 4, 5, 9, 4, 73, 9, 6, 9, 14, 9, 8, 14, 9, 9, 10, 30, 5, 14, 14, 9, 15, 35, 9, 8, 23, 8, 12, 4, 11, 9, 9, 26, 29, 26, 27, 26, 28, 26, 15, 26]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [2, 7, 7, 9, 8, 11, 8, 10, 8, 8, 9, 8, 9, 11, 9, 9, 20, 71, 6, 15, 9, 31, 10, 6, 9, 110, 20, 9, 167, 11, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [2, 93, 13, 13, 15, 13, 9, 6, 5, 7, 23, 13, 37, 8, 37, 39, 193, 10, 8, 8, 15, 16, 15, 15, 16, 8, 10, 5, 5, 15, 8, 9, 130, 36, 24, 12, 6, 118, 9, 36, 8, 16, 128, 11, 17, 10, 17, 8, 10, 8, 12, 12, 6, 6, 11, 74, 13, 12, 12, 10, 5, 10, 21, 10, 13, 5, 14, 13, 9, 36, 22, 18, 23, 10, 10, 15]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [14, 8, 4, 5, 6, 6, 4, 4, 6, 4, 7, 11, 4, 4, 7, 6, 6, 6, 15, 16, 15, 15, 6, 8, 4, 4, 4, 7, 11, 7, 7, 4, 22, 12, 4, 12, 4, 5, 20, 6, 7, 208, 6, 18, 10, 7, 5, 6, 4, 4, 4, 7, 11, 11, 20, 6, 6, 6, 104, 3, 3, 6, 5, 7, 4, 6, 8, 6, 5, 7, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 12, 4, 8, 6, 8, 5, 10, 9, 10, 5, 7, 11, 8, 15, 13, 11, 6, 5, 18, 4, 6, 7, 162, 5, 16]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [2, 8, 4, 14, 7, 6, 8, 6, 4, 79, 6, 110, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 192, 4, 6, 200, 305, 4, 19, 8, 151, 5, 39, 240, 16, 4, 257]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 7, 4, 8, 9, 5, 4, 9, 7, 5, 50, 14, 5, 5, 11, 8, 8, 6, 175, 5, 92, 8, 7, 5, 29, 46]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [2, 8, 11, 9, 9, 54, 9, 8, 14, 10, 9, 10, 10, 11, 41, 9, 18, 10, 212, 388, 9, 19, 11, 9, 12, 10, 12, 117, 10, 15, 10, 58, 173, 25, 16, 28]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 5, 4, 4, 5, 5, 11, 5, 4, 11, 5, 9, 4, 4, 5, 5, 4, 101, 6, 6, 133, 6, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 15, 4, 4, 4, 16, 5, 6, 9, 102, 10, 18, 5, 6, 5, 7, 5, 6, 9, 5, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [13, 10, 9, 4, 31, 15, 16, 9, 13, 13, 4, 18, 7, 14, 23, 8, 21, 16, 19, 21, 19, 19, 19, 16, 16, 18, 4, 13, 13, 64, 131, 15, 29, 18, 15, 18, 19, 15, 14, 16, 12, 21, 9, 14, 14, 15, 97, 23, 4, 6, 8, 7, 12, 14, 18, 26, 29, 21, 23, 21, 24, 11, 11, 12, 14, 11, 17, 15, 20, 10, 10, 10, 12, 18, 11, 10, 10, 13, 11, 25, 23, 33, 15, 18, 11, 26]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 61
termination = MathOptInterface.OPTIMAL
objective_value = 0.48845458772194245
thermo_feasible = true
