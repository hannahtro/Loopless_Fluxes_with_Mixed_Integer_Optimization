WARNING: Dual bound 0.975599 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
WARNING: Dual bound 0.975578 is smaller than the objective of the primal solution 0.975615. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iB21_1397
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iB21_1397
----------------------------------
number of metabolites : 1943
number of reactions : 2741
number of genes : 1337

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 5, 10, 3, 2, 3, 2, 3, 5, 9]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 5, 136, 4, 3, 4, 3, 2, 3, 2, 7, 3, 3, 3, 3, 3, 2, 14, 4, 6, 4, 3, 75, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 4, 3, 4, 4, 5, 4, 4, 3, 19, 3, 4, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 3, 8, 4, 61, 17, 7, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 2, 6, 3, 4, 4, 4, 5, 5, 10, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 4, 5, 4, 5, 19, 5, 18, 6, 5, 4, 26, 4, 3, 6, 4, 5, 5, 6, 4, 4, 8, 5, 6, 4, 4, 4, 52, 5, 5, 8, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 9, 4, 5, 4, 44, 5, 4, 5, 5, 3, 4, 4, 4, 85, 5, 9, 11, 3, 5, 4, 9, 6, 27, 11, 4, 3, 5, 4, 4, 6, 121, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 4, 7, 6, 5, 7, 4, 5, 8, 5, 4, 13, 11, 4, 6, 5, 4, 6, 5, 9, 6, 4, 7, 4, 6, 6, 6, 4, 5, 8, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 9, 4, 5, 7, 4, 4, 4, 5, 4, 9, 4, 4, 6, 5, 8, 8, 6, 7, 9, 6, 6, 4, 4, 4, 4, 7, 4, 6, 6, 4, 4, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 6, 4, 4, 5, 5, 6, 6, 5, 5, 7, 10, 7, 7, 5, 5, 4, 5, 8, 6, 5, 44, 5, 4, 6, 4, 5, 119, 5, 6, 7, 65]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 4, 5, 8, 6, 4, 3, 4, 3, 3, 3, 4, 6, 5, 6, 6, 4, 6, 6, 6, 5, 4, 6, 3, 6, 4, 6, 8, 40, 5, 7, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 3, 4, 4, 6, 4, 6, 3, 4, 6, 6, 4, 4, 5, 7, 4, 6, 3, 5, 6, 6, 4, 4, 4, 3, 7, 10, 5, 6, 5, 5, 10, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 7, 10, 5, 4, 3, 207, 4, 4, 6, 6, 5, 25, 4, 4, 4, 5, 20, 6, 3, 7, 7, 2, 4, 4, 4, 6, 49, 30, 6, 6, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 5, 6, 4, 7, 6, 4, 5, 285, 9, 4, 8, 4, 4, 4, 6, 3, 8, 6, 5, 8, 42, 41, 43, 51, 4, 6, 3, 10, 6, 4, 5, 4, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 6, 8, 6, 13, 6, 5, 7, 4, 4, 6, 3, 8, 6, 5, 6, 4, 143, 5, 6, 9, 5, 4, 4, 104, 5, 7, 3, 4, 5, 5, 5, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 5, 6, 5, 4, 4, 5, 4, 5, 4, 4, 5, 4, 6, 5, 3, 6, 3, 4, 5, 5, 4, 8, 4, 5, 3, 11, 6, 6, 30, 3, 5, 9, 13, 4, 7, 105]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 8, 7, 8, 6, 4, 6, 3, 5, 20, 6, 6, 4, 5, 4, 13, 9, 37, 36, 37, 45, 5, 223, 5, 7, 5, 12, 6, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 51, 7, 7, 6, 4, 4, 4, 5, 4, 5, 6, 4, 5, 3, 3, 6, 4, 4, 3, 10, 6, 4, 4, 6, 141, 77, 93, 5, 6, 5, 20, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 5, 5, 6, 7, 4, 4, 5, 4, 4, 2, 5, 7, 6, 5, 5, 8, 5, 18, 5, 4, 5, 4, 45, 4, 4, 5, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 4, 3, 5, 5, 4, 4, 5, 5, 4, 3, 4, 6, 8, 6, 3, 7, 5, 7, 3, 4, 4, 6, 5, 5, 4, 4, 4, 6, 4, 4, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [21, 3, 5, 4, 4, 27, 6, 4, 8, 5, 3, 3, 3, 6, 6, 7, 4, 4, 5, 3, 4, 4, 4, 3, 34, 6, 7, 5, 8, 3, 6, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 5, 3, 6, 10, 12, 5, 7, 4, 3, 10, 4, 6, 8, 3, 3, 4, 5, 16, 10, 4, 4, 7, 10, 7, 4, 6, 6, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 4, 5, 4, 6, 4, 10, 14, 4, 8, 3, 4, 4, 3, 56, 4, 8, 35, 4, 4, 5, 4, 71, 7, 14, 5, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 6, 4, 5, 11, 6, 7, 5, 164, 5, 3, 4, 5, 7, 4, 6, 5, 4, 10, 7, 10, 4, 5, 4, 6, 21, 5, 11, 5, 5, 6, 6, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 11, 6, 7, 6, 3, 30, 4, 4, 6, 5, 7, 5, 5, 5, 3, 9, 4, 2, 29, 4, 4, 7, 5, 38, 5, 6, 3, 8, 4, 13, 5, 14, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 4, 6, 5, 6, 4, 3, 5, 5, 8, 4, 4, 3, 4, 5, 3, 9, 9, 9, 4, 13, 5, 3, 5, 4, 8, 6, 7, 5, 3, 9, 6, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [9, 5, 4, 12, 7, 4, 5, 4, 9, 5, 5, 6, 6, 4, 4, 179, 9, 3, 11, 6, 4, 5, 5, 7, 5, 5, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 8, 20, 12, 4, 5, 18, 6, 7, 6, 11, 6, 5, 9, 4, 3, 5, 13, 13, 6, 7, 10, 8, 15, 4, 8, 4, 198, 4, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 6, 8, 15, 5, 6, 4, 9, 3, 5, 10, 6, 11, 6, 9, 14, 3, 3, 4, 10, 4, 5, 7, 11, 16, 14, 6, 5, 11, 5, 5, 64, 44, 6, 5, 12, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [17, 4, 4, 4, 4, 4, 3, 4, 3, 4, 7, 7, 4, 4, 7, 4, 6, 5, 5, 7, 13, 13, 4, 4, 6, 4, 8, 5, 5, 7, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 8, 9, 21, 16, 5, 5, 11, 5, 24, 6, 17, 4, 4, 5, 21, 21, 22, 5, 4, 4, 10, 11, 4, 7, 3, 13, 13, 10, 9, 7, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 3, 4, 3, 6, 25, 30, 3, 6, 5, 4, 3, 6, 6, 13, 11, 6, 9, 6, 10, 3, 5, 6, 6, 5, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [14, 5, 6, 6, 10, 5, 6, 6, 6, 20, 6, 15, 4, 3, 14, 5, 6, 5, 3, 15, 11, 4, 5, 13, 6, 8, 6, 4, 4, 5, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 9, 4, 4, 5, 43, 5, 4, 5, 4, 4, 6, 5, 5, 3, 5, 6, 4, 4, 4, 4, 3, 4, 3, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 4, 6, 7, 12, 4, 4, 4, 7, 4, 5, 4, 4, 4, 7, 10, 6, 6, 9, 5, 15, 8, 4, 21, 5, 4, 5, 4, 6, 5, 4, 5, 14, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 4, 3, 4, 5, 4, 4, 6, 4, 7, 5, 3, 7, 31, 8, 7, 3, 3, 8, 4, 7, 4, 4, 4, 4, 4, 4, 9, 53, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [16, 6, 5, 3, 6, 7, 6, 7, 36, 3, 3, 7, 27, 8, 15, 17, 6, 11, 7, 4, 4, 4, 8, 8, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [13, 3, 6, 5, 5, 4, 4, 8, 4, 4, 5, 6, 5, 5, 4, 4, 10, 3, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 8, 14, 6, 5, 6, 16, 8, 11, 15, 5, 8, 3, 7, 6, 7, 4, 5, 8, 4, 5, 6, 9, 7, 9, 8, 8, 9, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 15, 6, 3, 11, 6, 6, 9, 6, 6, 4, 6, 5, 7, 6, 5, 8, 5, 4, 4, 8, 5, 6, 6, 6, 25, 8, 7, 6, 22, 5, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [2, 7, 15, 11, 13, 11, 8, 15, 6, 13, 10, 14, 19, 17, 8, 80, 3, 13, 12, 16, 17, 31, 11, 12, 13, 13, 15, 14, 13, 6, 16, 16, 14, 9, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [15, 6, 4, 6, 6, 7, 9, 3, 6, 8, 14, 5, 13, 7, 6, 8, 6, 13, 5, 7, 7, 6, 7, 13, 6, 13, 24, 7, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [24, 139, 4, 7, 10, 3, 5, 12, 6, 12, 4, 6, 8, 9, 4, 5, 7, 10, 5, 12, 6, 5, 4, 7, 7, 6, 6, 5, 7, 8, 3, 8, 493]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [13, 3, 3, 4, 5, 49, 6, 20, 4, 6, 5, 11, 5, 5, 13, 4, 4, 33, 37, 35, 36, 46, 16, 23, 17, 4, 12, 7, 12, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [11, 6, 6, 3, 4, 4, 2, 4, 9, 3, 11, 8, 6, 6, 4, 5, 5, 3, 4, 4, 7, 13, 5, 12, 40, 37, 38, 47, 12, 6, 6, 13, 6, 13, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [17, 4, 11, 4, 18, 12, 5, 8, 8, 6, 5, 4, 4, 6, 6, 6, 6, 4, 7, 9, 4, 6, 3, 6, 5, 20, 4, 16, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [22, 6, 5, 5, 3, 5, 4, 4, 42, 6, 4, 3, 8, 21, 46, 46, 47, 54, 8, 14, 8, 4, 4, 4, 14, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [8, 13, 7, 11, 3, 7, 15, 7, 12, 12, 7, 35, 75, 4, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [12, 17, 288, 4, 6, 14, 16, 39, 4, 5, 4, 5, 23, 21, 18, 25, 16, 44, 45, 47, 51, 15, 12, 18, 4, 169]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 4, 7, 30, 9, 15, 14, 4, 5, 3, 156, 4, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 8, 7, 8, 11, 14, 10, 5, 6, 6, 7, 4, 6, 5, 6, 4, 6, 6, 8, 4, 7, 9, 11, 6, 11, 10, 15, 6, 6, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 4, 4, 6, 4, 4, 4, 11, 5, 4, 41, 6, 4, 7, 4, 5, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [2, 13, 3, 4, 7, 5, 4, 4, 4, 4, 4, 6, 4, 6, 4, 4, 4, 13, 4, 6, 4, 41, 5, 4, 4, 13, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 5, 4, 4, 14, 9, 4, 4, 7, 5, 25, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 4, 9, 6, 8, 8, 12, 7, 10, 8, 8, 7, 6, 3, 8, 9, 12, 9, 19, 8, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [2, 13, 4, 14, 14, 9, 11, 6, 6, 4, 17, 13, 9, 5, 12, 13, 5, 10, 11, 4, 4, 5, 15, 15, 12, 5, 8, 12, 46, 17, 9, 19, 19, 20, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [3, 12, 88, 4, 2, 6, 24, 8, 6, 3, 10, 4, 8, 6, 8, 17, 20, 10, 5, 11, 9, 6, 16, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [5, 8, 3, 19, 3, 8, 4, 6, 9, 4, 7, 5, 4, 6, 44]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 5, 5, 6, 4, 6, 6, 3, 6, 8, 6, 34, 13, 7, 11, 39, 40, 39, 45, 6, 53, 7, 6, 9, 40]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [12, 12, 9, 10, 8, 22, 13, 20, 14, 11, 13, 19, 16, 14, 5, 17, 9, 14, 14, 13, 19, 17, 9, 10, 13, 28, 28, 32, 33, 13, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 4, 3, 4, 12, 4, 4, 8, 4, 10, 4, 5, 6, 4, 6, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [8, 15, 27, 5, 20, 20, 3, 23, 17, 29, 6, 16, 25, 22, 19, 5, 6, 58, 55, 56, 64, 7, 31, 15, 27, 25, 25, 13, 39]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 15, 10, 13, 18, 10, 10, 16, 3, 12, 44, 3, 25, 10, 10, 27, 48, 14, 3, 14, 20, 16, 13, 6, 16, 16, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 3, 18, 15, 18, 22, 19, 20, 18, 20, 19, 32, 4, 4, 19, 31, 22, 14, 19, 17, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [4, 27, 4, 5, 25, 29, 3, 23, 4, 9, 28, 21, 30, 6, 23, 24, 32, 21, 14, 12, 34]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [24, 7, 6, 6, 10, 6, 4, 4, 17, 6, 8, 5, 3, 4, 6, 5, 9, 11, 16, 5, 4, 3, 8, 7, 6, 4, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [39, 4, 5, 10, 3, 4, 14, 4, 6, 6, 5, 4, 10, 4, 3, 4, 8, 3, 6, 8, 4, 6, 5, 5, 6, 6, 11, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [32, 10, 4, 4, 5, 4, 5, 5, 35, 13, 24, 33, 8, 15, 7, 6, 27, 28, 27, 27, 27, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [17, 22, 6, 8, 4, 3, 3, 30, 3, 3, 22, 28, 5, 98, 44, 6, 8, 13, 8, 5, 4, 24, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 4, 106, 7, 6, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 13, 6, 3, 27, 16, 53, 3, 148, 11, 7, 12, 11, 17, 12, 6, 14, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 26, 4, 34, 4, 4, 13, 9, 4, 6, 7, 26, 6, 24, 5, 4, 13, 6, 6, 39, 4, 20, 6, 19, 21, 21, 17, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [44, 4, 23, 5, 151, 27, 3, 38, 26, 23, 4, 5, 27, 20, 23, 25, 4, 36, 14, 17, 22, 15, 26, 24, 26, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [29, 23, 5, 20, 23, 23, 21, 25, 21, 16, 31, 21, 8, 25, 3, 4, 14, 4, 20, 26, 3, 19, 22, 20, 23, 25, 72, 20, 23, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [24, 8, 2, 5, 6, 4, 19, 6, 5, 20, 7, 7, 24, 8, 5, 5, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [15, 5, 5, 6, 6, 17, 9, 20, 5, 6, 7, 11, 6, 11, 6, 5, 13, 4, 5, 7, 5, 4, 4, 4, 8, 6, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [2, 16, 15, 38, 5, 207, 4, 29, 15, 18, 30, 14, 15, 20, 4, 14, 19, 37, 14, 14, 13, 6, 7, 188, 279]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 3, 5, 3, 6, 7, 3, 6, 8, 4, 5, 6, 20, 9, 6, 9, 8, 6, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [14, 4, 33, 19, 16, 30, 7, 35, 24, 5, 21, 6, 6, 15, 15, 26, 14, 27, 5, 7, 4, 32, 5, 13, 8, 8, 11, 8, 23, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 10, 18, 4, 12, 4, 11, 4, 10, 13, 12, 13, 12, 21, 12, 12, 11, 10, 12, 13, 12, 12, 12, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [11, 7, 19, 6, 20, 20, 8, 20, 4, 9, 77, 4, 22, 19, 25, 28, 11, 5, 22, 22, 6, 21, 19, 30, 20, 23, 23, 23, 22, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [8, 11, 11, 14, 3, 3, 9, 9, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [11, 8, 3, 12, 6, 9, 21, 12, 14, 5, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 7, 4, 4, 4, 4, 3, 6, 3, 223, 4, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [12, 12, 3, 88, 4, 14]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [27, 4, 4, 15, 7, 14, 5, 5, 2, 4, 3, 5, 5, 9, 4, 6, 17, 14, 4, 7, 4, 7, 6, 28, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [9, 11, 5, 6, 75, 15, 11, 9, 6, 12, 23, 12, 6, 7, 129, 6, 6, 7, 8, 14, 7, 5, 5, 5, 8, 10, 12, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [5, 6, 15, 4, 4, 3, 7, 6, 28, 4, 5, 4, 12, 4, 13, 5, 13, 6, 6, 16, 6, 5, 28, 38, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 7, 6, 6, 13, 16, 5, 6, 5, 6, 17, 5, 6, 4, 15, 4, 7, 6, 13, 6, 7, 16, 8, 8, 5, 5, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 8, 7, 8, 7, 11, 9, 14]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 10, 3, 15, 5, 5, 4, 3, 12, 8, 9, 5, 5, 9, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 43, 6, 5, 5, 4, 5, 4, 58, 4, 5, 5, 5, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [20, 8, 18, 26, 10, 77, 19, 34, 15, 25, 19, 37, 14, 27, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 93
termination = MathOptInterface.OPTIMAL
objective_value = 0.9756145115851271
thermo_feasible = true
