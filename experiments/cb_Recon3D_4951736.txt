ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
Recon3D
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

Recon3D
----------------------------------
number of metabolites : 5835
number of reactions : 10600
number of genes : 2248

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 106
max_cuts = 53
(indicator, big_m) = (false, true)
BIG M ADDED
model with 10600 flux variables and 19394 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 4, 6, 4, 6, 6, 8, 10, 5, 9, 3, 266, 4, 4, 6, 4, 335, 4, 4, 4, 8, 3, 6, 5, 4, 30, 4, 4, 7, 4, 4, 4, 4, 5, 3, 5, 3, 4, 5, 6, 6, 4, 6, 5, 10, 6, 3, 8, 3, 5, 3, 4, 4, 6, 4, 7, 12, 4, 33, 4, 6, 689, 3, 165, 4, 4, 4, 3]
length(C_list) = 53
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 10, 4, 10, 4, 8, 4, 4, 6, 4, 4, 4, 4, 7, 15, 4, 3, 4, 4, 4, 8, 4, 8, 4, 9, 6, 13, 4, 3, 4, 6, 4, 5, 4, 4, 5, 7, 3, 6, 6, 6, 4, 6, 3, 4, 4, 12, 3, 8, 6, 4, 6, 4, 4, 464, 6, 3, 4, 519, 10, 4, 4, 6, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 4, 4, 6, 4, 4, 4, 4, 4, 8, 12, 5, 3, 4, 6, 4, 13, 12, 6, 6, 9, 7, 4, 8, 4, 4, 4, 4, 4, 4, 6, 7, 4, 4, 8, 4, 14, 4, 4, 4, 11, 7, 4, 6, 8, 4, 4, 4, 4, 14, 4, 4, 6, 4, 4, 9, 5, 620, 21, 4, 4, 3, 7, 3, 5, 5, 7, 6, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 3, 4, 4, 5, 4, 9, 8, 4, 6, 8, 6, 4, 4, 4, 4, 4, 4, 6, 8, 6, 3, 4, 8, 3, 6, 4, 3, 4, 4, 5, 9, 4, 4, 4, 407, 6, 8, 6, 4, 4, 4, 4, 8, 4, 4, 3, 4, 4, 4, 4, 6, 4, 5, 4, 21, 7, 4, 5, 4, 5, 6, 3, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 8, 4, 19, 4, 4, 4, 6, 4, 4, 4, 4, 3, 4, 4, 4, 8, 3, 6, 4, 4, 4, 19, 4, 4, 3, 6, 8, 4, 7, 3, 4, 4, 4, 6, 4, 4, 11, 137, 559, 7, 8, 6, 5, 12, 4, 5, 6, 6, 4, 4, 4, 6, 3, 6, 4, 10, 6, 10, 4, 3, 6, 10, 4, 6, 78, 4, 6, 6, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 6, 6, 8, 11, 6, 3, 3, 3, 6, 17, 6, 4, 8, 4, 17, 4, 8, 4, 4, 4, 17, 22, 4, 6, 4, 5, 4, 4, 6, 4, 7, 4, 4, 6, 8, 4, 4, 3, 12, 9, 3, 5, 4, 4, 3, 4, 4, 5, 123, 4, 4, 19, 8, 8, 3, 6, 4, 130, 4, 11, 4, 5, 6, 4, 3, 8, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 5, 4, 4, 4, 210, 4, 4, 4, 4, 3, 4, 4, 6, 3, 17, 3, 4, 6, 17, 4, 6, 3, 4, 6, 5, 4, 4, 6, 4, 3, 4, 55, 3, 4, 3, 8, 8, 4, 3, 21, 6, 3, 3, 6, 4, 3, 12, 5, 4, 13, 4, 4, 4, 6, 10, 6, 4, 5, 4, 3, 4, 15, 4, 4, 350, 4, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 9, 6, 4, 15, 4, 4, 4, 5, 6, 21, 6, 31, 4, 7, 3, 3, 4, 62, 5, 22, 3, 4, 3, 3, 10, 3, 4, 7, 7, 4, 4, 3, 4, 3, 5, 18, 13, 4, 5, 5, 4, 4, 4, 4, 3, 6, 14, 4, 7, 4, 4, 4, 4, 3, 4, 7, 3, 8, 289, 6, 4, 9, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [9, 4, 9, 4, 4, 4, 7, 11, 4, 10, 10, 6, 4, 4, 4, 4, 6, 8, 4, 3, 4, 3, 6, 4, 6, 4, 12, 5, 4, 4, 71, 8, 4, 8, 4, 6, 4, 8, 12, 8, 4, 5, 4, 6, 4, 4, 6, 3, 4, 4, 4, 4, 103, 7, 4, 4, 6, 3, 6, 3, 6, 4, 5, 20, 15, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 4, 6, 4, 4, 4, 4, 4, 7, 13, 4, 5, 4, 16, 17, 3, 4, 6, 4, 10, 6, 10, 4, 5, 14, 4, 4, 6, 5, 3, 4, 7, 4, 10, 4, 5, 8, 6, 4, 8, 16, 6, 6, 4, 4, 4, 6, 18, 4, 5, 4, 5, 6, 6, 3, 4, 11, 4, 15, 501, 6, 8, 4, 3]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 4, 4, 4, 8, 4, 5, 4, 4, 4, 10, 8, 6, 8, 6, 6, 4, 7, 4, 4, 4, 4, 4, 5, 4, 6, 14, 8, 9, 8, 8, 8, 4, 4, 8, 4, 3, 6, 4, 4, 7, 4, 3, 15, 16, 4, 6, 4, 9, 6, 3, 21, 4, 3, 4, 4, 3, 6, 4, 4, 4, 10, 6, 6, 3, 33, 11, 4, 228]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 6, 10, 11, 7, 21, 10, 3, 4, 9, 5, 11, 5, 4, 4, 4, 3, 9, 5, 4, 6, 4, 4, 4, 4, 4, 14, 6, 9, 5, 6, 3, 4, 34, 4, 11, 4, 9, 3, 9, 12, 3, 4, 3, 5, 4, 22, 4, 105, 5, 4, 6, 4, 3, 3, 3, 12, 5, 6, 6, 31, 4, 10, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 5, 40, 4, 4, 45, 51, 7, 6, 5, 3, 6, 10, 8, 5, 4, 4, 5, 20, 58, 4, 4, 8, 6, 7, 41, 4, 4, 4, 15, 8, 4, 4, 4, 11, 12, 3, 3, 8, 11, 11, 8, 12, 3, 6, 7, 6, 5, 5, 6, 36, 8, 3, 17, 4, 3, 8, 4, 4, 4, 36, 6, 6, 53, 453, 6, 16, 3, 30, 53, 4, 48]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 4, 3, 7, 4, 3, 4, 4, 3, 3, 4, 4, 11, 4, 4, 3, 8, 5, 4, 6, 4, 4, 4, 5, 6, 5, 6, 6, 4, 6, 6, 11, 10, 7, 3, 3, 4, 9, 13, 11, 7, 4, 7, 6, 4, 12, 8, 3, 4, 6, 3, 12, 10, 4, 4, 6, 4, 4, 6, 4, 4, 4, 106, 6, 5, 4, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 5, 4, 4, 4, 11, 4, 4, 4, 3, 12, 12, 17, 4, 4, 4, 5, 5, 352, 3, 3, 4, 4, 9, 4, 3, 4, 4, 3, 15, 6, 8, 58, 4, 4, 5, 9, 6, 15, 4, 255, 5, 7, 5, 4, 19, 16, 4, 4, 6, 5, 4, 4, 6, 8, 9, 5, 5, 14, 14, 12, 7, 4, 5, 4, 4, 4, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 9, 4, 10, 6, 4, 6, 10, 5, 4, 4, 4, 4, 4, 4, 4, 13, 4, 4, 8, 4, 3, 6, 4, 4, 4, 4, 4, 7, 5, 8, 9, 3, 9, 4, 8, 4, 8, 4, 13, 4, 4, 8, 116, 7, 6, 14, 9, 164, 7, 4, 6, 17, 8, 4, 6, 4, 5, 4, 5, 3, 4, 584, 4, 4, 4, 3]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 4, 9, 4, 5, 4, 10, 271, 4, 3, 4, 4, 5, 18, 6, 4, 4, 6, 4, 4, 4, 5, 4, 7, 698, 3, 9, 4, 4, 6, 5, 4, 4, 22, 4, 4, 4, 11, 14, 8, 5, 7, 3, 3, 6, 6, 4, 3, 21, 4, 6, 10, 6, 3, 4, 4, 3, 6, 11, 4, 6, 4, 4, 6, 4, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 3, 7, 9, 4, 4, 17, 3, 5, 3, 4, 6, 6, 7, 6, 12, 6, 7, 4, 37, 4, 4, 4, 13, 4, 3, 4, 6, 4, 8, 4, 4, 6, 3, 6, 4, 8, 11, 5, 6, 10, 156, 8, 7, 4, 6, 9, 10, 5, 6, 4, 8, 8, 3, 22, 5, 7, 3, 5, 4, 3, 5, 7, 91, 6, 4, 4, 8, 7, 6, 11, 4, 20]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 34, 4, 38, 35, 4, 4, 4, 4, 5, 11, 4, 434, 6, 4, 4, 8, 4, 5, 5, 8, 3, 38, 50, 4, 52, 4, 3, 3, 4, 6, 6, 4, 8, 10, 6, 6, 4, 6, 4, 6, 8, 4, 6, 4, 3, 30, 4, 46, 37, 5, 4, 6, 4, 30, 11, 26, 6, 4, 8, 7, 101, 34, 4, 4, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 8, 4, 4, 4, 6, 4, 4, 9, 4, 4, 7, 4, 4, 8, 6, 4, 4, 4, 7, 4, 8, 15, 10, 4, 3, 4, 4, 9, 4, 6, 6, 4, 8, 8, 3, 3, 4, 20, 11, 4, 4, 4, 5, 3, 7, 4, 4, 4, 4, 6, 3, 4, 4, 613, 4, 4, 4, 4, 5, 4, 3, 23, 19, 3, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 12, 3, 6, 4, 4, 4, 6, 8, 7, 7, 6, 527, 6, 3, 6, 4, 5, 5, 6, 4, 3, 6, 5, 4, 3, 6, 4, 64, 56, 59, 7, 3, 9, 7, 4, 4, 7, 3, 4, 32, 4, 4, 52, 4, 4, 6, 64, 8, 32, 4, 4, 20, 22, 8, 6, 4, 3, 5, 4, 4, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 5, 4, 7, 6, 4, 6, 14, 3, 4, 3, 4, 6, 7, 20, 8, 8, 7, 4, 4, 8, 4, 4, 8, 11, 8, 3, 4, 8, 4, 4, 4, 4, 7, 10, 6, 4, 4, 8, 11, 7, 7, 6, 7, 10, 6, 9, 3, 4, 7, 4, 4, 8, 4, 4, 4, 3, 4, 4, 3, 5, 8, 102, 4, 6, 4, 5, 6, 5, 4, 49]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [11, 9, 3, 7, 8, 4, 11, 4, 6, 8, 4, 8, 6, 4, 4, 3, 16, 29, 3, 4, 4, 4, 61, 16, 6, 92, 8, 7, 4, 4, 4, 4, 6, 15, 8, 8, 7, 6, 6, 4, 4, 4, 7, 4, 4, 4, 6, 4, 4, 3, 6, 7, 17, 4, 6, 6, 4, 8, 7, 6, 3, 4, 7, 4, 6, 5, 13, 5, 5, 5, 4, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 4, 20, 11, 6, 3, 6, 6, 4, 4, 4, 4, 6, 5, 7, 6, 4, 181, 8, 8, 4, 3, 6, 4, 7, 5, 4, 9, 4, 4, 7, 8, 5, 13, 4, 8, 9, 6, 9, 8, 4, 4, 3, 6, 12, 4, 5, 4, 8, 5, 4, 6, 4, 5, 6, 7, 4, 19, 4, 3, 3, 6, 4, 4, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 6, 6, 6, 4, 4, 5, 4, 9, 4, 5, 4, 4, 3, 240, 9, 11, 4, 6, 4, 4, 9, 3, 12, 4, 6, 8, 4, 10, 4, 10, 9, 6, 6, 4, 8, 8, 33, 6, 8, 4, 4, 6, 4, 32, 8, 6, 4, 5, 4, 4, 4, 4, 4, 6, 3, 6, 4, 6, 6, 4, 8, 4, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [10, 6, 6, 14, 4, 4, 4, 16, 6, 4, 4, 4, 4, 8, 769, 6, 91, 8, 17, 5, 4, 4, 4, 4, 6, 5, 13, 4, 8, 3, 6, 4, 3, 4, 6, 4, 6, 20, 8, 4, 8, 6, 5, 23, 12, 6, 3, 5, 4, 3, 15, 4, 7, 4, 4, 6, 10, 6, 8, 215, 6, 5, 4, 3, 4, 5, 8, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 38, 4, 42, 43, 3, 6, 4, 6, 6, 4, 6, 4, 9, 16, 5, 4, 4, 8, 16, 3, 39, 8, 10, 47, 41, 6, 3, 6, 4, 4, 4, 6, 8, 3, 15, 10, 16, 5, 4, 6, 3, 4, 4, 8, 35, 5, 3, 45, 4, 6, 9, 5, 4, 34, 6, 8, 23, 8, 5, 8, 5, 38, 4, 4, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 28, 14, 36, 12, 5, 8, 7, 5, 6, 8, 4, 8, 3, 6, 63, 7, 4, 4, 7, 14, 10, 4, 35, 3, 6, 53, 5, 9, 5, 4, 112, 6, 9, 21, 4, 11, 7, 6, 4, 4, 34, 34, 6, 8, 3, 26, 9, 39, 3, 4, 12, 9, 28, 3, 6, 48, 16, 294, 12, 10, 32, 44, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [17, 6, 3, 9, 13, 5, 4, 4, 46, 60, 4, 6, 4, 284, 6, 25, 4, 6, 4, 712, 6, 9, 6, 4, 48, 9, 8, 4, 9, 6, 6, 6, 4, 4, 6, 4, 6, 285, 5, 6, 4, 4, 3, 8, 9, 5, 6, 7, 14, 8, 5, 6, 4, 6, 4, 9, 8, 100, 9, 4, 6, 4, 4, 6, 24, 15, 4, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 358, 4, 10, 8, 6, 5, 3, 4, 6, 4, 10, 6, 5, 6, 4, 4, 4, 7, 6, 4, 4, 11, 4, 4, 5, 8, 4, 10, 25, 7, 4, 4, 95, 4, 101, 7, 6, 6, 9, 6, 4, 6, 8, 6, 4, 4, 4, 8, 3, 42, 78, 4, 3, 4, 94, 4, 4, 4, 3, 6, 21, 6, 6, 19, 8, 4, 90, 107]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 528, 68, 8, 9, 3, 6, 12, 8, 4, 11, 3, 6, 3, 6, 9, 4, 4, 7, 38, 34, 4, 42, 3, 5, 4, 4, 12, 6, 32, 26, 26, 8, 20, 7, 15, 3, 7, 3, 4, 3, 4, 7, 4, 6, 3, 31, 4, 4, 4, 4, 32, 10, 5, 10, 26, 17, 5, 8, 105, 9, 24, 10, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 157, 4, 4, 4, 4, 10, 4, 3, 3, 5, 5, 5, 15, 4, 6, 7, 104, 8, 4, 4, 5, 3, 4, 4, 3, 4, 4, 4, 4, 117, 6, 30, 27, 27, 4, 12, 12, 8, 4, 29, 10, 10, 8, 11, 329, 4, 5, 6, 18, 8, 3, 4, 4, 103, 4, 4, 4, 3, 476, 11, 11, 4, 9, 8, 24, 38, 101]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [8, 10, 5, 8, 4, 7, 13, 22, 4, 4, 4, 6, 4, 4, 4, 4, 5, 4, 4, 8, 13, 4, 7, 10, 4, 536, 4, 9, 4, 4, 477, 4, 348, 4, 6, 94, 98, 89, 4, 3, 8, 7, 5, 9, 12, 12, 7, 5, 9, 7, 8, 14, 4, 4, 9, 3, 95, 219, 4, 544, 9, 8, 7, 7, 4, 52, 13, 120, 29]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 14, 4, 4, 15, 9, 4, 4, 4, 4, 4, 4, 7, 4, 8, 5, 4, 8, 4, 4, 4, 6, 4, 4, 3, 4, 7, 339, 4, 4, 4, 41, 34, 36, 4, 4, 4, 8, 9, 4, 6, 4, 4, 5, 6, 6, 6, 4, 13, 7, 4, 518, 41, 4, 44, 12, 4, 523, 4, 22, 7, 139, 11, 34, 52]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 6, 10, 4, 12, 40, 7, 4, 12, 5, 4, 4, 11, 8, 9, 8, 4, 9, 4, 4, 4, 24, 142, 9, 4, 4, 42, 13, 5, 8, 4, 6, 8, 138, 38, 32, 35, 5, 4, 43, 4, 7, 3, 37, 9, 4, 4, 4, 4, 4, 14, 7, 105, 4, 38, 4, 6, 4, 4, 202, 19, 4, 4, 4, 7, 13, 12, 374]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 10, 4, 325, 11, 4, 4, 8, 4, 4, 4, 4, 3, 4, 6, 6, 8, 6, 5, 6, 4, 13, 4, 4, 26, 8, 4, 6, 4, 4, 4, 3, 74, 68, 73, 4, 5, 12, 4, 4, 4, 5, 4, 5, 4, 4, 6, 6, 4, 6, 22, 74, 4, 4, 4, 14, 8, 6, 4, 9, 8, 8, 22, 10, 4, 10]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [13, 6, 2, 4, 4, 10, 30, 9, 4, 4, 6, 4, 8, 7, 3, 4, 9, 3, 8, 5, 4, 5, 7, 4, 8, 4, 8, 4, 6, 55, 4, 4, 5, 156, 4, 5, 70, 40, 30, 8, 20, 18, 4, 10, 4, 9, 3, 4, 87, 10, 7, 37, 14, 10, 8, 5, 23, 5, 4, 6, 57, 7, 19, 4, 3, 5, 4, 13, 9, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 12, 42, 4, 7, 3, 3, 4, 10, 4, 13, 4, 4, 6, 4, 4, 5, 6, 7, 4, 6, 5, 42, 4, 4, 6, 160, 12, 36, 6, 52, 42, 38, 6, 6, 4, 14, 11, 6, 6, 14, 6, 6, 4, 4, 10, 6, 4, 11, 4, 4, 4, 52, 6, 5, 7, 4, 9, 4, 4, 4, 8, 9, 5, 8, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
termination = MathOptInterface.INFEASIBLE
objective_value = 755.0032155506631
