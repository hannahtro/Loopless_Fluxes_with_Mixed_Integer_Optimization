┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAF987
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAF987
----------------------------------
number of metabolites : 1109
number of reactions : 1285
number of genes : 987

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 64
max_cuts = 26
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1285 flux variables and 2473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 85, 2, 5, 4, 3, 4, 4, 7, 22, 52, 5, 19, 5, 6, 27, 4, 4]
length(C_list) = 18
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 290, 5, 4, 3, 12, 46, 4, 11, 178, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 3, 5, 6, 6, 11, 9, 38]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 6, 17, 4, 216, 5, 12]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 6, 8, 3, 9, 6, 25, 12, 5, 9, 10, 4, 6, 6, 5, 5, 9, 6, 6, 13, 7, 8, 6, 5, 6, 8, 9, 4, 11, 8]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 5, 4, 6, 13, 5, 10, 153, 41, 43]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 24, 4, 4, 5, 3, 5, 7, 14, 12, 27, 13, 7, 4, 4, 9, 7, 5, 6, 4, 13, 5, 6, 25, 4, 14, 24, 11, 11, 13]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 4, 5, 5, 5, 5, 5, 6, 5, 4, 34, 5, 9, 4, 14, 5, 74, 7, 56, 6, 4, 22, 12, 11, 52, 37, 7, 4, 3, 8, 14, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 11, 10, 14, 8, 12, 8, 4, 7, 11, 4, 11, 10, 8, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 9, 19, 5, 128, 14, 39, 11, 7, 13]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 6, 12, 5, 13, 7, 75, 64, 281, 8, 11, 5, 9, 15, 6, 7, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 31, 79, 7, 4, 7, 4, 174, 161, 8, 8, 8, 8, 10, 8, 81, 10, 4, 5, 135, 5, 9, 8, 173, 6, 12, 23, 11, 11]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 8, 6, 9, 11, 13, 6, 9, 11, 6, 64, 11, 9, 6, 8, 10, 9, 6, 11, 6, 145, 473, 10, 9, 9, 25, 12, 8, 8, 23, 8, 8, 8, 15]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 7, 44, 12, 64, 93, 62]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 5, 23]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 5, 4, 146, 22, 11, 126, 6, 57, 5, 51, 6, 9, 6, 9, 166, 241]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [15, 14, 7, 4, 4, 15, 12, 7, 19, 16, 16, 154, 75, 14, 130, 147, 7, 15, 56, 15, 15, 17, 15, 15, 187, 36, 7, 18, 17]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 17
termination = MathOptInterface.OPTIMAL
objective_value = 0.04732237625380367
thermo_feasible = true
