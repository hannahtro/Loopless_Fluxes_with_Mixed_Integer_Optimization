┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iETEC_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iETEC_1333
----------------------------------
number of metabolites : 1962
number of reactions : 2756
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 2, 11, 11, 11, 90, 11, 11, 11, 16, 16, 17, 16, 20, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 16]
length(C_list) = 21
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 5, 2, 2, 3, 2, 2, 236, 5, 3, 3, 4, 3, 4, 3, 2, 2, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 2, 2, 2, 4, 3, 3, 46, 4, 4, 17, 2, 4, 2, 4, 3, 2, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 2, 19, 3, 2, 3, 6, 10, 3, 7, 5, 4, 76, 5, 134, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 5, 6, 5, 4, 157, 6, 2, 7, 7, 135, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 2, 3, 4, 4, 4, 6, 6, 4, 6, 2, 171]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 9, 2, 2, 2, 2, 3, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 5, 7, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 89, 8, 3, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [12, 8, 6, 7, 5, 2, 4, 6, 4, 4, 4, 6, 4, 8, 6, 10, 8, 6, 4, 5, 6, 3, 24, 8, 5, 4, 6, 6, 4, 4, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 4, 6, 3, 4, 6, 12, 5, 4, 119, 6, 10, 4, 27, 4, 6, 6, 6, 116, 5, 3, 4, 6, 3, 4, 7, 4, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [9, 9, 4, 5, 9, 5, 3, 7, 4, 70, 15, 9, 14, 6, 9, 4, 4, 4, 7, 16, 4, 4, 6, 7, 4, 4, 4, 8, 11]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 5, 10, 13, 13, 13, 13, 13, 15, 13, 3, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 18, 17, 16, 16, 18, 19, 17, 16, 113]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [17, 6, 3, 12, 12, 12, 37, 12, 12, 12, 6, 6, 19, 8, 4, 9, 4, 19, 15, 9, 4, 3, 10, 3, 7, 4, 4, 5, 15, 26, 8, 6, 14, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 10, 10, 10, 10, 10, 10, 6, 14, 3, 16, 18, 16, 16, 13, 13, 4, 75, 14, 13, 13, 13, 5, 13, 14, 30, 13, 13, 14, 13, 14, 13, 13, 13]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 5, 8]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [14, 15, 15, 12, 14, 13, 17, 13, 16, 21, 14, 15, 14, 15]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 6, 234, 5, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 4, 3, 3, 5, 9, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 22
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785425241527
thermo_feasible = true
