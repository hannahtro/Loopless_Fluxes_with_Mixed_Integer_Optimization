┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcDH1_1363
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcDH1_1363
----------------------------------
number of metabolites : 1949
number of reactions : 2750
number of genes : 1363

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2750 flux variables and 5109 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 3, 2, 4, 3, 2, 2, 4, 2, 2, 2, 3, 3, 3, 2, 3, 2, 3, 4, 2, 4, 36, 4, 4, 3, 189, 4, 4, 14, 3, 3, 3, 5]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 4, 5, 4, 3, 2, 3, 4, 4, 4, 3, 2, 5, 6, 4, 4, 4, 3, 4, 5, 6, 83, 4, 9, 6, 3, 4, 4, 8, 13, 4, 4, 3, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 4, 3, 4, 2, 3, 4, 4, 3, 5, 3, 5, 5, 4, 4, 4, 5, 4, 5, 8, 5, 4, 4, 3, 4, 3, 5, 4, 8, 4, 3, 3, 5, 8, 4, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 5, 4, 3, 5, 4, 23, 8, 10, 5, 3, 5, 4, 5, 4, 5, 17, 5, 63, 5, 6, 6, 12, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 10, 4, 3, 2, 3, 6, 6, 4, 2, 4, 17, 2, 4, 5, 4, 5, 5, 25, 5, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 2, 5, 3, 4, 5, 4, 10, 3, 6, 33, 5, 5, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 7, 3, 5, 8, 12, 9, 8, 8, 9, 9, 8, 6, 4, 10, 19, 10, 11, 10, 9, 2, 5, 14, 49, 14, 11, 7, 10, 8, 115]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 3, 138, 29, 15, 177, 12, 42]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 6, 11, 61, 170, 7, 10, 5, 5, 87, 28]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660046
thermo_feasible = true
