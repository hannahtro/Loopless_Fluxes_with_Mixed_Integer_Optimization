┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECW_1372
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECW_1372
----------------------------------
number of metabolites : 1973
number of reactions : 2782
number of genes : 1372

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2782 flux variables and 5173 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 17, 16, 21, 13, 16, 13, 15, 13, 18, 16, 14, 14, 13, 11, 13, 13, 14, 11, 14, 12, 13, 11, 14, 13, 13, 16, 11, 3, 2, 3, 3, 2, 21]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 16, 18, 13, 13, 14, 13, 16, 17, 50, 14, 13, 13, 11, 15, 13, 14, 11, 11, 11, 13, 11, 18, 13, 13, 14, 11, 12, 14, 2, 3, 2, 3, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 18, 17, 13, 14, 14, 17, 14, 13, 13, 13, 13, 17, 11, 13, 13, 14, 11, 17, 11, 13, 11, 14, 13, 16, 11, 11, 3, 29, 13, 2, 105, 5, 2, 9]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 16, 19, 13, 13, 17, 13, 19, 13, 13, 14, 14, 14, 14, 11, 13, 13, 14, 11, 11, 11, 13, 11, 14, 13, 13, 21, 11, 11, 48, 2, 2, 7, 3, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 17, 17, 14, 14, 84, 14, 15, 14, 19, 15, 18, 14, 11, 65, 14, 16, 11, 13, 11, 15, 13, 15, 17, 14, 14, 11, 11, 40, 15, 14, 3, 14, 15, 2, 6, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 18, 16, 13, 13, 15, 13, 14, 13, 13, 15, 14, 11, 13, 14, 14, 11, 11, 11, 14, 11, 14, 13, 13, 11, 11, 13, 13, 6, 14, 7, 3, 4, 6, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 56, 16, 13, 13, 17, 13, 14, 13, 87, 14, 20, 13, 11, 13, 13, 60, 11, 11, 11, 13, 11, 14, 13, 13, 11, 11, 14, 2, 3, 2, 3, 6, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 16, 16, 15, 14, 14, 13, 14, 13, 13, 13, 13, 11, 99, 28, 15, 11, 14, 11, 13, 11, 14, 13, 13, 13, 11, 11, 13, 14, 2, 14, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 77, 16, 22, 13, 14, 158, 14, 13, 13, 13, 13, 11, 13, 13, 14, 11, 11, 11, 13, 11, 16, 13, 13, 11, 11, 52, 14, 6, 4, 6, 2, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 19, 19, 22, 16, 17, 16, 17, 16, 16, 16, 11, 16, 16, 17, 11, 11, 11, 16, 11, 17, 16, 16, 11, 11, 2, 6, 6, 7, 4, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 7, 16, 17, 13, 19, 16, 13, 17, 13, 94, 13, 14, 14, 13, 11, 16, 14, 26, 16, 11, 11, 15, 11, 14, 14, 13, 13, 12, 19, 13, 14, 13, 13, 3, 3, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [9, 7, 19, 18, 14, 14, 35, 16, 15, 14, 14, 18, 15, 15, 11, 14, 14, 17, 143, 11, 147, 14, 11, 21, 14, 14, 11, 11, 40, 15, 3, 4, 2, 6, 43]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 16, 16, 13, 13, 14, 13, 14, 13, 13, 11, 13, 13, 22, 11, 11, 11, 13, 11, 14, 13, 13, 11, 11, 14, 7, 14, 3, 2, 61, 20, 34]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 19, 136, 16, 13, 14, 13, 14, 14, 13, 13, 138, 15, 13, 15, 11, 13, 14, 14, 11, 11, 12, 13, 11, 14, 13, 17, 11, 11, 13, 14, 13, 6, 7, 6, 7, 10]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 19, 19, 16, 16, 17, 16, 17, 16, 16, 38, 17, 11, 21, 16, 17, 11, 12, 11, 17, 18, 17, 24, 17, 16, 11, 11, 16, 6, 18, 153, 6, 3, 6, 3, 182]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 6, 19, 19, 16, 16, 17, 16, 17, 16, 16, 11, 16, 22, 17, 11, 11, 11, 16, 11, 17, 16, 16, 11, 11, 16, 24, 21, 4, 8, 7, 7, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 3, 16, 16, 13, 13, 14, 13, 14, 13, 13, 11, 13, 13, 14, 11, 11, 11, 13, 11, 14, 13, 13, 11, 11, 15, 8, 5, 5, 17, 47, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 13, 15, 14, 17, 14, 19, 13, 13, 13, 13, 11, 13, 13, 16, 11, 17, 11, 13, 11, 14, 13, 13, 11, 11, 14, 6, 14, 8, 12, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 16, 79, 13, 13, 14, 13, 14, 13, 13, 14, 11, 13, 13, 14, 23, 11, 11, 13, 11, 14, 13, 13, 11, 23, 7, 6, 6, 6, 3, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [7, 6, 19, 19, 16, 16, 17, 17, 22, 16, 16, 16, 17, 11, 19, 17, 17, 11, 83, 11, 16, 11, 17, 16, 16, 16, 11, 12, 16, 18, 19, 16, 2, 6, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 16, 16, 13, 13, 14, 13, 14, 13, 14, 14, 302, 15, 13, 12, 14, 94, 14, 15, 11, 11, 13, 12, 14, 13, 13, 13, 11, 11, 13, 14, 6, 7, 6, 6, 10, 9]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 6, 16, 16, 14, 13, 14, 13, 14, 13, 13, 13, 11, 13, 13, 14, 11, 11, 11, 13, 11, 14, 13, 13, 11, 11, 7, 6, 6, 6, 7, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 3, 3, 3, 12, 13, 4, 8, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 5, 2, 2, 4, 6, 27, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 3, 3, 3, 11, 2, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784896876073
thermo_feasible = true
