WARNING: Dual bound -0.982065 is larger than the objective of the primal solution -0.982072. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECS88_1305
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECS88_1305
----------------------------------
number of metabolites : 1942
number of reactions : 2729
number of genes : 1305

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2729 flux variables and 5067 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 11, 11, 11, 118, 11, 11, 11, 18, 17, 20, 6, 14, 14, 15, 14, 15, 14, 14, 17, 14, 14, 15, 14, 15, 17, 18, 17, 14, 14, 3, 3, 2, 54, 17, 2, 2, 3, 2, 3, 2, 3, 6, 7, 2]
length(C_list) = 45
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 62, 4, 5, 3, 2, 5, 2, 3, 5, 3, 3, 3, 4, 4, 2, 3, 2, 4, 3]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 3, 3, 15, 4, 3, 4, 29, 6, 4, 3, 10, 5, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 5, 2, 4, 35, 3, 15, 9, 4, 8, 3, 4, 3, 4, 4, 4, 5, 3, 87, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 2, 5, 3, 7, 7, 4, 3, 11, 6, 2, 9, 3, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 2, 2, 3, 5, 4, 5, 2, 4, 4, 4, 3, 5, 4, 113]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 2, 29, 2, 2, 4, 2, 2, 5, 2, 10, 3, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 4, 13]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 113, 3, 3, 4, 4, 43, 7, 77, 115, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 7, 4, 4, 4, 22, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 72, 3, 6, 9, 31]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785358871982
thermo_feasible = true
