┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUTI89_1310
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUTI89_1310
----------------------------------
number of metabolites : 1940
number of reactions : 2725
number of genes : 1310

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2725 flux variables and 5059 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 14, 14, 13, 13, 16, 13, 13, 13, 14, 13, 14, 13, 13, 2, 3, 2, 2]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 8, 2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 15, 16, 14, 14, 14, 15, 14, 15, 14, 14, 2, 2, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 13, 6, 7, 16, 16, 17, 16, 17, 16, 16, 138, 13, 16, 15, 14, 13, 13, 13, 15, 13, 16, 13, 13, 14, 13, 15, 13, 13, 15, 14, 2, 2, 3, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [9, 5, 3, 4, 6, 2, 6, 16, 16, 17, 20, 17, 16, 16, 13, 13, 14, 13, 112, 13, 13, 150, 14, 14, 15, 13, 14, 14, 13, 15, 13, 13, 13, 19, 73, 2, 9, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [8, 2, 7, 3, 3, 3, 18, 90, 18, 17, 21, 17, 17, 24, 14, 15, 14, 15, 14, 14, 14, 233, 15, 14, 14, 15, 15, 15, 14, 20, 14, 14, 4, 6, 3, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 6, 5, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 16, 3, 3, 16, 16, 17, 16, 17, 17, 33, 13, 15, 17, 13, 14, 13, 13, 13, 14, 13, 13, 14, 13, 14, 14, 13, 13, 10, 12, 7, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 7, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13, 192, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 23, 16, 17, 16, 17, 17, 16, 13, 13, 15, 13, 14, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13, 15, 7, 6, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [10, 8, 2, 19, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 16, 17, 6, 4, 3, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 18, 16, 14, 14, 14, 14, 13, 14, 13, 14, 13, 13, 14, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 18, 16, 17, 16, 75, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 16, 13, 15, 13, 15, 6, 85, 6, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 6, 20, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 29, 16, 16, 26, 16, 16, 17, 16, 17, 16, 16, 19, 18, 6, 6, 2, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 20, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 16, 16, 17, 16, 17, 16, 22, 16, 6, 2, 70]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 7, 3, 7, 6, 16, 31, 17, 16, 17, 16, 16, 13, 16, 14, 13, 16, 13, 13, 13, 15, 14, 13, 13, 14, 16, 14, 13, 14, 14, 23, 13, 6, 6, 17, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 8, 3, 5, 19, 19, 149, 19, 23, 19, 19, 16, 16, 227, 16, 17, 16, 16, 25, 27, 16, 16, 17, 16, 17, 16, 16, 6, 13, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 16, 16, 20, 16, 17, 16, 16, 13, 13, 14, 108, 14, 15, 76, 88, 13, 13, 13, 13, 13, 14, 13, 14, 13, 13, 9, 6, 7, 6]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 2, 5, 10, 4, 6, 56, 4, 16, 4, 6, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 3, 126, 4, 4, 4, 2, 6, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 20
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419019499
thermo_feasible = true
