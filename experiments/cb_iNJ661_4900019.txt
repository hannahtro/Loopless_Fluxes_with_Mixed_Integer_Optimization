┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iNJ661
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iNJ661
----------------------------------
number of metabolites : 825
number of reactions : 1025
number of genes : 661

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 20
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 1025 flux variables and 1963 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3]
length(C_list) = 6
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 5, 11, 4, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 15, 3, 3, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 3, 3, 3, 4, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 6, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 6, 20, 6, 55]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 10, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 10, 9, 7, 8, 7, 9, 7, 9, 9, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [17, 4, 3, 13, 5, 9, 5, 4, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [14, 8, 10, 9, 5, 6, 4, 7, 4, 7, 5, 6, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [15, 5, 22, 2, 6, 7, 4, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [13, 9, 7, 4, 8, 104, 5, 5, 118, 168, 8, 3, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 8, 5, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [18, 5, 12, 9, 7, 2, 6, 4, 5, 8, 9, 9, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 7, 6, 11, 9, 7, 7, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [10, 7, 6, 9, 7, 6, 6, 6, 7, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [12, 3, 11, 7, 7, 7, 3, 4, 6, 5, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [13, 3, 60, 67, 7, 8, 5, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 23
termination = MathOptInterface.OPTIMAL
objective_value = 0.05254986959920201
thermo_feasible = true
