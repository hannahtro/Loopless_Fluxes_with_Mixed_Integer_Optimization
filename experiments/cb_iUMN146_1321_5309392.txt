┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iUMN146_1321
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iUMN146_1321
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1319

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 27
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 11, 11, 11, 11, 7, 16, 16, 17, 16, 17, 16, 16, 13, 16, 17, 13, 14, 13, 13, 14, 13, 14, 14, 13, 14, 13, 14, 13, 13, 13, 16]
length(C_list) = 27
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 8, 3, 9, 2, 2, 2, 4, 2]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 6, 5, 2, 3, 4, 4, 3, 4, 3, 3, 2, 4, 26, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 49, 4, 3, 3, 3, 8, 6, 4, 17, 4, 11, 2]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 6, 3, 5, 43, 4, 4, 12]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 8, 3, 15, 6, 5, 5, 4, 20]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 3, 4, 3, 4, 4, 5, 2, 3, 6, 4, 3, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 3, 4, 4, 2, 2, 3, 2, 2, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 5, 4, 4, 6, 4, 3, 5, 8, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 118, 5, 5, 6, 33]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 4, 9, 36, 5, 7, 7, 3, 8, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 8, 8, 8, 9, 6, 8, 11, 3, 4, 5, 9, 9, 9, 12, 14, 9, 7, 9, 10, 9]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 10, 26, 64, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 7, 7, 7, 59, 6, 14]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 9, 9, 9, 9, 14, 14, 4, 14, 7, 14, 14, 8, 11, 5, 11, 5, 11, 17, 6, 12, 16, 4, 4, 82, 11, 11, 11, 4, 12, 5, 11, 11, 9, 13]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785419021704
thermo_feasible = true
