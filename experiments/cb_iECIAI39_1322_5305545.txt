┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI39_1322
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI39_1322
----------------------------------
number of metabolites : 1953
number of reactions : 2721
number of genes : 1321

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5050 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 3, 2, 11, 11, 114, 11, 11, 11, 17, 11, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 11, 14, 2, 41, 2, 10, 9, 2, 11, 9, 13, 3, 2, 2, 14, 2, 3, 11, 3, 4, 2, 2, 2, 14, 3, 9, 6, 4, 4, 44, 3, 133, 39, 38, 17, 7, 39, 40, 40, 14, 7, 9]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 5, 5, 4, 294, 3, 4, 3, 3, 4, 146, 2, 4, 3, 3, 5, 4, 10, 5, 2, 4, 14, 18, 3]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 6, 4, 2, 4, 3, 3, 7, 4, 3, 3, 4, 5, 4, 3, 10, 8, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 2, 4, 2, 4, 3, 30, 20, 8, 5, 35, 5, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 4, 2, 2, 2, 8, 2, 5, 3, 7, 4, 3, 4, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 25, 7, 6, 6, 57, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 3, 5, 4, 242, 7, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 124, 6, 176, 8, 6, 10, 7, 7, 10, 19, 12, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 97, 4, 4, 12, 4, 5, 4, 9, 246, 4, 6, 5, 6, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 4, 5, 8, 6, 10, 122, 4, 14, 41, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [6, 4, 44, 5, 22, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 6, 4, 3, 4, 4, 5, 4, 59, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 8, 13, 5, 6, 5, 5, 5, 36, 8, 10, 3, 7, 8, 5, 4, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 16, 4, 4, 4, 4, 5, 4, 4, 5, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 9, 3, 5, 6, 7, 4, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9828410325408775
thermo_feasible = true
