┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iS_1188
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iS_1188
----------------------------------
number of metabolites : 1914
number of reactions : 2619
number of genes : 1188

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2619 flux variables and 4846 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 13, 2, 16, 17, 18, 16, 17, 16, 16, 13, 16, 14, 13, 24, 13, 13, 13, 14, 13, 14, 18, 14, 14, 15, 13, 14, 11, 14, 13, 11, 13, 13, 11, 11, 14, 13, 16, 14, 11]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 13, 14, 14, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 14, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 13, 15, 13, 14, 222, 11, 11, 28, 13, 11, 13, 11, 115, 11, 14, 13, 17, 15, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 2, 17, 16, 88, 16, 2, 24, 16, 13, 13, 14, 13, 14, 13, 13, 14, 63, 13, 13, 13, 14, 14, 16, 13, 14, 13, 12, 13, 11, 11, 11, 15, 2, 45, 14, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 5, 16, 18, 17, 22, 17, 16, 16, 13, 23, 14, 13, 14, 17, 13, 13, 14, 13, 13, 88, 13, 14, 13, 11, 11, 14, 22, 11, 13, 11, 11, 14, 13, 15, 13, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 2, 16, 16, 18, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 14, 15, 13, 13, 13, 13, 15, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 13, 14, 13, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 15, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 13, 14, 61, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 13, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 14, 13, 13, 13, 13, 14, 16, 11, 11, 14, 13, 14, 13, 11, 11, 11, 13, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 16, 17, 17, 16, 17, 16, 16, 13, 13, 16, 13, 15, 13, 13, 15, 13, 14, 14, 13, 13, 13, 69, 13, 14, 12, 14, 13, 11, 13, 11, 11, 11, 13, 13, 14, 13, 11]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4, 17, 16, 18, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 14, 13, 13, 13, 14, 13, 11, 11, 15, 13, 11, 13, 11, 11, 11, 13, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 16, 33, 17, 16, 17, 35, 16, 13, 13, 14, 13, 14, 13, 15, 13, 14, 14, 14, 13, 13, 14, 14, 11, 11, 14, 13, 11, 13, 11, 11, 11, 14, 13, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 16, 14, 15, 14, 15, 14, 14, 14, 15, 14, 11, 11, 15, 16, 11, 15, 11, 11, 11, 14, 15, 14, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 2, 16, 17, 17, 17, 18, 16, 32, 13, 13, 14, 13, 15, 13, 13, 13, 13, 13, 14, 13, 13, 13, 13, 14, 15, 11, 17, 14, 13, 11, 13, 11, 11, 11, 13, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 8, 4, 16, 17, 17, 4, 17, 16, 9, 9, 12, 10, 15, 9, 9, 10, 10, 9, 10, 33, 12, 12, 14, 9, 12, 9, 12, 14, 12, 4, 10, 10, 12]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 14, 13, 13, 18, 13, 15, 13, 14, 135, 16, 13, 11, 11, 11, 14, 14, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 16, 13, 13, 13, 15, 13, 13, 13, 14, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 80, 14, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 16, 16, 17, 16, 19, 16, 21, 13, 13, 14, 27, 14, 13, 13, 13, 23, 13, 17, 13, 14, 13, 14, 13, 11, 11, 14, 13, 11, 13, 11, 15, 11, 14, 13, 14, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 16, 33, 16, 18, 18, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 13, 13, 13, 13, 14, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 13, 13, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [2, 16, 16, 17, 16, 17, 17, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 13, 13, 14, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 13, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 19, 16, 17, 16, 18, 17, 16, 13, 13, 14, 13, 14, 15, 13, 13, 15, 13, 22, 13, 14, 13, 13, 14, 13, 12, 11, 14, 13, 11, 13, 11, 11, 11, 15, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 15, 14, 14, 15, 14, 12, 12, 15, 14, 12, 14, 12, 12, 12, 14, 14, 12]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 2, 6, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 15, 14, 15, 14, 14, 14, 15, 17, 11, 11, 15, 14, 11, 14, 11, 11, 11, 14, 15, 14, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 7, 16, 16, 18, 16, 17, 16, 16, 14, 13, 14, 13, 14, 13, 13, 13, 16, 53, 13, 15, 16, 13, 123, 13, 36, 13, 12, 15, 14, 13, 22, 13, 12, 11, 11, 13, 13, 14, 14, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 2, 16, 79, 20, 17, 17, 16, 16, 13, 13, 14, 14, 14, 13, 13, 42, 13, 14, 13, 13, 13, 14, 13, 11, 11, 14, 13, 11, 16, 11, 11, 11, 14, 13, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 16, 16, 17, 16, 17, 16, 16, 40, 13, 44, 13, 135, 167, 17, 13, 14, 14, 13, 13, 13, 13, 14, 13, 11, 11, 14, 13, 11, 13, 11, 11, 11, 13, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 8, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 5, 2, 3, 4, 4, 4, 6, 2, 5, 4, 5, 3, 5, 3, 4, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 5, 4, 5, 5, 4, 52, 4, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 4, 4, 5, 5, 4, 5, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 13, 8, 4, 3, 8, 41]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 30
termination = MathOptInterface.OPTIMAL
objective_value = 0.8570768746622294
thermo_feasible = true
