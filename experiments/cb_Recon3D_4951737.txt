ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
Recon3D
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

Recon3D
----------------------------------
number of metabolites : 5835
number of reactions : 10600
number of genes : 2248

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 212
max_cuts = 53
(indicator, big_m) = (false, true)
BIG M ADDED
model with 10600 flux variables and 19394 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 4, 4, 6, 4, 6, 6, 8, 10, 5, 9, 3, 266, 4, 4, 6, 4, 335, 4, 4, 4, 8, 3, 6, 5, 4, 30, 4, 4, 7, 4, 4, 4, 4, 5, 3, 5, 3, 4, 5, 6, 6, 4, 6, 5, 10, 6, 3, 8, 3, 5, 3, 4, 4, 6, 4, 7, 12, 4, 33, 4, 6, 689, 3, 165, 4, 4, 4, 3, 8, 4, 5, 4, 4, 7, 3, 20, 4, 4, 12, 456, 4, 4, 7, 4, 4, 4, 6, 6, 4, 6, 3, 3, 4, 4, 4, 4, 6, 381, 4, 3, 4, 5, 4, 4, 4, 4, 4, 8, 5, 4, 4, 244, 4, 2, 99, 4, 610, 4, 6, 4, 5, 4, 6, 4, 4, 5, 4, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 6, 4, 6, 4, 3, 4]
length(C_list) = 53
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 4, 4, 6, 6, 3, 4, 3, 4, 6, 3, 8, 4, 7, 4, 4, 4, 4, 6, 10, 4, 4, 4, 4, 3, 4, 8, 5, 3, 8, 5, 8, 4, 4, 4, 4, 3, 7, 12, 3, 5, 6, 6, 4, 6, 8, 6, 4, 10, 6, 4, 4, 6, 4, 607, 808, 628, 6, 11, 4, 230, 3, 5, 3, 4, 5, 4, 4, 4, 4, 4, 4, 372, 3, 6, 107, 13, 7, 6, 459, 4, 6, 9, 239, 6, 7, 4, 4, 10, 6, 4, 8, 8, 4, 4, 7, 6, 10, 588, 590, 4, 4, 5, 3, 4, 4, 4, 4, 4, 245, 4, 6, 4, 4, 9, 471, 3, 3, 10, 4, 4, 4, 4, 5, 4, 4, 5, 6, 4, 6, 8, 3, 4, 4, 4, 4, 11, 4, 5, 5, 6, 3, 6, 3]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 8, 4, 3, 3, 6, 5, 4, 4, 6, 9, 5, 3, 4, 3, 5, 3, 6, 4, 3, 4, 4, 5, 7, 4, 4, 4, 6, 4, 6, 4, 4, 4, 6, 3, 3, 7, 6, 3, 4, 5, 3, 3, 3, 4, 4, 4, 5, 22, 6, 5, 4, 4, 142, 4, 4, 10, 3, 3, 6, 4, 4, 7, 7, 7, 3, 11, 4, 4, 4, 4, 7, 543, 3, 197, 6, 3, 5, 4, 242, 8, 4, 5, 9, 8, 4, 10, 6, 4, 7, 4, 4, 4, 4, 13, 134, 6, 4, 7, 10, 439, 6, 4, 3, 6, 4, 4, 178, 550, 564, 3, 6, 4, 4, 8, 6, 4, 6, 5, 4, 7, 8, 3, 9, 12, 4, 3, 4, 3, 8, 8, 494, 5, 4, 4, 4, 6, 4, 4, 5, 3, 4, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 4, 4, 8, 8, 4, 4, 7, 3, 6, 4, 4, 4, 7, 4, 4, 4, 4, 6, 4, 4, 4, 4, 6, 4, 5, 4, 4, 4, 4, 4, 8, 4, 4, 8, 8, 6, 4, 3, 6, 7, 9, 4, 8, 8, 3, 3, 6, 8, 4, 41, 5, 7, 4, 4, 4, 4, 4, 3, 5, 4, 4, 118, 4, 351, 5, 4, 10, 4, 6, 4, 4, 5, 78, 8, 4, 8, 4, 20, 13, 5, 13, 9, 7, 3, 7, 6, 227, 6, 4, 372, 4, 6, 3, 3, 6, 5, 5, 661, 3, 3, 434, 4, 3, 12, 3, 5, 8, 5, 4, 4, 32, 4, 3, 8, 7, 4, 4, 4, 8, 4, 6, 6, 7, 4, 4, 4, 4, 12, 4, 4, 4, 4, 4, 234, 6, 6, 4, 4, 5, 4, 4, 5, 4, 7, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 4, 6, 8, 5, 4, 8, 4, 8, 4, 4, 12, 6, 6, 6, 4, 8, 5, 6, 3, 15, 3, 6, 4, 11, 11, 4, 4, 4, 4, 3, 11, 10, 4, 4, 4, 4, 10, 4, 72, 4, 13, 10, 4, 4, 5, 6, 4, 4, 4, 6, 12, 9, 4, 4, 6, 12, 6, 5, 4, 5, 4, 8, 3, 22, 114, 6, 4, 4, 4, 4, 3, 7, 4, 8, 7, 4, 563, 8, 4, 4, 4, 4, 8, 6, 13, 7, 4, 16, 6, 4, 3, 4, 4, 482, 7, 3, 6, 11, 4, 6, 3, 4, 13, 166, 75, 5, 496, 4, 4, 4, 7, 8, 6, 9, 4, 6, 7, 3, 3, 4, 5, 4, 4, 9, 4, 5, 10, 4, 3, 6, 6, 8, 5, 5, 7, 4, 5, 4, 348, 8, 46]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 5, 4, 4, 11, 6, 4, 4, 6, 5, 4, 4, 4, 3, 3, 6, 4, 9, 4, 4, 4, 7, 4, 6, 8, 4, 4, 5, 6, 6, 6, 4, 7, 38, 4, 4, 5, 7, 4, 6, 10, 6, 6, 4, 7, 4, 3, 5, 6, 5, 4, 6, 4, 91, 13, 6, 4, 4, 5, 8, 4, 5, 5, 6, 6, 4, 6, 8, 6, 6, 4, 7, 6, 3, 39, 528, 8, 4, 4, 4, 4, 12, 9, 8, 6, 10, 10, 4, 21, 4, 43, 5, 8, 4, 399, 3, 290, 4, 8, 6, 6, 485, 43, 5, 8, 8, 5, 3, 6, 4, 8, 13, 8, 5, 9, 6, 3, 12, 7, 8, 5, 13, 6, 4, 12, 9, 3, 6, 4, 8, 6, 4, 341, 4, 4, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 6, 10, 6, 4, 4, 6, 6, 7, 12, 8, 9, 4, 158, 3, 4, 3, 4, 4, 6, 4, 6, 4, 6, 8, 4, 4, 8, 4, 6, 4, 8, 6, 4, 4, 4, 12, 4, 4, 6, 14, 4, 4, 4, 4, 8, 4, 4, 9, 4, 4, 4, 10, 4, 4, 4, 3, 8, 7, 4, 4, 4, 4, 3, 4, 4, 131, 6, 3, 4, 5, 4, 6, 6, 258, 5, 3, 5, 3, 6, 4, 6, 4, 8, 23, 388, 6, 8, 4, 6, 6, 4, 4, 5, 5, 29, 11, 337, 4, 3, 6, 4, 7, 9, 5, 4, 152, 6, 4, 6, 4, 4, 7, 6, 6, 5, 4, 4, 6, 6, 7, 4, 4, 6, 6, 6, 4, 8, 6, 3, 4, 8, 4, 4, 6, 8, 13, 7, 10, 557]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 7, 16, 4, 5, 9, 7, 6, 6, 6, 4, 8, 6, 4, 5, 4, 15, 6, 4, 4, 4, 8, 9, 4, 6, 7, 4, 4, 7, 4, 4, 8, 4, 4, 43, 3, 4, 4, 4, 6, 5, 4, 5, 6, 3, 4, 4, 7, 3, 4, 3, 13, 3, 3, 4, 46, 8, 3, 17, 8, 6, 4, 6, 6, 3, 8, 114, 13, 443, 7, 3, 3, 4, 9, 87, 6, 6, 4, 8, 6, 4, 4, 6, 8, 4, 18, 4, 88, 4, 15, 4, 6, 171, 11, 43, 52, 6, 5, 5, 5, 8, 6, 4, 4, 8, 7, 3, 85, 13, 7, 4, 4, 4, 6, 6, 6, 7, 6, 8, 6, 7, 4, 6, 4, 6, 4, 8, 6, 4, 5, 6, 4, 10, 4, 5, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 3, 12, 42, 4, 6, 4, 3, 4, 4, 4, 4, 5, 3, 19, 8, 12, 6, 7, 8, 4, 4, 51, 10, 5, 5, 4, 4, 4, 6, 6, 9, 4, 19, 9, 15, 8, 4, 7, 8, 6, 4, 4, 4, 4, 6, 200, 335, 10, 7, 4, 4, 36, 4, 3, 408, 4, 5, 9, 4, 4, 3, 102, 6, 4, 5, 8, 422, 196, 4, 199, 10, 3, 193, 86, 23, 6, 5, 4, 6, 9, 4, 29, 5, 23, 10, 22, 4, 5, 4, 4, 6, 10, 265, 5, 4, 6, 5, 5, 175, 4, 6, 3, 6, 100, 20, 4, 14, 7, 5, 4, 20, 6, 4, 4, 6, 16, 4, 3, 4, 13, 6, 4, 7, 5, 6, 22, 4, 7, 3, 4, 4, 4, 3, 6, 8, 19]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 8, 6, 4, 54, 13, 6, 5, 5, 10, 6, 5, 5, 4, 4, 4, 4, 11, 16, 4, 6, 3, 6, 16, 10, 34, 52, 4, 51, 9, 4, 4, 16, 6, 4, 10, 9, 4, 5, 6, 4, 4, 5, 54, 13, 4, 4, 5, 5, 4, 8, 8, 15, 49, 4, 4, 4, 7, 4, 8, 437, 6, 3, 5, 12, 491, 8, 4, 4, 8, 4, 3, 10, 10, 625, 80, 15, 7, 458, 3, 6, 7, 4, 4, 4, 4, 5, 6, 3, 6, 140, 6, 21, 4, 4, 6, 4, 16, 6, 4, 3, 6, 5, 11, 7, 4, 6, 6, 9, 3, 12, 4, 428, 6, 6, 7, 4, 604, 9, 4, 26, 4, 12, 4, 6, 4, 6, 4, 4, 4, 6, 8, 11, 4, 7, 7, 3, 4, 10, 5, 6, 4, 9, 10, 276, 5, 7]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 8, 5, 274, 75, 4, 4, 6, 5, 4, 6, 7, 428, 4, 7, 4, 51, 4, 4, 4, 4, 4, 51, 26, 8, 72, 6, 74, 8, 4, 4, 5, 5, 3, 10, 4, 6, 3, 4, 64, 8, 4, 8, 4, 9, 24, 10, 4, 493, 8, 15, 10, 4, 495, 4, 4, 3, 22, 17, 5, 8, 5, 8, 33, 6, 7, 4, 4, 59, 4, 6, 5, 4, 6, 7, 4, 3, 9, 8, 4, 7, 3, 8, 4, 6, 9, 3, 54, 68, 4, 67, 35, 13, 4, 6, 11, 3, 4, 3, 23, 23, 6, 5, 11, 93, 78, 24, 6, 66, 69, 7, 70, 4, 9, 5, 18, 4, 3, 6, 4, 4, 3, 40, 7, 4, 26, 4, 6, 6, 6, 67, 26, 7, 6, 10, 4, 30, 10, 79, 4, 79]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 37, 5, 12, 41, 5, 3, 40, 6, 264, 4, 5, 3, 3, 4, 8, 3, 4, 10, 8, 8, 5, 9, 6, 8, 42, 8, 49, 10, 8, 5, 3, 228, 7, 4, 4, 5, 4, 72, 20, 4, 8, 5, 5, 7, 6, 11, 6, 5, 4, 4, 15, 4, 4, 6, 329, 9, 3, 4, 7, 5, 6, 9, 9, 3, 4, 6, 4, 21, 6, 4, 9, 3, 7, 4, 4, 4, 3, 10, 8, 77, 3, 4, 6, 4, 10, 6, 6, 4, 4, 23, 10, 46, 4, 13, 10, 4, 4, 20, 189, 11, 4, 9, 3, 5, 3, 4, 5, 3, 4, 11, 3, 7, 5, 11, 4, 5, 7, 6, 3, 4, 4, 6, 4, 10, 11, 3, 4, 384, 8, 8, 45, 12, 4, 4, 242, 32, 31, 4, 6, 4, 5]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 8, 4, 458, 11, 11, 3, 4, 3, 4, 11, 8, 4, 4, 6, 6, 20, 20, 4, 8, 5, 6, 389, 4, 3, 8, 29, 4, 45, 8, 3, 4, 23, 3, 4, 4, 4, 5, 3, 22, 31, 6, 4, 4, 4, 8, 5, 3, 4, 3, 6, 13, 5, 4, 6, 5, 6, 3, 4, 3, 4, 7, 7, 4, 4, 13, 8, 4, 3, 8, 4, 4, 3, 7, 5, 3, 11, 4, 7, 4, 3, 10, 3, 7, 3, 4, 4, 4, 4, 8, 6, 3, 4, 3, 3, 17, 10, 29, 7, 14, 14, 12, 4, 11, 13, 3, 4, 4, 5, 4, 11, 4, 4, 8, 7, 5, 29, 8, 253, 29, 14, 20, 4, 22, 55, 8, 5, 4, 8, 4, 5, 3, 260, 3, 4, 4, 77, 28, 5, 4, 4, 10, 64, 65, 5, 6, 6, 6, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 6, 271, 6, 9, 12, 28, 8, 4, 4, 4, 4, 14, 4, 14, 11, 4, 4, 4, 11, 4, 5, 9, 4, 4, 18, 4, 8, 35, 4, 40, 9, 6, 4, 10, 4, 12, 4, 6, 4, 4, 33, 53, 4, 10, 6, 4, 3, 395, 4, 4, 7, 4, 12, 4, 4, 11, 4, 5, 7, 4, 19, 3, 4, 5, 8, 4, 4, 95, 3, 4, 5, 4, 4, 6, 4, 342, 4, 8, 51, 5, 6, 3, 629, 6, 5, 4, 4, 5, 6, 6, 4, 4, 4, 6, 4, 30, 6, 4, 119, 6, 4, 6, 5, 3, 4, 4, 4, 4, 5, 3, 4, 7, 4, 5, 14, 6, 7, 11, 4, 4, 16, 4, 47, 4, 5, 4, 7, 21, 4, 104, 3, 4, 5, 5, 6, 34, 5, 7, 8, 5, 47, 47, 8, 4, 714, 4, 8]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 8, 4, 393, 5, 6, 7, 8, 4, 7, 6, 8, 4, 3, 4, 3, 4, 8, 3, 7, 4, 5, 4, 6, 4, 8, 6, 8, 6, 10, 6, 10, 3, 4, 6, 4, 4, 4, 3, 9, 6, 6, 3, 22, 8, 5, 10, 6, 4, 10, 6, 16, 4, 4, 4, 6, 4, 6, 6, 10, 4, 4, 4, 4, 4, 9, 8, 12, 7, 8, 4, 4, 5, 5, 4, 4, 6, 7, 6, 16, 5, 239, 10, 8, 5, 5, 8, 10, 86, 6, 4, 4, 7, 7, 10, 6, 7, 14, 5, 102, 7, 194, 5, 4, 8, 4, 4, 14, 5, 161, 10, 5, 5, 28, 6, 4, 89, 6, 4, 6, 3, 6, 7, 6, 4, 9, 7, 4, 5, 5, 4, 6, 9, 3, 66, 4, 5, 8, 10, 13, 4, 5, 9, 5, 5, 7, 4, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 7, 12, 39, 12, 4, 189, 5, 315, 4, 562, 8, 4, 6, 4, 4, 7, 7, 4, 8, 4, 4, 212, 41, 7, 48, 10, 6, 4, 5, 6, 57, 6, 4, 35, 6, 24, 5, 6, 4, 4, 6, 4, 6, 4, 4, 171, 4, 5, 4, 4, 5, 6, 4, 4, 7, 6, 7, 7, 3, 6, 8, 10, 4, 65, 9, 7, 9, 6, 10, 3, 392, 12, 4, 3, 526, 4, 5, 11, 8, 3, 7, 4, 4, 6, 6, 6, 22, 32, 17, 4, 35, 8, 13, 5, 6, 4, 7, 8, 5, 4, 4, 7, 26, 4, 11, 4, 4, 7, 5, 10, 503, 10, 331, 4, 4, 8, 22, 6, 4, 5, 3, 87, 10, 5, 6, 6, 4, 4, 77, 9, 5, 7, 9, 12, 370, 8, 6, 33, 3]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [11, 4, 8, 9, 4, 3, 8, 6, 5, 3, 19, 5, 4, 4, 4, 7, 8, 4, 4, 4, 3, 4, 7, 4, 8, 8, 11, 4, 4, 9, 9, 6, 4, 5, 10, 5, 4, 4, 6, 9, 8, 54, 121, 173, 4, 6, 13, 8, 10, 5, 4, 4, 4, 6, 4, 4, 4, 4, 6, 4, 6, 9, 6, 8, 4, 6, 6, 23, 9, 10, 4, 6, 4, 4, 4, 5, 4, 180, 303, 5, 8, 8, 4, 4, 6, 8, 7, 6, 7, 4, 21, 10, 13, 6, 4, 8, 9, 4, 3, 4, 3, 4, 6, 74, 64, 418, 6, 9, 4, 3, 7, 4, 176, 7, 15, 6, 4, 4, 17, 145, 4, 4, 6, 13, 4, 7, 5, 11, 8, 42, 6, 246, 7, 7, 4, 6, 8, 4, 4, 8, 4, 6, 4]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 7, 4, 11, 4, 11, 9, 6, 4, 3, 4, 13, 4, 13, 3, 327, 4, 4, 6, 10, 4, 6, 8, 28, 10, 6, 8, 55, 4, 30, 12, 7, 4, 4, 7, 5, 6, 8, 7, 13, 4, 19, 5, 3, 10, 4, 6, 4, 4, 94, 6, 18, 3, 8, 15, 4, 4, 9, 12, 7, 4, 6, 5, 4, 6, 7, 10, 6, 634, 8, 8, 8, 4, 4, 9, 5, 9, 10, 46, 99, 193, 4, 4, 54, 4, 3, 8, 149, 6, 4, 4, 14, 6, 4, 8, 27, 6, 3, 22, 6, 15, 9, 6, 6, 6, 143, 510, 3, 4, 4, 6, 104, 4, 4, 25, 138, 7, 6, 12, 9, 8, 9, 6, 7, 4, 4, 214, 82, 35, 5, 4, 32, 5, 7, 7, 6, 6, 8, 103, 22, 6, 4, 4, 5, 7, 8, 4, 3, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [12, 6, 8, 7, 4, 12, 4, 4, 6, 6, 4, 13, 5, 18, 188, 6, 4, 7, 13, 4, 4, 105, 31, 13, 4, 8, 24, 3, 30, 4, 9, 4, 6, 5, 4, 3, 8, 29, 4, 4, 4, 4, 484, 90, 6, 4, 6, 5, 18, 4, 3, 5, 7, 4, 5, 4, 3, 5, 3, 4, 9, 96, 8, 4, 4, 6, 6, 5, 4, 3, 6, 6, 5, 4, 5, 6, 17, 3, 4, 6, 22, 8, 10, 4, 6, 5, 4, 6, 8, 6, 3, 25, 7, 10, 32, 4, 12, 56, 14, 4, 35, 8, 4, 4, 6, 12, 7, 5, 7, 4, 4, 4, 4, 34, 8, 3, 13, 8, 4, 7, 4, 4, 34, 8, 4, 9, 4, 4, 4, 4, 5, 6, 6, 32, 8, 6, 4, 263, 11, 5, 4, 81]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 12, 4, 4, 4, 4, 4, 5, 4, 6, 4, 4, 12, 3, 4, 6, 4, 4, 4, 4, 8, 4, 4, 6, 4, 7, 6, 5, 5, 7, 4, 4, 8, 4, 4, 5, 293, 6, 6, 10, 4, 6, 7, 6, 4, 12, 3, 4, 5, 4, 7, 5, 4, 6, 4, 7, 6, 8, 8, 4, 18, 4, 339, 11, 4, 241, 7, 11, 4, 152, 4, 74, 17, 5, 6, 4, 7, 174, 8, 7, 4, 6, 8, 16, 6, 8, 33, 22, 6, 4, 6, 4, 3, 8, 4, 4, 11, 6, 43, 7, 4, 4, 4, 7, 4, 7, 8, 8, 8, 4, 7, 16, 3, 9, 6, 4, 4, 4, 3, 4, 8, 4, 6, 6, 8, 6, 7, 4, 10, 8, 4, 4, 8, 8, 6, 6]
length(C_list) = 53
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
termination = MathOptInterface.INFEASIBLE
objective_value = 755.0032155506631
