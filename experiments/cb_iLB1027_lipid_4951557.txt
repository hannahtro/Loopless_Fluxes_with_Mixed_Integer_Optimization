┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
max_cuts = 13
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 9, 4, 6, 3, 314, 40, 4, 10, 35, 4, 3, 8, 4, 4, 21, 9, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 226, 4, 117, 11, 249, 7, 3, 274, 6, 276, 65, 11, 7, 4, 119, 250, 97, 8, 115]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 606, 4, 4, 55, 4, 9, 351, 3, 42, 4, 4, 4, 9, 3, 3, 3, 4, 20, 14, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 18, 4, 3, 62, 3, 7, 3, 4, 64, 8, 4, 7, 4, 40, 4, 6, 36, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 4, 4, 9, 3, 4, 5, 3, 5, 4, 9, 4, 4, 4, 25, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [17, 4, 3, 19, 3, 4, 4, 99, 5, 4, 4, 7, 224, 4, 4, 3, 4, 4, 4, 4, 21, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 4, 4, 4, 6, 53, 7, 3, 4, 7, 4, 4, 4, 36, 4, 4, 4, 11, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 12, 4, 4, 9, 87, 47, 35, 75, 5, 5, 3, 4, 6, 40, 21, 4, 4, 31, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 4, 4, 7, 10, 4, 13, 34, 4, 4, 3, 9, 4, 4, 4, 3, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [8, 3, 7, 18, 4, 118, 10, 4, 4, 3, 4, 6, 4, 4, 4, 4, 4, 4, 4, 51, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 3, 58, 4, 4, 467, 4, 4, 4, 6, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 4, 22, 17, 4, 5, 70, 3, 7, 5, 13, 4, 5, 7, 4, 4, 5, 67, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 4, 4, 4, 4, 4, 5, 4, 3, 22, 4, 4, 4, 5, 4, 5, 4, 4, 29, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 32, 4, 4, 56, 3, 5, 103, 4, 41, 4, 4, 4, 6, 15, 4, 13, 34, 65, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 3, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 5, 4, 7, 200, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 4, 4, 4, 30, 9, 5, 5, 4, 24, 4, 4, 101, 5, 4, 4, 4, 12, 20, 4, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 15, 4, 3, 3, 3, 3, 9, 69, 4, 18, 4, 3, 4, 9, 4, 3, 8, 32, 98, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 12, 3, 41, 3, 4, 6, 3, 5, 26, 4, 40, 4, 4, 6, 15, 4, 7, 20, 20, 33]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 19, 3, 72, 3, 6, 6, 33, 4, 34, 4, 70, 4, 5, 5, 14, 4, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 5, 4, 4, 30, 3, 141, 26, 4, 25, 172, 7, 8, 5, 3, 4, 8, 4, 21, 7, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [5, 13, 11, 19, 10, 6, 67, 4, 352, 329, 8, 5, 3, 10, 4, 5, 4, 11, 4, 11, 35, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 32, 4, 4, 4, 3, 477, 26, 12, 4, 4, 6, 3, 5, 3, 9, 42, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 4, 3, 4, 32, 6, 5, 30, 7, 3, 4, 5, 4, 5, 6, 3, 4, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 19, 4, 4, 45, 4, 7, 23, 7, 76, 4, 7, 4, 5, 4, 4, 4, 5, 33, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [9, 12, 3, 4, 4, 4, 4, 4, 457, 3, 4, 4, 9, 4, 4, 113, 3, 4, 4, 4, 6, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 19, 4, 3, 31, 4, 5, 4, 4, 6, 4, 3, 4, 5, 4, 3, 22, 3, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 39, 4, 4, 30, 4, 6, 26, 4, 54, 4, 4, 4, 5, 4, 4, 5, 4, 22, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 13, 4, 3, 3, 3, 8, 4, 5, 23, 5, 28, 8, 4, 9, 5, 3, 9, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 45, 4, 4, 33, 5, 12, 113, 4, 33, 4, 4, 30, 7, 4, 11, 3, 3, 20, 26, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 19, 4, 3, 39, 4, 5, 16, 14, 4, 3, 5, 6, 38, 3, 6, 4, 4, 29, 5, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [7, 13, 28, 42, 4, 3, 35, 4, 243, 31, 3, 32, 4, 3, 3, 9, 4, 4, 3, 5, 26, 127, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 13, 5, 10, 3, 5, 31, 3, 5, 27, 14, 4, 4, 9, 4, 5, 3, 4, 4, 4, 13, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [9, 13, 3, 38, 8, 3, 3, 8, 6, 36, 19, 3, 13, 3, 11, 6, 14, 3, 7, 27, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [3, 3, 8, 19, 11, 3, 11, 9, 24, 4, 8, 31, 4, 4, 4, 50, 9, 4, 11, 22, 3, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 18, 3, 3, 4, 3, 5, 5, 13, 7, 3, 7, 5, 5, 3, 3, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 15, 17, 24, 4, 6, 38, 34, 5, 5, 3, 7, 10, 11, 5, 10, 4, 11, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 7, 3, 19, 5, 7, 38, 4, 6, 438, 4, 34, 10, 7, 4, 6, 3, 4, 4, 3, 28, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 18, 4, 5, 36, 4, 5, 19, 3, 18, 4, 3, 9, 178, 284, 8, 9, 9, 28, 7, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 33, 4, 3, 4, 6, 37, 4, 4, 3, 4, 4, 5, 4, 4, 5, 3, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 18, 3, 3, 3, 5, 27, 4, 4, 5, 3, 3, 4, 120, 3, 17, 91, 21, 26, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 44, 3, 5, 46, 3, 5, 43, 5, 39, 10, 4, 602, 5, 9, 3, 5, 9, 26, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 13, 3, 42, 4, 11, 3, 4, 5, 67, 11, 44, 4, 3, 3, 5, 3, 3, 4, 99, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 41, 7, 3, 5, 3, 5, 75, 3, 19, 3, 3, 8, 5, 3, 23, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 18, 3, 3, 4, 4, 5, 26, 3, 27, 4, 4, 46, 5, 4, 3, 23, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 4, 3, 3, 3, 6, 4, 14, 7, 4, 4, 3, 5, 3, 3, 6, 4, 23, 7, 210]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 10, 5, 4, 3, 5, 3, 3, 3, 4, 4, 5, 4, 4, 4, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 23, 4, 3, 29, 7, 5, 18, 3, 8, 4, 3, 9, 5, 10, 5, 3, 4, 43, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [15, 3, 11, 5, 3, 84, 11, 4, 152, 5, 4, 17, 3, 4, 9, 6, 14, 5, 8, 5, 9, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 39, 5, 11, 52, 3, 5, 35, 5, 4, 3, 4, 6, 6, 3, 3, 3, 3, 21, 4, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 18, 4, 4, 40, 8, 626, 28, 13, 47, 3, 9, 4, 7, 4, 3, 8, 4, 24, 4, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 26, 3, 5, 4, 3, 14, 4, 4, 4, 5, 4, 4, 5, 4, 6, 6, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 36, 121, 4, 3, 4, 238, 23, 3, 56, 4, 3, 10, 5, 4, 4, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 18, 4, 3, 3, 4, 5, 33, 4, 225, 4, 4, 6, 5, 39, 4, 4, 43, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 3, 3, 8, 4, 6, 4, 11, 38, 3, 4, 9, 5, 41, 3, 6, 8, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 3, 139, 9, 30, 4, 5, 4, 4, 4, 8, 4, 5, 5, 4, 9, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 5, 4, 9, 3, 4, 324, 584, 12, 15, 9, 3, 4, 102, 5, 3, 3, 4, 28, 6, 17]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 34, 3, 3, 41, 3, 6, 26, 10, 27, 4, 10, 4, 5, 4, 4, 4, 21, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [37, 3, 4, 4, 5, 4, 8, 3, 287, 18, 4, 4, 3, 4, 4, 5, 4, 4, 4, 6, 35, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [13, 6, 3, 4, 10, 3, 3, 13, 4, 4, 4, 3, 3, 5, 28, 3, 10, 3, 3, 26, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 5, 11, 32, 3, 6, 28, 3, 358, 3, 95, 18, 5, 9, 3, 10, 28, 3, 3, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [4, 77, 3, 35, 4, 6, 40, 4, 5, 46, 3, 26, 3, 4, 3, 6, 3, 191, 73, 3, 266, 34, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [6, 12, 8, 3, 3, 3, 4, 5, 6, 23, 3, 72, 8, 3, 5, 4, 3, 3, 4, 21, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 36, 8, 4, 4, 3, 5, 31, 4, 4, 5, 8, 256, 5, 4, 3, 43, 4, 3, 14, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 18, 4, 10, 35, 4, 9, 4, 4, 8, 3, 3, 52, 8, 4, 4, 4, 4, 28, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 65, 10, 8, 57, 13, 160, 56, 3, 69, 3, 7, 8, 5, 3, 4, 9, 6, 67, 3, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 29, 4, 4, 27, 4, 5, 23, 4, 4, 6, 4, 4, 5, 13, 3, 4, 5, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [3, 14, 10, 41, 11, 3, 24, 4, 6, 273, 4, 20, 3, 3, 9, 5, 11, 3, 19, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 12, 4, 3, 4, 12, 3, 4, 83, 4, 4, 3, 4, 4, 13, 9, 13, 5, 3, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 19, 9, 9, 3, 8, 6, 4, 4, 4, 195, 4, 9, 5, 4, 3, 4, 9, 8, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 8, 7, 8, 3, 8, 6, 4, 27, 3, 9, 4, 6, 4, 19, 6, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 6, 16, 4, 6, 11, 4, 4, 4, 3, 6, 6, 38, 8, 4, 5, 17, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [11, 7, 3, 40, 4, 4, 52, 3, 5, 31, 3, 3, 4, 4, 44, 4, 3, 5, 14, 3, 6, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 20, 3, 13, 3, 4, 9, 4, 5, 28, 11, 3, 3, 5, 3, 6, 63, 4, 13, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 13, 3, 4, 9, 4, 31, 3, 5, 29, 3, 3, 4, 4, 5, 4, 7, 3, 20, 24, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 13, 6, 18, 8, 3, 31, 306, 15, 27, 27, 19, 3, 70, 17, 9, 3, 3, 3, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 30, 3, 4, 45, 4, 6, 38, 3, 37, 4, 3, 3, 6, 5, 8, 3, 3, 31, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 38, 3, 3, 30, 4, 7, 26, 3, 26, 3, 4, 4, 9, 6, 5, 4, 3, 22, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 40, 4, 18, 34, 4, 6, 37, 4, 29, 4, 4, 42, 5, 3, 4, 21, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 19, 5, 3, 34, 5, 18, 32, 7, 8, 4, 3, 3, 5, 3, 4, 3, 8, 8, 3, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 6, 11, 16, 5, 10, 3, 3, 88, 12, 6, 4, 4, 8, 6, 4, 4, 4, 6, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 3, 3, 3, 3, 5, 187, 21, 3, 4, 4, 3, 3, 502, 3, 4, 3, 3, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 18, 3, 8, 30, 153, 6, 26, 3, 27, 4, 3, 54, 5, 3, 4, 4, 11, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 43, 3, 3, 4, 7, 35, 3, 4, 4, 4, 3, 7, 4, 4, 4, 4, 20, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 3, 6, 4, 6, 4, 3, 3, 3, 3, 4, 5, 4, 3, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [19, 6, 3, 3, 8, 6, 4, 4, 6, 4, 3, 5, 4, 3, 7, 6, 4, 4, 3, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 18, 3, 6, 4, 8, 5, 3, 10, 26, 4, 3, 96, 4, 3, 4, 4, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 37, 108, 3, 3, 552, 27, 3, 3, 3, 11, 7, 164, 11, 4, 3, 12, 4, 18]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [14, 3, 4, 3, 3, 3, 11, 3, 8, 3, 6, 10, 4, 8, 13, 113, 12, 5, 3, 4, 8, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 24, 5, 3, 23, 3, 5, 19, 20, 3, 4, 4, 4, 5, 4, 3, 4, 11, 4, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 4, 4, 6, 3, 6, 16, 5, 9, 3, 3, 6, 3, 3, 4, 3, 29, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [3, 16, 6, 4, 6, 3, 4, 5, 5, 15, 6, 25, 5, 3, 14, 9, 14, 4, 4, 9, 60, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 5, 8, 4, 28, 4, 6, 17, 4, 36, 8, 3, 13, 6, 13, 4, 8, 5, 51, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 18, 4, 16, 64, 4, 107, 4, 4, 60, 4, 4, 4, 5, 4, 4, 68, 5, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 41, 5, 125, 3, 3, 8, 32, 4, 4, 3, 3, 4, 5, 6, 5, 4, 4, 10, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [9, 22, 8, 18, 12, 3, 24, 3, 19, 6, 90, 6, 6, 15, 6, 15, 4, 4, 6, 23, 132]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [7, 14, 4, 18, 3, 8, 5, 426, 7, 7, 32, 9, 3, 7, 6, 3, 6, 3, 38, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [10, 3, 3, 4, 4, 4, 24, 4, 5, 4, 4, 3, 4, 6, 3, 5, 4, 152, 4, 4, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 16, 81, 39, 3, 8, 3, 12, 7, 22, 11, 28, 4, 3, 6, 285, 4, 3, 4, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 22, 4, 4, 31, 12, 5, 44, 4, 17, 3, 4, 6, 6, 3, 3, 3, 20, 5, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 4, 3, 34, 4, 6, 31, 4, 8, 4, 4, 7, 3, 4, 3, 4, 4, 7, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [5, 6, 10, 22, 3, 3, 3, 45, 6, 23, 3, 17, 6, 33, 13, 8, 12, 8, 3, 3, 5, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 3, 4, 4, 22, 4, 6, 30, 4, 4, 3, 5, 6, 5, 4, 4, 4, 9, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 51, 4, 4, 52, 3, 57, 48, 3, 3, 3, 4, 4, 207, 3, 3, 4, 4, 24, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 5, 3, 4, 3, 5, 3, 8, 39, 3, 3, 3, 122, 3, 4, 3, 22, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [7, 20, 3, 41, 35, 6, 37, 3, 169, 32, 4, 3, 35, 6, 14, 6, 14, 4, 5, 3, 21, 5, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 33, 4, 3, 26, 4, 9, 23, 4, 5, 4, 4, 3, 7, 6, 4, 4, 5, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 50, 4, 4, 3, 418, 59, 4, 29, 4, 4, 4, 5, 3, 4, 3, 42, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 3, 4, 6, 4, 3, 152, 11, 3, 3, 3, 3, 6, 531, 7, 3, 3, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 6, 6, 3, 59, 50, 8, 6, 4, 34, 3, 7, 6, 15, 6, 3, 4, 10, 28, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [3, 25, 6, 18, 6, 4, 3, 4, 6, 28, 6, 5, 3, 6, 14, 6, 15, 26, 4, 37, 114]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 4, 4, 3, 4, 37, 25, 4, 4, 3, 3, 4, 6, 4, 5, 4, 3, 4, 8, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 3, 5, 4, 3, 3, 9, 4, 4, 7, 5, 4, 6, 4, 11, 5, 3, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 5, 6, 3, 3, 7, 3, 3, 3, 3, 3, 5, 7, 3, 12, 3, 4, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [4, 16, 5, 33, 6, 3, 12, 12, 16, 9, 8, 23, 4, 3, 13, 9, 12, 6, 3, 46, 4, 14, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [12, 6, 3, 3, 3, 15, 6, 6, 6, 22, 5, 3, 6, 6, 54, 6, 12, 3, 3, 6, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 31, 6, 4, 49, 3, 6, 27, 4, 4, 4, 6, 28, 4, 4, 8, 4, 4, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 37, 3, 3, 3, 4, 5, 27, 3, 28, 4, 4, 3, 5, 3, 4, 4, 4, 22, 42, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 38, 3, 4, 31, 4, 37, 27, 4, 32, 10, 4, 4, 5, 5, 6, 4, 17, 3, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 34, 41, 6, 69, 3, 6, 24, 6, 33, 6, 6, 6, 8, 6, 3, 11, 3, 21, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 18, 3, 3, 15, 4, 109, 32, 3, 36, 5, 3, 8, 5, 116, 10, 4, 3, 26, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [9, 5, 3, 5, 3, 4, 3, 3, 3, 183, 3, 28, 4, 4, 3, 4, 4, 4, 22, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 3, 6, 3, 67, 6, 6, 58, 6, 55, 3, 4, 13, 36, 4, 3, 61, 7, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [3, 16, 4, 35, 4, 4, 41, 4, 5, 40, 3, 4, 3, 4, 4, 5, 4, 4, 22, 5, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [3, 7, 5, 17, 3, 4, 4, 4, 5, 4, 189, 70, 7, 4, 4, 5, 215, 4, 3, 4, 46, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 3, 3, 4, 3, 6, 5, 3, 15, 51, 3, 3, 6, 3, 3, 3, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 11, 3, 3, 3, 4, 5, 3, 4, 3, 5, 5, 3, 8, 3, 8, 3, 8, 11, 11, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [12, 8, 3, 4, 4, 4, 3, 6, 23, 3, 3, 8, 3, 68, 7, 4, 26, 8, 5, 12, 10, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [5, 4, 11, 22, 4, 4, 3, 4, 6, 18, 17, 6, 3, 58, 4, 4, 4, 4, 4, 3, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 3, 4, 6, 3, 3, 5, 7, 6, 3, 3, 3, 3, 5, 3, 4, 4, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 6, 3, 3, 28, 4, 4, 54, 4, 3, 3, 5, 4, 4, 3, 4, 93, 401, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [8, 14, 5, 13, 3, 6, 10, 9, 179, 14, 4, 3, 3, 5, 12, 16, 3, 8, 4, 6, 21, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [41, 4, 5, 43, 4, 4, 628, 3, 6, 31, 4, 4, 8, 4, 4, 6, 4, 4, 3, 4, 23, 87, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 20, 6, 4, 20, 4, 13, 16, 3, 31, 3, 4, 3, 5, 3, 4, 3, 4, 29, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [3, 16, 3, 32, 6, 14, 6, 6, 6, 23, 4, 24, 6, 6, 3, 6, 3, 8, 6, 8, 6, 3, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 6, 5, 3, 6, 16, 6, 4, 4, 4, 3, 12, 4, 7, 6, 4, 22, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 110, 4, 4, 40, 4, 6, 28, 3, 4, 14, 3, 3, 5, 4, 67, 3, 3, 5, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 6, 7, 3, 4, 4, 7, 3, 3, 3, 5, 3, 5, 7, 3, 3, 3, 22, 4, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [3, 19, 4, 18, 3, 3, 32, 6, 163, 19, 4, 3, 6, 6, 12, 15, 12, 6, 3, 22, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [10, 10, 6, 3, 6, 6, 6, 6, 6, 25, 6, 28, 3, 6, 16, 6, 129, 6, 3, 4, 22, 3, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 9, 4, 4, 4, 4, 6, 3, 3, 27, 6, 4, 7, 8, 4, 3, 3, 40, 5, 60]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 33, 4, 5, 5, 4, 6, 23, 4, 3, 3, 3, 5, 4, 3, 8, 3, 3, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [18, 5, 66, 5, 5, 3, 4, 11, 5, 5, 5, 4, 13, 7, 5, 3, 38, 36, 5, 5, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [3, 8, 3, 6, 3, 3, 85, 3, 6, 50, 3, 20, 8, 3, 405, 216, 4, 3, 10, 4, 39, 4, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 8, 4, 3, 8, 8, 6, 5, 3, 4, 6, 3, 6, 3, 5, 5, 3, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 37, 3, 3, 30, 5, 417, 26, 4, 4, 6, 4, 3, 9, 3, 4, 19, 22, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 37, 12, 3, 25, 3, 6, 26, 3, 31, 4, 3, 4, 5, 4, 7, 4, 3, 22, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 13, 3, 3, 3, 4, 5, 15, 7, 3, 3, 4, 6, 4, 3, 4, 4, 3, 9, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 37, 3, 4, 4, 5, 5, 28, 70, 7, 5, 7, 6, 5, 3, 4, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [5, 14, 4, 6, 5, 3, 28, 3, 27, 3, 3, 6, 6, 3, 13, 6, 239, 5, 3, 56, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [6, 21, 3, 6, 10, 3, 32, 9, 6, 6, 7, 3, 3, 3, 13, 5, 13, 3, 3, 4, 21, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 4, 8, 3, 38, 3, 6, 34, 8, 9, 3, 3, 5, 8, 6, 4, 4, 10, 4, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [3, 14, 4, 6, 11, 4, 7, 5, 24, 4, 5, 5, 6, 4, 619, 7, 4, 6, 21, 6, 6, 6, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 3, 6, 3, 31, 3, 6, 27, 3, 11, 6, 3, 6, 7, 3, 6, 6, 11, 3, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 18, 4, 7, 70, 5, 7, 79, 4, 55, 3, 4, 6, 4, 3, 7, 78, 4, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 42, 3, 8, 35, 4, 6, 31, 4, 4, 7, 4, 3, 7, 7, 3, 3, 3, 21, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 3, 4, 46, 3, 6, 6, 8, 177, 4, 3, 150, 3, 3, 3, 6, 94, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 35, 5, 3, 3, 4, 8, 42, 4, 114, 3, 5, 4, 6, 5, 8, 5, 20, 22, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 5, 3, 4, 65, 56, 5, 4, 28, 16, 5, 9, 7, 6, 4, 3, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 19, 4, 10, 3, 4, 6, 20, 8, 27, 3, 3, 4, 5, 13, 3, 5, 5, 40, 13, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 46, 5, 3, 54, 6, 62, 4, 26, 3, 5, 23, 6, 9, 3, 5, 4, 20, 5, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 44, 3, 4, 3, 4, 13, 30, 4, 40, 4, 4, 6, 8, 3, 4, 6, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 23, 4, 4, 3, 5, 38, 4, 14, 4, 3, 4, 5, 185, 10, 4, 3, 26, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [7, 4, 20, 4, 3, 7, 4, 29, 3, 6, 5, 4, 3, 4, 152, 3, 3, 41, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 3, 3, 3, 4, 16, 3, 190, 7, 3, 3, 7, 5, 51, 3, 3, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 12, 5, 19, 6, 3, 15, 13, 16, 6, 3, 3, 7, 60, 6, 6, 5, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 35, 3, 4, 59, 3, 9, 38, 69, 32, 4, 6, 4, 9, 4, 6, 85, 23, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
termination = MathOptInterface.INFEASIBLE
objective_value = 0.3596067077756873
