┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 11
max_cuts = 4
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 5, 4, 2, 4, 9, 3, 3, 3]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 5, 6, 3, 3, 4, 7, 7, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 4, 4, 5, 6, 3, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 2, 5, 5, 3, 5, 4, 7, 3, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 3, 4, 3, 6, 4, 4, 5, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 4, 4, 5, 4, 5, 8, 7, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 4, 8, 4, 3, 7, 7, 6, 3, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 3, 4, 7, 6, 8, 7, 5, 6, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 13, 8, 3, 3, 4, 4, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 8, 112, 3, 3, 4, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 9, 5, 9, 3, 8, 7, 6, 4, 507, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 8, 3, 4, 6, 10, 7, 6, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 3, 8, 3, 3, 8, 9, 4, 3, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [24, 10, 3, 6, 3, 4, 8, 4, 4, 3, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 6, 4, 5, 4, 4, 3, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [10, 9, 18, 7, 97, 10, 8, 6, 7, 8, 7, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 304, 41, 6, 4, 5, 5, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 4, 4, 6, 9, 5, 5, 4, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 7, 4, 5, 3, 6, 4, 4, 5, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 7, 4, 5, 10, 7, 3, 9, 4, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [11, 3, 3, 5, 5, 5, 4, 3, 4, 6, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 4, 3, 5, 6, 4, 7, 12, 8, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 4, 4, 3, 5, 3, 5, 6, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 4, 4, 5, 6, 4, 3, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 6, 5, 8, 4, 19, 4, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 4, 5, 4, 5, 4, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 7, 14, 4, 4, 4, 4, 3, 3, 7, 5, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 5, 4, 4, 6, 5, 4, 3, 4, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 6, 3, 5, 3, 8, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [5, 7, 3, 6, 4, 4, 3, 4, 3, 3, 6, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 4, 3, 4, 5, 3, 4, 5, 6, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 4, 4, 4, 5, 4, 7, 3, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 7, 5, 5, 6, 7, 8, 5, 5, 5, 19, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 5, 4, 4, 3, 8, 6, 8, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 7, 4, 9, 5, 3, 6, 8, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 5, 4, 5, 3, 8, 3, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 7, 4, 3, 5, 3, 5, 7, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 4, 3, 4, 175, 11, 8, 5, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 5, 4, 4, 4, 5, 5, 5, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [5, 7, 10, 6, 6, 4, 4, 4, 4, 6, 5, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [17, 7, 222, 7, 5, 7, 3, 4, 6, 4, 6, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 6, 4, 5, 4, 3, 3, 4, 6, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [7, 3, 5, 5, 6, 7, 3, 4, 4, 4, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 5, 6, 5, 30, 5, 6, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 7, 3, 4, 3, 5, 4, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 9, 5, 7, 5, 3, 5, 4, 3, 5, 5, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 6, 3, 5, 4, 8, 3, 4, 6, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 4, 3, 5, 4, 4, 4, 6, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 7, 8, 3, 6, 4, 6, 5, 4, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [7, 7, 4, 7, 3, 8, 6, 7, 6, 4, 7, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 7, 6, 5, 163, 4, 4, 3, 7, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 21, 18, 5, 5, 4, 8, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [15, 7, 3, 5, 4, 12, 6, 6, 16, 6, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 13, 46, 7, 187, 8, 7, 4, 5, 6, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 6, 8, 6, 4, 4, 6, 7, 6, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 4, 7, 11, 4, 13, 4, 11, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 161, 4, 8, 6, 7, 11, 7, 6, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 4, 4, 4, 3, 14, 6, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 5, 8, 9, 4, 10, 9, 7, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 4, 4, 6, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [8, 9, 3, 10, 4, 4, 6, 3, 3, 4, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 9, 4, 3, 3, 20, 5, 10, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [6, 4, 8, 3, 8, 4, 4, 3, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 4, 7, 8, 11, 5, 8, 5, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [7, 13, 27, 30, 7, 62, 8, 21, 21, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [17, 10, 8, 6, 8, 7, 44, 4, 4, 3, 12, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [23, 18, 4, 16, 14, 7, 5, 4, 4, 11, 6, 15]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 11, 7, 7, 3, 8, 13, 12, 9, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [9, 3, 3, 4, 4, 3, 7, 6, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [34, 8, 19, 46, 6, 52, 4, 17, 52, 17, 6, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [9, 12, 8, 9, 8, 12, 10, 14, 12, 6, 8, 20]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [9, 7, 12, 10, 4, 8, 10, 4, 10, 7, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [8, 3, 8, 8, 3, 4, 5, 3, 5, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 6, 5, 5, 5, 5, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [11, 13, 14, 15, 12, 14, 12, 11, 12, 9, 16, 15]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [10, 4, 13, 16, 17, 16, 14, 12, 5, 14, 32]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [13, 5, 16, 16, 16, 11, 5, 4, 14, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [8, 7, 12, 6, 7, 6, 6, 286, 9, 4, 7, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [16, 6, 3, 4, 4, 16, 16, 17]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 6, 4, 4, 3, 3, 7, 5, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [13, 15, 14, 15, 14, 17, 17, 18, 13, 12, 16, 17]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 5, 7, 5, 14, 16, 6, 3, 7, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [14, 7, 10, 4, 7, 367, 7, 10, 347, 7, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [27, 6, 6, 9, 5, 4, 7, 16, 101, 7, 6, 17]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 12, 8, 7, 7, 6, 7, 7, 10, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [11, 10, 6, 9, 12, 13, 6, 11, 12, 7, 8, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [5, 8, 6, 7, 9, 8, 7, 22]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [10, 10, 11, 10, 12, 10, 16, 15, 12, 8, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [16, 8, 4, 3, 5, 4, 23, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [15, 20, 21, 17, 20, 4, 17, 28, 21]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 14, 5, 6, 14, 10, 12, 6, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [13, 13, 10, 10, 10, 17, 22, 300, 17, 13, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [10, 7, 43, 217, 4, 8, 9, 9, 127, 11, 12, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [8, 24, 3, 10, 17, 10, 13, 25, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [11, 6, 5, 13, 12, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 3, 5, 4, 6, 8, 6, 6, 9, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [21, 20, 20, 17, 18, 15, 34, 150, 19, 16, 18]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 134, 4, 5, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 14, 9, 4, 9, 3, 4, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [12, 6, 14, 9, 4, 7, 4, 8, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 4, 4, 3, 3, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 8, 8, 3, 5, 9, 13, 4, 6, 6, 9, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 4, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [5]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [16, 4, 16, 4, 12, 12, 15, 12, 4, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [12, 10, 9, 3, 5, 6, 5, 12, 12, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 10, 21, 8, 8, 15, 6, 6, 10, 26]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [18, 6, 8, 4, 7, 6, 6, 5, 4, 8, 16, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [9, 8, 7, 9, 23, 8, 9, 7, 7, 8, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [18, 8, 15, 15, 21, 5, 6, 12, 4, 4, 3, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 8, 7, 6, 5, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 111
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
