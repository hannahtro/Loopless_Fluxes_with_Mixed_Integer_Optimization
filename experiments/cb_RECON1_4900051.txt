ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 26
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 6, 5, 15, 6, 4, 7, 4, 2, 10, 3, 5, 6, 7, 3, 5, 6, 4, 8, 12, 4, 5, 115, 7, 17, 2, 9, 5, 6, 4, 372, 4, 3, 3, 4, 7, 3, 4, 6, 3, 8, 7, 6, 4, 11]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 10, 6, 10, 7, 6, 5, 5, 3, 7, 8, 8, 7, 4, 6, 8, 7, 6, 5, 5, 6, 13, 5, 4, 11, 11, 5, 104, 4, 3, 6, 6, 59, 4, 4, 7, 4, 4, 4, 4, 4, 7, 6, 7, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 6, 4, 6, 8, 4, 4, 4, 6, 6, 10, 6, 7, 4, 10, 2, 2, 6, 6, 8, 10, 7, 3, 6, 8, 4, 6, 5, 35, 2, 5, 7, 5, 22, 33, 7, 6, 4, 6, 6, 6, 6, 11, 4, 4, 72]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 8, 2, 2, 9, 6, 11, 2, 211, 9, 5, 7, 3, 4, 6, 4, 11, 5, 4, 6, 7, 5, 6, 10, 9, 9, 13, 9, 9, 2, 4, 13]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 7, 9, 4, 6, 2, 5, 4, 4, 6, 103, 4, 6, 5, 5, 4, 4, 4, 5, 4, 5, 3, 9, 5, 4, 5, 4, 6, 3, 6, 7, 6, 24, 6, 12, 3, 3, 4, 8, 4, 4, 4]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 5, 2, 5, 5, 6, 15, 7, 4, 7, 5, 8, 5, 4, 5, 4, 10, 7, 4, 6, 4, 5, 11, 4, 4, 8, 5, 3, 9, 6, 7, 4, 7, 5, 4, 6, 5, 5, 16, 7, 3, 58, 12, 4, 8]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 6, 9, 10, 6, 5, 5, 3, 8, 4, 6, 4, 4, 4, 4, 4, 12, 2, 6, 6, 5, 7, 8, 7, 4, 13, 5, 8, 10, 6, 4, 6, 6, 8, 5, 4, 8, 5, 8, 8, 6, 3, 7, 7, 16, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 7, 6, 8, 4, 5, 13, 7, 4, 8, 5, 156, 9, 8, 3, 5, 3, 9, 7, 7, 7, 6, 3, 6, 4, 6, 6, 5, 7, 9, 192, 6, 5, 4, 8, 6, 3, 13, 4, 5, 8, 3, 6, 8, 6, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [14, 6, 5, 4, 5, 6, 6, 6, 4, 4, 5, 7, 4, 65, 23, 8, 4, 9, 6, 4, 4, 8, 6, 3, 10, 4, 6, 5, 4, 7, 5, 8, 4, 9, 5, 3, 6, 4, 3, 9, 64, 4, 4, 5, 6]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [9, 7, 3, 4, 4, 4, 4, 9, 4, 6, 5, 4, 9, 34, 4, 145, 6, 9, 8, 8, 8, 6, 3, 5, 4, 4, 5, 5, 4, 6, 35, 5, 19, 10, 6, 5, 4, 5, 5, 7, 8, 3, 99, 6, 337]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 4, 9, 7, 9, 5, 6, 8, 6, 5, 6, 9, 6, 291, 6, 3, 355, 3, 4, 6, 6, 6, 5, 10, 7, 6, 9, 7, 5, 9, 9, 6, 4, 24, 5, 9, 7, 4, 7, 3, 6, 11, 11, 7, 3, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 5, 9, 4, 6, 5, 6, 8, 4, 13, 9, 8, 4, 17, 8, 5, 5, 7, 7, 4, 8, 12, 6, 4, 6, 9, 5, 5, 4, 7, 5, 6, 6, 5, 10, 6, 13, 9, 6, 4, 4, 8, 6, 6, 165, 11, 22, 13, 7, 177, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 8, 5, 6, 9, 3, 5, 6, 8, 4, 4, 223, 5, 6, 6, 8, 4, 7, 6, 435, 5, 4, 4, 11, 4, 6, 4, 45, 34, 4, 3, 6, 11, 9, 7, 5, 8, 7, 31, 3, 4, 154, 4, 8, 30]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 4, 6, 6, 10, 9, 73, 7, 7, 8, 8, 8, 4, 4, 5, 7, 67, 6, 45, 8, 4, 8, 4, 4, 6, 4, 4, 5, 128, 6, 4, 4, 7, 4, 7, 5, 4, 4, 4, 10, 14, 11, 5, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 4, 6, 7, 4, 5, 4, 5, 4, 4, 7, 5, 5, 9, 5, 4, 5, 6, 5, 8, 5, 5, 4, 5, 5, 6, 8, 5, 8, 5, 4, 4, 6, 6, 3, 6, 8, 4, 6, 8, 6, 9, 531]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 13, 7, 8, 11, 5, 5, 5, 10, 4, 11, 9, 5, 9, 4, 9, 6, 5, 10, 4, 6, 7, 8, 5, 113, 10, 3, 9, 8, 17, 8, 7, 8, 6, 10, 52, 6, 6, 4, 7, 5, 6, 7, 11, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 6, 5, 4, 8, 6, 5, 5, 4, 4, 7, 8, 6, 11, 4, 5, 144, 6, 10, 4, 4, 3, 407, 8, 5, 6, 7, 6, 4, 4, 4, 8, 4, 7, 5, 8, 4, 4, 7, 7, 6, 5, 7, 4, 3, 4, 4, 7]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [9, 101, 4, 5, 8, 6, 6, 4, 6, 12, 7, 4, 7, 5, 383, 10, 4, 6, 34, 5, 5, 16, 4, 5, 9, 5, 4, 4, 4, 6, 8, 4, 13, 5, 4, 7, 4, 9, 4, 5, 215, 3, 9, 7, 5, 5, 334, 4, 7]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 4, 6, 7, 6, 4, 8, 44, 4, 7, 4, 7, 7, 8, 5, 4, 12, 4, 5, 4, 6, 6, 8, 10, 4, 8, 6, 6, 9, 3, 4, 6, 42, 5, 7, 8, 6, 9, 156, 5, 340, 103, 4, 25, 6, 11]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [13, 8, 8, 6, 5, 4, 6, 4, 5, 6, 7, 4, 7, 7, 11, 7, 16, 5, 5, 8, 4, 125, 5, 13, 9, 6, 10, 7, 10, 9, 5, 5, 9, 12, 30, 10, 11, 9, 9, 11, 3, 10, 7, 8, 10, 3, 12, 172, 8, 11, 7, 11, 4, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 6, 5, 11, 5, 8, 13, 7, 6, 17, 4, 14, 6, 8, 90, 3, 4, 6, 12, 6, 8, 4, 8, 4, 9, 6, 9, 8, 12, 7, 5, 7, 7, 4, 9, 5, 5, 6, 4, 9, 8, 8, 6, 4, 12, 4, 5, 5, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [7, 4, 5, 4, 7, 5, 4, 5, 4, 7, 30, 7, 10, 8, 5, 4, 3, 5, 221, 4, 3, 9, 6, 4, 9, 7, 6, 6, 9, 7, 4, 4, 8, 6, 4, 7, 4, 6, 4, 7, 8, 4, 6, 8, 4, 6, 5, 8]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 9, 3, 7, 11, 4, 7, 6, 7, 10, 6, 5, 7, 6, 4, 40, 7, 6, 4, 5, 5, 7, 10, 8, 8, 5, 6, 4, 9, 4, 7, 4, 5, 5, 17, 9, 4, 10, 6, 13, 4, 6, 5, 7, 9, 6, 13, 8, 8, 438]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [5, 6, 3, 5, 6, 8, 220, 5, 4, 6, 6, 6, 7, 6, 4, 8, 5, 5, 4, 9, 4, 4, 8, 4, 4, 6, 4, 12, 4, 3, 4, 3, 5, 5, 10, 5, 6, 4, 33, 4, 12, 8, 158, 5, 12, 4, 10, 277]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [14, 7, 4, 4, 4, 5, 3, 4, 4, 7, 5, 239, 6, 393, 5, 208, 4, 5, 122, 4, 4, 4, 4, 5, 3, 11, 7, 7, 5, 6, 5, 6, 6, 5, 3, 5, 12, 6, 3, 4, 5, 6, 7, 19, 3, 214]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [7, 8, 3, 8, 5, 9, 6, 7, 4, 9, 5, 8, 7, 7, 6, 6, 4, 7, 10, 7, 6, 9, 13, 11, 11, 9, 5, 21, 7, 7, 6, 8, 5, 9, 8, 7, 7, 7, 52, 8, 4, 7, 6, 6, 4, 7, 8, 4, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 13, 7, 11, 4, 4, 26, 4, 114, 4, 8, 7, 5, 4, 8, 5, 6, 5, 12, 4, 5, 6, 6, 88, 10, 4, 17, 7, 23, 5, 10, 5, 10, 8, 9, 11, 4, 14, 6, 7, 10, 7, 9, 8, 6, 8, 229]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 10, 7, 3, 5, 4, 7, 5, 8, 8, 5, 12, 8, 4, 6, 7, 4, 3, 9, 7, 6, 5, 5, 5, 7, 5, 6, 7, 4, 43, 8, 11, 9, 6, 42, 4, 7, 4, 5, 7, 7, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 6, 4, 4, 5, 5, 4, 7, 9, 9, 8, 5, 6, 6, 9, 10, 8, 6, 12, 6, 5, 6, 8, 4, 10, 9, 7, 6, 4, 8, 4, 12, 5, 11, 7, 7, 4, 7, 3, 4, 8, 11, 5, 7, 9, 11, 6, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 5, 7, 5, 6, 6, 6, 5, 7, 3, 4, 11, 5, 4, 4, 6, 4, 5, 6, 5, 4, 4, 6, 7, 5, 8, 4, 6, 8, 5, 6, 9, 6, 5, 6, 4, 7, 5, 5, 7, 4, 3, 5, 7, 6, 4, 7, 8, 4, 6, 10]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [14, 6, 4, 4, 9, 4, 6, 7, 4, 6, 12, 8, 3, 4, 6, 4, 98, 6, 4, 13, 21, 7, 5, 5, 5, 13, 4, 4, 4, 10, 6, 6, 13, 4, 33, 11, 4, 6, 7, 6, 10, 4, 11, 5, 3, 4, 9]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 10, 7, 9, 7, 5, 5, 10, 6, 6, 6, 4, 14, 13, 312, 8, 7, 7, 8, 7, 6, 5, 6, 7, 5, 25, 169, 9, 7, 7, 4, 7, 9, 7, 12, 10, 10, 9, 11, 6, 6, 4, 4, 11, 8, 5, 8, 7, 6, 5, 13, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 4, 3, 4, 12, 7, 7, 8, 9, 4, 4, 5, 3, 466, 10, 9, 6, 8, 10, 10, 6, 35, 7, 9, 9, 7, 5, 7, 6, 6, 10, 5, 10, 8, 6, 5, 9, 9, 9, 7, 5, 9, 7, 9, 8, 3, 3, 8, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 4, 7, 10, 6, 191, 7, 9, 8, 5, 8, 6, 6, 4, 8, 6, 6, 7, 11, 7, 4, 9, 5, 7, 8, 4, 6, 10, 5, 6, 5, 3, 7, 10, 4, 13, 7, 5, 9, 15, 292, 111, 8, 31, 5, 9, 18, 9, 7, 5, 9, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 4, 7, 6, 5, 7, 8, 10, 8, 9, 20, 6, 8, 9, 8, 4, 9, 7, 5, 5, 10, 11, 12, 4, 7, 7, 17, 4, 4, 4, 6, 10, 6, 6, 8, 10, 6, 7, 5, 12, 4, 11, 6, 11, 9, 3, 5, 5, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [21, 4, 7, 7, 4, 8, 4, 6, 9, 5, 8, 3, 8, 75, 5, 9, 8, 7, 174, 5, 4, 6, 5, 19, 5, 6, 4, 5, 4, 6, 226, 4, 3, 9, 4, 5, 10, 4, 5, 5, 4, 5, 8, 7, 99, 4, 30, 5, 7, 5, 6, 10, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 7, 11, 4, 5, 5, 3, 4, 4, 7, 15, 6, 7, 4, 8, 4, 6, 6, 4, 9, 4, 4, 5, 3, 9, 5, 8, 9, 19, 6, 6, 7, 8, 4, 4, 8, 10, 13, 15, 5, 4, 6, 6, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 3, 4, 8, 6, 7, 4, 8, 3, 6, 6, 5, 3, 166, 13, 6, 7, 5, 8, 4, 7, 8, 4, 4, 6, 8, 5, 7, 5, 7, 4, 5, 4, 5, 14, 16, 5, 4, 8, 5, 6, 107, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 4, 7, 7, 10, 15, 4, 4, 8, 6, 8, 4, 5, 9, 7, 7, 7, 4, 8, 7, 9, 5, 3, 7, 4, 11, 10, 3, 4, 8, 257, 10, 6, 9, 5, 7, 5, 9, 11, 7, 10, 4, 10, 7, 4, 6, 6, 9, 6, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 7, 6, 6, 6, 4, 6, 7, 6, 5, 6, 8, 5, 6, 5, 144, 4, 6, 5, 7, 18, 9, 271, 7, 6, 4, 3, 4, 6, 4, 8, 9, 3, 7, 6, 4, 8, 5, 9, 3, 5, 75, 10, 3, 7, 4, 7, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [18, 7, 9, 5, 4, 6, 8, 5, 3, 8, 4, 5, 6, 5, 4, 140, 8, 6, 3, 5, 5, 5, 9, 11, 6, 4, 238, 6, 7, 4, 4, 7, 5, 7, 9, 4, 8, 5, 8, 5, 5, 3, 3, 17, 4, 7, 7, 12]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [18, 9, 6, 5, 5, 3, 4, 4, 4, 4, 83, 3, 6, 11, 6, 101, 5, 9, 7, 159, 6, 96, 5, 10, 6, 4, 10, 4, 6, 11, 40, 5, 7, 4, 4, 6, 11, 4, 5, 7, 9, 5, 3, 8, 25, 6, 7, 11]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [8, 9, 3, 8, 5, 4, 5, 12, 10, 6, 6, 56, 5, 9, 5, 9, 10, 4, 5, 5, 4, 8, 7, 4, 5, 309, 6, 6, 4, 7, 7, 9, 8, 3, 10, 5, 10, 12, 4, 5, 5, 6, 8, 6, 7, 4, 6, 266, 6, 8]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 5, 7, 4, 5, 4, 4, 5, 7, 5, 5, 3, 6, 56, 15, 7, 5, 6, 7, 7, 10, 4, 5, 6, 6, 8, 4, 5, 4, 7, 10, 9, 3, 206, 6, 9, 5, 8, 7, 6, 9, 5, 93]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 4, 4, 8, 5, 4, 4, 6, 10, 4, 4, 66, 5, 9, 7, 11, 5, 4, 4, 4, 9, 8, 5, 6, 5, 10, 8, 7, 8, 8, 4, 49, 8, 6, 5, 4, 4, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 7, 4, 4, 4, 5, 4, 8, 5, 4, 10, 5, 4, 4, 4, 6, 4, 6, 4, 4, 4, 17, 5, 5, 6, 4, 5, 16, 5, 5, 7, 4, 6, 6, 7, 4, 6, 9, 8, 27, 4]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 7, 4, 8, 5, 6, 6, 5, 4, 9, 34, 3, 4, 9, 4, 4, 8, 4, 147, 9, 6, 5, 5, 12, 4, 8, 6, 4, 8, 6, 5, 11, 7, 3, 9, 7, 12, 4, 66, 6, 5, 6, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [11, 5, 12, 9, 5, 3, 7, 3, 7, 5, 4, 7, 6, 4, 8, 11, 4, 381, 6, 5, 4, 5, 5, 6, 4, 9, 7, 7, 5, 7, 8, 69, 11, 7, 6, 8, 5, 4, 7, 5, 5, 7, 5, 6, 82, 7, 9, 5, 9, 8, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 4, 11, 4, 5, 5, 9, 4, 4, 4, 3, 3, 5, 9, 6, 13, 5, 5, 6, 8, 13, 12, 4, 18, 4, 6, 8, 5, 4, 4, 7, 10, 6, 15, 8, 5, 12, 10, 7, 4, 41, 3, 3, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [4, 12, 11, 8, 5, 14, 6, 10, 13, 6, 10, 11, 6, 11, 9, 4, 9, 11, 6, 3, 12, 5, 5, 11, 14, 5, 9, 8, 10, 11, 6, 13, 6, 6, 6, 7, 5, 13, 26, 5, 11, 6, 11, 12, 4, 10, 11, 6, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 7, 4, 14, 4, 5, 9, 3, 4, 4, 6, 4, 9, 5, 37, 5, 8, 4, 10, 6, 5, 6, 7, 5, 4, 7, 8, 3, 6, 8, 8, 4, 5, 11, 7, 4, 5, 13, 8, 6, 6, 8, 19, 7, 17, 7]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [9, 4, 3, 7, 8, 6, 3, 146, 5, 4, 3, 5, 6, 5, 9, 6, 11, 8, 10, 10, 4, 4, 6, 15, 10, 7, 4, 6, 9, 4, 4, 14, 11, 14, 7, 15, 9, 15, 4, 9, 6, 7, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [20, 4, 3, 5, 4, 4, 4, 5, 5, 4, 13, 15, 6, 10, 5, 4, 9, 5, 5, 3, 8, 5, 5, 9, 5, 9, 11, 4, 229, 52, 6, 6, 7, 7, 4, 8, 12, 5, 4, 200, 12, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [3, 11, 9, 10, 8, 6, 4, 9, 9, 8, 9, 9, 4, 8, 9, 8, 6, 9, 9, 8, 8, 10, 10, 11, 7, 13, 14, 8, 7, 10, 124, 9, 6, 6, 10, 114, 8, 5, 8, 8, 8, 59, 27, 8, 6, 8, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 3, 7, 7, 5, 5, 6, 8, 6, 8, 11, 4, 8, 6, 6, 7, 4, 6, 3, 7, 8, 4, 7, 8, 4, 8, 5, 7, 5, 8, 9, 6, 7, 6, 4, 4, 8, 7, 8, 4, 8, 8, 5, 8, 6, 9, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [17, 6, 9, 6, 6, 7, 6, 12, 4, 4, 6, 4, 6, 4, 5, 5, 7, 5, 4, 5, 5, 4, 4, 7, 6, 220, 5, 13, 5, 12, 5, 8, 5, 13, 4, 6, 4, 11, 6, 14, 7, 14, 8, 262, 12, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 9, 12, 8, 4, 4, 11, 6, 7, 4, 7, 11, 3, 15, 6, 7, 11, 4, 32, 5, 7, 6, 6, 8, 5, 6, 5, 5, 4, 5, 15, 17, 21, 4, 8, 12, 5, 3, 12, 16, 7, 20, 9, 10, 13]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 6, 8, 4, 9, 4, 7, 9, 11, 7, 4, 6, 6, 4, 8, 10, 7, 10, 6, 8, 6, 4, 6, 8, 4, 4, 9, 4, 9, 6, 9, 7, 4, 3, 40, 4, 7, 13, 4, 20, 5, 3, 133]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 7, 7, 5, 6, 6, 7, 33, 9, 9, 10, 6, 6, 12, 5, 7, 4, 19, 8, 7, 10, 12, 9, 6, 8, 6, 10, 6, 9, 9, 6, 19, 7, 9, 4, 10, 4, 10, 8, 11, 9, 7, 10, 12, 9, 12, 8]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [21, 12, 11, 6, 12, 7, 6, 10, 10, 6, 4, 11, 9, 7, 5, 6, 11, 7, 10, 8, 7, 27, 11, 4, 11, 4, 4, 5, 8, 12, 10, 4, 7, 8, 6, 9, 13, 8, 3, 7, 9, 10, 6, 4, 7, 5, 6, 8, 10, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [14, 6, 6, 7, 5, 7, 10, 11, 9, 5, 6, 64, 7, 194, 6, 6, 6, 4, 7, 7, 6, 8, 6, 9, 7, 7, 9, 9, 5, 4, 9, 7, 4, 5, 3, 8, 7, 5, 8, 6, 5, 5, 9, 5, 7, 7, 11, 610]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 4, 7, 10, 66, 7, 5, 5, 5, 5, 10, 12, 8, 9, 17, 7, 7, 9, 5, 10, 8, 6, 6, 9, 12, 5, 5, 184, 7, 5, 6, 5, 10, 5, 9, 5, 5, 6, 6, 5, 8, 9, 4, 7, 5, 8, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 10, 7, 4, 7, 5, 10, 9, 4, 10, 6, 9, 7, 9, 3, 11, 16, 12, 6, 5, 6, 4, 9, 8, 4, 6, 7, 6, 8, 5, 5, 67, 10, 3, 5, 11, 12, 11, 19, 9, 8, 9, 6, 5, 10, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 7, 6, 8, 4, 4, 4, 8, 4, 4, 81, 5, 4, 15, 26, 4, 17, 3, 6, 5, 5, 8, 6, 7, 7, 8, 12, 4, 33, 7, 5, 5, 10, 3, 40, 4, 11, 4, 6, 457]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 4, 5, 4, 7, 6, 5, 9, 9, 4, 11, 4, 6, 10, 5, 5, 7, 16, 8, 5, 6, 10, 5, 7, 5, 4, 13, 5, 12, 7, 7, 5, 4, 18, 257, 6, 4, 6, 155, 8, 5, 10, 5, 9, 6, 11, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 4, 9, 6, 4, 5, 7, 6, 8, 8, 4, 8, 8, 10, 8, 9, 3, 10, 6, 10, 8, 9, 4, 4, 14, 7, 7, 8, 6, 9, 10, 6, 9, 8, 6, 3, 5, 5, 5, 6, 6, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 5, 10, 9, 4, 9, 10, 3, 5, 4, 5, 5, 4, 10, 4, 5, 6, 32, 9, 6, 10, 12, 11, 636, 3, 11, 5, 10, 10, 6, 8, 133, 5, 45, 11, 11, 9, 10, 8, 13, 10, 6, 5, 7, 6, 116]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [14, 10, 27, 9, 8, 4, 10, 4, 11, 5, 6, 14, 7, 7, 5, 5, 7, 12, 5, 5, 10, 4, 5, 5, 11, 4, 7, 14, 7, 4, 5, 188, 9, 5, 12, 9, 7, 4, 9, 13, 5, 30, 4, 9]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 10, 5, 5, 8, 11, 10, 8, 4, 8, 13, 11, 5, 131, 8, 5, 4, 8, 3, 6, 10, 8, 12, 13, 10, 12, 11, 4, 11, 5, 8, 3, 7, 10, 8, 6, 22, 14, 11, 5, 13, 4, 9, 436]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [22, 6, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 31, 9, 4, 4, 11, 5, 4, 4, 5, 12, 5, 9, 5, 8, 4, 158, 4, 5, 4, 3, 7, 8, 33, 11]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [12, 9, 9, 4, 7, 6, 7, 6, 6, 9, 3, 4, 3, 11, 5, 12, 6, 10, 8, 5, 11, 12, 6, 9, 7, 5, 10, 7, 7, 8, 5, 8, 6, 12, 9, 3, 6, 6, 4, 8, 7, 4, 4, 7, 14, 5, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [21, 8, 4, 3, 12, 9, 8, 5, 10, 9, 13, 4, 4, 4, 4, 3, 8, 10, 6, 6, 210, 4, 6, 11, 4, 10, 7, 8, 7, 9, 8, 9, 7, 6, 64, 5, 5, 5, 10, 9, 37, 12, 11, 7, 3, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [15, 7, 10, 13, 13, 7, 12, 6, 14, 10, 7, 10, 10, 7, 6, 6, 12, 8, 6, 13, 8, 5, 9, 7, 11, 9, 7, 11, 13, 9, 6, 14, 9, 6, 6, 12, 16, 10, 8, 11, 6, 6, 7, 6, 17, 4, 13, 5, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [14, 15, 9, 3, 10, 12, 10, 9, 6, 10, 6, 17, 10, 4, 4, 10, 11, 7, 4, 9, 4, 4, 5, 5, 3, 15, 160, 16, 18, 3, 9, 9, 3, 6, 5, 17, 12, 8, 16, 10, 22, 18, 12, 8, 10, 13, 24, 316]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [14, 7, 9, 4, 10, 10, 6, 8, 6, 8, 4, 5, 3, 5, 4, 15, 7, 33, 8, 9, 10, 231, 8, 117, 19, 8, 36, 4, 9, 10, 7, 4, 9, 5, 4, 9, 10, 8, 10, 17, 263, 11, 9, 8, 10, 4, 14, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 7, 6, 5, 12, 10, 3, 9, 3, 4, 9, 6, 15, 308, 10, 6, 8, 7, 12, 5, 11, 13, 7, 6, 10, 6, 11, 9, 9, 12, 9, 12, 6, 14, 7, 3, 10, 10, 6, 11, 9, 4, 11, 5, 6, 9, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [8, 13, 8, 9, 7, 10, 5, 4, 6, 8, 8, 9, 9, 535, 7, 12, 14, 6, 8, 7, 10, 10, 5, 5, 8, 8, 19, 6, 9, 13, 13, 5, 7, 9, 210, 9, 11, 16, 13, 18, 9, 18, 9, 10, 8, 8, 33]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 13, 6, 4, 7, 12, 10, 9, 12, 3, 9, 11, 5, 6, 6, 11, 10, 7, 3, 307, 12, 10, 12, 9, 8, 5, 3, 116, 8, 8, 4, 17, 4, 10, 10, 8, 6, 5, 8, 3, 10, 10, 14, 4, 7, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [6, 8, 4, 3, 10, 11, 8, 7, 10, 6, 8, 9, 5, 9, 9, 255, 40, 6, 3, 10, 222, 10, 33, 7, 6, 11, 8, 8, 6, 9, 8, 8, 8, 6, 69, 10, 11, 9, 8, 6, 6, 13, 7, 3, 8, 10, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [23, 15, 8, 5, 4, 15, 3, 4, 6, 4, 9, 22, 7, 4, 5, 14, 5, 15, 21, 369, 4, 17, 4, 16, 5, 7, 3, 4, 8, 9, 4, 4, 5, 23, 17, 4, 4, 15, 19, 15, 6, 4, 7, 17, 11, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [13, 4, 10, 6, 6, 4, 6, 8, 9, 9, 10, 8, 10, 5, 6, 11, 8, 9, 17, 6, 7, 9, 6, 9, 8, 8, 9, 8, 9, 8, 5, 12, 28, 9, 12, 6, 7, 8, 12, 13, 8, 6, 8, 59, 4, 10, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [7, 10, 5, 11, 7, 4, 6, 15, 7, 6, 7, 7, 7, 10, 7, 9, 9, 5, 5, 9, 6, 10, 14, 12, 10, 10, 9, 9, 6, 10, 9, 4, 13, 11, 7, 6, 4, 12, 12, 9, 12, 11, 6, 10, 14, 58, 137, 8, 12, 18, 8, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 7, 6, 4, 15, 4, 7, 8, 12, 7, 5, 10, 10, 5, 6, 7, 6, 7, 4, 19, 4, 4, 6, 7, 8, 5, 5, 4, 6, 4, 4, 6, 9, 7, 10, 6, 7, 6, 8, 18]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 4, 7, 4, 4, 5, 7, 7, 6, 9, 9, 3, 4, 8, 8, 5, 7, 10, 13, 4, 9, 6, 8, 8, 4, 10, 8, 8, 3, 8, 10, 8, 5, 7, 6, 5, 30, 11, 13, 7, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [16, 108, 4, 9, 4, 9, 14, 4, 4, 18, 19, 154, 6, 7, 8, 6, 2, 5, 9, 3, 10, 18, 20, 4, 7, 81, 8, 6, 5, 4, 7, 6, 18, 233, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 2, 3, 4, 3, 5, 4, 2, 3, 3, 2, 2, 2, 2, 3, 2, 2, 3, 3, 2, 31, 382, 4, 2, 3, 351, 3]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [7, 4, 2, 3, 6, 5, 2, 2, 3, 2, 2, 2, 4, 3, 3, 3, 3, 5, 3, 3, 222, 20, 8, 5, 3, 5, 4, 3, 4, 269, 48, 2, 3, 4, 3, 85]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [8, 8, 6, 8, 7, 4, 6, 5, 6, 7, 4, 7, 9, 9, 6, 8, 6, 9, 9, 9, 7, 8, 8, 7, 4, 5, 4, 7, 8, 7, 4, 7, 9, 8, 10, 9, 10, 7, 10, 5, 7, 9, 5, 8, 10, 6, 8, 5, 10, 72]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 5, 4, 4, 7, 4, 4, 5, 8, 32, 10, 4, 210, 5, 5, 8, 4, 11, 7, 4, 13, 4, 5, 8, 9, 4, 11, 6, 40, 8, 5, 4, 7, 9, 8, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 5, 4, 7, 7, 6, 7, 9, 9, 6, 8, 8, 5, 4, 347, 4, 7, 4, 14, 8, 5, 9, 10, 4, 4, 9, 5, 4, 8, 7, 6, 9, 10, 3, 74, 26, 7, 4, 4, 8, 12, 9]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [9, 6, 9, 8, 8, 6, 27, 9, 9, 8, 7, 8, 8, 11, 7, 8, 8, 8, 223, 27, 9, 9, 9, 8, 4, 11, 7, 57, 8, 3, 7, 11, 9, 9, 8, 341, 8, 523, 8, 13, 9, 10, 3, 5, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 10, 11, 9, 6, 9, 7, 9, 8, 6, 8, 10, 8, 5, 6, 7, 6, 8, 7, 9, 8, 8, 7, 7, 9, 18, 10, 9, 5, 6, 9, 11, 8, 10, 39, 9, 10, 8, 8, 82, 9]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [9, 6, 8, 4, 9, 5, 4, 5, 6, 7, 6, 2, 6, 4, 6, 6, 7, 7, 4, 5, 8, 7, 10, 13, 6, 8, 10, 12, 10, 6, 31, 7, 10, 10, 5, 10, 10, 13]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 10, 9, 10, 6, 6, 8, 6, 14, 10, 7, 9, 10, 6, 5, 10, 10, 7, 3, 10, 6, 10, 6, 7, 6, 6, 10, 9, 11, 9, 6, 7, 4, 4, 5, 7, 6, 6, 12, 8, 5, 8, 7, 6, 10, 10, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 5, 9, 6, 5, 4, 4, 3, 5, 4, 9, 6, 5, 7, 4, 2, 6, 4, 13, 10, 5, 6, 6, 4, 8, 6, 5, 7, 28, 8, 4, 5, 120, 5, 5, 6, 6, 6, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [2, 12, 5, 7, 8, 6, 9, 6, 7, 6, 6, 7, 4, 12, 4, 6, 3, 5, 7, 4, 107, 6, 9, 4, 11, 5, 7, 7, 6, 6, 7, 6, 6, 4, 5, 12, 8, 5, 5, 6, 8, 2, 10, 6, 8, 34, 42, 4, 4, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 11, 6, 4, 4, 5, 5, 7, 6, 6, 4, 7, 5, 4, 6, 4, 5, 6, 10, 6, 7, 6, 7, 11, 6, 4, 4, 11, 8, 7, 6, 7, 6, 6, 4, 38, 167]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [4, 6, 10, 8, 5, 4, 6, 11, 6, 10, 4, 21, 3, 5, 63, 129, 9, 4, 5, 5, 5, 6, 27, 15, 9, 8, 16, 4, 10, 6, 4, 4, 5, 9, 10, 8, 17, 8, 9, 6, 9, 7, 19, 5, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 5, 5, 5, 6, 7, 4, 5, 4, 6, 4, 7, 5, 5, 10, 4, 5, 4, 17, 39, 7, 5, 298, 4, 6, 6, 3, 11]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 4, 6, 5, 5, 22, 5, 11, 5, 5, 10, 6, 7, 8, 4, 15, 6, 4, 6, 4, 28, 6, 4, 16, 6, 12, 8, 16, 5, 10, 6, 7, 8, 6, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 4, 6, 9, 10, 9, 6, 5, 9, 7, 4, 5, 4, 10, 4, 3, 7, 10, 9, 18, 9, 6, 4, 10, 8, 17, 347, 5, 8, 9, 11, 5, 10, 6, 5, 4, 9, 9, 8, 4, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [7, 3, 6, 5, 4, 4, 4, 4, 5, 6, 7, 5, 4, 5, 5, 5, 6, 4, 5, 5, 4, 6, 6, 4, 4, 5, 5, 5, 5, 6, 8, 6, 4, 5, 11, 5, 4, 6, 5]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [37, 4, 9, 8, 3, 4, 4, 4, 4, 4, 11, 8, 16, 9, 8, 366, 8, 4, 11, 6, 4, 10, 7, 10, 8, 6, 27, 7, 9, 9, 10, 9, 9, 5, 6, 4, 9, 12, 4, 4, 7, 8, 5, 13, 59]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 6, 15, 5, 7, 8, 9, 8, 8, 9, 6, 10, 9, 5, 6, 9, 4, 8, 6, 4, 4, 9, 3, 11, 4, 18, 3, 4, 10, 10, 5, 8, 10, 6, 7, 7, 7, 8, 6, 7, 7, 5, 10, 9, 86, 7, 7, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [31, 4, 18, 8, 15, 9, 10, 8, 4, 3, 12, 9, 15, 6, 7, 10, 14, 10, 9, 5, 4, 3, 3, 7, 11, 6, 4, 12, 4, 4, 8, 6, 16, 8, 17, 5, 8, 8, 5, 16, 7, 9, 10, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 7, 5, 4, 3, 4, 8, 6, 6, 5, 10, 7, 7, 3, 74, 8, 8, 6, 2, 9, 5, 10, 4, 7, 4, 10, 167]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [7, 7, 10, 7, 15, 8, 4, 7, 10, 4, 16, 4, 8, 8, 7, 95, 19, 11, 16, 10, 15, 15, 40, 9, 4, 29, 15, 10, 12, 9, 9, 7, 10, 8, 29, 19, 6, 27, 9, 29, 8, 29, 227, 7, 8, 9, 9, 9, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 16, 6, 10, 5, 7, 6, 9, 6, 5, 8, 6, 10, 490, 8, 3, 7, 14, 8, 8, 9, 3, 4, 4, 9, 6, 8, 9, 9, 11, 8, 4, 9, 13, 158, 6, 9, 7, 7, 10, 5, 6, 16, 10, 4, 10, 8, 8, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [9, 5, 5, 17, 8, 11, 8, 6, 7, 256, 7, 9, 7, 17, 3, 7, 8, 10, 8, 7, 9, 9, 5, 8, 7, 7, 4, 6, 7, 7, 9, 79, 15, 7, 9, 7, 8, 8, 6, 14, 9, 7, 10, 8, 16, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 9, 17, 6, 15, 16, 7, 9, 7, 9, 17, 5, 8, 9, 6, 17, 8, 17, 17, 9, 16, 8, 8, 6, 16, 9, 7, 7, 7, 423, 9, 16, 15, 67, 10, 10, 16, 19, 12, 16, 14, 6, 7, 9]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [9, 10, 9, 9, 8, 8, 10, 8, 7, 18, 9, 8, 9, 7, 8, 8, 10, 11, 7, 6, 4, 16, 3, 9, 10, 7, 11, 9, 9, 7, 8, 9, 4, 11, 10, 7, 8, 9, 10, 10, 10, 10, 14, 27, 10]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 9, 5, 11, 9, 10, 7, 9, 9, 9, 9, 14, 8, 9, 10, 9, 8, 9, 10, 9, 9, 7, 9, 8, 14, 8, 10, 10, 9, 9, 6, 6, 11, 9, 11, 10, 9, 8, 10, 9, 19, 7, 11, 24, 11, 9, 9, 7, 9, 219, 35, 10]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [18, 21, 7, 8, 6, 16, 18, 10, 18, 10, 18, 18, 16, 7, 6, 48, 13, 43, 14, 30, 21, 18, 9, 9, 7, 7, 16, 6, 8, 15, 15, 13, 14, 16, 15, 17, 8, 8, 8, 20, 17, 17, 3, 15, 6, 8, 34]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [5, 7, 17, 9, 16, 6, 8, 9, 6, 7, 15, 7, 14, 9, 5, 9, 6, 8, 9, 8, 8, 7, 11, 15, 7, 19, 6, 15, 15, 9, 10, 7, 91, 7, 8, 18, 140, 12, 7, 10, 9, 6, 8, 7, 6, 8, 8, 7, 7, 8, 22]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 10, 8, 12, 7, 16, 14, 9, 10, 9, 378, 10, 5, 171, 18, 15, 10, 8, 14, 13, 8, 10, 7, 6, 13, 8, 7, 12, 8, 8, 6, 8, 17, 10, 9, 9, 14, 7, 8, 6, 18, 8, 20, 9, 9, 15, 24]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 10, 7, 9, 3, 10, 7, 5, 10, 11, 10, 6, 5, 11, 11, 8, 8, 3, 36, 14, 25, 10, 5, 8, 10, 11, 6, 9, 5, 4, 6, 9, 8, 10, 14, 8, 10, 7, 136, 8, 9, 11, 6, 13, 16, 8, 12, 4, 26, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [10, 10, 9, 14, 4, 10, 9, 10, 9, 4, 10, 8, 10, 9, 10, 7, 11, 4, 4, 116, 10, 5, 13, 8, 9, 11, 11, 13, 11, 9, 11, 203, 11, 8, 4, 7, 10, 10, 11, 4, 11, 13, 10]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [13, 6, 4, 7, 7, 8, 4, 11, 4, 9, 8, 10, 3, 11, 6, 9, 7, 13, 8, 5, 10, 4, 4, 5, 7, 10, 10, 9, 12, 8, 5, 7, 3, 7, 13, 12, 11, 4, 4, 79, 4, 5, 10, 4, 4, 6, 15, 10, 14, 14, 6, 6, 10]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 12, 12, 8, 4, 6, 12, 326, 4, 4, 8, 6, 23, 69, 4, 5, 3, 5, 12, 6, 4, 6, 9, 5, 14, 5, 4, 10, 7, 5, 4, 10, 5, 13, 3, 5, 13, 9, 12, 12, 9, 8, 247, 13]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
[7, 4, 6, 5, 13, 9, 8, 6, 4, 9, 9, 11, 5, 7, 7, 10, 7, 11, 9, 8, 10, 12, 9, 8, 8, 9, 9, 8, 31, 11, 11, 9, 11, 9, 10, 12, 30, 8, 15, 29, 31, 10, 7, 31, 9, 15, 8, 9, 10, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [13, 5, 7, 8, 7, 4, 7, 5, 3, 11, 5, 10, 12, 5, 4, 9, 7, 4, 6, 9, 5, 4, 12, 3, 5, 5, 4, 4, 5, 3, 29, 25, 12, 5, 10, 6, 4, 10, 5, 9, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [12, 7, 9, 4, 10, 13, 10, 9, 8, 4, 5, 11, 12, 242, 10, 11, 7, 10, 85, 8, 4, 11, 8, 12, 8, 7, 6, 9, 6, 10, 11, 9, 10, 7, 14, 10, 9, 8, 8, 5, 8, 10, 10, 9]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [5, 11, 10, 9, 10, 10, 11, 12, 4, 15, 9, 9, 10, 12, 7, 12, 9, 11, 11, 8, 10, 13, 8, 14, 11, 10, 9, 40, 10, 12, 11, 8, 12, 11, 11, 11, 9, 15, 12, 10, 9, 15, 4, 10, 5, 12, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 10, 5, 4, 10, 6, 8, 4, 10, 10, 7, 296, 4, 5, 7, 4, 6, 7, 4, 5, 4, 4, 7, 7, 7, 7, 7, 5, 7, 12, 6, 6, 5, 4, 8, 7, 6, 9]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [21, 10, 9, 12, 9, 12, 9, 12, 10, 11, 8, 10, 9, 11, 12, 6, 10, 8, 10, 12, 9, 10, 10, 12, 12, 10, 9, 8, 10, 12, 12, 9, 8, 11, 8, 11, 8, 169, 13, 15, 11, 11, 7, 9, 10, 9, 8, 9]
AssertionError("!(isempty(C_list_filtered))")
