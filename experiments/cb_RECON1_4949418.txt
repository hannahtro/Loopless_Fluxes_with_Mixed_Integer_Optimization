ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
RECON1
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

RECON1
----------------------------------
number of metabolites : 2766
number of reactions : 3741
number of genes : 1905

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 75
max_cuts = 37
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3741 flux variables and 7052 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 2, 2, 2, 2, 46, 5, 5, 5, 2, 5, 6, 4, 4, 8, 5, 5, 5, 11, 7, 3, 6, 7, 4, 2, 6, 5, 6, 4, 211, 3, 9, 5, 4, 6, 7, 5]
length(C_list) = 37
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 7, 9, 6, 6, 4, 2, 8, 2, 8, 6, 9, 5, 5, 325, 48, 7, 4, 4, 9, 9, 4, 12, 7, 4, 10, 8, 3, 6, 3, 15, 8, 7, 11, 48, 8, 4, 5, 10, 8, 9, 5, 5, 2, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 3, 5, 4, 10, 2, 6, 5, 13, 6, 10, 9, 7, 20, 4, 5, 7, 3, 5, 4, 5, 314, 350, 8, 5, 5, 4, 6, 13, 15, 2, 10, 25, 11, 4, 10, 6, 7, 4, 4, 10, 5, 6, 13, 6, 2, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 8, 9, 5, 5, 4, 6, 6, 4, 12, 8, 5, 10, 11, 4, 6, 4, 6, 4, 4, 7, 6, 4, 52, 10, 6, 4, 11, 14, 4, 4, 7, 6, 9, 8, 8, 5, 62, 9, 4, 4, 7, 6, 6, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [12, 2, 2, 2, 2, 12, 4, 8, 2, 3, 4, 6, 4, 9, 8, 4, 3, 5, 3, 11, 6, 2, 8, 7, 6, 4, 11, 12, 3, 6, 8, 5, 4, 2, 4, 8, 10, 5, 11, 6, 11, 6, 11, 3, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 6, 5, 6, 5, 9, 4, 4, 7, 6, 4, 6, 5, 9, 7, 5, 5, 3, 6, 4, 7, 4, 7, 2, 3, 8, 7, 4, 8, 3, 180, 4, 4, 4, 4, 5, 9, 12, 6, 6, 187, 6, 5, 9, 4, 8, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 3, 5, 4, 5, 67, 4, 7, 7, 6, 7, 5, 4, 4, 136, 8, 4, 10, 9, 3, 4, 5, 9, 4, 8, 5, 5, 6, 3, 5, 6, 29, 12, 7, 5, 21, 6, 5, 5, 9, 8, 3, 6, 4, 4, 16]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 7, 4, 6, 5, 9, 4, 4, 9, 5, 7, 3, 8, 3, 6, 101, 4, 4, 3, 5, 5, 7, 24, 3, 3, 6, 7, 4, 7, 4, 7, 4, 6, 8, 150, 9, 6, 6, 7, 4, 5, 7, 6, 6, 4, 342]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 7, 3, 7, 3, 5, 6, 4, 7, 3, 5, 4, 2, 6, 5, 3, 22, 5, 6, 7, 4, 5, 10, 9, 6, 4, 73, 5, 7, 6, 8, 6, 6, 28, 4, 5, 4, 30, 6, 4, 42, 8, 5, 7, 10, 5, 8, 7, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 8, 4, 6, 4, 4, 6, 7, 4, 4, 4, 4, 4, 6, 6, 23, 5, 7, 4, 7, 4, 5, 6, 6, 6, 4, 4, 4, 10, 4, 4, 4, 3, 14, 241, 5, 5, 4, 6, 6, 5, 5, 132, 6, 4, 3, 3, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 5, 4, 8, 4, 6, 7, 4, 4, 3, 8, 7, 9, 205, 5, 6, 4, 7, 4, 6, 8, 3, 80, 6, 4, 5, 5, 6, 11, 4, 5, 6, 4, 3, 471, 6, 6, 4, 15, 10, 31, 5, 7, 7, 7, 4, 4, 6, 7, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 5, 7, 5, 7, 7, 5, 5, 10, 5, 5, 4, 5, 4, 7, 4, 7, 4, 4, 7, 5, 5, 5, 5, 5, 5, 4, 383, 6, 4, 6, 4, 4, 5, 6, 10, 49, 4, 8, 18, 4, 4, 6, 6, 5, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 6, 4, 5, 11, 8, 5, 5, 7, 6, 4, 7, 5, 9, 8, 6, 9, 3, 7, 4, 3, 5, 8, 4, 7, 8, 111, 4, 6, 7, 4, 7, 4, 9, 4, 11, 9, 4, 14, 11, 6, 3, 7, 5, 7, 4, 9, 196, 5, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 4, 4, 89, 6, 16, 5, 4, 4, 9, 6, 7, 377, 10, 6, 7, 5, 28, 4, 9, 4, 5, 4, 8, 7, 12, 6, 7, 30, 3, 11, 16, 57, 5, 10, 6, 5, 6, 9, 7, 11, 7, 5, 7, 4, 5, 6, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 5, 11, 7, 3, 3, 11, 16, 4, 3, 4, 9, 10, 8, 9, 6, 8, 5, 7, 7, 8, 5, 5, 6, 196, 6, 8, 9, 4, 9, 7, 6, 443, 10, 5, 7, 19, 4, 5, 4, 14, 7, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 6, 6, 11, 4, 10, 4, 7, 4, 4, 4, 10, 3, 5, 13, 168, 4, 3, 7, 7, 10, 48, 6, 6, 5, 247, 8, 6, 7, 6, 5, 10, 9, 6, 9, 9, 3, 4, 144, 6, 51, 44, 5, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [7, 8, 11, 9, 6, 6, 13, 4, 4, 7, 4, 4, 9, 7, 7, 6, 6, 8, 7, 9, 50, 11, 4, 12, 3, 3, 5, 7, 8, 9, 107, 11, 14, 177, 10, 14, 8, 33, 4, 7, 12, 10, 4, 9, 5, 7, 4, 7, 5, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 6, 5, 8, 3, 40, 10, 9, 6, 6, 9, 5, 4, 7, 6, 8, 3, 4, 7, 8, 5, 7, 8, 10, 5, 15, 8, 4, 4, 4, 4, 6, 9, 10, 5, 11, 7, 8, 8, 4, 7, 6, 3, 3, 64, 35, 4, 4, 4, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [15, 6, 15, 7, 6, 6, 11, 6, 8, 4, 6, 9, 9, 6, 6, 7, 19, 4, 4, 274, 5, 7, 6, 5, 11, 5, 7, 8, 98, 4, 7, 14, 4, 6, 6, 8, 5, 4, 7, 5, 7, 4, 4, 6, 9, 3, 6, 4, 5, 7, 116]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 6, 4, 7, 6, 6, 4, 5, 5, 6, 10, 4, 6, 4, 10, 4, 6, 154, 5, 6, 4, 5, 6, 4, 4, 4, 5, 6, 9, 4, 5, 5, 5, 6, 7, 4, 4, 6, 8, 5, 6, 5, 5, 6, 12, 4, 4, 3, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 4, 5, 3, 8, 10, 7, 126, 13, 7, 10, 11, 13, 11, 15, 11, 4, 5, 5, 13, 8, 126, 5, 4, 5, 4, 5, 8, 13, 4, 6, 7, 4, 6, 10, 5, 4, 15, 6, 6, 9, 4, 8, 9, 6, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 5, 7, 4, 5, 5, 4, 5, 8, 6, 7, 5, 7, 9, 4, 7, 13, 4, 7, 7, 6, 8, 9, 6, 5, 4, 5, 4, 7, 6, 10, 8, 6, 3, 11, 6, 4, 57, 6, 4, 7, 4, 11, 4, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 4, 4, 4, 9, 9, 4, 8, 7, 6, 5, 7, 5, 4, 7, 6, 5, 7, 6, 5, 5, 7, 6, 7, 5, 4, 7, 6, 4, 4, 6, 5, 4, 6, 3, 6, 5, 261, 6, 4, 9, 5, 6, 7, 8, 5, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 7, 4, 7, 9, 9, 6, 4, 6, 5, 40, 4, 247, 5, 20, 4, 4, 7, 9, 5, 7, 7, 6, 6, 5, 4, 13, 5, 6, 7, 6, 7, 5, 6, 4, 9, 5, 3, 4, 169, 3, 4, 6, 4, 22, 8, 5, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 5, 7, 5, 4, 9, 6, 5, 10, 10, 4, 8, 4, 5, 3, 6, 4, 6, 7, 4, 4, 9, 5, 5, 6, 8, 4, 158, 11, 6, 4, 6, 9, 4, 5, 4, 6, 11, 3, 4, 7, 4, 4, 3, 166, 3, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 6, 7, 5, 5, 4, 6, 11, 5, 5, 7, 6, 6, 12, 5, 6, 6, 4, 4, 6, 7, 10, 6, 4, 4, 4, 15, 4, 4, 6, 8, 4, 4, 8, 6, 5, 7, 6, 10, 5, 4, 18, 322, 229, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 4, 6, 6, 11, 13, 9, 7, 4, 6, 7, 4, 11, 8, 163, 9, 61, 40, 5, 7, 7, 4, 10, 8, 4, 9, 8, 4, 8, 11, 91, 4, 150, 6, 4, 5, 6, 5, 5, 7, 4, 11, 3, 6, 4, 8, 9, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 5, 4, 4, 5, 8, 5, 7, 6, 5, 4, 4, 4, 9, 6, 6, 9, 12, 10, 6, 11, 3, 9, 8, 395, 8, 4, 11, 7, 5, 8, 3, 4, 7, 6, 3, 4, 4, 15, 5, 6, 5, 9, 6, 7, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 4, 4, 7, 6, 7, 8, 10, 5, 7, 11, 4, 7, 6, 6, 3, 8, 8, 11, 3, 9, 14, 6, 3, 7, 3, 12, 3, 6, 11, 5, 382, 24, 5, 4, 6, 4, 5, 14, 12, 10, 9, 280, 5, 7, 36]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [13, 7, 3, 4, 5, 6, 6, 3, 4, 6, 5, 15, 6, 7, 78, 4, 5, 5, 7, 5, 11, 5, 3, 3, 3, 7, 6, 11, 11, 7, 5, 7, 4, 6, 5, 7, 4, 12, 7, 4, 4, 127, 6, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [17, 5, 9, 7, 4, 7, 7, 11, 15, 6, 12, 9, 12, 5, 9, 9, 6, 9, 9, 8, 11, 10, 5, 8, 5, 7, 7, 52, 6, 7, 8, 19, 11, 3, 5, 6, 7, 47, 7, 5, 8, 9, 128, 4, 3, 8, 7, 6, 3, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [18, 8, 7, 11, 4, 8, 3, 14, 10, 6, 9, 6, 6, 93, 13, 7, 10, 5, 10, 3, 8, 8, 8, 7, 6, 9, 11, 16, 7, 6, 6, 8, 4, 8, 52, 155, 11, 4, 106, 62, 6, 93, 6, 21, 6, 7, 7, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 8, 12, 5, 8, 4, 101, 12, 7, 7, 7, 5, 9, 13, 13, 6, 4, 7, 4, 4, 9, 69, 5, 4, 6, 9, 5, 8, 6, 7, 4, 7, 9, 99, 6, 5, 26, 6, 21, 14, 7, 7, 6, 4, 4, 10, 4, 7, 6, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 5, 4, 3, 6, 4, 4, 5, 11, 5, 7, 6, 4, 141, 7, 6, 9, 14, 9, 13, 5, 3, 11, 7, 6, 5, 7, 5, 260, 10, 8, 7, 9, 7, 12, 9, 4, 10, 4, 254, 80, 11, 4, 10, 9, 3, 9, 178, 9, 16, 10, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 7, 9, 3, 10, 4, 5, 4, 5, 5, 10, 156, 4, 13, 9, 4, 8, 9, 4, 4, 4, 4, 4, 8, 8, 9, 8, 10, 10, 6, 6, 100, 7, 8, 31, 7, 6, 19, 6, 6, 7, 12, 8, 3, 10, 6, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 5, 7, 7, 6, 3, 4, 5, 5, 7, 9, 9, 9, 8, 8, 10, 6, 4, 9, 6, 5, 8, 7, 8, 7, 10, 8, 6, 4, 6, 4, 7, 4, 3, 4, 8, 8, 5, 6, 6, 8, 6, 442, 7, 3, 12, 79, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 3, 9, 5, 4, 5, 5, 7, 5, 6, 5, 7, 4, 5, 5, 4, 3, 6, 5, 10, 5, 6, 6, 4, 6, 8, 6, 5, 4, 7, 4, 4, 4, 6, 4, 5, 11, 6, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 5, 5, 4, 4, 3, 5, 6, 5, 6, 4, 8, 7, 4, 3, 5, 7, 4, 5, 11, 5, 6, 54, 5, 5, 5, 19, 5, 3, 5, 6, 4, 9, 7, 8, 4, 6, 5, 6, 353, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 5, 7, 5, 10, 9, 4, 9, 5, 7, 4, 4, 5, 5, 5, 5, 4, 8, 4, 5, 7, 7, 9, 6, 4, 5, 7, 4, 4, 4, 6, 3, 4, 8, 254, 10, 5, 5, 5, 5, 11, 7, 9, 4, 5, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [13, 6, 3, 5, 6, 4, 3, 11, 7, 6, 8, 8, 184, 6, 9, 13, 7, 5, 4, 5, 10, 3, 4, 4, 6, 3, 6, 12, 8, 5, 9, 7, 4, 9, 9, 4, 10, 8, 134, 8, 11, 11, 3, 19, 7, 357, 7, 4, 7, 6, 7, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [8, 2, 6, 5, 6, 6, 4, 12, 4, 5, 4, 4, 5, 6, 4, 4, 14, 6, 7, 4, 6, 5, 8, 16, 10, 10, 4, 6, 8, 5, 10, 5, 57, 7, 6, 5, 228, 4, 324, 6, 6, 7, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [13, 8, 9, 7, 8, 8, 3, 4, 9, 10, 5, 6, 15, 4, 316, 86, 10, 11, 8, 11, 4, 4, 5, 7, 34, 8, 11, 12, 11, 5, 5, 6, 5, 3, 7, 10, 11, 20, 9, 80, 5, 4, 6, 13, 21, 4, 103, 8, 358]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [6, 4, 35, 7, 4, 3, 11, 4, 10, 17, 5, 11, 5, 9, 3, 8, 8, 6, 7, 8, 4, 6, 9, 4, 6, 10, 6, 6, 8, 7, 4, 11, 11, 6, 6, 10, 11, 4, 6, 9, 6, 10, 29, 7, 11, 15, 4, 4, 4, 9, 162]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 9, 10, 6, 10, 7, 4, 9, 18, 6, 14, 3, 7, 4, 344, 5, 9, 8, 8, 5, 5, 5, 6, 4, 8, 8, 3, 5, 4, 4, 13, 7, 6, 7, 4, 5, 5, 5, 10, 4, 11, 8, 9, 7, 16, 4, 6, 9, 16, 11, 5, 7, 13, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [12, 5, 7, 9, 10, 4, 8, 4, 6, 7, 8, 8, 8, 5, 5, 12, 15, 10, 12, 10, 7, 69, 4, 11, 7, 12, 8, 9, 9, 11, 6, 5, 22, 11, 14, 8, 12, 9, 7, 10, 8, 6, 11, 6, 29, 4, 9, 5, 6, 17, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 6, 9, 4, 9, 9, 5, 5, 11, 4, 36, 6, 10, 8, 10, 13, 4, 8, 11, 4, 6, 11, 9, 7, 8, 8, 8, 10, 13, 40, 9, 6, 10, 6, 7, 10, 12, 11, 7, 12, 6, 12, 8, 71, 5, 6, 13, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [3, 6, 9, 4, 4, 6, 6, 4, 7, 7, 7, 3, 5, 8, 9, 6, 4, 4, 5, 5, 6, 5, 6, 4, 6, 7, 9, 8, 7, 4, 10, 4, 3, 46, 4, 12, 5, 4, 5, 3, 4, 8, 7, 4, 9, 51]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [18, 4, 5, 11, 6, 9, 12, 12, 9, 11, 4, 5, 4, 7, 7, 10, 11, 4, 10, 9, 9, 6, 5, 25, 5, 3, 4, 9, 10, 8, 15, 136, 10, 5, 5, 16, 13, 16, 6, 8, 10, 4, 14, 6, 11, 12, 7, 9, 8, 13, 5, 24]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [5, 5, 8, 4, 4, 6, 9, 5, 17, 4, 9, 7, 6, 5, 4, 10, 5, 5, 12, 5, 5, 7, 8, 10, 4, 6, 9, 4, 3, 6, 5, 4, 12, 11, 4, 4, 7, 5, 6, 12, 4, 8, 6, 4, 9, 4, 126, 4, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 14, 7, 11, 16, 9, 10, 6, 4, 8, 5, 8, 7, 6, 5, 3, 8, 4, 8, 10, 16, 8, 12, 10, 10, 8, 6, 10, 12, 12, 10, 33, 9, 6, 4, 11, 11, 4, 14, 4, 9, 12, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [13, 5, 10, 5, 8, 3, 6, 5, 6, 4, 6, 4, 5, 8, 8, 4, 7, 4, 4, 4, 11, 7, 7, 3, 5, 4, 8, 3, 6, 8, 259, 8, 7, 4, 267, 6, 5, 6, 6, 6, 4, 6, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [12, 6, 7, 3, 7, 5, 7, 3, 4, 4, 7, 4, 6, 6, 6, 6, 4, 8, 5, 4, 99, 8, 9, 5, 6, 6, 7, 4, 8, 5, 6, 4, 39, 4, 10, 4, 4, 4, 4, 7, 5, 7, 48, 7, 9, 26, 6, 3, 519]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 8, 5, 4, 8, 5, 5, 6, 5, 6, 5, 21, 5, 7, 10, 6, 4, 6, 182, 4, 5, 4, 6, 7, 8, 9, 6, 10, 6, 11, 214, 11, 3, 5, 25, 20, 27, 7, 7, 40, 4, 183, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 11, 4, 8, 5, 6, 8, 6, 8, 8, 5, 4, 6, 10, 7, 3, 8, 6, 6, 8, 3, 7, 5, 7, 9, 6, 9, 5, 4, 7, 8, 7, 6, 7, 8, 3, 7, 5, 6, 6, 10, 34, 12, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [5, 5, 9, 8, 81, 6, 7, 16, 6, 10, 4, 6, 8, 9, 9, 6, 10, 11, 6, 7, 12, 6, 5, 8, 8, 8, 9, 5, 6, 9, 31, 7, 14, 8, 14, 9, 6, 6, 11, 9, 5, 6, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [14, 5, 4, 3, 76, 10, 8, 4, 9, 8, 12, 43, 6, 9, 5, 115, 8, 10, 8, 10, 7, 6, 11, 9, 4, 198, 6, 41, 4, 3, 10, 8, 4, 6, 8, 6, 8, 8, 5, 8, 8, 12, 13, 12, 4, 4, 12, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [5, 9, 8, 5, 10, 10, 9, 13, 5, 10, 6, 3, 22, 11, 8, 9, 12, 9, 6, 14, 6, 7, 9, 8, 8, 14, 11, 4, 4, 181, 12, 17, 7, 7, 7, 13, 11, 10, 4, 11, 6, 5, 13, 10, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 11, 5, 7, 4, 6, 4, 6, 10, 10, 4, 16, 9, 10, 135, 13, 8, 5, 9, 6, 4, 10, 6, 8, 10, 5, 4, 14, 9, 8, 8, 5, 11, 8, 8, 11, 9, 12, 7, 18, 8, 9, 13, 5, 198, 7, 7, 9, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [27, 14, 4, 11, 9, 9, 6, 11, 9, 7, 12, 12, 6, 9, 5, 125, 11, 8, 8, 9, 7, 8, 9, 10, 8, 7, 8, 9, 11, 11, 12, 10, 9, 11, 9, 10, 4, 8, 4, 8, 7, 11, 8, 7, 10, 7, 10, 10, 10, 10, 10, 5, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 11, 7, 9, 9, 8, 5, 53, 5, 8, 6, 9, 5, 12, 9, 34, 12, 7, 8, 6, 65, 9, 11, 10, 39, 12, 10, 8, 9, 7, 87, 8, 13, 5, 8, 5, 8, 12, 10, 6, 11, 11, 5, 7, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [4, 12, 7, 7, 12, 8, 9, 7, 10, 9, 8, 174, 10, 3, 5, 5, 16, 10, 8, 16, 53, 3, 32, 8, 62, 16, 7, 5, 14, 9, 7, 7, 6, 45, 10, 116, 9, 5, 10, 7, 8, 8, 265, 7, 15, 11, 10, 10, 51, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [13, 10, 7, 10, 10, 7, 4, 7, 8, 3, 11, 13, 9, 14, 9, 106, 251, 8, 4, 7, 16, 13, 4, 11, 6, 9, 10, 9, 20, 12, 5, 6, 6, 13, 4, 8, 8, 13, 10, 5, 12, 15, 7, 10, 12, 9, 9, 15, 5, 4, 10, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 6, 7, 7, 7, 8, 5, 11, 21, 9, 7, 6, 7, 6, 6, 11, 6, 4, 4, 5, 10, 5, 5, 8, 130, 10, 42, 9, 10, 4, 10, 4, 10, 8, 8, 11, 9, 11, 8, 8, 9, 9, 90, 8, 10, 8, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 4, 11, 9, 5, 9, 3, 6, 6, 4, 4, 5, 3, 4, 7, 7, 11, 10, 4, 6, 8, 8, 4, 5, 3, 12, 8, 10, 4, 7, 8, 11, 5, 4, 18, 4, 11, 7, 15, 5, 13, 6, 6, 7, 10, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [10, 8, 6, 8, 4, 8, 11, 10, 10, 9, 8, 12, 11, 10, 5, 35, 9, 8, 10, 5, 10, 12, 4, 11, 10, 10, 5, 7, 7, 10, 13, 25, 9, 6, 82, 12, 15, 9, 10, 7, 6, 6, 13, 476, 7, 10, 8, 7, 12, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [7, 13, 3, 9, 9, 6, 5, 6, 10, 4, 13, 13, 13, 8, 3, 8, 22, 128, 321, 9, 4, 4, 10, 5, 11, 4, 5, 6, 6, 9, 8, 4, 7, 8, 14, 11, 10, 10, 5, 7, 483, 13, 6, 5, 24, 5, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [14, 7, 4, 7, 6, 5, 7, 9, 7, 9, 8, 5, 5, 5, 6, 6, 5, 4, 4, 36, 34, 4, 6, 4, 8, 7, 5, 5, 6, 6, 7, 5, 11, 3, 45, 3, 7, 4, 8, 7, 5, 45, 5, 101, 47, 5, 7, 56, 5, 6, 8, 220]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [6, 11, 10, 4, 11, 6, 8, 12, 7, 6, 5, 6, 4, 5, 7, 7, 13, 14, 6, 8, 7, 7, 5, 9, 8, 4, 3, 30, 4, 8, 4, 13, 37, 6, 4, 6, 11, 8, 4, 5, 6, 9, 8, 6, 8, 39, 13, 6, 5, 497]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [14, 5, 4, 8, 10, 11, 4, 8, 12, 7, 6, 5, 4, 4, 9, 9, 5, 12, 4, 6, 5, 14, 6, 5, 10, 5, 11, 9, 36, 162, 7, 6, 10, 4, 5, 7, 4, 12, 10, 13, 7, 11, 8, 4, 5, 7, 11, 390]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [18, 5, 4, 10, 12, 6, 4, 6, 7, 3, 8, 5, 17, 7, 9, 15, 9, 9, 9, 10, 106, 9, 11, 4, 9, 7, 8, 5, 4, 6, 4, 41, 281, 6, 51, 3, 6, 63, 13, 7, 6, 22, 9, 5, 6, 17]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [15, 6, 6, 12, 4, 9, 6, 6, 11, 16, 9, 8, 7, 4, 5, 8, 8, 5, 4, 11, 6, 5, 13, 7, 6, 9, 11, 4, 12, 4, 6, 4, 12, 9, 4, 322, 7, 4, 7, 16, 380, 14, 4, 4, 6, 44, 6, 6, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [17, 10, 9, 3, 6, 10, 4, 8, 8, 4, 6, 6, 13, 9, 86, 446, 9, 4, 12, 8, 11, 3, 6, 10, 10, 4, 156, 11, 11, 5, 10, 8, 7, 4, 10, 12, 12, 11, 6, 9, 153, 8, 26, 10, 12, 13, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 11, 8, 6, 10, 10, 9, 7, 6, 104, 6, 8, 37, 7, 10, 7, 6, 4, 7, 12, 3, 8, 7, 8, 8, 4, 8, 3, 6, 8, 8, 10, 9, 7, 4, 6, 8, 12, 4, 12, 11, 7, 6, 207, 28, 7, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [8, 4, 10, 4, 8, 14, 8, 13, 8, 7, 8, 7, 11, 6, 11, 8, 4, 4, 4, 4, 6, 3, 9, 7, 6, 7, 19, 4, 6, 4, 10, 9, 84, 15, 43, 8, 11, 5, 4, 10, 6, 10, 4, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 11, 5, 9, 3, 6, 5, 16, 8, 5, 10, 9, 4, 4, 10, 4, 13, 10, 7, 230, 141, 14, 11, 9, 6, 10, 8, 16, 12, 11, 9, 14, 19, 8, 16, 12, 13, 209, 10, 4, 13, 4, 7, 5, 426, 7, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [7, 3, 14, 10, 4, 4, 8, 7, 9, 103, 4, 6, 7, 10, 8, 4, 15, 160, 6, 14, 3, 24, 27, 7, 5, 8, 5, 5, 10, 57, 15, 4, 13, 6, 5, 15, 8, 8, 32, 4, 10, 14, 5, 6, 15, 10, 11, 14, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [13, 7, 7, 12, 7, 6, 8, 51, 6, 8, 25, 10, 4, 3, 296, 17, 10, 7, 13, 3, 12, 4, 6, 8, 10, 4, 9, 7, 8, 9, 6, 7, 9, 8, 10, 10, 16, 6, 8, 6, 5, 18, 11, 6, 216, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [7, 9, 8, 9, 8, 5, 6, 8, 5, 10, 9, 6, 150, 9, 8, 9, 7, 7, 10, 8, 15, 67, 4, 9, 7, 5, 4, 8, 4, 9, 6, 9, 12, 23, 7, 9, 7, 6, 16, 6, 4, 8, 11, 12, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [15, 9, 9, 4, 4, 8, 8, 5, 4, 13, 7, 6, 10, 8, 10, 10, 12, 7, 16, 8, 3, 10, 5, 7, 6, 275, 8, 5, 11, 7, 35, 3, 6, 7, 4, 13, 14, 8, 8, 14, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 6, 4, 6, 6, 4, 5, 11, 5, 7, 10, 8, 14, 6, 9, 10, 6, 5, 7, 6, 160, 9, 7, 9, 7, 6, 4, 8, 6, 3, 4, 6, 7, 4, 37, 6, 4, 5, 8, 9, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [5, 7, 9, 10, 4, 8, 4, 11, 5, 7, 4, 10, 5, 9, 4, 6, 5, 31, 3, 8, 3, 13, 4, 7, 12, 4, 7, 6, 6, 6, 11, 4, 11, 11, 6, 12, 7, 12, 11, 11, 9, 6, 5, 7, 7, 49, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [4, 7, 6, 6, 5, 10, 9, 4, 4, 9, 8, 9, 4, 7, 4, 9, 13, 5, 4, 8, 3, 7, 6, 3, 8, 13, 5, 5, 6, 18, 6, 9, 12, 6, 35, 7, 9, 6, 10, 9, 10, 6, 5, 8, 17, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 10, 7, 5, 4, 7, 6, 9, 6, 5, 6, 6, 5, 9, 7, 6, 6, 4, 8, 6, 6, 6, 3, 9, 10, 9, 8, 8, 107, 8, 3, 7, 6, 7, 3, 7, 10, 9, 3, 10, 4, 7, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 5, 7, 4, 6, 6, 5, 6, 9, 7, 7, 4, 11, 8, 6, 5, 4, 4, 5, 32, 10, 4, 6, 9, 7, 5, 59, 8, 4, 148, 3, 5, 7, 5, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 5, 7, 10, 7, 9, 4, 16, 7, 4, 7, 10, 17, 8, 42, 9, 5, 11, 16, 30, 36, 30, 7, 30, 7, 11, 6, 36, 4, 4, 300, 5, 37, 35, 6, 6, 4, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 10, 12, 7, 4, 7, 6, 6, 4, 4, 6, 9, 5, 11, 28, 3, 29, 4, 5, 6, 5, 3, 6, 12, 4, 325, 8, 4, 4, 4, 4, 343, 18, 35, 4, 4, 4, 7, 16, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [4, 8, 10, 15, 14, 16, 4, 5, 9, 10, 15, 14, 6, 24, 6, 7, 27, 10, 12, 501, 9, 5, 21, 6, 5, 3, 11, 26, 135, 22, 9, 336, 22, 13, 5, 11, 25, 12, 4, 11, 23, 5, 26, 12, 31, 3, 300, 9, 178]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 8, 5, 18, 10, 9, 13, 64, 4, 11, 377, 4, 13, 11, 3, 292, 9, 12, 9, 11, 9, 11, 9, 4, 6, 10, 70, 4, 6, 12, 17, 7, 6, 9, 11, 6, 7, 10, 6, 9, 10, 53, 9, 11, 10, 362, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 4, 9, 10, 9, 8, 6, 10, 6, 12, 8, 4, 42, 8, 4, 6, 11, 13, 33, 10, 3, 101, 9, 42, 36, 9, 27, 32, 6, 33, 245, 14, 11, 35, 33, 9, 12, 10, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [2, 5, 3, 7, 5, 9, 6, 87, 6, 4, 4, 5, 32, 6, 10, 4, 412, 14, 8, 4, 15, 6, 9, 528, 181, 6, 3, 5, 3, 17, 3, 8, 9, 4, 4, 6, 6, 6, 6, 4, 4, 7, 7, 10, 142, 4, 44]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [5, 10, 8, 9, 7, 10, 8, 9, 7, 6, 10, 5, 9, 5, 7, 9, 16, 8, 7, 5, 13, 11, 7, 277, 6, 9, 7, 281, 10, 193, 8, 11, 6, 10, 13, 4, 6, 13, 20, 22, 6, 16, 10, 4, 6, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [16, 5, 4, 6, 4, 8, 6, 4, 6, 4, 10, 4, 5, 6, 6, 11, 10, 6, 3, 11, 4, 5, 6, 8, 6, 8, 3, 60, 39, 5, 7, 7, 7, 22, 4, 5, 8, 7, 6, 5, 5, 4, 7, 14, 8, 105, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [10, 7, 7, 4, 4, 4, 6, 6, 14, 7, 16, 4, 16, 10, 7, 6, 7, 77, 6, 4, 10, 4, 35, 10, 9, 6, 9, 17, 5, 7, 9, 12, 15, 11, 143, 56, 4, 12, 10, 10, 441, 10, 241, 17, 7, 7, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 5, 4, 7, 4, 6, 4, 8, 4, 4, 6, 5, 8, 4, 26, 4, 3, 5, 7, 46, 11, 47, 4, 175, 7, 8, 7, 4, 26, 4, 8, 5, 8, 7, 15, 5, 7, 9, 7, 80, 3, 46, 8, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 7, 6, 9, 4, 6, 3, 10, 11, 493, 11, 7, 25, 6, 4, 9, 8, 5, 3, 7, 5, 71, 10, 118, 11, 5, 9, 23, 10, 14, 7, 6, 26, 4, 7, 174, 12, 5, 6, 3, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [18, 9, 10, 2, 9, 6, 14, 4, 7, 8, 15, 11, 6, 14, 4, 4, 4, 11, 4, 13, 4, 6, 12, 19, 5, 7, 11, 7, 4, 10, 20, 6, 7, 11, 13, 16, 5, 10, 5, 4, 8, 6, 10, 13, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [6, 7, 12, 7, 9, 6, 11, 9, 6, 4, 10, 8, 10, 5, 8, 7, 6, 4, 7, 10, 10, 5, 7, 6, 8, 9, 11, 4, 7, 4, 8, 8, 5, 8, 8, 9, 6, 14, 6, 14, 7, 10, 5, 11, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [14, 4, 5, 6, 6, 4, 3, 4, 5, 4, 6, 5, 5, 4, 3, 4, 9, 4, 7, 18, 6, 6, 17, 4, 7, 5, 6, 7, 4, 3, 4, 11, 7, 5, 5, 5, 4, 6, 5, 8, 18]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 7, 7, 5, 10, 8, 5, 7, 7, 4, 9, 7, 36, 5, 9, 4, 9, 9, 3, 4, 7, 4, 10, 10, 6, 5, 8, 9, 7, 6, 7, 7, 10, 3, 10, 7, 8, 12, 4, 8, 9, 9, 4, 7, 8, 5, 5, 7, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [9, 11, 8, 11, 4, 4, 218, 4, 6, 4, 5, 5, 9, 14, 12, 6, 6, 6, 5, 170, 7, 5, 8, 5, 17, 9, 9, 9, 4, 4, 7, 29, 40, 4, 4, 4, 10, 5, 8, 9, 6, 10, 38, 5, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 7, 6, 4, 4, 9, 10, 4, 3, 9, 8, 4, 6, 6, 8, 5, 7, 5, 9, 7, 5, 4, 4, 7, 30, 5, 5, 4, 6, 4, 11, 5, 5, 9, 9, 6, 8, 5, 4, 26, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [10, 5, 5, 171, 8, 4, 8, 5, 8, 12, 5, 17, 4, 17, 4, 4, 8, 6, 5, 17, 7, 4, 5, 5, 24, 7, 6, 7, 6, 2, 313, 5, 22, 6, 4, 23, 6, 22, 15, 5, 5, 5, 165, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [14, 8, 8, 4, 10, 12, 12, 8, 5, 10, 228, 3, 20, 10, 498, 202, 3, 9, 3, 5, 7, 8, 12, 11, 10, 8, 9, 9, 10, 9, 43, 4, 12, 13, 10, 10, 11, 9, 23, 9, 10, 12, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 7, 5, 6, 11, 11, 10, 9, 5, 6, 8, 6, 131, 6, 8, 11, 16, 9, 3, 12, 10, 10, 11, 4, 6, 38, 10, 5, 10, 8, 10, 4, 7, 4, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [13, 9, 3, 4, 3, 5, 9, 4, 4, 17, 7, 4, 10, 7, 5, 4, 4, 8, 9, 5, 7, 5, 5, 4, 8, 11, 4, 9, 9, 6, 5, 5, 6, 5, 4, 5, 8, 241, 4, 5, 4, 3, 20, 5, 4, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 5, 4, 5, 4, 5, 4, 4, 4, 15, 6, 5, 8, 4, 6, 7, 4, 7, 6, 11, 4, 6, 8, 3, 3, 7, 8, 6, 6, 8, 5, 5, 6, 5, 7, 6, 5, 6, 4, 166, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [46, 12, 6, 8, 10, 10, 7, 8, 10, 8, 17, 9, 7, 4, 4, 11, 4, 20, 7, 7, 9, 8, 6, 5, 6, 9, 7, 9, 8, 6, 9, 11, 8, 8, 9, 11, 10, 9, 11, 232, 12, 49, 15, 315, 10, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [13, 13, 5, 4, 86, 3, 6, 4, 7, 9, 5, 9, 5, 12, 6, 8, 5, 3, 9, 6, 13, 10, 13, 4, 8, 7, 7, 13, 4, 8, 6, 4, 4, 7, 5, 5, 3, 8, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [42, 4, 6, 5, 4, 7, 3, 10, 7, 9, 6, 4, 224, 6, 7, 10, 5, 4, 78, 4, 4, 8, 5, 4, 13, 7, 7, 13, 5, 153, 46, 10, 10, 11, 6, 5, 9, 11, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 4, 6, 4, 4, 6, 4, 14, 4, 7, 4, 9, 9, 6, 3, 4, 8, 5, 16, 122, 12, 5, 20, 9, 15, 8, 10, 179, 14, 6, 5, 6, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 10, 4, 12, 6, 9, 4, 11, 6, 7, 9, 4, 8, 5, 4, 5, 5, 11, 4, 10, 6, 12, 4, 7, 8, 8, 7, 6, 22, 8, 7, 16, 6, 3, 7, 9, 48, 10, 4, 6, 4, 11, 16, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 4, 4, 4, 74, 5, 4, 6, 5, 5, 8, 10, 4, 18, 13, 5, 5, 8, 7, 4, 4, 10, 5, 4, 5, 3, 6, 7, 6, 400, 3, 7, 6, 5, 5, 9, 5, 13, 11, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 12, 15, 4, 4, 4, 4, 3, 3, 7, 3, 29, 7, 4, 4, 4, 35, 5, 21, 7, 28, 10, 4, 22, 4, 27, 6, 183, 5, 6, 28, 7, 7, 6, 5, 23, 5, 4, 5, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 3, 4, 4, 3, 4, 9, 4, 7, 5, 4, 5, 6, 4, 3, 7, 4, 20, 5, 5, 185, 99, 8, 10, 15, 34, 9, 7, 13, 3, 6, 6, 4, 6, 7, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [17, 4, 8, 4, 9, 12, 8, 9, 9, 4, 4, 25, 14, 7, 11, 11, 9, 12, 8, 9, 17, 4, 9, 4, 35, 12, 4, 11, 10, 9, 7, 6, 12, 6, 4, 8, 50, 13, 10, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [8, 5, 7, 7, 4, 4, 6, 5, 5, 3, 6, 7, 5, 5, 4, 8, 5, 9, 4, 6, 4, 7, 6, 16, 6, 7, 5, 5, 13, 8, 28, 7, 31, 7, 87, 5, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 7, 4, 4, 4, 4, 6, 3, 6, 5, 4, 6, 5, 7, 4, 6, 5, 13, 10, 3, 4, 4, 7, 6, 6, 4, 6, 101, 3, 9, 5, 4, 7, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 8, 6, 9, 6, 7, 10, 5, 12, 8, 6, 29, 7, 8, 10, 8, 4, 29, 9, 5, 10, 33, 9, 33, 7, 6, 10, 5, 35, 8, 31, 6, 29, 7, 440, 9, 14, 4, 12, 11, 462]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[8, 5, 8, 7, 6, 8, 6, 15, 6, 9, 4, 4, 5, 5, 6, 7, 5, 6, 9, 3, 4, 194, 4, 12, 233, 6, 15, 12, 5, 24, 6, 6, 11, 6, 10, 6, 11, 8, 6, 4, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [27, 10, 4, 5, 6, 6, 4, 6, 6, 9, 4, 7, 5, 8, 9, 12, 6, 4, 6, 4, 9, 4, 9, 9, 9, 7, 5, 7, 8, 9, 4, 5, 3, 4, 8, 4, 12, 9, 8, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [27, 19, 5, 12, 8, 5, 5, 7, 6, 6, 4, 4, 5, 4, 11, 8, 4, 6, 6, 4, 3, 8, 8, 7, 13, 4, 3, 4, 5, 5, 7, 11, 9, 8, 7, 6, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 5, 6, 5, 14, 3, 9, 5, 7, 14, 13, 203, 7, 7, 4, 7, 11, 7, 9, 7, 219, 7, 6, 4, 10, 10, 4, 6, 7, 50, 9, 9, 6, 16, 6, 5, 5, 8, 5, 15, 10, 10, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [18, 12, 9, 11, 4, 5, 9, 5, 9, 4, 6, 6, 9, 10, 416, 9, 9, 12, 12, 12, 9, 7, 7, 140, 13, 7, 11, 6, 14, 10, 58, 14, 7, 6, 9, 13, 10, 10, 10, 4, 11, 11, 12, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 10, 16, 12, 25, 10, 9, 10, 11, 10, 11, 9, 5, 29, 10, 10, 6, 7, 10, 10, 8, 9, 12, 9, 12, 10, 336, 84, 10, 9, 13, 10, 12, 10, 12, 10, 10, 4, 9, 10, 12, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [15, 7, 8, 4, 5, 4, 10, 4, 6, 9, 8, 3, 6, 6, 288, 8, 4, 3, 10, 8, 12, 9, 8, 51, 7, 11, 7, 12, 4, 7, 3, 13, 10, 4, 9, 12, 7, 7, 11, 10, 14, 13, 8, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [18, 5, 7, 8, 11, 8, 10, 5, 6, 9, 8, 5, 4, 9, 11, 8, 9, 6, 9, 9, 4, 6, 9, 8, 3, 24, 10, 10, 9, 8, 7, 9, 9, 12, 7, 7, 8, 7, 10, 15, 7, 8, 14, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [12, 4, 9, 4, 7, 4, 8, 9, 3, 7, 5, 11, 11, 6, 8, 8, 6, 10, 10, 10, 7, 12, 6, 9, 9, 10, 7, 10, 16, 6, 5, 10, 9, 7, 8, 12, 8, 5, 10, 10, 8, 8, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [5, 11, 4, 10, 6, 4, 5, 9, 5, 4, 9, 4, 14, 10, 4, 8, 4, 4, 13, 6, 9, 10, 9, 4, 10, 12, 7, 13, 8, 7, 7, 6, 94, 7, 11, 10, 5, 8, 9, 8, 12, 11, 10, 12, 8, 12, 82, 3, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 7, 9, 8, 6, 7, 9, 7, 10, 5, 8, 7, 9, 9, 8, 10, 7, 9, 12, 11, 6, 12, 7, 9, 11, 8, 7, 8, 9, 6, 7, 6, 6, 13, 9, 8, 5, 5, 5, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 16, 6, 8, 9, 5, 10, 6, 10, 10, 9, 8, 6, 29, 24, 9, 12, 16, 8, 24, 7, 14, 7, 7, 10, 7, 17, 15, 7, 9, 11, 8, 7, 9, 9, 7, 7, 66, 19, 10, 9, 9, 99, 14, 22, 10, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [3, 8, 6, 6, 9, 7, 7, 7, 6, 6, 9, 4, 8, 8, 3, 5, 10, 8, 4, 8, 9, 9, 7, 6, 7, 4, 9, 3, 8, 9, 4, 4, 7, 3, 6, 6, 4, 10, 4, 6, 4, 6, 8, 255, 7, 17]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [11, 9, 8, 4, 5, 8, 10, 5, 6, 9, 9, 4, 6, 4, 5, 8, 5, 7, 7, 8, 164, 5, 11, 8, 4, 8, 8, 7, 6, 10, 11, 4, 4, 12, 5, 6, 10, 4, 10, 4, 6, 11, 7, 8, 8, 5, 7, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [3, 7, 57, 9, 13, 9, 7, 7, 8, 10, 8, 8, 7, 7, 7, 7, 7, 7, 8, 4, 6, 9, 9, 6, 9, 8, 4, 20, 4, 23, 7, 9, 4, 6, 9, 6, 13, 8, 9, 12, 10, 64, 8, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [7, 11, 7, 5, 5, 8, 9, 5, 7, 15, 6, 6, 13, 13, 8, 10, 10, 13, 9, 9, 9, 13, 9, 6, 4, 10, 10, 9, 16, 14, 9, 13, 10, 8, 12, 9, 15, 16, 12, 18, 13, 59]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [10, 9, 11, 4, 10, 15, 10, 11, 9, 9, 8, 10, 7, 10, 7, 10, 5, 6, 6, 15, 15, 9, 11, 9, 14, 5, 9, 12, 9, 10, 10, 9, 11, 10, 8, 12, 8, 274, 21, 10, 9, 16, 8, 15, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [10, 8, 4, 6, 6, 11, 7, 7, 8, 9, 4, 5, 6, 7, 5, 7, 9, 5, 7, 7, 4, 4, 7, 9, 6, 7, 9, 9, 8, 7, 9, 7, 5, 6, 10, 7, 9, 8, 5, 6, 5, 4, 4, 6, 4, 9, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [6, 10, 8, 9, 10, 7, 7, 10, 13, 9, 16, 5, 9, 9, 10, 9, 9, 8, 9, 16, 6, 12, 9, 7, 9, 8, 9, 9, 4, 8, 7, 10, 4, 5, 17, 239, 7, 11, 8, 10, 9, 11, 13, 9, 11, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [5, 6, 7, 8, 6, 7, 6, 13, 4, 3, 4, 8, 11, 8, 8, 7, 307, 438, 13, 425, 8, 9, 9, 10, 73, 4, 4, 9, 9, 5, 7, 13, 8, 8, 9, 11, 13, 10, 9, 7, 6, 46, 5, 9, 11, 9, 8, 5, 9, 11, 8, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 3, 6, 7, 10, 9, 3, 3, 6, 11, 10, 3, 50, 7, 12, 5, 4, 10, 4, 505, 11, 7, 9, 6, 8, 14, 11, 298, 7, 4, 10, 9, 4, 6, 7, 7, 9, 5, 148, 7, 10, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 11, 9, 12, 12, 10, 9, 8, 18, 8, 8, 5, 8, 11, 5, 10, 7, 9, 8, 13, 8, 23, 8, 7, 16, 6, 15, 10, 50, 10, 8, 12, 8, 8, 12, 9, 193, 10, 11, 13, 11, 32, 41, 9, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [16, 8, 8, 6, 12, 11, 4, 10, 6, 8, 12, 4, 145, 7, 9, 12, 9, 9, 10, 7, 6, 9, 8, 11, 7, 7, 10, 10, 9, 8, 9, 63, 7, 11, 13, 8, 12, 28, 108, 14, 11, 9, 9, 11, 7, 33, 8, 10, 15, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [11, 10, 13, 9, 7, 13, 14, 7, 10, 8, 9, 10, 10, 9, 10, 13, 6, 7, 5, 16, 3, 7, 5, 11, 9, 13, 11, 8, 12, 11, 12, 8, 5, 9, 7, 6, 3, 8, 13, 6, 8, 11, 9, 4, 10, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [15, 12, 7, 6, 7, 10, 10, 12, 7, 7, 11, 6, 7, 11, 7, 12, 10, 10, 13, 7, 11, 11, 9, 8, 9, 15, 9, 7, 10, 7, 12, 13, 7, 7, 13, 151, 9, 6, 7, 11, 10, 10, 10, 12, 10, 9, 10, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 12, 9, 6, 3, 5, 6, 4, 13, 4, 4, 14, 8, 22, 4, 7, 10, 6, 4, 15, 5, 8, 13, 5, 5, 4, 10, 304, 16, 8, 10, 8, 9, 7, 264, 640, 10, 374, 8, 5, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 9, 7, 6, 7, 5, 5, 9, 11, 7, 8, 10, 5, 9, 5, 11, 72, 8, 6, 14, 29, 8, 4, 11, 7, 14, 4, 9, 9, 20, 13, 6, 7, 6, 5, 9, 7, 7, 10, 6, 13, 359, 9, 9, 7, 6, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 10, 13, 8, 11, 11, 13, 10, 11, 12, 8, 11, 12, 7, 7, 4, 6, 10, 7, 317, 5, 9, 10, 10, 4, 530, 4, 15, 6, 10, 10, 216, 424, 13, 11, 6, 6, 187, 22, 10, 16, 9, 4, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [31, 8, 13, 7, 10, 4, 11, 10, 14, 4, 13, 11, 14, 5, 9, 4, 12, 10, 10, 10, 11, 15, 12, 6, 8, 8, 13, 8, 6, 14, 5, 4, 14, 5, 8, 6, 13, 9, 11, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 8, 6, 6, 8, 9, 10, 8, 11, 7, 6, 5, 6, 4, 6, 9, 6, 9, 10, 7, 8, 9, 9, 89, 6, 6, 7, 13, 7, 6, 6, 8, 13, 11, 8, 6, 8, 7, 9, 89, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 9, 7, 8, 7, 5, 7, 8, 11, 13, 9, 6, 5, 8, 12, 13, 4, 13, 11, 4, 8, 10, 13, 67, 9, 10, 11, 8, 9, 7, 9, 7, 6, 4, 4, 10, 6, 10, 10, 10, 9, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [15, 13, 9, 8, 6, 8, 8, 5, 7, 10, 7, 4, 9, 12, 23, 8, 12, 7, 10, 6, 9, 16, 7, 9, 9, 8, 8, 19, 4, 7, 14, 9, 7, 10, 11, 9, 6, 10, 12, 15, 11, 8, 7, 8, 7, 5, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [8, 4, 9, 4, 5, 4, 9, 7, 11, 4, 12, 5, 10, 9, 38, 280, 6, 4, 5, 10, 11, 8, 4, 5, 4, 10, 9, 4, 7, 9, 78, 6, 9, 4, 5, 5, 67, 6, 9, 312, 8, 9, 8, 3, 11, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 8, 9, 9, 8, 4, 6, 4, 25, 33, 12, 5, 4, 9, 6, 12, 11, 11, 10, 14, 6, 7, 6, 12, 13, 7, 445, 10, 5, 5, 13, 8, 10, 11, 5, 15, 9, 6, 10, 7, 5, 9, 7, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [14, 8, 12, 6, 9, 7, 11, 5, 11, 6, 10, 10, 6, 8, 6, 11, 15, 6, 8, 8, 6, 7, 4, 11, 9, 10, 8, 8, 4, 9, 9, 9, 10, 11, 4, 9, 10, 9, 9, 7, 9, 22, 61, 9, 9, 10, 8, 4, 11, 8, 9, 11, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 8, 9, 6, 9, 10, 10, 11, 12, 18, 10, 10, 474, 6, 8, 12, 11, 12, 3, 9, 7, 32, 13, 8, 10, 8, 14, 8, 4, 8, 5, 10, 10, 11, 15, 13, 9, 555, 9, 13, 36, 10, 9, 76, 13, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [10, 4, 9, 5, 9, 6, 7, 7, 8, 9, 6, 6, 10, 7, 11, 7, 4, 5, 8, 85, 9, 4, 9, 6, 11, 7, 11, 8, 9, 5, 8, 12, 4, 8, 7, 6, 6, 8, 9, 10, 7, 12, 9, 6, 4, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [15, 7, 7, 7, 4, 8, 7, 9, 6, 4, 5, 3, 4, 4, 9, 4, 10, 9, 6, 7, 9, 6, 14, 6, 5, 8, 4, 6, 5, 4, 8, 11, 3, 4, 182, 6, 38, 77, 4, 3, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 6, 8, 4, 10, 7, 9, 4, 10, 9, 12, 10, 6, 6, 7, 16, 10, 10, 8, 8, 8, 8, 6, 4, 6, 14, 9, 12, 5, 11, 9, 379, 5, 5, 3, 10, 282, 6, 9, 8, 6, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [6, 8, 10, 4, 10, 4, 8, 4, 7, 5, 8, 4, 7, 14, 11, 4, 9, 9, 5, 5, 4, 6, 3, 12, 11, 8, 6, 10, 6, 7, 7, 7, 7, 6, 9, 29, 5, 8, 4, 16, 4, 7, 36, 7, 8, 19, 6, 5, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [4, 12, 9, 4, 12, 5, 4, 7, 4, 7, 10, 5, 4, 8, 7, 10, 8, 4, 4, 6, 8, 6, 9, 5, 4, 8, 7, 3, 4, 5, 6, 8, 6, 4, 15, 4, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 7, 7, 8, 7, 10, 5, 8, 5, 7, 6, 12, 8, 11, 9, 9, 5, 4, 253, 5, 9, 4, 8, 7, 4, 8, 6, 11, 12, 7, 9, 11, 4, 12, 4, 5, 8, 5, 8, 12, 8, 11, 11, 10, 4, 45, 10, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [6, 9, 5, 4, 10, 3, 4, 7, 7, 9, 13, 7, 11, 4, 10, 165, 6, 5, 8, 10, 4, 6, 11, 7, 3, 6, 9, 8, 8, 7, 7, 9, 4, 10, 11, 4, 7, 669, 4, 7, 5, 11, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [7, 5, 10, 7, 8, 4, 4, 8, 5, 4, 4, 8, 7, 8, 9, 11, 8, 4, 4, 4, 5, 5, 8, 7, 14, 3, 3, 10, 13, 10, 4, 6, 9, 10, 5, 5, 7, 8, 7, 3, 4, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [7, 10, 13, 8, 8, 8, 10, 9, 9, 11, 11, 10, 12, 12, 5, 10, 49, 6, 10, 4, 11, 10, 6, 8, 13, 25, 11, 13, 11, 5, 8, 8, 7, 16, 7, 124, 9, 6, 10, 8, 8, 4, 7, 5, 6, 16, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [12, 6, 3, 4, 4, 6, 14, 4, 6, 4, 7, 12, 6, 7, 13, 10, 8, 19, 8, 8, 9, 9, 8, 9, 9, 8, 4, 23, 8, 8, 12, 9, 10, 12, 7, 7, 9, 8, 19, 6, 6, 5, 6, 7, 8, 16, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 8, 9, 10, 9, 7, 9, 10, 6, 16, 12, 6, 17, 10, 12, 10, 10, 4, 3, 8, 8, 12, 9, 15, 10, 6, 22, 33, 9, 7, 11, 12, 11, 10, 14, 6, 11, 11, 7, 10, 10, 10, 12, 9, 5, 8, 55]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [3, 9, 4, 9, 6, 5, 8, 11, 11, 16, 4, 9, 15, 6, 6, 9, 5, 38, 6, 6, 11, 6, 6, 8, 16, 4, 9, 5, 6, 8, 4, 9, 6, 262, 6, 9, 7, 8, 13, 6, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 5, 15, 8, 10, 6, 4, 6, 6, 5, 5, 6, 16, 14, 6, 7, 19, 16, 6, 6, 4, 6, 12, 24, 5, 18, 15, 7, 9, 13, 4, 15, 7, 34, 15, 16, 7, 19, 9, 5, 5, 7, 5, 6, 12]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [4, 13, 5, 14, 13, 12, 6, 5, 13, 16, 16, 224, 12, 13, 12, 8, 14, 7, 3, 12, 13, 15, 12, 13, 13, 12, 12, 14, 20, 14, 15, 15, 4, 11, 12, 17, 12, 13, 14, 14, 14, 124, 14, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 8, 4, 11, 11, 7, 8, 4, 10, 12, 8, 8, 14, 11, 10, 10, 4, 11, 12, 9, 10, 12, 14, 10, 18, 7, 11, 15, 7, 5, 9, 9, 14, 200, 8, 11, 10, 4, 9, 9, 10, 6, 11, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 7, 8, 6, 4, 10, 236, 8, 5, 88, 47, 5, 10, 9, 9, 4, 11, 11, 11, 8, 119, 7, 11, 2, 3, 5, 11, 4, 50, 7, 9, 20, 8, 8, 9, 11, 5, 7, 6, 10, 11, 11, 8, 9, 196, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [5, 15, 14, 12, 11, 10, 11, 11, 10, 10, 16, 6, 6, 9, 9, 17, 15, 9, 19, 12, 3, 258, 6, 11, 14, 4, 16, 12, 13, 5, 14, 9, 10, 9, 17, 8, 13, 4, 16, 14, 9, 11, 5, 9, 7, 66, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [3, 6, 7, 6, 5, 5, 8, 14, 13, 7, 7, 9, 12, 3, 5, 7, 12, 18, 15, 15, 12, 7, 9, 6, 10, 10, 199, 7, 9, 5, 7, 15, 5, 6, 7, 15, 14, 12, 7, 25, 6, 7, 8, 6, 6, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 7, 5, 4, 6, 4, 8, 8, 6, 5, 4, 9, 12, 23, 3, 4, 8, 5, 58, 5, 107, 8, 5, 6, 5, 4, 9, 155, 5, 5, 5, 6, 4, 9, 5, 5, 16, 17, 5, 4, 174, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [20, 10, 9, 10, 4, 6, 4, 6, 11, 4, 4, 5, 4, 33, 10, 3, 4, 4, 8, 13, 8, 6, 13, 4, 18, 110, 9, 10, 6, 5, 3, 4, 19, 12, 5, 4, 4, 5, 12, 18, 12, 5, 62]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [4, 9, 7, 8, 6, 15, 6, 8, 4, 4, 15, 4, 14, 7, 7, 18, 8, 5, 9, 7, 35, 7, 9, 6, 9, 13, 8, 7, 7, 4, 4, 7, 5, 9, 8, 9, 10, 18, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [12, 9, 11, 4, 12, 6, 4, 8, 7, 12, 8, 11, 9, 18, 8, 10, 10, 8, 10, 5, 9, 4, 3, 4, 4, 16, 8, 12, 3, 9, 6, 9, 11, 7, 6, 437, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [20, 9, 9, 8, 9, 7, 6, 7, 9, 7, 6, 10, 12, 4, 6, 8, 9, 7, 5, 14, 13, 6, 21, 11, 4, 12, 8, 6, 10, 10, 11, 8, 8, 7, 20, 9, 9, 328, 4, 18, 6, 12, 26, 27, 19]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 7, 5, 7, 9, 13, 13, 9, 22, 254, 4, 4, 3, 4, 7, 4, 6, 5, 5, 6, 4, 5, 11, 4, 3, 5, 9]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [3, 9, 6, 15, 9, 9, 6, 8, 6, 10, 10, 7, 9, 4, 6, 9, 6, 5, 7, 7, 4, 6, 9, 8, 8, 10, 7, 9, 6, 9, 9, 12, 9, 6, 9, 42, 6, 13, 10, 8, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 7, 6, 3, 6, 5, 4, 6, 4, 5, 11, 7, 386, 6, 7, 5, 5, 10, 4, 5, 4, 4, 5, 4, 6, 5, 6, 4, 9, 3, 5, 6, 5, 6, 4, 4, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [4, 5, 8, 4, 9, 4, 248, 6, 4, 12, 4, 7, 9, 5, 6, 6, 7, 6, 3, 4, 11, 5, 4, 5, 3, 7, 4, 7, 7, 25, 4, 6, 5, 8, 9, 8, 3]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [9, 5, 6, 6, 8, 7, 7, 8, 8, 8, 8, 6, 397, 6, 7, 5, 8, 12, 6, 7, 7, 15, 13, 7, 8, 6, 6, 6, 5, 6, 6, 7, 9, 5, 7, 6, 7, 6, 8, 7, 7, 6, 10, 12, 10, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 3, 8, 5, 8, 4, 4, 6, 4, 4, 9, 4, 10, 6, 10, 13, 5, 12, 5, 11, 2, 7, 4, 4, 6, 8, 13, 12, 8, 6, 5, 10, 9, 2]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 7, 4, 5, 3, 5, 5, 5, 4, 7, 5, 8, 4, 98, 8, 6, 10, 8, 7, 8, 4, 5, 6, 8, 125, 8, 4, 13, 4, 4, 18, 11, 6, 5, 4, 5, 6, 17, 103, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [19, 6, 8, 7, 5, 10, 4, 11, 7, 5, 9, 5, 7, 148, 18, 6, 5, 8, 8, 4, 7, 10, 4, 6, 7, 7, 9, 8, 4, 12, 7, 6, 6, 6, 8, 9, 6, 6, 16, 10, 5, 6, 14, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [10, 5, 8, 4, 4, 4, 8, 7, 6, 8, 7, 5, 10, 8, 4, 7, 5, 7, 20, 4, 7, 8, 13, 7, 11, 12, 3, 15, 14, 8, 8, 11, 9, 12, 6, 13, 6, 8, 12, 10, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 9, 4, 7, 8, 13, 4, 18, 4, 9, 8, 4, 9, 9, 6, 10, 5, 8, 15, 9, 8, 14, 14, 4, 8, 7, 9, 9, 11, 22, 5, 10, 5, 7, 5, 5, 7, 13, 14, 14, 4, 66]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [21, 6, 10, 10, 7, 4, 10, 6, 4, 6, 7, 7, 10, 21, 33, 9, 9, 3, 9, 12, 7, 17, 7, 6, 9, 9, 4, 12, 4, 9, 8, 13, 11, 9, 10, 8, 8, 8, 10, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [15, 5, 9, 6, 7, 5, 9, 8, 4, 4, 7, 8, 7, 5, 9, 6, 6, 4, 6, 7, 7, 4, 8, 8, 8, 7, 6, 4, 9, 5, 7, 7, 5, 6, 7, 5, 8, 4, 4, 8, 9, 12, 32]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [5, 5, 12, 8, 15, 4, 7, 8, 5, 4, 7, 8, 16, 7, 15, 4, 7, 6, 9, 4, 6, 7, 4, 8, 9, 7, 8, 7, 5, 411, 12, 8, 4, 13, 5, 7, 17, 13, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [17, 6, 5, 12, 11, 9, 9, 8, 65, 8, 10, 7, 9, 5, 94, 10, 2, 10, 7, 124, 9, 7, 10, 7, 15, 7, 7, 18, 15, 5, 11, 7, 12, 14, 14, 6, 12, 7, 8, 6, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [17, 7, 4, 4, 4, 7, 3, 14, 12, 16, 17, 16, 9, 7, 14, 11, 13, 6, 13, 5, 21, 13, 4, 6, 4, 9, 4, 9, 13, 14, 14, 7, 15, 14, 14, 9, 6, 7, 9, 9, 13, 11, 14, 152, 12, 12, 8, 20]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [10, 8, 7, 9, 9, 6, 8, 4, 9, 7, 7, 90, 10, 99, 11, 14, 7, 9, 8, 6, 8, 11, 37, 5, 11, 11, 5, 8, 5, 9, 8, 11, 11, 7, 4, 7, 8, 14, 42, 4, 13, 9, 7, 8, 7, 3, 7, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 10, 10, 12, 10, 12, 6, 10, 10, 8, 14, 7, 13, 4, 7, 9, 5, 10, 12, 7, 8, 10, 8, 13, 10, 9, 10, 13, 13, 12, 13, 11, 12, 11, 12, 11, 10, 6, 8, 16, 12, 11, 11, 18, 13, 14, 295, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [5, 11, 16, 6, 7, 15, 14, 11, 14, 22, 15, 17, 9, 15, 16, 13, 14, 16, 21, 13, 14, 19, 13, 18, 14, 17, 13, 9, 14, 15, 12, 14, 11, 14, 17, 6, 80, 14, 17, 14, 16, 16, 133, 15, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [18, 6, 7, 8, 6, 9, 5, 14, 14, 4, 6, 8, 4, 15, 15, 9, 9, 8, 4, 7, 7, 8, 7, 7, 6, 7, 6, 8, 17, 5, 8, 3, 6, 6, 7, 7, 7, 5, 5, 22, 8, 2, 6, 8, 4, 6, 7, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [12, 5, 4, 17, 4, 10, 6, 5, 10, 8, 7, 5, 10, 6, 7, 4, 166, 8, 9, 5, 11, 17, 6, 7, 6, 5, 6, 11, 8, 13, 7, 9, 7, 6, 4, 10, 9, 7, 4, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [16, 7, 7, 7, 19, 10, 7, 5, 7, 4, 9, 7, 7, 6, 5, 13, 7, 7, 8, 4, 9, 7, 14, 8, 16, 9, 7, 10, 5, 6, 7, 8, 6, 7, 7, 4, 8, 10, 11, 6, 5, 7, 18, 7, 7, 8, 199, 8, 147, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [16, 10, 7, 10, 12, 10, 26, 9, 7, 11, 18, 8, 10, 11, 6, 8, 33, 3, 16, 19, 10, 21, 12, 16, 12, 9, 17, 12, 11, 7, 8, 6, 10, 7, 15, 4, 8, 11, 8, 11, 6, 11, 12, 4, 16, 20, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [23, 10, 18, 15, 6, 6, 6, 8, 15, 10, 14, 15, 15, 11, 11, 191, 9, 16, 15, 7, 8, 7, 14, 9, 8, 9, 7, 14, 7, 204, 11, 6, 9, 8, 6, 7, 9, 6, 4, 9, 4, 9, 9, 9, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [14, 14, 8, 8, 6, 14, 5, 4, 10, 11, 11, 12, 21, 10, 10, 19, 11, 11, 6, 9, 13, 10, 15, 10, 4, 15, 18, 13, 24, 4, 4, 10, 4, 4, 9, 7, 4, 13, 14, 13, 14, 16, 4, 7, 12, 10, 9, 15, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 10, 9, 7, 10, 11, 8, 6, 5, 3, 5, 152, 2, 4, 11, 6, 12, 6, 8, 7, 8, 10, 6, 8, 5, 3, 270, 10, 14, 7, 8, 9, 8, 7, 11, 11, 11, 12, 3, 5, 10, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [6, 11, 11, 10, 8, 12, 8, 8, 10, 8, 10, 9, 8, 8, 8, 9, 9, 9, 8, 9, 8, 8, 10, 8, 12, 10, 11, 8, 10, 9, 527, 11, 12, 8, 9, 4, 10, 11, 9, 10, 6, 12, 7, 7, 9, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [26, 8, 6, 8, 11, 5, 9, 9, 8, 7, 8, 8, 8, 142, 8, 9, 12, 9, 12, 6, 8, 12, 9, 11, 8, 8, 9, 8, 12, 9, 11, 10, 10, 11, 7, 9, 181, 14, 7, 7, 11, 10, 12, 10, 10, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 7, 10, 5, 7, 10, 350, 8, 8, 6, 8, 8, 8, 5, 9, 10, 10, 10, 14, 7, 7, 7, 11, 7, 10, 3, 11, 7, 5, 10, 9, 7, 61, 6, 16, 340, 9, 8, 9, 5, 5, 15, 7, 13, 12, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [6, 12, 8, 9, 4, 4, 4, 4, 15, 8, 11, 9, 11, 4, 5, 10, 11, 5, 10, 11, 14, 9, 11, 6, 7, 9, 11, 7, 11, 8, 8, 8, 12, 11, 8, 6, 14, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [4, 7, 10, 7, 8, 7, 9, 9, 6, 15, 6, 6, 15, 7, 4, 6, 4, 4, 5, 7, 6, 8, 11, 3, 7, 8, 5, 9, 5, 4, 4, 6, 4, 7, 9, 4, 4, 4, 6, 7, 8, 18, 7, 12, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 7, 4, 9, 6, 7, 6, 5, 9, 7, 10, 475, 6, 7, 9, 7, 11, 7, 8, 7, 4, 4, 4, 10, 8, 6, 7, 4, 9, 5, 9, 129, 9, 4, 7, 6, 8, 11, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [19, 5, 7, 6, 5, 9, 9, 7, 7, 15, 11, 7, 9, 6, 6, 7, 9, 10, 8, 5, 6, 5, 7, 9, 10, 9, 10, 6, 5, 12, 7, 10, 8, 3, 12, 12, 9, 13, 4, 52, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [3, 8, 16, 7, 6, 6, 9, 17, 6, 6, 10, 16, 7, 18, 13, 76, 7, 14, 198, 8, 13, 8, 11, 9, 8, 13, 6, 4, 13, 7, 10, 7, 8, 10, 8, 9, 9, 7, 15, 17, 5, 17, 4, 8, 255, 11, 6, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [4, 7, 9, 10, 6, 4, 3, 21, 3, 4, 5, 10, 213, 9, 10, 9, 4, 9, 8, 6, 6, 9, 3, 12, 3, 7, 11, 9, 9, 8, 14, 8, 8, 58, 9, 10, 7, 10, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [3, 7, 10, 6, 10, 8, 5, 6, 7, 9, 12, 93, 8, 7, 11, 8, 9, 8, 9, 5, 5, 7, 13, 147, 6, 7, 8, 8, 8, 8, 10, 8, 5, 7, 8, 10, 8, 4, 4, 8, 13, 24, 275]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [7, 8, 14, 4, 6, 7, 13, 6, 15, 10, 13, 9, 7, 15, 7, 9, 16, 14, 3, 14, 12, 14, 13, 12, 8, 5, 7, 12, 8, 15, 14, 8, 3, 10, 10, 16, 7, 56, 9, 10, 6, 8, 5, 16, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [6, 9, 12, 15, 11, 16, 9, 10, 8, 13, 7, 16, 13, 14, 13, 26, 9, 13, 14, 15, 14, 101, 11, 9, 15, 12, 8, 9, 10, 13, 11, 14, 10, 11, 10, 14, 9, 13, 14, 12, 12, 6, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [5, 6, 13, 14, 8, 9, 10, 6, 6, 13, 16, 188, 14, 17, 8, 8, 12, 5, 12, 6, 14, 11, 10, 12, 11, 4, 5, 3, 12, 11, 12, 10, 8, 11, 6, 18, 10, 72, 12, 9, 15, 9, 13, 7, 21, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [3, 10, 10, 7, 9, 8, 11, 8, 8, 7, 10, 10, 3, 11, 11, 9, 9, 9, 6, 13, 8, 6, 12, 3, 9, 9, 9, 7, 8, 6, 6, 6, 10, 10, 34, 8, 10, 9, 8, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [15, 13, 13, 7, 14, 6, 6, 15, 7, 9, 6, 14, 14, 14, 15, 15, 16, 14, 9, 15, 17, 15, 9, 7, 13, 6, 14, 10, 6, 6, 8, 7, 150, 9, 7, 10, 13, 8, 10, 16, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 11, 11, 13, 6, 9, 10, 9, 6, 10, 7, 9, 5, 7, 9, 7, 12, 9, 11, 9, 9, 13, 8, 10, 8, 11, 15, 12, 9, 11, 12, 11, 13, 4, 9, 8, 9, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [9, 5, 15, 12, 8, 9, 4, 5, 185, 8, 13, 11, 11, 12, 9, 10, 11, 8, 10, 4, 11, 9, 9, 4, 13, 12, 11, 8, 6, 14, 9, 9, 10, 9, 9, 7, 12, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 10, 14, 4, 5, 15, 4, 5, 8, 8, 16, 26, 18, 27, 10, 8, 12, 9, 5, 5, 9, 9, 5, 5, 5, 10, 7, 22, 10, 15, 11, 115, 17, 17, 13, 13, 42, 11, 8, 9, 11, 6, 13, 9, 7, 2]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [4, 5, 9, 9, 48, 11, 9, 9, 17, 12, 180, 12, 11, 11, 6, 16, 6, 10, 6, 11, 10, 11, 7, 4, 9, 10, 6, 14, 8, 2, 5, 16, 10, 11, 8, 10, 10, 10, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [8, 10, 10, 10, 10, 14, 4, 8, 10, 6, 6, 5, 6, 10, 6, 8, 8, 16, 14, 8, 8, 8, 5, 13, 5, 237, 12, 9, 15, 8, 288, 10, 15, 15, 8, 3, 8, 8, 9, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [11, 11, 7, 12, 10, 8, 12, 11, 14, 7, 16, 9, 12, 8, 4, 10, 10, 10, 11, 11, 14, 21, 9, 12, 12, 12, 12, 14, 13, 9, 12, 11, 11, 13, 9, 28, 12, 17, 11, 11, 18, 31, 53, 9, 14, 14]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 6, 7, 4, 9, 7, 4, 8, 12, 7, 4, 5, 7, 5, 4, 6, 8, 6, 4, 11, 9, 7, 10, 4, 9, 7, 7, 3, 6, 11, 4, 10, 11, 8, 11, 9, 7, 11, 4, 8, 8, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [8, 10, 12, 15, 9, 4, 4, 14, 4, 15, 15, 7, 4, 14, 11, 4, 6, 15, 9, 11, 7, 10, 14, 10, 13, 14, 15, 46, 14, 16, 13, 20, 13, 15, 7, 15, 13, 6, 3, 7, 14, 13, 15]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [3, 6, 12, 8, 8, 10, 5, 13, 10, 11, 11, 12, 11, 6, 8, 15, 11, 262, 4, 9, 10, 9, 9, 14, 11, 12, 11, 14, 11, 11, 6, 8, 4, 12, 10, 7, 9, 12, 4, 11, 4, 12, 12, 9, 12, 11, 7, 12, 13]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [5, 12, 4, 9, 8, 9, 6, 13, 18, 11, 10, 6, 8, 6, 6, 11, 4, 7, 12, 10, 9, 7, 8, 14, 8, 11, 13, 17, 4, 9, 7, 10, 9, 9, 6, 429, 8, 4, 10, 11, 120, 7, 7, 10, 10, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 8, 9, 9, 7, 10, 13, 5, 9, 9, 14, 179, 12, 9, 10, 8, 10, 11, 9, 11, 11, 8, 11, 18, 69, 12, 9, 12, 10, 588, 10, 9, 12, 8, 14, 10, 7, 10, 8, 11, 262, 31, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 5, 6, 12, 13, 12, 13, 4, 9, 11, 4, 5, 13, 4, 10, 15, 5, 4, 48, 4, 6, 4, 12, 12, 15, 5, 4, 8, 5, 13, 16, 5, 11, 8, 5, 6, 12, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [3, 8, 7, 6, 13, 6, 7, 12, 4, 7, 10, 12, 9, 5, 5, 12, 8, 6, 12, 8, 412, 3, 5, 7, 8, 4, 7, 5, 4, 2, 7, 344]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 7, 5, 7, 7, 6, 3, 6, 7, 5, 225, 8, 9, 6, 9, 6, 6, 5, 5, 5, 4, 9, 8, 7, 8, 7, 10, 6, 9, 8, 8, 4, 3, 12, 8, 7, 7, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [5, 8, 10, 12, 8, 4, 9, 6, 4, 4, 9, 329, 4, 10, 7, 10, 8, 9, 10, 12, 11, 6, 13, 8, 12, 11, 6, 13, 12, 13, 4, 10, 7, 10, 8, 11, 9, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [10, 7, 11, 13, 11, 6, 8, 155, 9, 7, 9, 7, 6, 6, 4, 6, 7, 9, 2, 8, 7, 7, 10, 10, 5, 10, 7, 5, 11, 7, 9, 6, 15, 7, 9, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 4, 5, 4, 11, 7, 7, 8, 5, 6, 6, 5, 10, 5, 8, 10, 6, 8, 5, 299, 4, 203, 9, 4, 11, 5, 22, 7, 31, 20, 11]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [6, 10, 13, 5, 10, 11, 7, 14, 8, 12, 7, 12, 5, 10, 8, 11, 9, 10, 12, 15, 5, 324, 16, 15, 12, 11, 12, 11, 12, 12, 15, 12, 13, 7, 14, 10, 15, 12, 5, 16, 15, 8, 7, 13, 5, 11, 9, 9, 235]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 16, 11, 9, 12, 9, 4, 9, 9, 5, 11, 9, 6, 5, 6, 12, 10, 10, 3, 5, 10, 9, 8, 13, 9, 11, 11, 5, 12, 9, 8, 10, 12, 6, 11, 143, 12, 7, 9, 12, 11, 10, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [3, 5, 8, 6, 9, 8, 8, 12, 6, 10, 7, 5, 10, 13, 11, 8, 6, 9, 4, 10, 9, 5, 21, 9, 7, 10, 6, 10, 31, 8, 11, 14, 7, 10, 15, 9, 10, 12, 16, 5, 6, 11, 8, 10, 11, 27, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [7, 10, 8, 12, 8, 10, 12, 11, 10, 11, 9, 11, 7, 8, 11, 9, 13, 90, 9, 10, 11, 6, 11, 10, 10, 12, 25, 11, 9, 8, 9, 11, 10, 10, 13, 9, 11, 20, 11, 15, 10, 8, 14, 7, 11, 11, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [11, 9, 11, 9, 8, 9, 6, 5, 6, 10, 7, 10, 345, 5, 10, 6, 9, 9, 123, 7, 8, 7, 8, 6, 5, 8, 12, 9, 6, 8, 15, 12, 9, 11, 9, 6, 8, 8, 11, 7, 7, 8, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [6, 8, 11, 9, 8, 8, 8, 8, 7, 10, 8, 10, 9, 9, 6, 6, 4, 8, 10, 14, 8, 4, 6, 10, 8, 8, 6, 5, 8, 12, 8, 8, 11, 5, 7, 7, 8, 9, 8, 10, 8, 9, 9, 8, 6, 8, 9, 10, 8]
length(C_list) = 37
termination_sub = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [12, 11, 8, 12, 12, 6, 10, 9, 9, 4, 12, 10, 7, 10, 11, 6, 11, 9, 6, 11, 11, 11, 4, 11, 9, 11, 9, 8, 7, 11, 8, 10, 5, 7, 6, 11, 12, 9, 6, 9, 10, 10, 4, 9, 8, 14, 10, 12, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [11, 8, 8, 3, 9, 7, 5, 8, 4, 9, 3, 10, 7, 5, 9, 10, 8, 4, 7, 9, 286, 9, 8, 6, 8, 579, 9, 8, 7, 11, 204, 6, 11, 8, 4, 183, 7, 6, 7, 391, 12, 9, 9, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [5, 8, 8, 4, 4, 4, 7, 7, 9, 4, 8, 268, 5, 4, 9, 6, 6, 6, 8, 7, 7, 7, 9, 3, 4, 12, 7, 5, 132, 6, 4, 7, 9, 6, 5, 5, 15, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [7, 4, 9, 6, 4, 7, 7, 8, 4, 9, 6, 8, 7, 5, 15, 5, 9, 4, 10, 8, 4, 402, 9, 4, 6, 8, 5, 7, 8, 11, 8, 13, 5, 6, 6, 4, 5, 6, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 4, 3, 7, 15, 3, 192, 9, 5, 4, 5, 3, 4, 3, 8, 8, 6, 3, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 4, 7, 4, 3, 7, 5, 7, 4, 5, 24, 9, 4, 5, 5, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 3, 3, 3, 3, 5, 3, 7, 6, 8, 3, 4, 3, 4, 3, 4, 17, 3, 451, 5, 4, 82, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [13, 3, 6, 3, 4, 2, 4, 3, 4, 6, 3, 5, 4, 7, 5, 4, 3, 46, 3, 4, 4, 7, 6, 4, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [15, 4, 4, 3, 4, 3, 3, 3, 6, 6, 4, 361, 4, 3, 9, 2, 3, 7, 6, 4, 4, 4, 2, 4, 5, 4, 6, 7, 3, 3, 2, 5, 3, 2, 4, 4, 5, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 5, 8, 6, 4, 2, 3, 5, 4, 3, 4, 4, 3, 35, 5, 6, 4, 4, 2, 4, 3, 3, 3, 5, 3, 3, 2, 12, 3, 47, 4, 3, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 8, 3, 9, 6, 2, 5, 4, 3, 5, 6, 2, 4, 5, 4, 3, 3, 5, 9, 7, 4, 6, 5, 6, 207, 6, 3, 5, 3, 9, 5, 3, 3, 4, 3, 570, 143, 5, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 3, 6, 3, 5, 5, 11, 3, 3, 5, 6, 3, 6, 4, 4, 6, 5, 4, 5, 4, 3, 6, 4, 23, 7, 6, 5, 3, 6, 32, 6, 4, 3, 4, 3, 5, 3, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 3, 3, 3, 3, 8, 4, 4, 5, 5, 4, 5, 3, 3, 3, 3, 4, 3, 2, 3, 3, 7, 6, 6, 4, 4, 100, 60, 6, 5, 6, 9, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 3, 4, 4, 3, 4, 3, 5, 5, 6, 5, 6, 3, 5, 4, 7, 3, 5, 5, 4, 5, 7, 4, 12, 3, 4, 198, 4, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 4, 4, 3, 4, 3, 4, 4, 130, 4, 3, 4, 6, 4, 4, 6, 3, 3, 84, 39, 4, 3, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [4, 7, 3, 5, 3, 5, 3, 7, 3, 5, 3, 8, 4, 3, 4, 15, 4, 7, 21, 3, 5, 3, 3, 5, 4, 4, 4, 4, 6, 5, 5, 5, 4, 4, 4, 4, 3, 4, 4, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 7, 5, 6, 5, 4, 4, 7, 3, 4, 3, 8, 7, 5, 3, 4, 5, 7, 4, 3, 7, 3, 3, 7, 233, 4, 3, 6, 4, 5, 9]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 3, 6, 6, 7, 7, 4, 3, 4, 4, 3, 11, 7, 7, 3, 3, 7, 7, 5, 9, 3, 18, 6, 3]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 6, 7, 8, 4, 3, 3, 3, 21, 3, 3, 3, 3, 6, 3, 4, 3, 6, 5, 362, 4, 3, 4, 17, 4, 6, 4, 3, 6, 8, 6]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 6, 4, 3, 3, 6, 64, 3, 6, 4, 4, 3, 4, 13, 5, 3, 15, 4, 11, 3, 5, 45, 10, 5, 4, 5, 3, 11, 4, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 4, 5, 5, 4, 4, 7, 5, 4, 7, 3, 6, 9, 50, 5, 7, 3, 7, 9, 4, 10, 7, 5, 8, 251, 7, 112, 6]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 7, 9, 3, 3, 6, 7, 7, 5, 4, 6, 4, 3, 8, 15, 5, 5, 7, 5, 9, 10, 7, 6, 5, 6, 7, 6, 4, 6, 6, 7, 10]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 4, 6, 4, 5, 12, 9, 7, 4, 9, 9, 5, 4, 4, 4, 6, 93, 4, 6, 5, 8, 4, 6, 6, 9, 349, 7, 4, 4, 6, 14, 5, 6, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [6, 9, 4, 4, 9, 4, 4, 4, 5, 5, 6, 4, 4, 6, 4, 7, 198, 9, 4, 5, 4, 7, 5, 6, 8, 4, 11, 9, 38, 4, 4, 4, 4]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 6, 4, 4, 6, 4, 7, 7, 5, 10, 6, 7, 6, 3, 5, 4, 6, 4, 7, 6, 7, 3, 7, 10, 3, 8, 4]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 11, 11, 4, 9, 8, 2, 13, 9, 6, 7, 6, 9, 7, 9, 8, 418, 4, 36, 7, 7, 4, 11, 7, 10, 9, 7, 8, 7, 8, 8, 11, 9, 8, 4, 7, 7, 7, 8, 14, 8, 186, 6, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [32, 8, 8, 4, 7, 6, 7, 7, 8, 8, 7, 7, 18, 8, 6, 7, 7, 7, 9, 8, 7, 8, 23, 4, 7, 4, 7, 6, 7, 7, 7, 7, 8, 6, 6, 6, 8, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 7, 4, 10, 6, 3, 9, 9, 6, 9, 5, 9, 9, 6, 8, 10, 7, 5, 9, 6, 10, 8, 8, 8, 20, 6, 8, 11, 4, 5, 7, 13, 11, 7, 10, 8, 6, 5, 4, 6, 7, 6, 83]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [14, 8, 8, 8, 6, 13, 8, 4, 4, 6, 6, 8, 12, 7, 9, 10, 7, 8, 7, 12, 8, 6, 7, 14, 14, 7, 4, 8, 39, 6, 9, 6, 8, 8, 7, 11, 7, 15, 4, 37, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 6, 7, 5, 5, 4, 5, 8, 6, 5, 6, 8, 13, 7, 4, 4, 4, 8, 7, 10, 141, 15, 3, 8, 4, 352, 6, 8, 15, 6, 9, 9, 6, 14, 8, 8, 10, 8, 31, 21, 7, 70, 65, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 15, 8, 6, 12, 4, 13, 56, 11, 11, 8, 8, 7, 7, 8, 9, 10, 5, 56, 14, 9, 11, 3, 8, 5, 12, 12, 5, 13, 8, 6, 9, 7, 4, 15, 12, 4, 6, 5, 11, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [6, 10, 7, 4, 12, 9, 3, 8, 10, 8, 8, 8, 6, 9, 8, 8, 4, 10, 7, 8, 4, 8, 10, 184, 7, 10, 15, 5, 4, 208, 5, 5, 12, 8, 7, 154, 7, 6, 4, 6, 10, 12, 9, 9, 80]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 5, 8, 9, 9, 4, 48, 12, 6, 4, 4, 7, 9, 20, 9, 10, 8, 7, 7, 9, 10, 8, 7, 7, 7, 9, 8, 9, 4, 8, 7, 7, 9, 3, 9, 7, 4, 8, 7, 8, 99]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [4, 11, 6, 5, 6, 6, 13, 6, 9, 12, 7, 7, 10, 6, 7, 7, 3, 9, 4, 9, 8, 7, 15, 9, 6, 6, 10, 13, 9, 10, 7, 11, 13, 11, 10, 7, 9, 6, 20, 15, 102, 9, 7, 7, 9, 9, 7, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 13, 14, 8, 11, 9, 13, 10, 14, 12, 11, 12, 28, 11, 10, 14, 5, 11, 11, 10, 18, 5, 17, 7, 9, 12, 11, 11, 10, 9, 7, 11, 14, 12, 12, 150, 12, 10, 16, 10, 18, 29, 11, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [21, 5, 6, 8, 5, 6, 4, 9, 8, 5, 5, 8, 7, 5, 7, 6, 9, 211, 12, 7, 4, 177, 37, 5, 4, 6, 7, 6, 4, 5, 5, 8, 10, 6, 4, 6, 61, 7, 8, 9, 6, 6, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [4, 5, 10, 9, 9, 8, 12, 10, 4, 88, 7, 6, 7, 13, 9, 11, 8, 4, 5, 8, 12, 4, 6, 4, 8, 6, 8, 13, 71, 7, 250, 10, 10, 5, 6, 4, 6, 4, 9, 7, 6, 15, 137, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 6, 4, 5, 4, 6, 5, 7, 7, 7, 12, 10, 4, 8, 4, 9, 12, 13, 7, 6, 8, 11, 10, 6, 8, 7, 4, 13, 5, 11, 8, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [11, 7, 7, 8, 4, 7, 12, 8, 11, 6, 8, 9, 8, 10, 4, 6, 12, 7, 8, 8, 11, 7, 6, 6, 9, 8, 11, 16, 8, 6, 15, 9, 10, 9, 8, 13, 10, 7, 6, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 6, 8, 9, 9, 7, 10, 7, 9, 9, 6, 11, 8, 7, 10, 10, 9, 6, 13, 9, 4, 9, 9, 11, 15, 7, 8, 17, 10, 9, 7, 10, 15, 9, 7, 7, 31, 7, 40]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [7, 7, 10, 11, 6, 4, 5, 7, 9, 4, 10, 9, 6, 7, 7, 7, 7, 11, 11, 28, 7, 9, 211, 19, 7, 12, 9, 4, 12, 9, 60, 3, 10, 8, 11, 6, 8, 5, 6, 11, 8, 9, 7, 8, 9, 81, 6, 9, 7, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [11, 15, 6, 17, 4, 13, 7, 14, 10, 5, 10, 11, 12, 11, 15, 12, 11, 8, 26, 15, 12, 11, 16, 6, 83, 7, 12, 18, 6, 6, 6, 22, 12, 12, 554, 13, 7, 16, 16, 11, 8, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [7, 6, 7, 7, 7, 8, 3, 4, 5, 6, 2, 5, 5, 5, 9, 4, 7, 8, 6, 6, 4, 7, 8, 5, 8, 6, 5, 11, 5, 8, 9, 9, 5, 9, 8, 6, 6, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 11, 10, 7, 8, 10, 12, 9, 4, 7, 9, 14, 10, 9, 10, 15, 9, 13, 10, 7, 11, 8, 289, 13, 7, 6, 10, 10, 12, 149, 10, 342, 10, 31, 12, 10, 13, 9, 203, 10, 12, 11, 204, 591]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [7, 14, 4, 5, 16, 13, 7, 15, 8, 5, 7, 15, 11, 8, 14, 15, 14, 13, 17, 297, 13, 14, 5, 11, 5, 10, 7, 46, 7, 13, 13, 16, 15, 9, 6, 10, 19, 19, 13, 14, 9, 10, 8, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [13, 10, 4, 9, 13, 13, 8, 8, 11, 10, 11, 10, 11, 12, 10, 8, 15, 14, 11, 14, 11, 11, 10, 11, 11, 8, 10, 13, 11, 10, 9, 12, 10, 12, 10, 14, 271, 13, 13, 10, 7, 9, 9, 11, 12, 10, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [6, 7, 9, 7, 4, 9, 9, 6, 10, 9, 10, 6, 11, 6, 7, 6, 6, 11, 10, 11, 4, 14, 6, 9, 12, 13, 25, 9, 5, 13, 4, 11, 9, 21, 16, 11, 6, 8, 9, 7, 10, 7, 6, 49, 10, 10, 6, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [19, 10, 17, 12, 9, 10, 10, 15, 7, 11, 10, 11, 10, 8, 5, 10, 5, 4, 6, 12, 9, 9, 6, 10, 9, 12, 11, 14, 10, 12, 10, 11, 8, 14, 17, 11, 8, 9, 10, 13, 17, 9, 17, 9, 10, 9, 10, 11, 16, 10, 13, 11, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [10, 4, 11, 4, 5, 7, 29, 4, 5, 13, 12, 4, 9, 12, 5, 7, 10, 12, 14, 10, 6, 10, 14, 13, 12, 8, 5, 5, 11, 15, 14, 79, 73, 13, 16, 4, 14, 17, 15, 6, 16, 8, 9, 12, 12, 7, 7, 12, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 9, 8, 8, 6, 9, 12, 8, 3, 6, 4, 8, 10, 240, 6, 288, 9, 10, 9, 4, 4, 6, 10, 6, 7, 6, 124, 7, 5, 9, 4, 10, 7, 9, 7, 9, 6, 7, 4, 10, 7, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
[length(mis) for mis = unique(C_list)] = [6, 7, 10, 10, 7, 13, 11, 11, 4, 7, 11, 9, 11, 7, 9, 11, 10, 157, 7, 18, 9, 9, 10, 10, 134, 11, 10, 11, 10, 12, 11, 27, 8, 9, 8, 7, 9, 7, 9, 8, 7, 10, 10, 9, 8, 9, 10, 6, 12, 8, 9]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 291
[length(mis) for mis = unique(C_list)] = [15, 6, 7, 4, 4, 5, 5, 7, 7, 7, 4, 5, 5, 6, 4, 6, 44, 4, 4, 9, 4, 5, 4, 5, 9, 10, 7, 6, 7, 12, 4, 9, 10, 5, 6, 13, 4, 9, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 292
[length(mis) for mis = unique(C_list)] = [6, 10, 10, 12, 18, 10, 12, 334, 3, 10, 11, 13, 4, 10, 10, 11, 10, 11, 10, 11, 11, 4, 15, 11, 4, 10, 12, 12, 16, 10, 6, 6, 9, 10, 11, 41, 12, 14, 7, 14, 10, 14, 14, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 293
[length(mis) for mis = unique(C_list)] = [15, 6, 9, 6, 4, 4, 7, 4, 7, 4, 8, 9, 8, 15, 9, 380, 9, 6, 239, 12, 10, 8, 11, 4, 11, 5, 11, 4, 8, 9, 6, 10, 7, 8, 4, 5, 4, 12, 7, 5, 8, 8, 15, 7, 11, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 294
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 5, 4, 6, 9, 8, 5, 10, 4, 6, 337, 6, 5, 4, 6, 4, 9, 4, 4, 6, 16, 8, 7, 5, 6, 137, 4, 5, 6, 5, 6, 7, 10, 4, 4, 8, 13, 8, 4, 4, 10, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 295
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 23, 4, 4, 12, 7, 5, 9, 4, 4, 5, 4, 7, 10, 4, 9, 4, 5, 7, 9, 6, 4, 6, 8, 8, 3, 6, 17, 7, 189, 6, 4, 16, 5, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 296
[length(mis) for mis = unique(C_list)] = [21, 4, 6, 4, 4, 10, 5, 4, 28, 8, 6, 7, 9, 4, 6, 12, 4, 4, 5, 5, 4, 6, 8, 6, 7, 5, 67, 4, 7, 6, 6, 10, 4, 6, 5, 6, 7, 5, 7, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 297
[length(mis) for mis = unique(C_list)] = [11, 4, 7, 4, 3, 4, 7, 4, 5, 7, 4, 4, 4, 8, 175, 3, 4, 4, 5, 8, 4, 4, 7, 4, 4, 3, 4, 8, 9, 8, 4, 8, 4, 5, 8, 4]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 298
[length(mis) for mis = unique(C_list)] = [21, 4, 4, 4, 9, 9, 6, 4, 4, 4, 4, 6, 4, 4, 221, 4, 4, 4, 4, 4, 4, 7, 3, 4, 4, 10, 6, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 299
[length(mis) for mis = unique(C_list)] = [7, 9, 9, 10, 12, 11, 13, 4, 8, 9, 10, 6, 9, 6, 154, 7, 8, 11, 12, 8, 7, 5, 9, 7, 8, 35, 9, 13, 11, 8, 9, 10, 11, 11, 9, 7, 11, 10, 6, 6, 4, 12, 11, 8, 10, 7, 4, 5, 7, 10]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 300
[length(mis) for mis = unique(C_list)] = [7, 9, 10, 6, 4, 8, 7, 15, 10, 8, 13, 6, 8, 9, 10, 9, 10, 11, 10, 11, 7, 11, 11, 7, 12, 118, 6, 11, 4, 8, 9, 4, 7, 7, 9, 7, 6, 9, 8, 13, 9, 11, 10, 10, 51, 12, 6, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 301
[length(mis) for mis = unique(C_list)] = [3, 7, 13, 7, 7, 12, 10, 8, 13, 7, 275, 12, 9, 14, 12, 336, 11, 8, 10, 10, 10, 9, 8, 8, 8, 8, 10, 10, 8, 10, 10, 10, 12, 16, 31, 4, 10, 8, 4, 11, 11, 11, 18]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 302
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 6, 13, 11, 7, 10, 7, 6, 7, 8, 7, 12, 7, 13, 8, 9, 19, 8, 8, 4, 8, 12, 8, 9, 8, 9, 8, 9, 12, 15, 8, 6, 4, 7, 4, 4, 8, 10, 7, 8, 9, 10, 8, 7, 28, 8, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 303
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 8, 6, 8, 4, 6, 7, 7, 8, 4, 5, 5, 9, 10, 4, 9, 6, 13, 4, 63, 8, 7, 8, 5, 9, 8, 10, 7, 20, 8, 7, 3, 5, 8, 4, 6, 28]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 304
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 36, 8, 4, 7, 8, 12, 8, 11, 8, 4, 4, 8, 19, 9, 431, 14, 4, 8, 15, 546, 13, 4, 4, 4, 4, 8, 12, 8, 10, 8, 5, 8, 10, 7, 48, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 305
[length(mis) for mis = unique(C_list)] = [7, 10, 10, 4, 4, 10, 10, 10, 4, 13, 4, 8, 4, 7, 10, 7, 9, 77, 15, 10, 5, 7, 130, 10, 151, 8, 11, 8, 6, 8, 9, 7, 10, 9, 7, 7, 7, 167, 5, 6, 5, 9, 7, 7, 7, 6, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 306
[length(mis) for mis = unique(C_list)] = [21, 4, 4, 4, 4, 9, 6, 4, 4, 8, 4, 27, 16, 4, 15, 5, 4, 133, 6, 8, 4, 5, 5, 14, 6, 7, 9, 7, 8, 30]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 307
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 10, 10, 5, 5, 9, 3, 5, 11, 8, 5, 5, 13, 4, 6, 6, 12, 8, 13, 5, 13, 10, 8, 8, 27, 11, 10, 12, 12, 10, 4, 13, 5, 5, 55, 7, 9, 7, 83, 6, 9, 3, 10, 7]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 308
[length(mis) for mis = unique(C_list)] = [4, 11, 8, 8, 12, 7, 4, 9, 11, 11, 10, 6, 7, 8, 9, 9, 23, 10, 12, 4, 13, 11, 11, 127, 5, 12, 10, 9, 10, 10, 13, 6, 8, 9, 9, 4, 9, 4, 10, 10, 10, 5, 8, 9, 9, 5, 6, 8, 5]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 309
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 4, 7, 11, 5, 4, 9, 6, 8, 7, 8, 7, 7, 10, 5, 8, 10, 4, 7, 7, 4, 8, 6, 8, 423, 7, 10, 8, 5, 8, 7, 8, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 310
[length(mis) for mis = unique(C_list)] = [15, 8, 17, 6, 22, 4, 8, 9, 5, 9, 9, 10, 6, 8, 7, 11, 8, 80, 11, 4, 4, 10, 9, 5, 8, 7, 12, 225, 4, 6, 8, 10, 11, 9, 164, 12, 12, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 311
[length(mis) for mis = unique(C_list)] = [9, 7, 11, 7, 7, 11, 11, 12, 4, 6, 15, 12, 5, 12, 10, 12, 10, 9, 10, 4, 9, 17, 14, 12, 12, 14, 10, 9, 15, 10, 12, 12, 7, 9, 5, 13, 17, 7, 6, 10, 9, 15, 11, 11, 274, 9, 12, 6, 12, 5, 10, 11, 16, 11, 9, 9, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 312
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 9, 79, 8, 4, 12, 9, 12, 10, 4, 14, 4, 8, 140, 12, 11, 12, 6, 6, 13, 10, 11, 8, 4, 7, 8, 8, 13, 14, 12, 12, 91, 9]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 313
[length(mis) for mis = unique(C_list)] = [12, 13, 8, 13, 11, 11, 10, 12, 11, 11, 12, 8, 11, 11, 9, 10, 10, 11, 13, 11, 11, 10, 11, 19, 10, 10, 11, 58, 49, 17, 13, 12, 13, 13, 11, 11, 15, 9, 10, 10, 11, 11, 29, 10, 11, 11, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 314
[length(mis) for mis = unique(C_list)] = [10, 8, 10, 9, 11, 8, 9, 4, 15, 9, 10, 10, 9, 11, 10, 8, 8, 9, 11, 8, 10, 9, 13, 10, 8, 13, 11, 15, 8, 11, 8, 9, 12, 50, 22, 4, 8, 7, 10, 11, 10, 10, 11, 9, 10, 8, 8, 10, 8, 8, 14, 6]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 315
[length(mis) for mis = unique(C_list)] = [16, 10, 13, 13, 11, 3, 10, 10, 8, 11, 4, 8, 9, 10, 10, 125, 9, 9, 10, 9, 13, 12, 6, 4, 12, 4, 9, 10, 11, 11, 13, 11, 10, 4, 10, 10, 9, 17, 10, 13, 11]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 316
[length(mis) for mis = unique(C_list)] = [17, 5, 4, 4, 4, 5, 4, 4, 4, 4, 4, 3, 6, 4, 4, 4, 7, 196, 5, 5, 4, 64, 4, 6, 4, 5, 3, 6, 4, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 317
[length(mis) for mis = unique(C_list)] = [18, 5, 5, 4, 4, 4, 8, 4, 11, 4, 4, 5, 11, 4, 8, 4, 8, 8, 8, 4, 8, 8, 7, 4, 11, 8, 9, 4, 4, 6, 7, 8, 8, 4, 9, 10, 9, 4]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 318
termination = MathOptInterface.INFEASIBLE
objective_value = 0.0
