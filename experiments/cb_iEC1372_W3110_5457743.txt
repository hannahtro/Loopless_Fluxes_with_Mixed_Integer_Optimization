WARNING: Dual bound 0.98237 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.98237 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.98237 is smaller than the objective of the primal solution 0.98238. The solution might not be optimal.
WARNING: Dual bound 0.982389 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982343 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.98238. The solution might not be optimal.
WARNING: Dual bound 0.982343 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982325 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982338 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982378 is smaller than the objective of the primal solution 0.982394. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.98238. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982384 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982389 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982334 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982343 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982343 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982362 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982316 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982381 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982381 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982359 is smaller than the objective of the primal solution 0.982366. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982394. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1372_W3110
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1372_W3110
----------------------------------
number of metabolites : 1918
number of reactions : 2758
number of genes : 1372

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 14
max_cuts = 8
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2758 flux variables and 5172 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 2, 2, 3, 193, 2, 2]
length(C_list) = 8
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 2, 2, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 2, 3, 34, 2, 4, 80]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 5, 5, 2, 3, 2, 3, 2, 2, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 6, 3, 3, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 3, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 70, 7, 4, 3, 3, 4, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 4, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 4, 16, 12, 10, 194, 10, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [25, 28, 6, 4, 8, 8, 22, 31]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 18, 18, 20, 20, 31, 23]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 7, 5, 4, 10, 11, 18, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [7, 7, 9, 18, 29, 3, 9, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 8, 12, 3, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 18, 13, 2, 13, 7, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 9, 59, 14, 3, 14, 25]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [16, 3, 4, 9, 9, 14, 20, 4, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [10, 3, 8, 9, 21, 3, 4, 6, 19, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 6, 3, 5, 129, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [27, 3, 3, 4, 7, 6, 4, 6, 15, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 77, 2, 9, 4, 4, 3, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 7, 3, 8, 5, 6, 7, 187, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 3, 6, 3, 52, 20, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 11, 9, 3, 8, 9, 4, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [16, 6, 6, 5, 5, 12, 9, 4, 140]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 4, 5, 6, 7, 10, 4, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [8, 3, 6, 4, 4, 4, 7, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 5, 4, 4, 5, 4, 6, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 3, 11, 11, 4, 11, 9, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [8, 5, 10, 15, 14, 22, 23, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 18, 4, 16, 5, 7, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 5, 237, 12, 4, 3, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [5, 4, 12, 4, 11, 5, 3, 4, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 19, 6, 11, 20, 5, 207]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 14, 5, 4, 13, 6, 3, 11, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 7, 7, 34, 27, 9, 6, 8, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 5, 9, 11, 3, 12, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [16, 3, 5, 3, 4, 6, 15]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 8, 6, 4, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [12, 8, 5, 3, 10, 3, 7, 6, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [29, 6, 7, 17, 4, 5, 3, 16, 4, 7, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [2, 4, 12, 6, 9, 12, 4, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 15, 4, 6, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 4, 11, 5, 3, 10, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 9, 6, 17, 3, 11, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 4, 20, 3, 6, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [7, 8, 7, 5, 12, 4, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [28, 6, 4, 8, 25, 5, 3, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [14, 8, 6, 3, 6, 3, 4, 5, 13, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 76, 3, 22, 19, 3, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [2, 7, 6, 6, 9, 5, 5, 20, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [6, 7, 6, 6, 6, 5, 4, 3, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [2, 9, 3, 4, 6, 3, 17, 8, 13, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 65, 3, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 14, 4, 6, 4, 4, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [17, 5, 172, 17, 10, 18, 18, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 223, 4, 17, 6, 23, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [8, 8, 2, 8, 6, 15, 15, 9, 17, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [12, 17, 5, 4, 9, 5, 8, 6, 45]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 17, 20, 14, 8, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 28, 75, 3, 27, 27, 26]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 7, 4, 4, 7, 6, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 3, 28, 6, 4, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 12, 5, 3, 13, 147, 6, 6, 55]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [16, 6, 6, 5, 3, 5, 7, 8, 4, 113]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 7, 4, 3, 11, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [20, 6, 5, 4, 8, 5, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [18, 4, 4, 5, 12, 6, 4, 30, 21, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [13, 4, 8, 8, 6, 4, 11, 21, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 17, 12, 5, 14, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 5, 3, 4, 5, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [47, 4, 5, 7, 8, 19, 6, 5, 42, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 18, 3, 4, 4, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 12, 10, 5, 8, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 5, 6, 3, 7, 3, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 6, 7, 4, 8, 6, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [14, 3, 4, 15, 4, 20, 24, 26, 16, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [15, 8, 6, 7, 10, 4, 6, 5, 8, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [2, 68, 7, 5, 4, 6, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [2, 9, 6, 16, 3, 24, 4, 14, 4, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [30, 5, 7, 14, 5, 3, 14, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [7, 9, 3, 4, 15, 14, 5, 9, 6, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 16, 10, 8, 8, 8, 9, 8, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [5, 4, 10, 9, 5, 5, 29, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 24, 14, 14, 23, 27, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 6, 8, 9, 16, 4, 8, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [2, 11, 4, 11, 5, 7, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [13, 6, 5, 3, 4, 8, 17, 5, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 4, 5, 5, 4, 10, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [9, 31, 6, 4, 5, 5, 3, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [10, 10, 7, 4, 20, 6, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 5, 20, 5, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 7, 5, 3, 11, 169, 4, 6, 7, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [2, 7, 6, 4, 12, 14, 12, 6, 8, 10, 7, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 9, 13, 9, 6, 5, 9, 27, 4, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [20, 7, 14, 14, 14, 7, 8, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 4, 4, 4, 5, 5, 4, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 7, 4, 5, 24, 5, 6, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [8, 10, 7, 4, 12, 5, 20, 5, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 5, 5, 4, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 6, 4, 11, 10, 6, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 5, 6, 8, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [29, 8, 7, 13, 7, 3, 10]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 14, 14, 5, 14, 8, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [17, 3, 92, 8, 5, 8, 10, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [9, 8, 6, 161, 4, 6, 5, 6, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 13, 4, 16, 98, 4, 8, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 23, 10, 22, 4, 61]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 4, 20, 5, 13, 4, 10, 10, 4, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 9, 9, 4, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [2, 4, 5, 6, 4, 6, 9, 5, 7, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 4, 14, 4, 5, 8, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 7, 142, 7, 22, 12, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 8, 5, 4, 5, 8, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [15, 5, 4, 5, 8, 10, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 6, 4, 9, 6, 5, 5, 17, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [19, 4, 5, 7, 7, 9, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 6, 20, 8, 5, 4, 13, 53, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 5, 9, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [2, 10, 3, 3, 5, 6, 12, 6, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [7, 8, 4, 21, 3, 42, 18, 4, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 6, 12, 12, 18, 4, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [7, 5, 7, 4, 8, 7, 5, 14, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 9, 4, 10, 10, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [7, 8, 5, 3, 6, 6, 6, 7, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 4, 4, 3, 26, 7, 30, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [9, 8, 15, 14, 8, 19, 8, 8, 8, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [22, 4, 4, 14, 7, 5, 4, 10, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [10, 4, 19, 4, 7, 4, 4, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [18, 6, 9, 11, 8, 12, 23, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 4, 4, 5, 10, 6, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 4, 31, 4, 12, 15, 286]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 8, 8, 4, 17, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 5, 18, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [59, 4, 4, 170, 4, 5, 7, 9, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [12, 3, 10, 11, 23, 4, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 3, 4, 8, 8, 8, 4, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 15, 15, 32, 21, 4, 13, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [5, 4, 13, 5, 7, 15, 15, 29, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [55, 4, 29, 21, 19, 34, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [29, 7, 4, 48, 78, 47, 47, 57, 47, 47]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [3, 9, 8, 9, 7, 38, 5, 5, 7, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 19, 3, 19, 9, 19, 4, 4, 6, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [48, 4, 9, 3, 5, 4, 4, 12, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [10, 5, 3, 9, 3, 8, 5, 4, 8, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [26, 3, 4, 17, 19, 19, 19, 19, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [14, 5, 105, 21, 21, 21, 21, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [7, 5, 3, 4, 3, 4, 6, 6, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [8, 24, 9, 45, 44, 44, 10, 48, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [5, 69, 4, 8, 5, 4, 3, 15, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 5, 8, 4, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [15, 4, 4, 4, 5, 4, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [10, 4, 8, 5, 5, 5, 4, 5, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 4, 5, 5, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [3, 25, 8, 18, 30, 21, 20, 21, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 7, 6, 9, 7, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 6, 5, 11, 7, 6, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [16, 7, 3, 5, 6, 4, 4, 5, 6, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [9, 4, 14, 7, 13, 14, 5, 14, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [17, 11, 8, 20, 12, 11, 10, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 7, 4, 4, 24, 5, 6, 4, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [3, 20, 5, 8, 18, 9, 64, 55, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 6, 4, 10, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 8, 8, 11, 10, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 4, 21, 6, 5, 6, 6, 17, 5, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [12, 6, 11, 11, 7, 16, 11, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [29, 15, 5, 5, 3, 7, 4, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [22, 4, 6, 10, 7, 8, 8, 4, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [12, 12, 12, 4, 5, 4, 10, 10, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [7, 14, 16, 13, 15, 11, 15, 14, 14, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [17, 11, 6, 5, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [5, 70, 8, 4, 4, 9, 6, 11, 6, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 8, 8, 10, 10, 10, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [18, 13, 7, 5, 6, 4, 12, 10, 5, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 12, 4, 6, 12, 4, 44, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 11, 14, 11, 11, 9, 9, 9, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [21, 4, 23, 19, 18, 19, 19, 12, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [7, 5, 25, 11, 11, 11, 11, 12, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [24, 6, 3, 14, 139, 13, 20, 24, 30, 20, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [17, 14, 7, 4, 26, 25, 29, 6, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [4, 11, 6, 8, 6, 4, 6, 5, 7, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [4, 8, 11, 26, 22, 14, 11, 5, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [10, 3, 7, 6, 13, 13, 11, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [8, 7, 9, 9]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [42, 8, 7, 12, 8, 29, 16, 13, 12, 27, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [14, 42, 11, 7, 12, 11, 14, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [8, 20, 10, 36, 39, 17, 12, 13, 18, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [5, 14, 19, 27, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [62, 3, 9, 5, 28, 4, 4, 7, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 4, 4, 4, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [19, 24, 4, 8, 20, 16, 18]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 7, 8, 6, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [16, 5, 3, 11, 5, 12, 18, 11, 11, 11, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [16, 14, 6, 9, 9, 10, 10, 9, 9, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [28, 19, 4, 4, 3, 13, 13, 35, 10, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [3, 14, 98, 7, 4, 7, 5, 26, 21, 24]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [5, 6, 22, 4, 4, 8, 14, 16, 19, 4, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 18, 4, 4, 4, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 9, 23, 11, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [17, 26, 73, 27, 24, 26, 26, 41, 23]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [74, 16, 11, 11, 12, 23, 11, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [14, 4, 4, 30, 16, 25, 30, 22, 21, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [2, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [17, 27, 4, 19, 17, 20, 10, 10, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [16, 4, 5, 16, 16, 16, 17, 16, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [41, 7, 6, 18, 10, 7, 17, 8, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 11, 4, 5, 4, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [4, 24, 13, 23, 3, 26, 12, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [48, 13, 13, 20, 10, 10, 10, 10, 13, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [4, 20, 4, 16, 17, 4, 16, 16, 17, 53]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [38, 265, 4, 4, 25, 4, 6, 22, 16, 27]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [8, 13, 9, 3, 6, 25, 10, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [5, 4, 9, 9, 9, 9, 9, 9, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [6, 33, 5, 3, 4, 4, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [9, 16, 15, 22, 12, 12, 4, 12, 12, 12, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [4, 10, 11, 10, 9, 281, 142, 10, 9, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [18, 6, 11, 7, 10, 24, 10, 12, 10, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [10, 21, 22, 9, 9, 6, 9, 12, 16, 16, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = WARNING: Dual bound 0.982389 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982352 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982389 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982359 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
WARNING: Dual bound 0.982384 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982369 is smaller than the objective of the primal solution 0.982383. The solution might not be optimal.
WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982379 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982396 is smaller than the objective of the primal solution 0.982398. The solution might not be optimal.
WARNING: Dual bound 0.982383 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.98238 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982383 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
[7, 15, 15, 6, 14, 11, 38, 11, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [9, 4, 196, 15, 13, 10, 11, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 18, 11, 8, 18, 18, 18, 18, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [8, 14, 20, 15, 4, 11, 4, 21, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [4, 27, 17, 11, 16, 16, 16, 17, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [17, 4, 16, 30, 5, 4, 29, 20, 21, 17, 74]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 11, 31, 6, 11, 11, 11, 11, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 5, 5, 7, 6, 8, 5, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [8, 10, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 10, 7, 6, 5, 15, 11, 4, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [2, 7, 6, 41, 22, 15, 26, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [2, 9, 12, 13, 14, 12, 19, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [32, 3, 37, 40, 44, 34, 44, 168]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [29, 44, 11, 22, 18, 18, 18, 18, 39, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [28, 5, 5, 6, 15, 20, 9, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 15, 7, 7, 7, 6, 11, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [10, 8, 9, 19, 19, 21, 20, 21, 32, 19, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [7, 3, 13, 9, 10, 7, 4, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [11, 4, 4, 20, 17, 8, 19, 7, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [3, 5, 16, 5, 10, 22, 5, 14, 23]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [26, 13, 14, 20, 16, 11, 16, 10, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [45, 3, 28, 33, 25, 27, 27, 27, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [11, 4, 19, 9, 20, 10, 23, 9, 9, 9, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [4, 15, 4, 4, 5, 5, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [21, 15, 16, 43, 17, 50, 7, 7, 28]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [12, 3, 5, 6, 25, 9, 18, 18, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [12, 8, 13, 4, 8, 7, 12, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 15, 5, 14, 8, 6, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [46, 20, 4, 14, 14, 14, 16, 14, 6, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [7, 12, 16, 13, 20, 17, 10, 18, 4, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [13, 6, 3, 4, 11, 11, 11, 11, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [13, 7, 4, 11, 4, 18, 19, 18, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [16, 24, 8, 16, 33, 10, 7, 29, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [2, 25, 8, 10, 8, 4, 18, 8, 8, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [7, 7, 6, 9, 7, 8, 7, 26, 27, 11, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [16, 15, 13, 8, 8, 18, 10, 12, 24, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 8, 9, 9, 8, 6, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [21, 17, 33, 15, 8, 22, 12, 5, 12, 22, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [8, 17, 9, 29, 4, 26, 4, 26]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [9, 5, 7, 12, 9, 5, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [11, 7, 14, 13, 15, 10, 20, 18, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [23, 4, 6, 8, 7, 10, 4, 4, 18, 8, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 28, 5, 16, 22, 17, 17, 14, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [4, 4, 13, 9, 10, 7, 9, 38, 9, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 5, 5, 13, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 23, 6, 18]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 12, 4, 14, 11, 12, 17, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [32, 11, 11, 11, 9, 17, 28, 69, 9, 98]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 4, 8, 10, 4, 13, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [5, 11, 13, 22, 55, 4, 18, 18, 10, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [3, 4, 11, 9, 6, 6, 13, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [9, 34, 22, 19, 23, 9, 21, 8, 7, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [20, 7, 11, 18, 21, 32, 19, 2, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [2, 18, 17, 31, 30, 30, 19, 18, 17, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [5, 3, 8, 27, 25, 34, 34]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [5, 11, 36, 32, 30, 30, 26, 32, 4, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [13, 5, 6, 9, 4, 3, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 18, 16, 17, 16, 16, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [2, 51, 15, 7, 6, 31, 6, 4, 23]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [19, 4, 5, 20, 8, 14, 45, 5, 43, 20, 26]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [6, 20, 4, 20, 10, 11, 11, 10, 4, 7, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [30, 19, 23, 19, 24, 30, 19, 34, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [15, 12, 17, 13, 13, 13, 13, 23, 13, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [44, 9, 6, 6, 9, 11, 6, 46, 10, 52, 6, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [4, 8, 5, 8, 10, 12, 35, 30, 19, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 3, 9, 3, 5, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [22, 12, 7, 8, 8, 8, 19, 102]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [4, 3, 9, 6, 117, 7, 6, 7, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [34, 10, 16, 25, 4, 9, 4, 26, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [4, 23, 11, 5, 8, 32, 11, 27, 10, 31, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [28, 12, 55, 11, 6, 6, 5, 7, 5, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
[length(mis) for mis = unique(C_list)] = [16, 8, 12, 7, 8, 11, 8, 40, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 291
[length(mis) for mis = unique(C_list)] = [3, 15, 9, 28, 10, 10, 10]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 292
[length(mis) for mis = unique(C_list)] = [4, 37, 3, 5, 9, 16, 9, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 293
[length(mis) for mis = unique(C_list)] = [4, 5, 19, 5, 8, 10, 4, 13, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 294
[length(mis) for mis = unique(C_list)] = [14, 27, 5, 6, 11, 8, 19, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 295
[length(mis) for mis = unique(C_list)] = [13, 4, 6, 7, 13, 14, 6, 11, 4, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 296
[length(mis) for mis = unique(C_list)] = [25, 7, 5, 7, 5, 4, 7, 9, 4, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 297
[length(mis) for mis = unique(C_list)] = [7, 12, 4, 31, 31, 31, 31, 31, 31, 30]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 298
[length(mis) for mis = unique(C_list)] = [6, 8, 9, 6, 4, 6, 232, 13, 8, 7, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 299
[length(mis) for mis = unique(C_list)] = [17, 14, 4, 10, 6, 7, 10, 6, 7, 28, 5, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 300
[length(mis) for mis = unique(C_list)] = [29, 11, 10, 6, 5, 6, 8, 34, 18, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 301
[length(mis) for mis = unique(C_list)] = [27, 8, 6, 10, 10, 17, 6, 7, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 302
[length(mis) for mis = unique(C_list)] = [4, 12, 8, 14, 6, 4, 6, 17, 37, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 303
[length(mis) for mis = unique(C_list)] = [4, 3, 18, 4, 13, 7, 17, 4, 4, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 304
[length(mis) for mis = unique(C_list)] = [11, 31, 4, 15, 34, 16, 4, 15, 12, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 305
[length(mis) for mis = unique(C_list)] = [34, 8, 7, 6, 5, 179, 13, 15, 7, 136, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 306
[length(mis) for mis = unique(C_list)] = [3, 8, 10, 4, 5, 9, 9, 7, 7, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 307
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 11, 4, 21, 4, 70]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 308
[length(mis) for mis = unique(C_list)] = [26, 8, 3, 5, 3, 13, 10, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 309
[length(mis) for mis = unique(C_list)] = [9, 28, 14, 17, 27, 14, 24]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 310
[length(mis) for mis = unique(C_list)] = [18, 4, 4, 10, 22, 7, 22, 49, 27]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 311
[length(mis) for mis = unique(C_list)] = [51, 7, 25, 159, 8, 12, 23, 10, 7, 10, 35]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 312
[length(mis) for mis = unique(C_list)] = [16, 21, 9, 8, 22, 14, 9, 9, 8, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 313
[length(mis) for mis = unique(C_list)] = [10, 7, 41, 8, 7, 7, 8, 24, 3, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 314
[length(mis) for mis = unique(C_list)] = [19, 18, 10, 6, 23, 18, 4, 21, 19, 30]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 315
[length(mis) for mis = unique(C_list)] = [34, 30, 4, 17, 23, 16, 20, 16, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 316
[length(mis) for mis = unique(C_list)] = [14, 11, 4, 61, 13, 8, 24, 9, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 317
[length(mis) for mis = unique(C_list)] = [34, 11, 11, 8, 10, 16, 15, 6, 9, 12, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 318
[length(mis) for mis = unique(C_list)] = [10, 13, 7, 6, 6, 6, 7, 9, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 319
[length(mis) for mis = unique(C_list)] = [15, 8, 4, 12, 33, 11, 11, 11, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 320
[length(mis) for mis = unique(C_list)] = [12, 28, 15, 5, 7, 33, 12, 10, 8, 18, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 321
[length(mis) for mis = unique(C_list)] = [5, 13, 8, 18, 29, 17, 17, 25, 12, 26]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 322
[length(mis) for mis = unique(C_list)] = [39, 10, 22, 46, 67, 5, 31, 14, 5, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 323
[length(mis) for mis = unique(C_list)] = [3, 26, 48, 67, 45, 42, 47, 54, 59, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 324
[length(mis) for mis = unique(C_list)] = [5, 11, 9, 5, 18, 177, 7, 9, 17, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 325
[length(mis) for mis = unique(C_list)] = [20, 7, 15, 6, 13, 9, 6, 8, 8, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 326
[length(mis) for mis = unique(C_list)] = [14, 33, 7, 7, 4, 5, 5, 20, 32]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 327
[length(mis) for mis = unique(C_list)] = [11, 20, 7, 16, 7, 26, 19, 21, 16, 26]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 328
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 8, 12, 4, 12, 6, 7, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 329
[length(mis) for mis = unique(C_list)] = [40, 45, 18, 25, 17, 22, 16, 16, 4, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 330
[length(mis) for mis = unique(C_list)] = [33, 23, 6, 10, 9, 19, 30, 8, 7, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 331
[length(mis) for mis = unique(C_list)] = [5, 20, 8, 7, 5, 23, 257, 10, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 332
[length(mis) for mis = unique(C_list)] = [25, 6, 12, 10, 7, 9, 3, 5, 6, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 333
[length(mis) for mis = unique(C_list)] = [13, 9, 10, 6, 15, 6, 18, 28, 6, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 334
[length(mis) for mis = unique(C_list)] = [79, 10, 11, 10, 11, 5, 27, 54, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 335
[length(mis) for mis = unique(C_list)] = [51, 12, 7, 14, 30, 8, 5, 28, 28, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 336
[length(mis) for mis = unique(C_list)] = [4, 8, 6, 7, 6, 13, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 337
[length(mis) for mis = unique(C_list)] = [2, 10, 7, 38, 25, 27, 25, 5, 17, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 338
[length(mis) for mis = unique(C_list)] = [29, 9, 8, 22, 17, 16, 41, 4, 27, 31, 4, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 339
[length(mis) for mis = unique(C_list)] = [29, 7, 5, 23, 4, 13, 4, 16, 22, 25]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 340
[length(mis) for mis = unique(C_list)] = [52, 4, 6, 45, 46, 10, 282, 46, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 341
[length(mis) for mis = unique(C_list)] = [11, 4, 7, 76, 22, 6, 14]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 342
[length(mis) for mis = unique(C_list)] = [5, 13, 9, 9, 8, 7, 6, 7, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 343
[length(mis) for mis = unique(C_list)] = [16, 4, 12, 12, 12, 12, 12, 12, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 344
[length(mis) for mis = unique(C_list)] = [17, 10, 8, 7, 13, 10, 10, 6, 24, 122, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 345
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 4, 123, 6, 4, 10, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 346
[length(mis) for mis = unique(C_list)] = [4, 57, 9, 9, 8, 7, 15, 9, 12, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 347
[length(mis) for mis = unique(C_list)] = [3, 7, 8, 10, 4, 4, 11, 8, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 348
[length(mis) for mis = unique(C_list)] = [23, 23, 4, 23, 18, 34, 14, 16, 18, 19, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 349
[length(mis) for mis = unique(C_list)] = [6, 10, 8, 4, 20, 4, 4, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 350
[length(mis) for mis = unique(C_list)] = [6, 10, 8, 8, 7, 6, 4, 8, 3, 7, 200]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 351
[length(mis) for mis = unique(C_list)] = [4, 4, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 352
[length(mis) for mis = unique(C_list)] = [4, 6, 183, 11, 4, 6, 5, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 353
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 12, 12, 13, 12, 12, 12, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 354
[length(mis) for mis = unique(C_list)] = [6, 8, 10, 8, 5, 9, 7, 7, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 355
[length(mis) for mis = unique(C_list)] = [4, 19, 12, 9, 14, 12, 12, 21, 12, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 356
[length(mis) for mis = unique(C_list)] = [12, 11, 12, 19, 4, 16, 19, 20, 10, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 357
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 3, 5, 9, 6, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 358
[length(mis) for mis = unique(C_list)] = [6, 16, 16, 4, 12, 15, 9, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 359
[length(mis) for mis = unique(C_list)] = [15, 6, 5, 18, 16, 16, 19, 14, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 360
[length(mis) for mis = unique(C_list)] = [23, 4, 9, 7, 4, 11, 4, 5, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 361
[length(mis) for mis = unique(C_list)] = [4, 12, 5, 9, 10, 10, 9, 10, 9, 9, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 362
[length(mis) for mis = unique(C_list)] = [16, 5, 15, 4, 11, 5, 5, 3, 7, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 363
[length(mis) for mis = unique(C_list)] = [15, 18, 20, 16, 16, 16, 31, 12, 24, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 364
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 10, 10, 10, 20, 10, 10, 10, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 365
[length(mis) for mis = unique(C_list)] = [3, 11, 10, 11, 5, 7, 9, 9, 6, 9, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 366
[length(mis) for mis = unique(C_list)] = [26, 27, 23, 25, 76, 25, 25, 25, 32]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 367
[length(mis) for mis = unique(C_list)] = [12, 9, 6, 8, 21, 10, 19, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 368
[length(mis) for mis = unique(C_list)] = [9, 12, 16, 13, 9, 6, 12, 6, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 369
[length(mis) for mis = unique(C_list)] = [19, 6, 12, 31, 5, 9, 6, 18, 8, 5, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 370
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 9, 6, 4, 10, 4, 7, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 371
[length(mis) for mis = unique(C_list)] = [13, 16, 9, 8, 55, 9, 8, 9, 8, 8, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 372
[length(mis) for mis = unique(C_list)] = [9, 4, 14, 23, 21, 13, 26, 22, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 373
[length(mis) for mis = unique(C_list)] = [14, 11, 12, 6, 11, 4, 8, 12, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 374
[length(mis) for mis = unique(C_list)] = [5, 12, 15, 16, 6, 17, 21, 8, 19, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 375
[length(mis) for mis = unique(C_list)] = [50, 44, 45, 44, 44, 44, 44, 45]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 376
[length(mis) for mis = unique(C_list)] = [29, 9, 4, 6, 5, 11, 9, 7, 12, 17, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 377
[length(mis) for mis = unique(C_list)] = [19, 10, 7, 8, 7, 28, 4, 19, 174, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 378
[length(mis) for mis = unique(C_list)] = [66, 24, 24, 29, 28, 29, 28, 27, 32]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 379
[length(mis) for mis = unique(C_list)] = [16, 4, 9, 9, 9, 9, 10, 8, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 380
[length(mis) for mis = unique(C_list)] = [3, 8, 9, 37, 8, 11, 8, 8, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 381
[length(mis) for mis = unique(C_list)] = [4, 6, 60, 7, 17, 7, 5, 14, 183, 77, 40]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 382
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 7, 6, 6, 8, 7, 6, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 383
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 13, 5, 4, 7, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 384
[length(mis) for mis = unique(C_list)] = [5, 5, 15, 15, 7, 5, 6, 5, 7, 13, 6, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 385
[length(mis) for mis = unique(C_list)] = [4, 11, 10, 10, 10, 10, 10, 10, 18, 45]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 386
[length(mis) for mis = unique(C_list)] = [7, 5, 14, 9, 19, 4, 18, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 387
[length(mis) for mis = unique(C_list)] = [10, 7, 5, 6, 5, 5, 3, 7, 7, 12, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 388
[length(mis) for mis = unique(C_list)] = [3, 7, 13, 9, 10, 15, 8, 6, 9, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 389
[length(mis) for mis = unique(C_list)] = [12, 6, 7, 8, 10, 6, 5, 5, 7, 8, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 390
[length(mis) for mis = unique(C_list)] = [3, 16, 6, 6, 9, 8, 6, 7, 18, 8, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 391
[length(mis) for mis = unique(C_list)] = [4, 13, 24, 7, 10, 8, 5, 10, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 392
[length(mis) for mis = unique(C_list)] = [23, 6, 17, 4, 237, 6, 13, 17, 13, 17, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 393
[length(mis) for mis = unique(C_list)] = [4, 8, 15, 9, 9, 10, 8, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 394
[length(mis) for mis = unique(C_list)] = [4, 10, 11, 9, 10, 13, 25, 11, 15, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 395
[length(mis) for mis = unique(C_list)] = [14, 6, 32, 10, 34, 15, 15, 6, 21]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 396
[length(mis) for mis = unique(C_list)] = [39, 9, 6, 7, 25, 7, 8, 9, 8, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 397
[length(mis) for mis = unique(C_list)] = [4, 22, 86, 17, 22, 15, 11, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 398
[length(mis) for mis = unique(C_list)] = [4, 15, 15, 9, 4, 4, 4, 19, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 399
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 24, 18, 5, 28, 18, 28]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 400
[length(mis) for mis = unique(C_list)] = [48, 13, 22, 26, 48, 47, 26, 29, 26, 18, 32, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 401
[length(mis) for mis = unique(C_list)] = [12, 6, 9, 8, 10, 11, 7, 18, 12, 42, 7, 12]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 402
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 7, 10, 14, 16, 14, 7, 8, 9, 9, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 403
[length(mis) for mis = unique(C_list)] = [19, 14, 9, 9, 9, 9, 9, 26, 9, 50]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 404
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 6, 6, 7, 8, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 405
[length(mis) for mis = unique(C_list)] = [4, 14, 4, 8, 11]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 406
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 9, 8, 6, 10, 6, 8, 8, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 407
[length(mis) for mis = unique(C_list)] = [26, 18, 10, 9, 9, 20, 9, 10, 55]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 408
[length(mis) for mis = unique(C_list)] = [7, 8, 3, 8, 9, 7, 5, 7, 31, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 409
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 27, 25, 25, 36, 25, 25, 38, 4, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 410
[length(mis) for mis = unique(C_list)] = [35, 26, 10, 8, 13, 8, 11, 9, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 411
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 8, 10, 9, 10, 8, 4, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 412
[length(mis) for mis = unique(C_list)] = [4, 20, 17, 11, 8, 17, 18, 12, 17]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 413
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 11, 19, 9, 7, 10, 7, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 414
[length(mis) for mis = unique(C_list)] = [2, 7, 35, 4, 4, 4, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 415
[length(mis) for mis = unique(C_list)] = [21, 10, 10, 8, 5, 4, 16, 17, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 416
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 5, 9, 5, 5, 4, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 417
[length(mis) for mis = unique(C_list)] = [12, 20, 7, 24, 14, 6, 26, 13, 14, 121, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 418
[length(mis) for mis = unique(C_list)] = [11, 24, 28, 31, 4, 24, 28, 28, 94, 29]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 419
[length(mis) for mis = unique(C_list)] = [7, 10, 11, 12, 11, 12, 25, 13, 9, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 420
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 4, 6, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 421
[length(mis) for mis = unique(C_list)] = [4, 24, 10, 5, 6, 5, 5, 12, 236]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 422
[length(mis) for mis = unique(C_list)] = [24, 18, 19, 19, 20, 19, 18, 31, 18, 20, 18]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 423
[length(mis) for mis = unique(C_list)] = [25, 21, 21, 19, 9, 20, 19]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 424
[length(mis) for mis = unique(C_list)] = [62, 17, 17, 20, 18, 25, 16, 20, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 425
[length(mis) for mis = unique(C_list)] = [6, 16, 15, 39, 14, 14, 24, 14, 13, 14, 45]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 426
[length(mis) for mis = unique(C_list)] = [18, 4, 4, 6, 13, 150, 36, 16, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 427
[length(mis) for mis = unique(C_list)] = [19, 5, 28, 36, 4, 18, 13, 3, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 428
[length(mis) for mis = unique(C_list)] = [20, 26, 21, 27, 17, 19, 5, 18, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 429
[length(mis) for mis = unique(C_list)] = [6, 10, 9, 8, 7, 9, 8, 10, 9, 7, 10, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 430
[length(mis) for mis = unique(C_list)] = [8, 4, 11, 11, 9, 4, 6, 7, 16, 7, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 431
[length(mis) for mis = unique(C_list)] = [34, 23, 22, 5, 4, 11, 5, 23, 22]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 432
[length(mis) for mis = unique(C_list)] = [22, 16, 18, 20, 5, 20, 22, 6, 20, 8, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 433
[length(mis) for mis = unique(C_list)] = [11, 9, 4, 32, 25, 29, 28, 12, 27, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 434
WARNING: Dual bound 0.98238 is smaller than the objective of the primal solution 0.982386. The solution might not be optimal.
WARNING: Dual bound 0.982389 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.98237 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982383 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[length(mis) for mis = unique(C_list)] = [8, 4, 10, 14, 27, 9, 12, 16, 27, 12, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 435
[length(mis) for mis = unique(C_list)] = [12, 7, 18, 37, 21, 21, 8, 21, 43, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 436
[length(mis) for mis = unique(C_list)] = [9, 7, 7, 7, 8, 7, 7, 10, 7, 6, 8, 7, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 437
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 129, 6, 7, 4, 9, 4, 5, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 438
[length(mis) for mis = unique(C_list)] = [8, 18, 4, 18, 17, 6, 18, 20]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 439
[length(mis) for mis = unique(C_list)] = [7, 27, 8, 8, 137, 23, 33, 9, 7, 10, 10]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 440
[length(mis) for mis = unique(C_list)] = [12, 18, 16, 11, 15, 9, 10, 18, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 441
[length(mis) for mis = unique(C_list)] = [5, 6, 5, 5, 6, 6, 5, 5, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 442
[length(mis) for mis = unique(C_list)] = [36, 15, 10, 24, 16, 4, 5, 7, 10, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 443
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 17, 25, 5, 31, 12, 17, 24, 5, 11]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 444
[length(mis) for mis = unique(C_list)] = [63, 74, 8, 69, 36, 37, 38, 38, 61, 82]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 445
[length(mis) for mis = unique(C_list)] = [7, 9, 21, 22, 31, 19, 17, 19, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 446
[length(mis) for mis = unique(C_list)] = [6, 12, 5, 12, 14, 15, 12, 12, 12, 53]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 447
[length(mis) for mis = unique(C_list)] = [3, 17, 18, 15, 12, 23, 11, 12, 12, 11, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 448
[length(mis) for mis = unique(C_list)] = [23, 11, 10, 19, 19, 39, 19, 19, 8, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 449
[length(mis) for mis = unique(C_list)] = [14, 10, 6, 9, 20, 21, 22, 104, 10, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 450
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 15, 13, 17, 21, 13, 13, 34]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 451
[length(mis) for mis = unique(C_list)] = [12, 9, 4, 10, 11, 16, 15, 4, 19]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 452
[length(mis) for mis = unique(C_list)] = [12, 4, 6, 4, 7, 4, 32, 32, 24]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 453
[length(mis) for mis = unique(C_list)] = [30, 14, 30, 12, 8, 14, 12, 12, 13, 16]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 454
[length(mis) for mis = unique(C_list)] = [14, 20, 22, 16, 36, 17, 16, 14, 14, 14]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 455
[length(mis) for mis = unique(C_list)] = [6, 10, 11, 11, 11, 11, 10, 257]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 456
termination = MathOptInterface.INFEASIBLE
objective_value = 0.9823963461343014
