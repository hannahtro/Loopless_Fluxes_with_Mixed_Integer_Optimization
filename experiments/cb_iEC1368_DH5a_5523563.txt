┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1368_DH5a
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1368_DH5a
----------------------------------
number of metabolites : 1951
number of reactions : 2779
number of genes : 1368

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 56
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2779 flux variables and 5214 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 19, 17, 17, 21, 17, 17, 17, 15, 14, 14, 11, 11, 11, 14, 15, 11, 14, 11, 11, 26, 14, 2, 7, 3, 3, 2, 8, 6, 14, 2, 14, 15, 4]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 2, 3, 3, 2, 2, 65, 2, 4, 3, 158, 2, 5, 3, 3, 2, 3, 2]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 4, 2, 3, 7, 3, 9, 2, 5, 4, 2, 3, 19, 42, 3, 2, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 2, 3, 6, 5, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 3, 7, 4, 2, 20, 2, 2, 85, 2, 21, 6, 8, 2]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 2, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 3, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 4, 13, 4, 4, 4, 5, 4, 4, 3, 5, 4, 3, 4, 8]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 7, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 11, 11, 11, 14, 18, 11, 15, 11, 11, 6, 27, 3, 6, 6, 9, 6, 6, 6, 80, 10, 12, 14, 7, 66]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 15, 2, 2, 2]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 11, 27, 3, 5, 4, 3, 4, 4, 5, 5, 5, 7, 7, 4, 5, 10, 32]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 6, 6, 4, 6, 6, 4, 6, 5, 5, 4, 8, 6, 6, 6, 5, 4, 4, 5, 6, 4, 4, 6, 4, 6, 4, 4, 10, 6, 6, 13, 6]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 136, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 43, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 2, 6, 5, 5, 7, 21]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 3, 3, 3, 3]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 119]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 17
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823964586940311
thermo_feasible = true
