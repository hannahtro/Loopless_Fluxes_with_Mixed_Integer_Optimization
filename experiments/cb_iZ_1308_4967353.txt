┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iZ_1308
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iZ_1308
----------------------------------
number of metabolites : 1923
number of reactions : 2721
number of genes : 1308

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5051 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 3, 13, 14, 13, 14, 13, 11, 11, 13, 11, 11, 11, 11, 13, 11, 13, 2, 13, 14, 13, 14, 13, 13, 14, 2, 3, 2, 9, 7, 16, 16, 26, 16, 17, 16, 16, 3, 2, 2, 4, 4, 2, 3, 2, 7, 6, 4, 4, 2, 39, 7, 39, 39, 39, 181, 59, 9, 10, 7, 6, 2, 9, 9, 10, 10, 11]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 10, 4, 2, 2, 3, 3, 3, 9, 6, 3, 15, 2, 5, 5, 4, 6, 3, 4, 3, 4, 5, 4, 3, 24, 14, 3, 4, 3, 2, 3, 4, 3]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 4, 15, 15, 2, 3, 14, 2, 2, 4, 15, 3, 2, 3, 23, 14, 18, 15, 13, 3, 12, 3, 15, 16, 13, 17, 189]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 3, 5, 4, 6, 54, 4, 5, 4, 8, 5, 43, 11, 3, 4, 9, 5, 13, 7, 10, 12, 4, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 4, 4, 4, 9, 4, 4, 6, 4, 5, 4, 10, 28, 85, 6, 43, 7, 4, 4, 7, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 4, 4, 4, 4, 4, 4, 6, 4, 5, 4, 6, 4, 4, 4, 4, 5, 7, 62, 11, 4, 5, 6, 4, 7, 6, 4, 5, 7, 13]
length(C_list) = 33
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 5, 12, 6, 7, 32, 4, 4, 280, 6, 4, 12, 6, 12, 6, 6, 6, 9, 55]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 6, 4, 5, 9, 9, 6, 16, 161]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 303, 5, 7, 3, 5, 10, 11, 135, 3, 4, 4, 9, 4, 81]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 6, 6, 6, 5, 6, 6, 139, 21, 8, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 13, 5, 6, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784589535874
thermo_feasible = true
