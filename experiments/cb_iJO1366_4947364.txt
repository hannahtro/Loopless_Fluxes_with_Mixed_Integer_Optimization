┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJO1366
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJO1366
----------------------------------
number of metabolites : 1805
number of reactions : 2583
number of genes : 1367

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2583 flux variables and 4836 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 11, 11, 11, 11, 11, 11, 11, 2, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
length(C_list) = 4
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 11, 11, 11, 11, 11, 11, 11, 7, 4, 17, 17, 18, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 16, 15, 15, 14, 23, 20, 14, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 2, 11, 12, 11, 11, 12, 11, 11, 17, 17, 19, 18, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 96, 18, 263, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 11, 11, 11, 11, 11, 11, 11, 7, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 13, 11, 11, 11, 11, 11, 44, 2, 17, 17, 17, 19, 17, 17, 17, 26, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 14, 14, 17, 14, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [6, 3, 11, 45, 11, 11, 11, 11, 11, 8, 17, 17, 17, 17, 18, 17, 17, 14, 14, 14, 14, 14, 14, 14, 16, 16, 16, 19, 19, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 13, 3, 11, 11, 11, 11, 11, 11, 11, 17, 18, 17, 17, 223, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 16, 44, 11, 20, 11, 11, 11, 18, 211, 17, 17, 17, 17, 19, 14, 14, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 6, 2, 11, 11, 11, 11, 11, 11, 11, 17, 17, 17, 19, 17, 17, 18, 16, 14, 15, 14, 14, 14, 15, 14, 14, 16, 14, 14, 14, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 11, 11, 11, 11, 11, 11, 11, 6, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 11, 11, 11, 11, 11, 11, 11, 15, 3, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 45, 11, 11, 11, 11, 11, 11, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 22, 15, 70, 15, 15, 15, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 20, 11, 15, 15, 11, 11, 11, 20, 20, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 22, 14, 15, 25, 15, 14, 14, 26, 15, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 11, 11, 11, 11, 11, 11, 11, 6, 3, 100, 7, 7, 17, 17, 28, 17, 17, 17, 17, 15, 14, 14, 14, 14, 14, 14, 21, 18, 14, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 7, 63, 11, 11, 11, 11, 11, 11, 3, 17, 17, 17, 17, 17, 17, 17, 14, 14, 14, 14, 14, 14, 14, 185, 16, 14, 14, 14, 14, 17]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [12, 9, 3, 13, 12, 12, 12, 12, 12, 12, 7, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 7, 6, 11, 11, 11, 11, 11, 11, 11, 3, 6, 18, 18, 18, 18, 18, 18, 18, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 11, 11, 11, 16, 11, 11, 11, 20, 20, 20, 20, 20, 20, 22, 17, 17, 17, 24, 17, 17, 17, 17, 17, 17, 17, 17, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 16, 11, 11, 11, 11, 11, 11, 11, 10, 20, 20, 33, 20, 20, 20, 20, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 3, 18, 5, 14, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 90, 8, 6, 8, 6, 12, 10, 7]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 3, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [6, 5, 7, 3, 9, 65, 11, 5, 4, 12]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 9, 9, 9, 9, 5, 9, 9, 4, 6, 4, 4, 4, 4, 4, 84, 10, 5, 4, 4, 6, 3, 10, 4, 4, 4, 4, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 49, 3]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [2, 7, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 35, 8]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 28
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823719167812344
thermo_feasible = true
