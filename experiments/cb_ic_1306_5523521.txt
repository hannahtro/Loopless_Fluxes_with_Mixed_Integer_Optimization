┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
ic_1306
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

ic_1306
----------------------------------
number of metabolites : 1936
number of reactions : 2726
number of genes : 1307

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2726 flux variables and 5061 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 11, 11, 11, 11, 11, 4, 16, 16, 17, 16, 39, 18, 16, 16, 13, 13, 54, 4, 2, 14, 3, 13, 16, 2, 4, 4, 15, 27, 14, 16, 13, 27, 74]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 2, 13, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 39, 17, 16, 16, 13, 13, 54, 2, 14, 4, 161, 19, 2, 14, 2, 13, 14, 13, 13, 13]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [9, 151, 11, 11, 12, 11, 11, 11, 5, 17, 17, 18, 17, 40, 18, 17, 17, 14, 14, 55, 4, 15, 3, 3, 19, 15, 6, 16, 6, 14, 14, 14, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 3, 11, 11, 11, 155, 15, 47, 11, 3, 16, 16, 17, 16, 40, 17, 16, 16, 13, 13, 54, 2, 14, 3, 4, 13, 15, 14, 2, 14, 5, 14, 14, 18, 13]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [7, 2, 11, 11, 12, 11, 11, 11, 11, 16, 16, 19, 16, 40, 17, 16, 17, 13, 13, 54, 14, 4, 13, 14, 6, 14, 7, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 164, 11, 11, 11, 11, 11, 11, 2, 16, 16, 17, 16, 39, 17, 16, 16, 13, 13, 53, 3, 14, 3, 133, 13, 14, 3, 14, 13, 13, 13]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 6, 6, 11, 11, 12, 11, 277, 12, 13, 3, 16, 16, 17, 16, 39, 18, 16, 208, 13, 13, 54, 14, 6, 32, 14, 17, 6, 14, 6, 13, 13, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 7, 11, 11, 11, 11, 11, 11, 11, 16, 16, 17, 16, 39, 17, 16, 16, 13, 13, 54, 4, 17, 6, 6, 13, 14, 9, 15, 3, 14, 13, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 11, 11, 11, 11, 11, 11, 17, 17, 18, 17, 42, 18, 17, 17, 14, 14, 55, 15, 6, 9, 14, 15, 14, 6, 15, 14, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 12, 11, 11, 11, 11, 11, 23, 35, 17, 18, 17, 40, 18, 17, 17, 14, 14, 54, 15, 14, 15, 6, 14, 6, 14, 14, 14]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 8, 9, 11, 2, 8, 4, 3, 4, 11, 6, 3, 9, 4, 8, 10, 4, 10, 9, 4, 8, 11, 8, 11, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 10, 9, 9, 9, 9, 9, 46, 14, 14, 15, 14, 37, 15, 14, 14, 11, 11, 3, 3, 12, 4, 11, 12, 8, 12, 11, 11, 11]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 6, 3, 3, 6, 4, 3, 13, 64, 3]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 6, 10, 5, 3, 25, 144]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 2, 4, 2, 4, 41, 3, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 6, 2, 4, 5, 4, 4, 3, 4, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 7, 4, 12, 7, 6, 7, 23, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 2, 2, 10, 71, 7, 3, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 2, 6, 8, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 2]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 20
termination = MathOptInterface.OPTIMAL
objective_value = 1.0319223347771276
thermo_feasible = true
