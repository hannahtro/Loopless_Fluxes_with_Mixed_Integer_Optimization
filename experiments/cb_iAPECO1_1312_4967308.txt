┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iAPECO1_1312
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iAPECO1_1312
----------------------------------
number of metabolites : 1942
number of reactions : 2735
number of genes : 1313

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2735 flux variables and 5079 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [6, 11, 13, 11, 11, 11, 11, 11, 14, 14, 13, 16, 2, 13, 13, 13, 16, 13, 16, 17, 16, 17, 13, 14, 6, 16, 16, 23, 13, 39, 14, 4, 54, 11, 2, 4, 9, 11, 9, 10, 10, 9, 9, 7, 2, 2, 3, 4, 2, 10, 2, 33, 32, 34, 2, 6, 2, 38, 39, 38, 2, 7, 32, 4, 7, 70, 51, 2, 11, 37, 3, 3, 14]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 103, 3, 5, 2, 3, 4, 2, 3, 3, 3, 2, 4, 4, 5, 4, 3, 5, 4, 3, 4, 28, 7, 4, 2, 6, 4, 3, 3, 4, 4, 6, 3, 5, 4, 4, 4, 7, 3, 6]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 62, 3, 3, 5, 3, 18, 3, 3, 2, 8, 5, 3, 6, 2, 11, 4, 5, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 5, 4, 13, 6, 3, 3, 4, 16, 14, 6, 5, 8, 140, 9, 3, 15, 2, 108, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 5, 5, 5, 2, 4, 4, 5, 7, 2, 2, 5, 5, 6, 6, 3, 107, 11, 4, 6, 5]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 4, 2, 3, 2, 3, 4, 7, 10, 3, 3, 3, 4, 3, 4, 4, 17, 41]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 4, 4, 5, 4, 6, 4, 5, 5, 6, 6, 4, 4, 5, 6, 11, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 6, 5, 20]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 5, 9, 6, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 9, 5, 8, 4, 5, 7, 115, 134, 5, 5, 6, 48, 63]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 59, 2, 2, 3, 3, 4, 4, 9, 93, 4, 3, 5, 43, 72, 17, 7, 197, 138]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 4, 4, 6, 4, 4, 8, 5, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 6, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785165146894
thermo_feasible = true
