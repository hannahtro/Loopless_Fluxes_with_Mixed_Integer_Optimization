┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 8, 3, 4, 4, 4, 8, 3, 6, 2, 7, 3, 5, 7, 4, 3, 4, 6, 16, 4, 4, 10, 9, 9, 6, 6]
length(C_list) = 18
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 3, 3, 4, 3, 4, 3, 8, 4, 3, 5, 9, 4, 4, 3, 4, 21, 2, 14, 4, 8, 358, 357, 8, 4, 5, 3, 4, 6, 7, 3, 10, 5, 3, 190]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 4, 2, 109, 5, 5, 5, 5, 4, 231, 8, 5, 5, 259, 3, 5, 3, 4, 5, 5, 5, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 9, 6, 8, 6, 5, 4, 8, 22, 7, 3, 6, 9, 4, 5, 6, 21, 5, 6, 7, 3, 4, 4, 8, 9, 4, 6, 5, 63, 7, 64, 9, 7, 4, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [10, 9, 4, 7, 8, 11, 8, 6, 6, 9, 4, 8, 10, 3, 8, 7, 5, 4, 8, 9, 5, 7, 8, 3, 8, 11, 8, 8, 8, 10, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [14, 9, 9, 7, 8, 9, 8, 4, 8, 3, 9, 4, 7, 3, 6, 5, 10, 3, 11, 4, 4, 10, 9, 6, 8, 7, 9, 5, 3, 8, 9, 3, 8, 4, 5, 15]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 9, 7, 9, 3, 3, 9, 5, 8, 8, 9, 4, 9, 7, 5, 7, 7, 7, 11, 13, 3, 4, 9, 8, 6, 7, 5, 13]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 9, 3, 4, 23, 3, 8, 4, 5, 4, 9, 11, 11, 9, 7, 10, 3, 8, 3, 7, 9, 7, 8, 8, 4, 321, 5, 7, 8, 10, 165, 8, 7, 5, 242, 8, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [13, 9, 3, 5, 9, 10, 9, 8, 6, 9, 5, 9, 8, 9, 7, 7, 5, 6, 4, 9, 8, 8, 6, 6, 13, 13, 18, 7, 11, 7, 7, 89, 6, 9, 7, 6]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 9, 9, 6, 9, 7, 8, 9, 8, 7, 8, 14, 8, 8, 9, 6, 8, 7, 7, 6, 8, 7, 9, 7, 7, 7, 7, 6, 9, 10, 8, 9, 8]
AssertionError("!(isempty(C_list_filtered))")
