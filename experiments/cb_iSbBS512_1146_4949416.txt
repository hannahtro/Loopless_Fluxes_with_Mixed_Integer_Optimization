┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSbBS512_1146
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSbBS512_1146
----------------------------------
number of metabolites : 1910
number of reactions : 2591
number of genes : 1147

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
max_cuts = 39
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2591 flux variables and 4791 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 16, 16, 17, 20, 17, 16, 16, 13, 13, 14, 22, 148, 13, 13, 11, 95, 13, 11, 11, 11, 14, 11, 13, 13, 14, 13, 15, 13, 11, 13, 15]
length(C_list) = 34
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 2, 3, 3, 2, 2, 3, 19, 80, 3, 119, 16, 3, 4, 2, 4, 2]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 2, 3, 3, 3, 3, 2, 4, 3, 24, 3, 5, 51, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 3, 6, 3, 4, 235, 4, 3, 32, 3, 3, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 3, 3, 4, 3, 8, 5, 4, 12, 6, 13, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 8, 57, 2, 2, 2, 8, 2, 12, 2, 2, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 3, 2, 2, 86, 4, 3, 3, 3, 3, 3, 3, 3, 33, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 152, 4, 6, 15, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 5, 13, 2, 3, 4, 3, 3, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 5, 9, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 5, 4, 4, 4, 5, 4, 4, 4, 9, 5, 4, 5, 3, 6, 23, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 3, 4, 5, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 5, 83, 16, 9, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [13, 2, 16, 16, 7, 16, 6, 16, 17, 13, 13, 6, 13, 11, 14, 11, 11, 11, 11, 16, 11, 13, 13, 8, 6, 6, 13, 14]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 3, 3, 4, 5, 3, 20, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 5, 8, 6, 4, 45, 8, 8, 9, 4, 7, 8, 20, 9, 4, 8, 5, 11, 9, 8, 9, 8, 9, 10, 4]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9828118686722663
thermo_feasible = true
