WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
WARNING: Dual bound 0.982471 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECS88_1305
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECS88_1305
----------------------------------
number of metabolites : 1942
number of reactions : 2729
number of genes : 1305

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 136
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2729 flux variables and 5067 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 3, 2, 2, 4, 3, 3, 4, 2, 2, 5, 3, 2, 3, 2, 3, 2, 2, 4, 2, 4, 4, 3, 3, 6, 38, 10, 3, 4, 40, 2, 3, 3, 17, 5, 129]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 2, 3, 3, 3, 4, 2, 4, 3, 4, 3, 5, 3, 4, 3, 4, 3, 3, 3, 4, 4, 4, 2, 4, 4, 4, 16, 4, 3, 4, 5, 3, 4, 17, 6, 5, 8, 5, 13, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 3, 5, 4, 4, 5, 4, 10, 4, 4, 4, 4, 4, 4, 4, 6, 79, 12, 6, 4, 4, 4, 5, 5, 4, 8, 7, 4, 8, 12, 6, 7, 14, 7, 58, 42, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 6, 3, 5, 5, 3, 2, 6, 48, 5, 4, 4, 4, 61, 8, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 4, 2, 13, 5, 5, 13, 99, 12, 4, 2, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 5, 3, 2, 2, 3, 6, 8, 2, 2, 8, 7, 8, 2, 6, 6, 3, 88, 41, 8, 10, 5, 3, 8, 4, 10, 6, 3, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 3, 5, 11, 50, 72, 8, 17, 6, 114, 6, 26, 4, 4, 4, 7, 8, 75, 34, 7, 9, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 2, 4, 3, 4, 7, 5, 3, 4, 3, 5, 13, 7, 4, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 4, 4, 86, 33, 4, 7, 5, 6, 3, 8, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 121, 112]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 4, 6, 5, 5, 4, 4, 8, 6, 17, 6, 14, 10, 41, 193, 34, 9, 10, 8, 4, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 5, 5, 4, 6, 6, 8, 34, 9, 4, 11, 225, 4, 6, 133, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 7, 7, 8, 9, 3, 5, 3, 56, 3, 8, 6, 5, 6, 44, 6, 13, 15, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 5, 46, 5, 8, 8, 5, 7, 6, 7, 8, 6, 7, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 12, 11, 33, 302, 7, 29, 11, 6, 7, 9, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 5, 12, 7, 6, 8, 4, 8, 138, 5, 5, 6, 8, 4, 4, 12, 5, 44]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 13, 6, 7, 4, 3, 5, 5, 5, 5, 6, 6, 6, 9, 161, 57, 7, 7, 5, 9, 6, 7, 5, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 8, 8, 12, 5, 8, 9, 4, 7, 9, 4, 8, 5, 9, 9, 11, 55, 245, 9, 166, 10, 13, 9, 6, 9, 9, 5, 7, 8, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660097
thermo_feasible = true
