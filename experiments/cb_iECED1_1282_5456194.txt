WARNING: Dual bound 0.982456 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982456 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982447 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982456 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982456 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982456 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982438 is smaller than the objective of the primal solution 0.982452. The solution might not be optimal.
WARNING: Dual bound 0.982452 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982424 is smaller than the objective of the primal solution 0.982452. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECED1_1282
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECED1_1282
----------------------------------
number of metabolites : 1929
number of reactions : 2706
number of genes : 1279

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 27
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2706 flux variables and 5021 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 12]
length(C_list) = 12
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 49, 11, 21, 4, 4, 4, 2, 2, 18, 3, 3, 4, 2, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 2, 4, 3, 4, 5, 4, 2]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 2, 4, 3, 4, 13, 4, 3, 4, 3, 25, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 5, 3, 2, 2, 6, 4, 6, 18, 7, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 8, 3, 4, 3, 2, 2, 2, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 3, 6, 16, 4, 3, 19, 4, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 58, 5, 3, 5, 4, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 3, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 4]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [5, 7, 2, 9, 4, 7]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 51]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [5, 6, 9, 15, 15, 16, 15, 16, 15, 8, 16, 8, 8, 8, 8, 9, 8, 6, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [24, 7, 4, 17, 17, 17, 17, 25, 17, 18, 15, 8, 19, 8, 21, 8, 4, 9, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [11, 6, 9, 9, 6, 15, 18, 11, 15, 9, 4, 10, 27, 9, 15, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 17, 19, 17, 17, 18, 17, 5, 19, 6, 11, 20, 20, 8, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 4, 23, 14, 9, 24, 3, 192, 4, 10, 4, 4, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [10, 5, 7, 13, 16, 14, 18, 187, 19, 4, 27, 16, 15, 27, 28, 10, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 3, 6, 37, 12, 5, 12, 14, 18, 8, 12, 17, 191, 39, 8, 12, 85, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 18, 21, 18, 7, 13, 22, 26, 27, 19, 17, 26, 5, 13, 10, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [9, 23, 17, 27, 5, 25, 13, 13, 16, 16, 9, 3, 10, 4, 114, 4, 12, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [12, 7, 5, 3, 17, 5, 20, 25, 3, 10, 14, 14, 3, 9, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 2, 10, 28, 17, 8, 2, 6, 16, 9, 6, 5, 20, 3, 3, 32, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 24, 7, 17, 19, 17, 13, 8, 16, 12, 29, 22, 6, 31, 3, 5, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 27, 7, 27, 27, 15, 19, 8, 6, 4, 8, 12, 8, 4, 7, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 7, 6, 15, 23, 11, 5, 4, 6, 14, 3, 21, 6, 6, 22, 6, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 12, 12, 4, 29, 16, 20, 14, 6, 8, 18, 5, 23, 28, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 5, 4, 3, 14, 5, 4, 5, 6, 5, 12, 13, 18, 13, 13, 10, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [18, 4, 10, 18, 16, 5, 8, 9, 6, 18, 5, 24, 9, 4, 27, 25, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 4, 6, 9, 10, 13, 5, 3, 7, 5, 3, 15, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 3, 15, 23, 7, 23, 25, 23, 15, 23, 27, 3, 7, 3, 5, 40, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [23, 4, 6, 6, 6, 3, 6, 5, 6, 4, 5, 6, 11, 5, 2, 4, 4, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 10, 4, 15, 6, 23, 23, 22, 19, 10, 17, 4, 10, 28, 8, 10, 4, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 4, 4, 4, 4, 24, 24, 7, 5, 4, 5, 8, 21, 5, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 4, 11, 13, 13, 14, 21, 15, 4, 4, 8, 3, 3, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 4, 28, 8, 7, 5, 4, 6, 9, 7, 3, 21, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 6, 13, 3, 32, 4, 27, 31, 119, 3, 4, 4, 4, 8, 9, 151]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [16, 5, 57, 7, 4, 5, 13, 4, 25, 15, 4, 5, 5, 3, 17, 17, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 38, 5, 3, 22, 21, 4, 18, 4, 10, 32, 7, 8, 4, 30, 27, 8, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 15, 14, 17, 13, 12, 19, 5, 14, 9, 6, 18, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [10, 5, 6, 4, 14, 27, 19, 14, 19, 7, 29, 20, 8, 4, 3, 7, 26, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 16, 38, 16, 4, 31, 28, 10, 7, 4, 4, 3, 6, 6, 32, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [30, 4, 4, 11, 5, 14, 16, 19, 14, 4, 13, 4, 4, 4, 28, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [6, 7, 3, 15, 8, 5, 42, 15, 149, 7, 4, 4, 22, 15, 5, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 12, 5, 11, 6, 3, 4, 10, 5, 3, 3, 10, 15, 4, 8, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [12, 3, 5, 21, 13, 24, 12, 16, 11, 15, 8, 10, 41, 16, 6, 6, 5, 3, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [14, 6, 5, 4, 16, 37, 5, 7, 4, 8, 4, 8, 48, 3, 4, 11, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 6, 28, 14, 3, 14, 6, 6, 39, 6, 4, 4, 15, 11, 6, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [14, 3, 5, 14, 13, 10, 12, 14, 15, 5, 18, 7, 6, 5, 5, 7, 17, 5, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 5, 5, 11, 3, 7, 6, 4, 5, 5, 10, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [11, 4, 7, 21, 15, 12, 22, 35, 21, 8, 21, 26, 8, 7, 6, 26, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [5, 25, 17, 4, 4, 16, 4, 17, 12, 5, 7, 3, 3, 4, 9, 22, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 12, 3, 13, 19, 9, 16, 5, 6, 6, 5, 6, 15, 9, 17, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 7, 5, 11, 31, 13, 4, 14, 8, 6, 8, 6, 4, 4, 3, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [2, 5, 5, 80, 5, 19, 185, 12, 4, 10, 10, 5, 10, 17, 10, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 3, 7, 35, 16, 14, 35, 26, 7, 10, 10, 4, 10, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [33, 3, 14, 4, 41, 205, 6, 6, 6, 19, 3, 17, 12, 3, 3, 5, 4, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [20, 4, 4, 20, 13, 3, 19, 33, 4, 14, 8, 6, 8, 4, 4, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [3, 5, 12, 4, 8, 3, 24, 11, 4, 3, 4, 10, 7, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [10, 8, 4, 4, 31, 22, 4, 7, 15, 8, 27, 6, 5, 4, 9, 8, 7, 5, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [26, 5, 4, 21, 3, 5, 29, 16, 18, 7, 14, 6, 3, 7, 23, 27, 34, 15, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 8, 7, 16, 6, 13, 6, 6, 19, 5, 6, 10, 15, 17, 20, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 12, 6, 8, 6, 4, 7, 9, 6, 6, 4, 3, 4, 15, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [20, 5, 3, 13, 6, 18, 21, 4, 5, 20, 7, 7, 4, 6, 6, 9, 11, 15, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 22, 13, 3, 13, 16, 5, 8, 6, 3, 4, 6, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 36, 12, 29, 12, 26, 5, 5, 21, 3, 21, 4, 4, 7, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [5, 5, 5, 15, 8, 15, 11, 4, 17, 16, 6, 5, 6, 3, 7, 7, 5, 5, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [9, 9, 11, 3, 15, 4, 22, 18, 7, 18, 4, 6, 5, 8, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [7, 6, 22, 14, 4, 16, 26, 5, 10, 21, 5, 10, 66, 5, 6, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 4, 12, 3, 9, 5, 7, 11, 9, 6, 10, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [22, 13, 4, 16, 16, 22, 13, 4, 3, 32, 10, 8, 7, 15, 190]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [18, 5, 5, 16, 4, 5, 7, 26, 3, 16, 21, 7, 4, 12, 15, 8, 224]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [32, 5, 4, 7, 5, 17, 18, 12, 7, 5, 6, 7, 10, 81, 12, 6, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 8, 6, 6, 5, 3, 8, 9, 4, 5, 8, 8, 11, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 4, 15, 4, 37, 3, 3, 4, 3, 5, 5, 6, 5, 5, 4, 8, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 16, 11, 18, 11, 23, 11, 18, 4, 16, 8, 16, 20, 12, 18, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [11, 5, 5, 4, 20, 6, 4, 6, 18, 8, 19, 4, 6, 8, 6, 4, 5, 14, 7, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [3, 31, 5, 38, 38, 15, 27, 6, 16, 9, 22, 23, 9, 9, 9, 9, 9, 33, 25, 33]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [13, 5, 4, 18, 22, 9, 24, 19, 8, 23, 5, 5, 4, 5, 7, 4, 15, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 6, 26, 6, 14, 8, 26, 16, 26, 16, 19, 16, 16, 16, 6, 13, 4, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [51, 4, 5, 5, 16, 5, 27, 4, 16, 4, 17, 5, 7, 6, 5, 36, 5, 20, 7, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 20, 20, 13, 4, 20, 14, 20, 13, 17, 12, 12, 13, 13, 15, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [16, 9, 3, 23, 12, 13, 4, 27, 3, 16, 4, 5, 6, 4, 13, 6, 230]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [8, 5, 5, 37, 25, 31, 5, 19, 13, 15, 13, 13, 13, 13, 13, 13, 18, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [35, 5, 13, 16, 20, 10, 10, 9, 9, 13, 6, 21, 4, 9, 8, 6, 3, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [51, 12, 6, 4, 5, 16, 4, 5, 67, 8, 4, 18, 9, 10, 6, 4, 5, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 7, 46, 47, 4, 9, 47, 42, 46, 42, 42, 44, 41, 39, 41, 41, 41]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [9, 4, 51, 44, 3, 5, 48, 4, 45, 40, 41, 40, 44, 41, 39, 42, 7, 43]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [10, 4, 21, 5, 16, 18, 15, 8, 12, 8, 11, 21, 9, 12, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 21, 3, 4, 8, 21, 19, 4, 7, 9, 9, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 5, 17, 6, 18, 18, 7, 8, 17, 6, 18, 6, 7, 3, 14, 5, 13, 10, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [6, 6, 6, 7, 6, 4, 6, 10, 4, 12, 8, 6, 5, 8, 9, 5, 5, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [33, 11, 5, 29, 18, 30, 5, 5, 30, 3, 23, 9, 9, 9, 9, 9, 31, 27, 4, 29]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [17, 4, 4, 5, 15, 4, 7, 6, 16, 14, 195, 14, 14, 22, 21, 14, 14, 13, 14, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [17, 5, 16, 5, 16, 18, 5, 4, 4, 14, 20, 14, 14, 5, 14, 14, 45, 12, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [5, 4, 6, 21, 18, 7, 5, 15, 5, 15, 13, 5, 10, 7, 6, 5, 13, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [5, 3, 13, 10, 14, 15, 14, 4, 18, 20, 8, 20, 23, 20, 4, 5, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [5, 6, 9, 4, 5, 27, 5, 43, 27, 8, 7, 8, 9, 8, 8, 129, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [14, 4, 3, 16, 20, 5, 6, 119, 7, 16, 6, 7, 5, 20, 4, 5, 12, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 4, 5, 6, 6, 5, 5, 12, 8, 4, 7, 7, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 4, 15, 29, 4, 6, 26, 19, 27, 18, 19, 19, 19, 19, 19, 21, 6, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [2, 14, 4, 9, 7, 5, 14, 8, 7, 4, 6, 15, 6, 3, 8, 18, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 3, 21, 4, 6, 6, 9, 4, 8, 5, 3, 7, 6, 7, 6, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [14, 4, 6, 19, 23, 23, 5, 24, 18, 17, 3, 9, 35, 4, 6, 4, 4, 14, 15, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [11, 5, 6, 5, 8, 6, 8, 10, 6, 8, 7, 53, 7, 7, 7, 5, 8, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [9, 4, 7, 10, 7, 7, 10, 7, 10, 7, 5, 7, 7, 5, 6, 7, 6, 6, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [9, 3, 5, 4, 17, 39, 5, 4, 10, 14, 5, 8, 8, 6, 10, 170, 17, 191]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [27, 5, 4, 7, 7, 8, 7, 5, 5, 7, 18, 9, 23, 4, 23, 13, 4, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [22, 6, 9, 18, 25, 5, 4, 6, 13, 5, 21, 21, 21, 21, 21, 8, 8, 12, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [14, 6, 5, 31, 23, 15, 18, 22, 4, 27, 10, 4, 6, 7, 8, 18, 18, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 6, 17, 17, 9, 5, 17, 4, 18, 17, 38, 12, 4, 6, 33, 7, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [66, 6, 4, 8, 10, 4, 4, 6, 16, 6, 19, 7, 6, 8, 6, 6, 6, 8, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 8, 8, 8, 18, 8, 43, 4, 4, 11, 6, 7, 5, 3, 6, 12, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [9, 4, 7, 16, 20, 13, 9, 18, 24, 14, 16, 45, 14, 14, 16, 14, 14, 14, 4, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 4, 4, 4, 4, 4, 6, 6, 7, 12, 6, 4, 12, 4, 15, 5, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 7, 15, 5, 15, 5, 7, 7, 20, 7, 4, 5, 7, 8, 6, 12, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [8, 5, 8, 5, 8, 5, 6, 19, 21, 5, 19, 7, 12, 10, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [4, 4, 11, 4, 23, 26, 5, 7, 18, 4, 33, 3, 4, 4, 4, 5, 10, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 6, 5, 4, 192, 7, 6, 141, 12, 6, 5, 5, 6, 5, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [20, 19, 3, 4, 63, 12, 24, 20, 20, 16, 19, 16, 16, 16, 21, 17, 24, 15, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 18, 6, 4, 6, 10, 4, 4, 6, 4, 5, 18, 5, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 4, 9, 17, 5, 6, 6, 6, 17, 8, 8, 7, 8, 6, 9, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [25, 7, 16, 18, 174, 14, 34, 27, 19, 11, 36, 10, 119, 29, 26, 11, 18, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [15, 3, 15, 27, 11, 6, 8, 6, 25, 14, 13, 13, 35, 21, 14, 9, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [11, 26, 31, 27, 18, 40, 17, 14, 3, 40, 21, 7, 21, 25, 32, 26, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [8, 5, 23, 7, 15, 7, 7, 6, 7, 14, 7, 53, 10, 4, 6, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [26, 17, 24, 13, 10, 45, 45, 26, 4, 24, 271, 8, 220, 36, 10, 10, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [19, 4, 6, 4, 8, 9, 4, 4, 6, 11, 9, 6, 10, 4, 16, 5, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 13, 6, 17, 6, 19, 15, 14, 16, 14, 14, 14, 17, 17, 14, 31, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [10, 4, 9, 8, 4, 16, 4, 7, 7, 9, 6, 5, 21, 11, 17, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [6, 9, 12, 6, 16, 20, 7, 12, 6, 12, 19, 18, 19, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [6, 12, 6, 3, 4, 4, 4, 6, 5, 6, 8, 14, 10, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [12, 15, 7, 9, 8, 8, 9, 6, 9, 12, 5, 19, 7, 9, 16, 20, 8, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 4, 5, 8, 10, 7, 20, 10, 6, 7, 8, 7, 3, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 11, 6, 16, 3, 5, 16, 5, 16, 5, 5, 9, 9, 8, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 10, 5, 12, 5, 30, 7, 5, 6, 4, 5, 7, 5, 5, 4, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 7, 11, 6, 4, 6, 4, 6, 8, 8, 17, 7, 5, 7, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 19, 18, 25, 3, 19, 19, 6, 20, 173, 15, 4, 226, 67]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [15, 29, 13, 4, 21, 8, 12, 24, 14, 21, 5, 28, 5, 27, 20, 13, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [13, 5, 4, 12, 6, 6, 3, 4, 4, 18, 19, 28, 5, 6, 4, 8, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [16, 9, 12, 6, 31, 34, 4, 6, 20, 11, 20, 6, 48, 5, 4, 8, 12, 5, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [2, 4, 13, 4, 5, 31, 6, 31, 9, 7, 18, 18, 7, 6, 17, 4, 12, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [10, 10, 9, 16, 22, 22, 14, 5, 14, 13, 17, 13, 13, 13, 13, 13, 13, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [24, 16, 19, 4, 26, 27, 26, 27, 10, 9, 30, 18, 17, 14, 9, 10, 19, 4, 24, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 10, 13, 21, 4, 4, 6, 9, 7, 26, 5, 5, 27, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [2, 4, 93, 69, 88, 4, 35, 12, 18, 33, 5, 4, 87, 12, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [15, 8, 10, 4, 11, 9, 4, 4, 4, 327, 4, 5, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [24, 8, 7, 7, 13, 5, 6, 14, 17, 16, 18, 6, 14, 7, 7, 4, 198, 20, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 5, 3, 7, 6, 10, 7, 5, 4, 6, 4, 5, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [4, 4, 16, 8, 17, 30, 9, 9, 13, 11, 12, 16, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 2, 4, 4, 5, 7, 5, 4, 4, 6, 4, 56, 7, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [4, 13, 17, 24, 5, 6, 11, 20, 8, 27, 7, 4, 8, 12, 22, 10, 24, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 5, 9, 5, 4, 4, 3, 4, 4, 5, 4, 3, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 16, 90, 97, 24, 93, 92, 30, 83, 19, 25, 23, 4, 24, 19, 42, 14, 94, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [8, 17, 4, 15, 6, 16, 17, 5, 17, 16, 17, 20, 6, 19, 26, 7, 13, 71, 6, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [20, 8, 7, 4, 21, 6, 20, 10, 22, 14, 9, 3, 5, 4, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [5, 30, 8, 10, 13, 13, 15, 20, 10, 3, 4, 8, 15, 4, 8, 11, 14, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [16, 4, 8, 9, 24, 12, 4, 6, 13, 8, 11, 4, 4, 10, 10, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [5, 4, 8, 11, 15, 9, 4, 9, 29, 11, 14, 21, 10, 21, 12, 13, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [15, 11, 11, 6, 11, 18, 6, 12, 19, 17, 6, 17, 88, 21, 17, 17, 15, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 31, 30, 32, 20, 37, 30, 4, 28, 27, 7, 5, 24, 5, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [6, 6, 4, 95, 21, 17, 14, 94, 26, 5, 18, 4, 5, 13, 31, 3, 94, 5, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 6, 4, 4, 10, 5, 8, 5, 4, 10, 4, 4, 7, 7, 5, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 13, 11, 26, 22, 23, 17, 8, 22, 10, 22, 147, 10, 12, 10, 10, 176, 21, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [9, 12, 7, 20, 12, 18, 6, 12, 15, 4, 4, 6, 4, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 6, 12, 11, 8, 27, 15, 18, 16, 10, 14, 12, 27, 18, 7, 5, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [38, 4, 9, 56, 54, 60, 42, 42, 9, 28, 24, 19, 5, 28, 21, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [7, 7, 15, 23, 20, 4, 3, 20, 19, 21, 14, 6, 6, 12, 6, 27, 9, 9, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [34, 6, 5, 17, 16, 5, 6, 23, 19, 16, 4, 4, 15, 229, 18, 4, 43, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 9, 4, 26, 26, 252, 24, 14, 9, 7, 9, 109, 11, 12, 4, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [8, 4, 21, 11, 21, 11, 16, 4, 202, 10, 197, 19, 13, 29, 8, 25, 26, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [34, 4, 4, 33, 28, 5, 4, 14, 28, 5, 6, 8, 6, 14, 12, 9, 3, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 57, 40, 16, 18, 20, 25, 11, 35, 10, 29, 34, 34, 19, 20, 27, 34, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [10, 4, 5, 23, 6, 22, 29, 19, 6, 19, 5, 6, 4, 11, 9, 4, 60, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [22, 6, 7, 6, 8, 21, 6, 26, 19, 7, 16, 9, 11, 7, 5, 10, 13, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [11, 8, 12, 12, 7, 8, 8, 5, 6, 16, 17, 15, 16, 12, 16, 25, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 10, 6, 40, 20, 8, 4, 13, 4, 8, 4, 6, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [4, 9, 29, 22, 18, 25, 15, 31, 8, 17, 32, 22, 12, 10, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [3, 4, 10, 46, 27, 28, 7, 35, 15, 11, 5, 13, 33, 8, 11, 14, 35, 101]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [18, 11, 13, 13, 12, 15, 15, 13, 13, 38, 21, 21, 28, 21, 21, 13, 13, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = WARNING: Dual bound 0.982415 is smaller than the objective of the primal solution 0.982437. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982453. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982442 is smaller than the objective of the primal solution 0.98245. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982453. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982405 is smaller than the objective of the primal solution 0.982437. The solution might not be optimal.
WARNING: Dual bound 0.982437 is smaller than the objective of the primal solution 0.982443. The solution might not be optimal.
WARNING: Dual bound 0.982413 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982416 is smaller than the objective of the primal solution 0.982446. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
WARNING: Dual bound 0.982406 is smaller than the objective of the primal solution 0.982437. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982444 is smaller than the objective of the primal solution 0.98245. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982453. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982442 is smaller than the objective of the primal solution 0.982462. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982434 is smaller than the objective of the primal solution 0.982447. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982429 is smaller than the objective of the primal solution 0.982437. The solution might not be optimal.
WARNING: Dual bound 0.98245 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982446 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98246 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982462 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.982455 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
WARNING: Dual bound 0.98244 is smaller than the objective of the primal solution 0.982443. The solution might not be optimal.
WARNING: Dual bound 0.982436 is smaller than the objective of the primal solution 0.982449. The solution might not be optimal.
WARNING: Dual bound 0.982455 is smaller than the objective of the primal solution 0.98246. The solution might not be optimal.
WARNING: Dual bound 0.982447 is smaller than the objective of the primal solution 0.982463. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[33, 7, 11, 11, 9, 7, 35, 16, 9, 7, 10, 20, 11, 238, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [7, 4, 10, 11, 7, 61, 42, 16, 77, 8, 10, 16, 4, 14, 6, 31, 22, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [48, 15, 2, 45, 44, 13, 37, 44, 39, 47, 38, 38, 38, 38, 41, 38, 4, 31, 45]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 22, 7, 5, 4, 11, 16, 22, 17, 17, 20, 15, 16, 4, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [21, 8, 15, 23, 7, 14, 13, 23, 15, 11, 14, 15, 10, 48, 10, 19, 3, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 5, 89, 13, 47, 27, 24, 24, 36, 16, 16, 16, 12, 16, 24, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 6, 5, 6, 15, 7, 5, 7, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [7, 9, 5, 18, 14, 25, 23, 99, 43, 6, 7, 5, 4, 4, 5, 9, 12, 6, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [21, 21, 4, 8, 4, 4, 7, 32, 4, 8, 8, 24, 11, 7, 8, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [28, 24, 15, 20, 28, 15, 4, 36, 17, 4, 18, 42, 27, 17, 18, 39, 36]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [37, 8, 8, 8, 12, 8, 18, 11, 10, 8, 8, 11, 8, 7, 8, 10, 14, 10, 7, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 5, 200, 16, 16, 28, 6, 4, 16, 16, 9, 19, 3, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 14, 19, 4, 14, 16, 11, 9, 11, 11, 8, 12, 4, 12, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [21, 7, 24, 14, 16, 6, 27, 19, 19, 8, 28, 19, 22, 12, 19, 46, 9, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [16, 26, 9, 5, 3, 15, 14, 18, 7, 10, 21, 10, 11, 115, 10, 10, 14, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [20, 4, 3, 14, 30, 15, 16, 9, 17, 10, 16, 28, 16, 46, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [22, 4, 4, 4, 7, 4, 17, 23, 7, 16, 21, 6, 16, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [15, 4, 22, 13, 10, 14, 40, 14, 43, 11, 36, 6, 13, 9, 11, 9, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [3, 8, 12, 12, 21, 13, 22, 24, 8, 12, 11, 14, 15, 18, 18, 10, 13, 12, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [15, 6, 24, 14, 13, 21, 30, 48, 36, 48, 18, 19, 36, 36, 36, 36, 40, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [14, 20, 4, 38, 32, 6, 18, 34, 4, 27, 12, 12, 12, 12, 12, 4, 14, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 6, 5, 7, 6, 4, 81, 16, 5, 6, 6, 7, 13, 9, 8, 4, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [14, 8, 20, 4, 12, 150, 22, 17, 4, 8, 21, 8, 8, 20, 9, 4, 13, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [31, 9, 7, 13, 23, 22, 8, 40, 6, 68, 22, 6, 5, 6, 18, 6, 5, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [5, 6, 13, 43, 32, 27, 8, 15, 32, 28, 29, 28, 29, 8, 39, 31, 28, 28, 4, 28, 39]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 206
[length(mis) for mis = unique(C_list)] = [4, 13, 14, 14, 14, 16, 15, 11, 10, 11, 44, 24, 5, 29, 18, 24, 5, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [32, 12, 4, 5, 49, 16, 18, 18, 13, 24, 39, 18, 18, 26, 19, 18, 17, 26, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [16, 4, 4, 6, 4, 7, 25, 5, 8, 8, 5, 5, 9, 9, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 5, 135, 6, 9, 4, 20, 4, 5, 4, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [61, 16, 51, 39, 28, 8, 8, 36, 25, 16, 8, 33, 13, 7, 35, 8, 6, 36, 12, 17, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [23, 17, 16, 24, 19, 24, 30, 27, 22, 21, 18, 9, 19, 18, 12, 25, 40, 16, 57, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [25, 6, 9, 25, 24, 12, 7, 18, 15, 14, 3, 19, 5, 77, 257, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 7, 6, 6, 6, 19, 19, 6, 7, 4, 17, 26, 6, 4, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [7, 41, 19, 43, 37, 34, 16, 3, 153, 31, 40, 15, 18, 19, 29, 22, 16, 30, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [32, 7, 11, 31, 14, 5, 15, 4, 11, 16, 5, 27, 31, 153, 4, 13, 15, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [8, 9, 6, 4, 5, 5, 5, 4, 5, 5, 5, 4, 4, 6, 4, 5, 7, 10, 5, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [8, 12, 8, 12, 29, 22, 18, 15, 10, 10, 10, 15, 11, 16, 12, 13, 4, 32, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [46, 16, 10, 9, 30, 24, 13, 20, 17, 13, 23, 17, 27, 40, 20, 8, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [44, 41, 12, 4, 26, 21, 24, 18, 11, 27, 18, 4, 19, 19, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [7, 20, 26, 6, 60, 4, 35, 20, 25, 248, 25, 20, 50, 18, 13, 25, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [72, 7, 7, 26, 6, 39, 47, 40, 7, 18, 38, 8, 9, 5, 8, 159, 9, 32, 17, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [4, 11, 21, 8, 24, 10, 10, 20, 21, 13, 21, 18, 11, 9, 4, 17, 9, 10, 7, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [7, 11, 41, 39, 18, 17, 17, 22, 18, 15, 5, 30, 8, 20, 16, 49, 15, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [30, 7, 16, 4, 5, 5, 22, 7, 5, 27, 6, 6, 11, 5, 4, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 4, 4, 7, 11, 126, 4, 5, 4, 4, 3, 4, 16, 5, 4, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 11, 6, 12, 46, 19, 3, 19, 6, 6, 11, 5, 13, 9, 7, 5, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [14, 6, 5, 3, 5, 4, 9, 6, 4, 7, 4, 9, 5, 10, 8, 6, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [31, 41, 17, 24, 40, 26, 38, 33, 31, 15, 30, 22, 34, 16, 42, 15, 54, 20, 55]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [21, 5, 9, 19, 19, 8, 25, 4, 6, 7, 21, 7, 6, 20, 27, 11, 12, 9, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [8, 14, 10, 10, 9, 4, 17, 4, 4, 8, 17, 18, 13, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [33, 33, 3, 19, 20, 17, 39, 20, 93, 5, 18, 12, 14, 14, 16, 16, 6, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 5, 7, 8, 8, 6, 9, 8, 9, 7, 11, 8, 6, 7, 17, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 16, 5, 4, 5, 21, 5, 10, 3, 5, 4, 40]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [11, 7, 8, 5, 11, 8, 5, 7, 6, 7, 4, 9, 64, 8, 13, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 5, 8, 26, 8, 5, 7, 11, 11, 6, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [16, 6, 8, 12, 4, 8, 4, 4, 5, 21, 13, 22, 21, 4, 20, 22, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 13, 6, 4, 4, 5, 4, 9, 7, 5, 4, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [12, 2, 6, 28, 9, 26, 29, 5, 6, 11, 10, 59, 27]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [24, 4, 17, 24, 24, 19, 30, 5, 20, 13, 11, 10, 14, 10, 18, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 180, 21, 22, 22, 22, 29, 35, 45, 24, 42, 45, 35, 10, 23, 14, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [12, 5, 10, 13, 6, 10, 7, 12, 9, 11, 20, 12, 11, 11, 11, 51, 5, 4, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [8, 14, 6, 8, 5, 22, 8, 7, 37, 7, 20, 13, 15, 11, 7, 12, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 5, 24, 42, 22, 4, 31, 16, 4, 9, 4, 44, 21, 56]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [50, 24, 20, 4, 35, 31, 18, 17, 18, 24, 26, 26, 19, 12, 22, 26, 16, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [4, 16, 19, 6, 8, 26, 6, 6, 18, 4, 15, 11, 6, 8, 18, 11, 12, 9, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [4, 15, 8, 14, 185, 4, 5, 7, 11, 11, 11, 7, 10, 6, 15, 74, 64, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [24, 21, 14, 4, 11, 8, 20, 21, 20, 20, 9, 29, 23, 24, 15, 8, 16, 7, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [10, 8, 8, 8, 8, 60, 2, 10, 8, 8, 7, 8, 7, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [11, 8, 10, 6, 8, 6, 6, 11, 6, 8, 10, 7, 10, 201, 7, 5, 10, 7, 8, 8, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 6, 7, 5, 5, 4, 7, 4, 8, 7, 7, 4, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [24, 28, 31, 27, 21, 38, 22, 16, 16, 33, 28, 23, 17, 16, 15, 33, 33]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 7, 5, 93, 4, 7, 7, 7, 5, 4, 6, 6, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 7, 8, 6, 9, 5, 9, 6, 7, 9, 8, 7, 8, 8, 10, 7, 7, 9, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [23, 11, 61, 4, 12, 6, 5, 13, 7, 11, 11, 12, 11, 11, 11, 12, 12, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [10, 24, 7, 17, 5, 6, 14, 7, 24, 17, 16, 16, 4, 20, 82, 7, 6, 13, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [4, 25, 4, 6, 31, 6, 8, 9, 32, 10, 38, 5, 6, 11, 27, 29, 28, 7, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [6, 179, 7, 35, 5, 11, 7, 4, 4, 11, 227, 10, 5, 5, 4, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [6, 8, 9, 10, 10, 6, 10, 8, 8, 6, 243, 8, 8, 9, 20, 12, 8, 8, 34]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [5, 4, 33, 9, 7, 40, 32, 23, 30, 25, 29, 40, 4, 27, 24, 32, 4, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [12, 12, 12, 15, 15, 10, 11, 12, 9, 10, 10, 9, 9, 76, 9, 10, 3, 10, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [7, 15, 12, 13, 11, 12, 12, 19, 11, 36, 13, 12, 12, 13, 12, 11, 37, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [9, 4, 13, 4, 6, 8, 10, 11, 8, 11, 81, 12, 10, 14, 13, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [3, 12, 15, 15, 15, 36, 34, 19, 34, 19, 20, 22, 19, 18, 14, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 7, 5, 6, 4, 8, 7, 16, 6, 5, 12, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [8, 12, 145, 7, 9, 9, 10, 8, 9, 8, 13, 12, 8, 10, 10, 7, 9, 9, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [6, 12, 11, 10, 15, 10, 9, 13, 10, 11, 14, 12, 13, 7, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 7, 8, 7, 7, 7, 9, 7, 9, 7, 10, 10, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 4, 6, 35, 4, 8, 12, 5, 7, 4, 10, 8, 7, 106, 5, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [44, 23, 21, 17, 35, 3, 19, 38, 33, 20, 10, 19, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [37, 4, 7, 17, 10, 23, 27, 20, 21, 16, 7, 7, 26, 11, 24, 17, 16, 6, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [20, 23, 22, 6, 43, 25, 24, 21, 6, 22, 10, 29, 25, 24, 33, 24, 6, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 7, 7, 4, 5, 9, 5, 76, 5, 181, 16]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [14, 15, 15, 8, 10, 8, 8, 16, 12, 36, 20, 8, 10, 8, 10, 14, 12, 18, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [33, 26, 5, 23, 28, 29, 28, 29, 11, 18, 29, 38, 27, 22, 29, 6, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [11, 5, 5, 15, 19, 13, 16, 11, 12, 5, 5, 10, 4, 12, 24, 5, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [6, 12, 8, 8, 7, 11, 8, 8, 10, 5, 6, 7, 8, 12, 7, 11, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [7, 11, 78, 3, 34, 4, 9, 8, 11, 11, 4, 6, 11, 4, 9, 9, 8, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [4, 6, 8, 7, 7, 6, 9, 7, 11, 9, 8, 93, 4, 10, 4, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 9, 4, 6, 7, 8, 6, 6, 7, 6, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [14, 11, 9, 9, 12, 12, 10, 8, 15, 11, 14, 9, 14, 11, 10, 8, 12, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 31, 7, 34, 99, 25, 18, 19, 11, 12, 11, 7, 13, 12, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [7, 6, 22, 21, 23, 23, 22, 7, 22, 21, 5, 22, 22, 29, 22, 8, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [24, 26, 21, 14, 19, 12, 87, 25, 23, 25, 17, 24, 9, 33, 33, 21, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [8, 15, 8, 8, 9, 7, 6, 6, 8, 40, 67, 8, 7, 6, 7, 4, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [9, 15, 12, 11, 13, 15, 5, 10, 8, 4, 5, 10, 9, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [22, 16, 13, 16, 28, 48, 15, 15, 14, 21, 21, 21, 21, 21, 21, 23, 21, 8, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [8, 3, 6, 6, 15, 7, 3, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 9, 18, 59, 134, 24, 21, 8, 30, 6, 13, 8, 20, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [60, 4, 3, 50, 67, 11, 65, 61, 68, 4, 9, 5, 4, 5, 64, 62, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
[length(mis) for mis = unique(C_list)] = [41, 4, 30, 10, 10, 16, 10, 24, 23, 12, 12, 12, 19, 8, 19, 13, 12, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 291
[length(mis) for mis = unique(C_list)] = [29, 7, 4, 32, 55, 35, 5, 34, 30, 23, 19, 19, 7, 19, 32, 39, 33, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 292
[length(mis) for mis = unique(C_list)] = [23, 23, 25, 31, 23, 80, 9, 29, 28, 41, 107, 141, 23, 23, 24, 35, 38, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 293
[length(mis) for mis = unique(C_list)] = [53, 11, 17, 27, 14, 15, 6, 194, 12, 8, 12, 8, 10, 31]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 294
[length(mis) for mis = unique(C_list)] = [3, 7, 30, 3, 8, 10, 4, 4, 9, 4, 6, 7, 9, 52, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 295
[length(mis) for mis = unique(C_list)] = [10, 15, 16, 17, 17, 6, 11, 16, 8, 11, 16, 18, 15, 14, 17, 17, 66, 15, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 296
[length(mis) for mis = unique(C_list)] = [19, 8, 12, 8, 11, 13, 10, 11, 15, 13, 15, 4, 13, 14, 15, 15, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 297
[length(mis) for mis = unique(C_list)] = [12, 36, 4, 41, 16, 28, 26, 14, 17, 16, 28, 21, 17, 26, 37]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 298
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 10, 15, 14, 14, 10, 11, 12, 16, 14, 11, 12, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 299
[length(mis) for mis = unique(C_list)] = [7, 9, 4, 7, 17, 14, 8, 48, 5, 8, 13, 4, 4, 15, 87, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 300
[length(mis) for mis = unique(C_list)] = [11, 13, 15, 8, 19, 61, 27, 16, 24, 26, 15, 12, 13, 14, 17, 14, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 301
[length(mis) for mis = unique(C_list)] = [7, 14, 8, 14, 10, 11, 12, 14, 13, 12, 11, 13, 24, 20, 19, 25, 9, 10, 9, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 302
[length(mis) for mis = unique(C_list)] = [10, 4, 18, 7, 19, 6, 6, 18, 10, 16, 10, 6, 9, 6, 8, 23, 12, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 303
[length(mis) for mis = unique(C_list)] = [9, 11, 12, 20, 13, 13, 7, 4, 12, 24, 12, 6, 24, 13, 11, 18, 15, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 304
[length(mis) for mis = unique(C_list)] = [16, 11, 45, 31, 43, 24, 30, 9, 28, 36, 28, 28, 49, 28, 28, 12, 30, 49, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 305
[length(mis) for mis = unique(C_list)] = [38, 10, 4, 11, 10, 35, 42, 11, 14, 15, 12, 37, 8, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 306
[length(mis) for mis = unique(C_list)] = [17, 9, 7, 7, 10, 3, 19, 24, 9, 17, 18, 7, 6, 21, 9, 16, 14, 16, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 307
[length(mis) for mis = unique(C_list)] = [22, 17, 24, 27, 11, 10, 21, 21, 18, 20, 12, 10, 33, 26, 22, 10, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 308
[length(mis) for mis = unique(C_list)] = [14, 25, 14, 27, 11, 4, 16, 21, 24, 20, 37, 49, 21, 19, 13, 13, 15, 20, 18, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 309
[length(mis) for mis = unique(C_list)] = [6, 9, 20, 15, 18, 39, 10, 7, 10, 31, 21, 5, 16, 4, 15, 21, 6, 15, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 310
[length(mis) for mis = unique(C_list)] = [5, 4, 10, 13, 10, 7, 10, 7, 10, 10, 35, 10, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 311
[length(mis) for mis = unique(C_list)] = [60, 4, 4, 20, 19, 14, 55, 20, 12, 5, 48, 10, 10, 13, 10, 18, 14, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 312
[length(mis) for mis = unique(C_list)] = [5, 10, 4, 23, 21, 15, 23, 22, 20, 15, 4, 15, 6, 228, 15, 11, 4, 8, 12, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 313
[length(mis) for mis = unique(C_list)] = [3, 13, 7, 9, 16, 7, 6, 6, 8, 4, 7, 7, 20, 8, 11, 7, 8, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 314
[length(mis) for mis = unique(C_list)] = [8, 10, 6, 12, 4, 5, 5, 4, 6, 7, 4, 4, 5, 5, 9, 5, 5, 9, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 315
[length(mis) for mis = unique(C_list)] = [40, 7, 4, 10, 14, 28, 33, 26, 6, 4, 17, 7, 10, 10, 6, 14, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 316
[length(mis) for mis = unique(C_list)] = [6, 6, 24, 7, 18, 9, 7, 7, 7, 12, 6, 9, 7, 5, 7, 8, 9, 200, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 317
[length(mis) for mis = unique(C_list)] = [4, 15, 23, 11, 12, 13, 14, 6, 11, 13, 16, 13, 7, 5, 13, 5, 11, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 318
[length(mis) for mis = unique(C_list)] = [25, 33, 13, 12, 12, 19, 12, 4, 11, 13, 12, 4, 13, 13, 7, 23, 29, 24]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 319
[length(mis) for mis = unique(C_list)] = [21, 14, 14, 13, 20, 22, 19, 19, 19, 23, 14, 33, 20, 8, 14, 14, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 320
[length(mis) for mis = unique(C_list)] = [6, 4, 22, 12, 18, 16, 17, 8, 8, 9, 8, 8, 8, 9, 15, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 321
[length(mis) for mis = unique(C_list)] = [23, 8, 7, 6, 15, 19, 17, 33, 19, 60, 16, 10, 8, 33, 8, 11, 10, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 322
[length(mis) for mis = unique(C_list)] = [22, 4, 11, 17, 26, 7, 7, 11, 6, 14, 4, 36, 7, 45]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 323
[length(mis) for mis = unique(C_list)] = [11, 9, 14, 9, 21, 12, 6, 21, 14, 5, 12, 12, 9, 22, 13, 17, 9, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 324
[length(mis) for mis = unique(C_list)] = [27, 11, 14, 13, 10, 47, 22, 16, 11, 9, 12, 12, 9, 25, 22, 29, 23, 14, 7, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 325
[length(mis) for mis = unique(C_list)] = [7, 4, 11, 10, 14, 17, 10, 175, 112, 80, 11, 19, 11, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 326
[length(mis) for mis = unique(C_list)] = [9, 6, 16, 16, 17, 12, 19, 4, 11, 16, 11, 11, 11, 11, 121, 11, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 327
[length(mis) for mis = unique(C_list)] = [14, 28, 11, 4, 19, 13, 11, 9, 14, 16, 5, 9, 9, 9, 6, 9, 18, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 328
[length(mis) for mis = unique(C_list)] = [3, 13, 6, 6, 7, 5, 6, 19, 12, 4, 6, 14, 4, 17, 20, 10, 18, 9, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 329
termination = MathOptInterface.INFEASIBLE
objective_value = 0.9824634442140316
