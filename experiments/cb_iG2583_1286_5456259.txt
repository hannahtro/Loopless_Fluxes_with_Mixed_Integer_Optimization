WARNING: Dual bound 0.982465 is smaller than the objective of the primal solution 0.982478. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iG2583_1286
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iG2583_1286
----------------------------------
number of metabolites : 1919
number of reactions : 2704
number of genes : 1283

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 135
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2704 flux variables and 5017 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 4, 2, 2, 3, 2, 2, 2, 2, 2, 5, 4, 3, 2, 3, 4, 61, 2, 3, 4, 2, 2, 2, 15, 5, 2, 5, 5, 3, 5, 3, 3, 3, 5, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 3, 4, 2, 3, 4, 4, 4, 4, 6, 49, 3, 5, 13, 5, 6, 10, 4, 6, 6, 3, 4, 4, 132, 6, 4, 4, 4, 4, 12, 4, 3, 71]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 3, 3, 3, 5, 4, 4, 4, 4, 5, 3, 3, 3, 3, 4, 4, 63, 4, 115, 4, 12, 4, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 2, 2, 2, 3, 12, 8, 4, 2, 6, 2, 22, 2, 6, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 5, 6, 4, 4, 27, 6, 36, 6, 39, 5, 93, 9, 12, 11, 292]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 3, 4, 4, 4, 7, 6, 4, 5, 4, 5, 11, 7, 5, 13, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 4, 10, 5, 143, 6, 11, 147, 8, 27, 4, 11, 3, 4, 6, 5, 4, 11, 242]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 10, 4, 14, 6, 6, 15, 9, 7, 7, 16, 7, 9, 4, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 6, 8, 5, 5, 8, 32, 116]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 4, 12, 35, 7, 6, 3, 9, 6, 3, 11]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 5, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 6, 5, 4, 6, 48, 4, 6, 4, 8, 4, 4, 5, 4, 5, 25, 6, 5, 6, 6, 6, 8, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 4, 5, 3, 3, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 4, 4, 4, 5, 5, 5, 4, 4, 5, 5, 5, 5, 5, 4, 5, 5, 6, 7, 10, 6, 5, 6, 6, 5, 68]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 5, 5, 6, 7, 5, 61, 10, 5, 11, 5, 14, 84, 6, 5, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 5, 4, 4, 6, 4, 4, 15, 7, 5, 4, 5, 4, 6, 6, 79, 80, 61, 223, 13, 4, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6, 4, 4, 179, 4, 8, 5, 5, 208]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 4, 4, 4, 4, 6, 5, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 4, 4, 5, 3, 5, 3, 4, 4, 32, 5, 4, 155, 6, 7, 7, 5, 32, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 8, 11, 6, 9, 11, 8, 10, 7, 6, 6, 5, 8, 7, 25, 10, 8, 5, 9, 9, 12, 4, 8, 5, 78, 7, 11, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 7, 12, 5, 20, 9, 8, 9, 10, 24, 8, 9, 14, 8, 34, 17, 17, 9, 9, 8, 8, 8, 8, 9, 10, 78, 5, 9, 10, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 7, 5, 93, 7, 5, 5, 7, 5, 43, 5, 7, 4, 167]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 6, 5, 5, 5, 5, 8, 6, 7, 6, 5, 6, 7, 7, 6, 7, 10, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [7, 9, 7, 6, 10, 7, 6, 8, 8, 8, 8, 8, 9, 8, 9, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 3, 7, 4, 4, 11, 23, 5, 5, 95, 15, 17, 4, 7, 4, 6, 9, 6, 6, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 28, 50, 4, 4, 10, 5, 5, 7, 74, 5, 44, 5, 4, 6, 5, 4, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784386660063
thermo_feasible = true
