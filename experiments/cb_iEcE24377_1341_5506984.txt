┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEcE24377_1341
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEcE24377_1341
----------------------------------
number of metabolites : 1972
number of reactions : 2763
number of genes : 1341

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2763 flux variables and 5135 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 28, 19, 20, 19, 20, 19, 19, 16, 16, 17, 16, 17, 16, 16, 18, 16, 16, 17, 19, 17, 16, 16, 11, 11, 16, 11, 11, 11, 11, 12, 7, 4, 16]
length(C_list) = 35
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 2, 2, 2, 2, 3, 5, 2, 2, 3, 4, 2, 2, 5, 3, 2, 6, 2, 3, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 2, 2, 3, 4, 3, 2, 3, 4, 4, 3, 3, 3, 9, 4, 3, 94, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 6, 4, 3, 2, 4, 4, 43, 4, 25, 2, 4, 5, 261]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 5, 5, 3, 4, 4, 5, 39, 130, 2, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 8, 2, 4, 5, 3, 8, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 66, 4, 7, 3, 5, 4, 3, 3, 6, 5, 4, 21, 10, 58, 4, 6, 5, 5, 6, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 3, 6, 8, 9, 18, 4, 2]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 4, 7, 2, 2, 8, 38, 63, 20, 5, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 5, 6, 3, 4, 3, 5, 2, 31, 63, 5, 8, 26]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 4, 3, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 11
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785537508555
thermo_feasible = true
