┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECB_1328
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECB_1328
----------------------------------
number of metabolites : 1951
number of reactions : 2748
number of genes : 1329

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 110
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2748 flux variables and 5105 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 11, 11, 11, 11, 11, 11, 19, 19, 20, 19, 20, 19, 19, 30, 16, 17, 16, 16, 17, 17, 16, 16, 17, 16, 16, 17, 18, 16, 16, 3, 2, 5, 2, 7, 2, 4, 2, 3, 2, 41, 3, 2, 7, 41, 42, 42]
length(C_list) = 49
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 3, 2, 2, 2, 3, 4, 3, 3, 17, 3, 2, 3, 3, 7, 17, 13, 3, 3, 6, 3, 3, 4, 175, 7, 2]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 5, 2, 4, 3, 3, 2, 2, 8, 4, 3, 11, 3, 5, 67, 3, 15, 4, 3, 3, 3, 19, 6, 3, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 2, 2, 2, 7, 2, 2, 3, 3, 10, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 5, 4, 4, 6, 6, 4, 10, 5, 2, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 4, 3, 3, 2, 2, 15, 4, 4, 4, 5, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 4, 8, 30, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 5, 39, 6, 7, 9, 163, 6, 5, 5, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784909321199
thermo_feasible = true
