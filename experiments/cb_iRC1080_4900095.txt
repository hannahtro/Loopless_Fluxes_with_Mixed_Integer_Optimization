┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 3, 8, 3, 4, 4, 4, 8, 3, 6, 2, 7, 3, 5, 7, 4, 3, 4, 6, 16, 4, 4, 10, 9, 9, 6, 6]
length(C_list) = 29
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 9, 7, 4, 3, 3, 4, 3, 6, 9, 3, 7, 2, 2, 7, 4, 3, 9, 13, 8, 8, 5, 3, 4, 3, 8, 11]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [9, 8, 4, 7, 3, 4, 3, 349, 12, 3, 3, 7, 8, 3, 4, 3, 7, 7, 10, 3, 11, 4, 9, 8, 4, 5, 3, 4, 5, 9, 17]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 52, 5, 4, 3, 5, 3, 4, 3, 5, 4, 4, 6, 4, 5, 4, 4, 4, 8, 5, 20, 5, 11, 3, 4, 5, 5, 7]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 6, 3, 8, 3, 7, 4, 8, 5, 7, 9, 5, 6, 6, 26, 5, 4, 8, 9, 6, 3, 7, 8]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 3, 4, 12, 4, 8, 4, 10, 4, 4, 4, 5, 4, 5, 3, 5, 3, 4, 9, 6, 3, 7, 12, 4, 3, 6, 8, 3, 3, 4, 4, 8, 12]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 4, 7, 4, 8, 4, 4, 4, 78, 8, 4, 3, 4, 3, 4, 4, 3, 8, 5, 4, 8, 4, 4, 4, 6, 7, 4, 3]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 9, 3, 4, 4, 3, 4, 6, 8, 3, 3, 3, 6, 6, 8, 3, 15, 4, 4, 4, 3, 5, 10, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [12, 3, 3, 6, 7, 4, 4, 3, 3, 3, 4, 4, 3, 4, 4, 19, 4, 5, 4, 4, 5, 5, 5, 4, 3, 4, 5, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 11, 8, 14, 4, 10, 4, 4, 4, 4, 10, 21, 14, 4, 8, 13, 8, 8, 4, 3, 7, 10, 7, 8, 8, 6, 8, 11, 9, 4, 15, 8, 7]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 3, 5, 5, 6, 5, 5, 6, 4, 5, 4, 9, 11, 4, 3, 4, 3, 3, 366, 4, 4, 5, 4, 9, 4, 3, 5, 15, 12, 8, 6, 7, 7]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [9, 4, 15, 3, 8, 8, 4, 8, 4, 7, 7, 3, 7, 5, 7, 7, 9, 133, 8, 10, 13, 9, 9, 287, 8, 8, 5, 143, 188, 8]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 5, 3, 55, 32, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 10, 4, 8, 4, 4, 4, 7, 3, 3, 46, 7, 4, 8, 3, 9, 10, 4, 6, 13, 6, 26, 7, 41, 6, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 4, 3, 3, 3, 35, 4, 3, 7, 7, 5, 12, 6, 8, 7, 7, 5, 3, 8, 7, 5, 3, 3, 8]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 9, 9, 3, 3, 3, 3, 4, 3, 9, 9, 8, 3, 5, 51, 3, 8, 5, 10, 8, 5, 4, 3, 4, 3, 9, 5, 9, 3, 5]
length(C_list) = 29
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5, 7, 3, 6, 4, 6, 4, 4, 5, 6, 3, 5, 8, 7, 7, 4, 8]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [7, 8, 8, 5, 9, 7, 5, 9, 6, 9, 14, 164]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 4, 7, 6, 7, 8, 4, 6, 11, 14, 14, 4, 14, 8, 5, 35, 13, 19, 15, 13, 12, 5, 15, 16, 15, 16, 45, 27, 13, 75, 16, 37]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 8, 8, 3, 3, 8, 8, 8, 4, 4, 127, 20, 8, 8, 4, 8, 4, 8, 4, 8, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 3, 3, 3, 3, 3, 3, 3, 27, 3, 4, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 10, 7, 6, 3, 4, 9, 9, 9, 11, 12, 16, 12, 15, 19, 16, 11, 10, 10, 4, 9, 10, 12, 11, 15, 9, 17, 12, 9, 11]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [8, 4, 7, 3, 3, 4, 5, 4, 104, 4, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 4, 5, 3, 4, 3, 3, 3, 4, 4, 3, 5, 4, 17]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [12, 14, 10, 10, 9, 10, 9, 9, 8, 13, 9, 11, 10, 9, 10, 7, 9, 10, 10, 21, 11, 12, 12]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 7, 3, 14, 4, 14, 3, 16, 13, 5, 16, 4, 8, 30, 11, 77, 197]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 4, 23, 13, 4, 6, 4, 5, 8, 5, 8, 8, 6, 9, 7, 5, 9, 3, 7, 70, 5, 5, 14, 10, 3, 6, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 27
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
