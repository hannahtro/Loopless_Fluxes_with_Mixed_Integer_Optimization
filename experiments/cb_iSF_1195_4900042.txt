┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSF_1195
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSF_1195
----------------------------------
number of metabolites : 1917
number of reactions : 2630
number of genes : 1195

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 53
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2630 flux variables and 4868 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [4, 5, 16, 16, 17, 17, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 2, 7, 15, 14, 13, 13, 14, 13, 13, 14, 13, 13, 13, 14, 13, 2, 14]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 17, 17, 18, 17, 18, 17, 17, 14, 11, 14, 15, 11, 11, 11, 11, 11, 11, 2, 18, 15, 14, 15, 14, 14, 18, 14, 14, 14, 14, 15, 15, 2, 15]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 16, 16, 17, 17, 17, 16, 17, 13, 11, 13, 15, 11, 11, 11, 11, 11, 189, 2, 13, 14, 13, 13, 13, 14, 14, 13, 13, 13, 15, 13, 3, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 16, 16, 17, 21, 18, 16, 17, 13, 11, 87, 14, 11, 11, 11, 11, 11, 11, 2, 13, 18, 13, 13, 13, 13, 20, 14, 14, 22, 13, 13, 13, 17, 14, 4, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 20, 16, 17, 16, 17, 17, 63, 17, 11, 13, 14, 11, 11, 11, 11, 11, 11, 2, 90, 19, 13, 55, 13, 13, 14, 16, 13, 13, 13, 14, 13, 6, 14]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 16, 16, 20, 16, 17, 16, 16, 13, 11, 16, 14, 11, 11, 11, 16, 15, 11, 2, 13, 16, 14, 13, 13, 14, 17, 14, 14, 13, 13, 14, 13, 7, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 17, 17, 29, 17, 18, 18, 17, 14, 52, 14, 15, 11, 11, 12, 11, 19, 17, 6, 14, 15, 14, 17, 14, 22, 14, 14, 18, 15, 14, 7, 15]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 16, 16, 19, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 11, 11, 7, 13, 14, 13, 16, 13, 14, 14, 13, 13, 13, 13, 14, 13, 3, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 16, 16, 17, 16, 17, 16, 19, 13, 11, 13, 14, 11, 11, 11, 13, 11, 11, 13, 14, 13, 13, 13, 14, 14, 13, 13, 14, 13, 6, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 6, 16, 16, 17, 17, 19, 17, 16, 13, 11, 13, 14, 12, 11, 11, 11, 11, 15, 3, 13, 16, 13, 13, 13, 13, 37, 14, 13, 13, 13, 17, 13, 3, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 16, 16, 17, 16, 17, 16, 17, 75, 13, 13, 14, 151, 11, 11, 11, 11, 11, 6, 13, 14, 14, 20, 13, 13, 14, 13, 13, 13, 13, 29, 13, 6, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 16, 16, 17, 16, 17, 16, 110, 13, 11, 13, 14, 13, 11, 11, 11, 11, 11, 3, 6, 13, 14, 13, 13, 13, 13, 14, 14, 13, 13, 13, 14, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 7, 20, 16, 17, 16, 17, 16, 16, 13, 11, 13, 14, 11, 11, 11, 11, 12, 11, 8, 13, 14, 13, 13, 13, 14, 13, 13, 13, 14, 13, 47, 17]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 16, 16, 22, 16, 17, 22, 16, 13, 11, 13, 14, 11, 11, 11, 11, 68, 11, 8, 13, 14, 13, 13, 13, 16, 15, 15, 13, 13, 14, 14, 13, 6, 26]
AssertionError("!(isempty(C_list_filtered))")
