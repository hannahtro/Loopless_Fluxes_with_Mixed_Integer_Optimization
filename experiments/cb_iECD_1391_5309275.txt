┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECD_1391
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECD_1391
----------------------------------
number of metabolites : 1943
number of reactions : 2741
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
max_cuts = 27
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2741 flux variables and 5091 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 16, 16, 17, 16, 17, 16, 27, 17, 13, 14, 14, 14, 13, 13, 13, 20, 16, 13, 14, 14, 15, 14, 13, 13, 11, 13, 11, 11, 11, 18, 11, 11, 13, 40]
length(C_list) = 27
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 2, 2, 13, 2, 3, 2, 5, 7, 3, 2, 2, 2, 4, 2, 3, 46, 3, 82, 5, 2]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [10, 4, 3, 3, 4, 4, 2, 2, 4, 4, 2, 4, 2, 7, 6, 3, 4, 4, 4, 2, 11, 13, 3, 3, 6, 3, 4, 10, 3]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 49, 22, 6, 8, 8, 6, 4, 6, 4, 3, 3, 2, 5, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 2, 3, 3, 3, 22, 7, 5, 5, 4, 38, 6, 3, 32]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 29, 7, 2, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 6, 3, 3, 6, 8, 3, 17, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 10, 7, 2]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 11, 4, 4, 17, 4, 50, 69, 7, 8, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 2, 9, 2, 6, 8, 6, 4, 10, 4, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 22, 3, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 15]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 204, 5, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 7, 15, 15, 16, 15, 2, 20, 15, 12, 12, 13, 12, 13, 17, 13, 46, 18, 36, 12, 12, 12, 5, 12, 12, 10, 3, 5, 10, 10, 9, 4, 10, 5, 13]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 3, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 8, 4, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 3]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 18
termination = MathOptInterface.OPTIMAL
objective_value = 0.9756145629509537
thermo_feasible = true
