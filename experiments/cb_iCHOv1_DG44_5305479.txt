┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 197
max_cuts = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8, 8, 6, 4, 4, 8, 11, 3, 127, 13, 19, 13, 7, 3, 6, 5, 4, 4, 8, 7, 2, 3, 8, 9, 4, 5, 4, 9, 82, 5, 5, 4, 385, 4, 4, 4, 6, 5, 3, 4, 5, 3, 4, 5, 5, 3, 3, 4, 4, 8, 40, 9, 28, 4, 3, 4, 5, 132, 4, 4, 4, 130, 170, 5, 4, 101, 3]
length(C_list) = 79
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 3, 5, 4, 6, 5, 183, 5, 7, 3, 4, 3, 17, 6, 5, 4, 4, 322, 11, 6, 6, 31, 5, 46, 8, 4, 4, 4, 5, 7, 5, 5, 18, 294, 5, 5, 3, 6, 265, 4, 135, 4, 7, 3, 6, 3, 4, 6, 4, 8, 5, 5, 5, 5, 4, 5, 4, 4, 5, 4, 6, 5, 5, 8, 5, 7, 5, 8, 4, 6, 6, 3, 5, 6, 4, 6, 3, 7, 8, 5, 4, 28, 5, 5, 6, 6, 5, 6, 76, 4, 5, 5, 5, 4, 4, 4, 6, 4, 4, 5, 47]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 5, 5, 6, 6, 4, 3, 6, 6, 4, 6, 4, 5, 4, 8, 5, 4, 4, 10, 4, 299, 4, 7, 3, 8, 198, 5, 7, 4, 3, 6, 61, 6, 153, 6, 6, 7, 5, 3, 4, 87, 6, 7, 6, 3, 7, 5, 6, 4, 5, 4, 9, 207, 4, 4, 8, 5, 17, 4, 4, 4, 7, 4, 4, 303, 4, 4, 4, 4, 4, 6, 6, 4, 8, 8, 6, 3, 4, 4, 4, 6, 7, 22, 6, 17, 5, 6, 4, 7, 3, 4, 13, 6, 6, 6, 54, 6, 6, 11, 9, 154, 4, 9]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 3, 3, 3, 55, 5, 5, 4, 5, 2, 4, 4, 6, 4, 6, 3, 8, 4, 15, 9, 12, 7, 77, 4, 89, 4, 4, 3, 8, 6, 213, 15, 7, 6, 10, 8, 6, 4, 4, 372, 5, 4, 107, 4, 4, 7, 9, 5, 5, 240, 5, 5, 8, 6, 5, 10, 5, 5, 4, 4, 5, 5, 5, 7, 4, 392, 5, 6, 5, 4, 4, 362, 16, 5, 5, 11, 4, 43, 216, 5, 340, 169, 3, 4, 8, 3, 6, 5, 4, 4, 4, 349, 6, 8, 3, 5, 6, 5, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 3, 3, 8, 4, 3, 6, 90, 6, 4, 436, 4, 149, 4, 3, 5, 4, 15, 10, 12, 8, 12, 8, 3, 5, 5, 4, 4, 8, 9, 4, 5, 7, 4, 6, 5, 12, 3, 4, 6, 4, 6, 5, 4, 6, 6, 12, 302, 191, 5, 4, 9, 8, 5, 7, 4, 6, 10, 3, 57, 4, 4, 36, 33, 4, 4, 4, 4, 4, 4, 5, 23, 6, 6, 4, 7, 6, 142, 4, 7, 3, 9, 11, 5, 6, 7, 5, 7, 5, 8, 10, 6, 8, 4, 14, 8, 4, 8, 6, 7, 11, 7, 9, 8, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 4, 5, 6, 5, 4, 3, 3, 4, 8, 9, 8, 4, 4, 15, 4, 5, 5, 8, 4, 7, 60, 5, 20, 5, 4, 4, 4, 4, 4, 14, 4, 13, 4, 4, 9, 7, 8, 7, 6, 5, 6, 6, 10, 4, 14, 6, 5, 8, 4, 6, 6, 3, 5, 8, 3, 10, 45, 5, 4, 4, 46, 5, 5, 5, 8, 5, 5, 4, 5, 5, 4, 10, 4, 6, 8, 3, 4, 4, 4, 5, 4, 6, 8, 5, 4, 4, 6, 4, 4, 8, 7, 3, 3, 7, 8, 4, 4, 4, 4, 46, 4, 4, 3, 4, 14, 3, 13]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 15, 3, 4, 4, 3, 4, 6, 4, 8, 8, 7, 4, 7, 5, 6, 90, 11, 4, 7, 3, 4, 282, 7, 30, 4, 124, 288, 5, 62, 8, 4, 13, 8, 8, 9, 7, 9, 5, 7, 4, 10, 8, 4, 8, 4, 4, 4, 6, 6, 4, 4, 5, 4, 8, 11, 5, 5, 6, 4, 6, 5, 7, 5, 4, 4, 8, 7, 4, 5, 4, 4, 4, 7, 7, 8, 7, 130, 3, 4, 5, 4, 3, 19, 6, 8, 11, 4, 4, 4, 11, 277, 6, 4, 4, 5, 4, 244, 5, 4, 4, 6, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 148, 3, 4, 3, 5, 67, 6, 64, 8, 3, 301, 453, 7, 6, 146, 347, 10, 270, 4, 10, 7, 29, 7, 26, 11, 9, 11, 7, 8, 58, 6, 7, 6, 5, 68, 11, 6, 7, 3, 4, 5, 7, 4, 8, 4, 7, 4, 4, 6, 13, 6, 5, 15, 7, 6, 6, 9, 8, 6, 8, 37, 8, 9, 12, 12, 10, 8, 4, 8, 142, 9, 8, 4, 9, 9, 6, 239, 6, 7, 19, 9, 4, 6, 11, 6, 229, 3, 57, 7, 7, 6, 233, 22, 4, 8, 22, 10, 472, 8, 8, 6, 3, 163, 7, 35, 81, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 5, 7, 7, 4, 6, 4, 9, 7, 4, 4, 3, 4, 4, 4, 5, 3, 6, 9, 3, 6, 135, 6, 6, 17, 11, 5, 6, 5, 6, 5, 4, 4, 6, 3, 4, 30, 4, 16, 6, 6, 7, 6, 8, 13, 6, 4, 6, 5, 13, 9, 302, 5, 19, 4, 14, 71, 4, 7, 9, 4, 4, 4, 4, 7, 4, 4, 4, 5, 92, 4, 4, 4, 4, 6, 9, 4, 6, 4, 4, 23, 11, 70, 4, 4, 4, 163, 4, 6, 210, 37, 8, 104, 4, 4, 136, 49, 8, 4, 9, 4, 9, 12, 7, 11, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 3, 4, 3, 5, 6, 11, 8, 5, 9, 7, 158, 20, 321, 6, 5, 4, 27, 5, 4, 193, 5, 4, 4, 68, 67, 10, 5, 4, 54, 4, 7, 4, 3, 4, 4, 4, 5, 9, 4, 6, 15, 5, 10, 4, 11, 5, 6, 4, 65, 8, 5, 40, 7, 5, 4, 8, 5, 7, 19, 3, 4, 282, 4, 120, 6, 5, 4, 7, 3, 6, 4, 5, 4, 6, 340, 4, 4, 7, 5, 160, 3, 285, 6, 5, 4, 9, 132, 11, 4, 6, 5, 7, 7, 6, 5, 4, 6, 5, 123, 3, 5, 5, 5, 4, 6, 13, 10, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 17, 6, 8, 4, 6, 4, 4, 6, 5, 6, 7, 12, 7, 10, 4, 5, 4, 6, 4, 5, 172, 4, 12, 38, 35, 12, 10, 6, 219, 6, 7, 7, 6, 10, 18, 7, 4, 5, 221, 8, 7, 300, 5, 5, 8, 4, 4, 4, 3, 8, 6, 4, 4, 29, 71, 7, 4, 260, 13, 6, 12, 79, 6, 4, 4, 4, 4, 5, 6, 5, 6, 12, 6, 42, 8, 4, 7, 6, 7, 7, 10, 4, 8, 4, 10, 12, 52, 8, 13, 10, 9, 10, 9, 3, 6, 5, 4, 11, 6, 6, 4, 4, 4, 4, 7, 29, 15, 12, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 7, 3, 6, 3, 10, 7, 7, 12, 10, 6, 71, 6, 8, 9, 7, 64, 5, 4, 3, 3, 4, 9, 6, 4, 11, 10, 5, 7, 5, 7, 5, 142, 5, 4, 8, 5, 5, 4, 5, 5, 4, 6, 7, 4, 12, 6, 10, 10, 5, 5, 7, 7, 6, 4, 9, 5, 234, 130, 5, 8, 5, 4, 6, 213, 10, 8, 6, 5, 4, 6, 46, 8, 5, 8, 9, 54, 9, 22, 5, 5, 8, 10, 4, 4, 5, 395, 7, 4, 78, 175, 4, 80, 5, 6, 5, 5, 41, 11, 5, 9, 11, 5, 4, 6, 7, 6, 6, 3, 6, 4, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [9, 5, 9, 15, 9, 4, 9, 7, 8, 4, 5, 9, 146, 10, 4, 8, 17, 12, 5, 3, 4, 4, 4, 231, 6, 5, 6, 349, 5, 3, 4, 6, 5, 18, 5, 6, 6, 4, 5, 4, 33, 3, 6, 16, 17, 4, 4, 4, 4, 6, 4, 5, 4, 4, 9, 6, 4, 8, 5, 9, 42, 4, 5, 5, 6, 9, 7, 10, 5, 5, 5, 9, 23, 5, 7, 87, 9, 11, 6, 5, 8, 4, 4, 6, 4, 4, 11, 8, 4, 4, 15, 6, 6, 226, 71, 5, 4, 9, 6, 7, 5, 4, 7, 4, 4, 5, 12, 29, 8, 11, 7, 11, 8]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 149, 6, 4, 10, 10, 4, 10, 4, 18, 5, 4, 4, 4, 4, 19, 7, 6, 9, 4, 6, 4, 4, 4, 4, 10, 304, 7, 11, 3, 5, 9, 7, 5, 12, 6, 4, 3, 5, 7, 8, 8, 5, 3, 10, 13, 165, 6, 7, 5, 6, 4, 3, 7, 4, 7, 4, 51, 4, 12, 104, 5, 4, 6, 192, 8, 6, 4, 9, 82, 242, 4, 48, 7, 12, 4, 8, 4, 6, 6, 5, 4, 8, 37, 5, 31, 4, 29, 5, 7, 3, 3, 4, 14, 4, 7, 23, 172, 4, 14, 4, 8, 13, 7, 4, 9, 8, 24, 6, 4, 6, 8, 5, 4, 8, 4, 10, 87, 3, 4, 7, 40, 4, 6, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [8, 198, 7, 15, 19, 4, 6, 6, 4, 9, 4, 4, 10, 4, 292, 4, 4, 3, 4, 8, 4, 26, 118, 6, 10, 22, 6, 9, 6, 5, 7, 5, 18, 5, 7, 7, 7, 9, 7, 4, 4, 4, 124, 7, 5, 23, 4, 6, 3, 8, 4, 4, 5, 4, 7, 6, 54, 4, 8, 5, 10, 6, 4, 4, 5, 8, 8, 8, 6, 5, 6, 45, 6, 4, 4, 5, 4, 4, 8, 4, 5, 4, 4, 4, 5, 9, 8, 7, 4, 283, 89, 5, 5, 14, 13, 9, 4, 6, 4, 36, 5, 8, 7, 8, 6, 4, 7, 5, 4, 29, 5, 5, 4, 5, 6, 10, 4, 12, 9, 5, 13, 9, 7, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 10, 4, 4, 6, 7, 5, 6, 4, 6, 4, 4, 9, 6, 7, 8, 6, 4, 4, 4, 4, 10, 5, 16, 236, 3, 3, 11, 126, 8, 6, 183, 5, 4, 5, 5, 4, 24, 6, 425, 8, 4, 5, 6, 4, 4, 9, 4, 5, 9, 8, 5, 5, 6, 4, 8, 4, 6, 7, 4, 5, 10, 4, 4, 5, 12, 6, 8, 53, 6, 8, 5, 5, 41, 50, 8, 5, 4, 5, 7, 19, 7, 8, 5, 7, 5, 6, 6, 6, 4, 8, 7, 4, 10, 5, 8, 5, 6, 4, 7, 8, 8, 5, 9, 8, 5, 4, 4, 5, 17, 5, 86, 50, 4, 4, 11, 6, 10, 10]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 32, 11, 6, 10, 4, 6, 5, 4, 238, 4, 5, 6, 12, 7, 5, 4, 4, 31, 9, 6, 4, 6, 3, 9, 391, 4, 4, 11, 4, 28, 5, 5, 6, 5, 6, 3, 4, 4, 4, 4, 5, 6, 5, 6, 207, 6, 11, 4, 6, 7, 106, 10, 4, 6, 52, 4, 4, 68, 5, 6, 8, 4, 6, 6, 4, 4, 25, 4, 9, 6, 4, 7, 6, 57, 9, 6, 22, 8, 6, 4, 9, 54, 4, 68, 4, 11, 7, 4, 6, 5, 10, 9, 5, 4, 14, 6, 4, 88, 17, 7, 5, 4, 50, 5, 6, 152, 220, 10, 7, 6, 6, 7, 4, 8, 6, 10, 6, 3, 171, 11, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 8, 5, 10, 6, 4, 4, 6, 5, 8, 5, 6, 6, 175, 8, 8, 4, 4, 283, 6, 6, 9, 11, 4, 7, 19, 9, 4, 6, 7, 5, 4, 9, 7, 12, 6, 83, 8, 6, 4, 23, 17, 8, 8, 4, 8, 4, 4, 14, 4, 21, 4, 5, 9, 308, 4, 108, 9, 4, 7, 5, 7, 5, 11, 8, 4, 5, 7, 4, 5, 6, 4, 4, 8, 8, 9, 7, 7, 4, 8, 10, 6, 4, 4, 4, 4, 6, 5, 4, 9, 4, 36, 6, 6, 3, 4, 8, 32, 5, 4, 17, 5, 25, 6, 4, 4, 60, 6, 18, 11, 7, 9, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [8, 6, 5, 3, 7, 5, 28, 12, 8, 14, 12, 4, 6, 10, 15, 59, 7, 4, 20, 5, 5, 9, 6, 7, 77, 8, 7, 10, 6, 5, 8, 9, 6, 209, 11, 38, 5, 19, 7, 9, 5, 11, 7, 6, 5, 8, 9, 8, 6, 8, 4, 7, 30, 5, 7, 6, 5, 10, 8, 9, 4, 5, 6, 4, 4, 10, 6, 7, 9, 5, 5, 4, 9, 8, 9, 8, 4, 4, 6, 5, 16, 6, 6, 7, 8, 4, 6, 4, 5, 223, 4, 7, 26, 7, 5, 4, 4, 104, 6, 6, 134, 6, 9, 110, 8, 8, 4, 19, 6, 6, 7, 10, 10, 9, 9, 18, 5]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [8, 8, 8, 8, 4, 6, 20, 5, 7, 7, 4, 7, 5, 10, 6, 11, 8, 11, 8, 6, 10, 9, 8, 4, 4, 10, 6, 17, 9, 6, 7, 8, 8, 7, 6, 10, 4, 6, 205, 6, 9, 9, 7, 5, 6, 4, 6, 222, 6, 4, 6, 9, 8, 4, 78, 269, 6, 7, 5, 6, 8, 133, 12, 8, 8, 133, 6, 10, 6, 6, 6, 6, 6, 4, 7, 296, 6, 4, 4, 8, 9, 8, 9, 10, 4, 8, 8, 10, 6, 7, 9, 4, 4, 6, 38, 4, 9, 6, 4, 4, 10, 122, 4, 4, 7, 6, 60, 4, 4, 30, 179, 9, 8, 7, 55, 11, 10, 5, 7, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 26, 12, 7, 6, 3, 12, 4, 7, 71, 7, 4, 4, 11, 15, 9, 10, 6, 5, 4, 11, 7, 8, 7, 5, 10, 6, 4, 5, 243, 5, 7, 4, 4, 12, 31, 139, 7, 4, 8, 7, 6, 8, 8, 9, 6, 16, 6, 11, 4, 7, 11, 14, 6, 7, 4, 10, 9, 7, 8, 8, 4, 7, 4, 6, 6, 7, 8, 6, 7, 12, 8, 5, 7, 14, 8, 8, 7, 5, 8, 7, 5, 6, 7, 4, 4, 6, 8, 7, 6, 7, 4, 4, 8, 5, 10, 6, 6, 4, 17, 9, 5, 4, 5, 9, 7, 17, 13, 6, 24, 12, 76, 4, 7, 4, 12, 12, 11, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [11, 4, 12, 4, 12, 6, 5, 11, 7, 5, 4, 8, 399, 9, 6, 6, 69, 6, 7, 5, 6, 8, 4, 6, 4, 157, 13, 6, 183, 6, 6, 9, 5, 4, 4, 8, 7, 12, 4, 6, 12, 4, 6, 5, 6, 4, 235, 8, 11, 4, 14, 4, 8, 9, 4, 8, 4, 7, 6, 4, 11, 7, 229, 6, 6, 4, 109, 9, 6, 12, 6, 13, 10, 5, 4, 6, 5, 8, 7, 4, 6, 6, 7, 8, 4, 5, 4, 7, 6, 4, 9, 4, 8, 8, 12, 7, 7, 11, 3, 10, 4, 9, 8, 6, 4, 4, 4, 19, 5, 4, 5, 12, 6, 4, 8, 31, 8, 6, 11, 4, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 14, 8, 4, 6, 5, 4, 6, 4, 5, 6, 4, 5, 6, 6, 4, 5, 6, 8, 146, 6, 4, 4, 7, 212, 6, 4, 7, 20, 4, 5, 4, 11, 8, 4, 6, 5, 342, 350, 5, 35, 390, 18, 3, 6, 4, 96, 3, 5, 278, 52, 7, 3, 4, 19, 6, 99, 4, 5, 10, 4, 5, 4, 6, 4, 4, 4, 5, 4, 6, 7, 13, 6, 11, 12, 309, 147, 7, 4, 7, 5, 4, 3, 4, 3, 4, 4, 5, 48, 6, 6, 8, 4, 6, 6, 4, 5, 7, 4, 11, 5, 5, 7, 7, 4, 5, 5, 126, 6, 4, 31, 5, 7, 6, 5, 4, 4, 292, 6, 6, 12, 6, 99, 10, 8, 6]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [12, 6, 135, 3, 5, 6, 7, 4, 6, 13, 16, 8, 4, 4, 11, 4, 9, 4, 3, 39, 6, 6, 7, 8, 6, 4, 8, 5, 9, 4, 6, 53, 6, 7, 4, 7, 32, 8, 5, 5, 6, 6, 4, 10, 26, 72, 196, 5, 4, 8, 4, 4, 3, 4, 8, 8, 10, 5, 6, 6, 7, 8, 6, 4, 4, 4, 4, 7, 8, 5, 5, 5, 6, 11, 4, 9, 7, 4, 4, 10, 4, 10, 5, 9, 6, 8, 7, 4, 7, 8, 6, 120, 4, 7, 7, 11, 10, 9, 204, 10, 282, 8, 3, 7]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 10, 6, 6, 4, 4, 9, 6, 12, 7, 4, 4, 4, 5, 4, 8, 9, 4, 67, 9, 4, 4, 4, 4, 5, 4, 4, 7, 6, 6, 259, 7, 4, 6, 8, 10, 3, 6, 14, 4, 5, 5, 3, 10, 6, 21, 6, 25, 4, 8, 6, 4, 4, 117, 4, 4, 6, 5, 14, 28, 4, 10, 4, 7, 5, 5, 4, 6, 4, 6, 6, 8, 125, 23, 52, 9, 9, 7, 8, 110, 8, 8, 6, 24, 10, 7, 11, 9, 4, 6, 4, 4, 4, 11, 9, 285, 8, 11, 6, 7, 473, 9, 6, 48, 4, 4, 4, 5, 6, 6, 7, 4, 4, 4, 6, 6, 6, 13]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 226, 8, 8, 10, 10, 8, 5, 5, 3, 12, 6, 4, 15, 9, 4, 26, 4, 4, 4, 6, 4, 7, 4, 4, 7, 8, 4, 7, 6, 4, 6, 9, 4, 4, 10, 4, 4, 6, 3, 7, 4, 11, 8, 4, 5, 4, 6, 121, 5, 6, 6, 12, 5, 4, 4, 4, 4, 9, 11, 6, 4, 8, 13, 6, 264, 17, 4, 5, 10, 7, 6, 11, 116, 9, 9, 9, 5, 4, 307, 4, 8, 4, 5, 5, 9, 10, 7, 6, 4, 9, 9, 10, 4, 4, 5, 8, 11, 4, 4, 4, 7, 9, 5, 5, 5, 5, 4, 19, 27, 9, 6, 8, 9, 11, 7, 6, 4, 6, 4, 9, 8]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 3, 10, 6, 9, 4, 5, 7, 10, 7, 6, 4, 10, 7, 8, 6, 11, 11, 6, 6, 9, 7, 25, 7, 11, 214, 10, 140, 14, 11, 5, 9, 8, 4, 6, 4, 5, 4, 7, 4, 4, 4, 8, 8, 9, 4, 5, 9, 70, 5, 4, 31, 345, 6, 4, 4, 4, 6, 4, 4, 106, 4, 7, 5, 4, 8, 4, 4, 4, 9, 7, 4, 4, 6, 9, 5, 6, 7, 4, 5, 4, 7, 8, 6, 7, 5, 8, 3, 32, 8, 10, 5, 6, 4, 15, 5, 7, 9, 9, 9, 4, 5, 5, 9, 11, 4, 6, 7, 16, 7, 5, 5, 6, 6, 7, 18, 7, 8, 12, 6, 11, 8]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 3, 8, 3, 5, 4, 5, 7, 153, 5, 4, 12, 7, 10, 5, 4, 6, 6, 5, 4, 7, 5, 4, 4, 243, 4, 7, 280, 6, 6, 4, 4, 4, 4, 4, 6, 6, 5, 5, 7, 36, 7, 8, 6, 5, 6, 6, 5, 16, 8, 7, 4, 6, 16, 5, 158, 4, 7, 4, 27, 5, 4, 7, 4, 5, 5, 9, 5, 5, 4, 5, 6, 5, 10, 4, 7, 6, 6, 6, 9, 4, 6, 5, 195, 6, 4, 5, 4, 5, 4, 33, 6, 6, 8, 5, 4, 9, 5, 4, 5, 18, 12, 7, 9, 4]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 7, 5, 7, 4, 21, 5, 7, 278, 5, 4, 5, 6, 3, 39, 5, 5, 4, 3, 5, 6, 244, 4, 5, 4, 6, 6, 9, 6, 4, 6, 14, 6, 4, 4, 7, 4, 6, 4, 11, 5, 9, 8, 223, 9, 5, 10, 5, 5, 8, 6, 29, 4, 5, 6, 5, 7, 9, 6, 5, 9, 4, 11, 10, 8, 4, 8, 4, 4, 14, 6, 78, 4, 5, 4, 5, 4, 5, 4, 168, 4, 4, 7, 4, 5, 7, 3, 6, 5, 4, 8, 14, 7, 9, 8, 6, 9, 6, 8, 7, 4, 6, 5, 6, 4, 6, 6, 4, 4, 4, 5, 5, 9, 4, 27, 6, 7, 6, 9]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 138, 8, 3, 9, 8, 5, 13, 5, 8, 5, 6, 5, 12, 9, 6, 5, 5, 7, 5, 4, 9, 7, 10, 47, 5, 14, 5, 6, 5, 5, 9, 8, 7, 7, 6, 4, 19, 6, 4, 6, 7, 6, 9, 9, 6, 8, 6, 6, 5, 8, 17, 7, 7, 6, 7, 8, 6, 10, 6, 6, 5, 5, 7, 6, 9, 7, 31, 7, 6, 7, 5, 8, 3, 6, 8, 5, 4, 8, 6, 22, 7, 6, 5, 6, 41, 6, 7, 5, 6, 5, 5, 164, 3, 5, 71]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [5, 24, 4, 4, 6, 6, 12, 9, 6, 4, 8, 13, 11, 5, 4, 4, 8, 17, 18, 11, 12, 4, 9, 10, 9, 72, 4, 5, 9, 6, 4, 4, 365, 4, 12, 4, 52, 15, 7, 10, 13, 288, 300, 227, 4, 105, 4, 404, 355, 6, 4, 9, 10, 9, 5, 541, 10, 7, 8, 12, 6, 11, 11, 5, 4, 4, 4, 8, 4, 4, 6, 7, 25, 19, 12, 12, 5, 6, 16, 8, 100, 8, 4, 6, 4, 5, 9, 8, 36, 4, 3, 119, 35, 12, 4, 11, 4, 8, 5, 8, 4, 8, 4, 6, 11, 8, 10, 4, 6, 296, 5, 4, 8, 5, 14, 87, 11, 295, 8, 11, 11, 28, 5, 7, 9, 13, 7, 8, 6, 23, 7, 9, 70, 6, 12, 8, 8]
length(C_list) = 79
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
termination = MathOptInterface.INFEASIBLE
objective_value = 0.01068997308564256
