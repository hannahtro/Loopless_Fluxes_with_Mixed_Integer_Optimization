┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECDH10B_1368
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECDH10B_1368
----------------------------------
number of metabolites : 1947
number of reactions : 2742
number of genes : 1327

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2742 flux variables and 5093 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 11, 11, 11, 11, 11, 11, 11, 4, 2, 16, 24, 17, 24, 17, 17, 16, 13, 13, 14, 13, 15, 13, 13, 16, 13, 14, 13, 33, 14, 14, 13, 13, 13]
length(C_list) = 5
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 17, 16, 19, 16, 16, 13, 13, 14, 13, 17, 13, 13, 13, 13, 14, 13, 14, 14, 13, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 12, 12, 12, 13, 241, 13, 12, 2, 17, 17, 18, 17, 20, 17, 17, 15, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 14, 15, 14, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 11, 11, 11, 11, 11, 12, 11, 2, 16, 273, 17, 16, 17, 21, 16, 13, 14, 17, 13, 14, 13, 69, 13, 13, 14, 13, 13, 13, 15, 14, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 54, 6, 11, 11, 12, 11, 11, 11, 11, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13, 13, 13, 14, 13, 14, 17, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 11, 11, 11, 11, 11, 11, 11, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 14, 13, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 8, 5, 11, 11, 11, 11, 16, 11, 11, 2, 17, 18, 127, 17, 28, 17, 16, 13, 15, 14, 14, 14, 14, 13, 13, 13, 14, 13, 13, 14, 13, 13, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 8, 2, 11, 11, 14, 11, 11, 11, 11, 7, 16, 16, 21, 16, 17, 16, 16, 13, 13, 57, 13, 16, 14, 17, 13, 13, 15, 13, 13, 14, 14, 14, 14, 13, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 39, 11, 11, 11, 11, 11, 11, 3, 2, 16, 16, 17, 16, 17, 16, 16, 19, 13, 14, 13, 14, 13, 14, 14, 111, 20, 14, 13, 13, 14, 13, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 12, 11, 11, 11, 11, 11, 11, 2, 17, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [7, 6, 6, 89, 11, 15, 11, 11, 11, 11, 16, 18, 19, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 16, 14, 13, 14, 13, 13]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 3, 3, 4, 3, 2, 4, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 4, 2, 4, 12, 2, 4, 2, 2, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 6, 3, 4, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 180, 4, 4, 4, 3, 5, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 12, 6, 7, 8, 2, 9, 10, 8, 9, 10, 9, 8, 5, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 1.0374776349342376
thermo_feasible = true
