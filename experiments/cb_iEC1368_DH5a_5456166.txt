┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1368_DH5a
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1368_DH5a
----------------------------------
number of metabolites : 1951
number of reactions : 2779
number of genes : 1368

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 139
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2779 flux variables and 5214 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 2, 3, 2, 2, 2, 10, 3, 2, 7, 2, 3, 2, 38, 2, 3, 5, 2, 2, 2, 2, 10, 2, 3, 2, 21, 2, 2, 2, 39, 155, 3, 3, 4]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 3, 2, 3, 4, 3, 3, 3, 3, 5, 2, 4, 3, 3, 3, 6, 6, 4, 2, 7, 2, 2, 2, 5, 2, 2, 157, 2, 4, 4, 6, 4, 4, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 5, 4, 3, 5, 4, 2, 4, 3, 4, 4, 3, 3, 4, 3, 7, 140, 5, 4, 7, 4, 6, 4, 6, 10, 4, 11, 97, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 5, 3, 7, 3, 3, 5, 3, 195, 6, 3, 12, 13, 5, 6, 4, 3, 14, 6, 3, 15, 8, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 2, 6, 4, 2, 5, 2, 4, 4, 4, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 4, 2, 2, 2, 12, 4, 2, 8, 11, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 7, 3, 4, 4, 3, 5, 7, 4, 4, 3, 6, 9, 4, 7, 4, 93, 4, 4, 6, 14, 5, 31, 9, 4, 4, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 11, 20, 19, 4, 33, 4, 8, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 7, 8, 6, 8, 8, 9, 7, 28, 13, 6, 9, 9, 120]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 4, 4, 6, 4, 4, 4, 6, 10, 4, 10, 4, 15, 4, 5, 5, 18, 17, 4, 9, 19, 5, 5, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 5, 82, 5, 5, 4, 50, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 5, 9, 6, 9, 3, 39, 24, 7, 8, 25, 6, 71, 17, 9, 14, 79, 43, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 7, 12, 19, 4, 30, 6, 9, 4, 8, 6, 8, 8, 34, 5, 4, 17, 9, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [5, 2, 4, 4, 3, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823830923691211
thermo_feasible = true
