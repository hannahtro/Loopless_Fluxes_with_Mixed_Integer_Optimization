┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iCHOv1_DG44
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iCHOv1_DG44
----------------------------------
number of metabolites : 2751
number of reactions : 3942
number of genes : 1184

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 79
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3942 flux variables and 7297 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 3, 6, 4, 4, 6, 19, 2, 189, 4, 447, 4, 361, 4, 6, 4, 4, 6, 7, 4, 7, 6, 110, 4, 4, 4, 4, 5, 2, 5, 5, 10, 41, 7, 5, 8, 6, 8]
length(C_list) = 40
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 9, 4, 4, 7, 56, 4, 6, 8, 3, 4, 3, 299, 17, 7, 2, 6, 5, 10, 4, 6, 6, 169, 5, 4, 5, 5, 5, 4, 4, 9, 2, 5, 8, 203, 6, 5]
length(C_list) = 40
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 8, 5, 5, 3, 3, 4, 3, 6, 69, 3, 5, 48, 101, 3, 4, 4, 6, 4, 3, 396, 3, 10, 7, 6, 6, 5, 69, 6, 4, 4, 9, 6, 6, 6, 5, 7, 3, 6, 147, 3, 4, 4]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 6, 9, 4, 212, 77, 6, 5, 3, 5, 5, 4, 8, 4, 234, 4, 5, 10, 33, 3, 12, 6, 59, 8, 18, 4, 4, 26, 5, 7, 4, 3, 7, 5, 6, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [12, 7, 6, 9, 6, 6, 3, 4, 11, 5, 4, 6, 7, 8, 4, 6, 10, 4, 37, 71, 3, 4, 6, 9, 6, 3, 8, 102, 11, 42, 5, 37, 6, 162, 3, 8, 8, 12, 144, 7, 7, 8, 9, 5, 6]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 4, 36, 11, 4, 7, 9, 4, 4, 5, 136, 8, 3, 5, 8, 4, 7, 3, 89, 4, 8, 3, 6, 4, 8, 9, 4, 3, 8, 6, 8, 4, 6, 4, 12, 5, 4, 118, 4, 7, 4, 4, 6, 5, 6, 23]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 6, 5, 5, 3, 212, 4, 4, 6, 4, 4, 4, 6, 14, 450, 4, 3, 3, 4, 7, 8, 4, 4, 5, 5, 4, 4, 3, 12, 6, 4, 5, 5, 4, 4, 5, 7, 5, 6, 6]
length(C_list) = 41
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [9, 78, 9, 6, 6, 4, 3, 6, 6, 3, 6, 268, 328, 4, 8, 4, 6, 8, 3, 4, 5, 178, 5, 267, 3, 7, 8, 487, 18, 9, 9, 6, 8, 19, 6, 3, 4, 5, 466, 3, 6, 3, 4, 6, 110, 15, 4, 42]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 5, 7, 4, 153, 8, 4, 3, 229, 6, 6, 213, 11, 15, 4, 7, 6, 55, 3, 5, 8, 8, 31, 43, 3, 8, 4, 4, 5, 5, 30, 94, 16, 14, 5, 15, 5, 8, 6, 76]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 279, 6, 7, 5, 5, 8, 4, 4, 4, 5, 3, 13, 5, 11, 7, 7, 4, 8, 10, 97, 15, 9, 7, 7, 6, 4, 6, 6, 9, 4, 6, 7, 8, 4, 4, 8, 8, 7, 9, 47, 9, 3, 7, 5]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 4, 6, 8, 4, 4, 6, 5, 4, 289, 4, 4, 11, 6, 17, 8, 11, 26, 4, 6, 5, 5, 4, 5, 4, 7, 9, 4, 4, 4, 5, 4, 4, 4, 8, 7, 3, 4, 9, 368, 3]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 3, 12, 6, 4, 4, 7, 21, 8, 4, 4, 5, 4, 48, 4, 10, 10, 7, 5, 7, 7, 3, 4, 6, 8, 5, 7]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 6, 6, 8, 4, 4, 4, 7, 8, 4, 4, 7, 3, 16, 4, 202, 7, 20, 6, 4, 4, 4, 50, 6, 73, 8, 6, 150, 6, 8, 9, 6, 3, 5, 9, 4, 4, 5, 12, 5, 6, 8, 123]
length(C_list) = 45
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 5, 8, 4, 5, 5, 3, 14, 8, 5, 9, 4, 9, 5, 4, 28, 6, 6, 4, 3, 8, 6, 4, 6, 381, 9, 56, 9, 58, 4, 7, 7, 8, 15, 193, 6, 6, 5, 6, 97, 8, 4, 7, 7]
length(C_list) = 43
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [7, 5, 6, 57, 4, 5, 4, 9, 5, 32, 31, 5, 6, 7, 5, 5, 206, 5, 3, 6, 4, 5, 4, 6, 3, 8, 5, 7, 5, 5, 10, 12, 5, 4, 5, 6, 8]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 5, 4, 9, 6, 5, 5, 4, 4, 4, 4, 6, 15, 5, 4, 6, 5, 3, 4, 30, 5, 4, 4, 6, 4, 4, 5, 6, 8, 5]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 4, 5, 3, 4, 5, 6, 5, 4, 19, 12, 6, 4, 194, 5, 6, 6, 4, 7, 6, 7, 3, 5, 8, 4, 18, 10, 6, 6, 5, 4, 5, 7, 218, 5, 16, 367, 8, 6, 6, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 24, 4, 3, 4, 7, 6, 4, 5, 4, 97, 245, 5, 4, 4, 4, 16, 5, 10, 7, 4, 5, 5, 3, 56, 4, 8, 6, 70, 8, 72, 5, 8, 20, 5, 8]
length(C_list) = 37
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 10, 8, 3, 8, 5, 4, 4, 6, 191, 6, 5, 5, 4, 6, 6, 7, 6, 4, 11, 19, 128, 4, 6, 33, 5, 6, 8, 47, 5, 5, 8, 6, 4, 3, 7, 5, 5, 5, 3, 4, 7, 6, 4, 8, 5, 54, 5]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 4, 4, 169, 4, 41, 4, 257, 10, 140, 4, 4, 6, 7, 11, 5, 4, 4, 4, 4, 6, 5, 10, 4, 6, 122, 8, 7, 15, 4, 8, 10, 3, 5, 4, 15, 7, 4, 10, 139, 7, 5, 10, 275, 4, 15, 8, 12, 45, 4, 10]
length(C_list) = 51
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 171, 3, 4, 9, 10, 5, 6, 210, 4, 4, 36, 5, 4, 7, 5, 7, 6, 6, 4, 6, 5, 6, 10, 4, 6, 13, 6, 6, 10, 4, 5, 6, 5, 45, 6, 4, 7, 4, 5, 6, 189, 4, 8, 5, 4, 292, 8, 7, 6, 4]
length(C_list) = 48
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 5, 10, 3, 5, 4, 8, 4, 4, 4, 6, 4, 5, 4, 11, 8, 6, 5, 4, 4, 4, 6, 5, 6, 11, 6, 4, 4, 4, 10, 30, 5, 3, 6, 13, 6, 6, 5, 6, 6, 4, 5, 8, 4, 5, 10, 168, 5, 7]
length(C_list) = 46
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 5, 15, 9, 4, 5, 5, 4, 4, 6, 3, 6, 6, 147, 5, 7, 10, 348, 5, 4, 40, 6, 4, 3, 6, 5, 12, 170, 10, 8, 6, 136, 3, 4, 4, 4, 3, 7, 3, 4, 9, 7, 5, 8, 19]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 8, 4, 6, 5, 50, 9, 4, 4, 5, 7, 4, 8, 6, 4, 18, 4, 7, 39, 6, 6, 4, 3, 4, 4, 4, 7, 11, 5, 9, 14, 5, 4, 8, 4, 4, 7, 8, 5, 10, 6, 7]
length(C_list) = 44
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 3, 7, 7, 5, 241, 4, 6, 43, 4, 10, 5, 10, 4, 10, 4, 6, 4, 35, 5, 135, 5, 156, 6, 9, 10, 7, 7, 4, 6, 6, 4, 7, 4, 5, 7, 6, 4, 8, 7, 7]
length(C_list) = 42
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [8, 4, 12, 4, 43, 7, 26, 12, 6, 4, 6, 4, 101, 148, 27, 9, 5, 157, 15, 4, 8, 59, 246, 11, 4, 27, 7, 6, 8, 174, 8, 8, 4, 11, 11, 6, 4, 9, 10, 4, 14, 4, 7, 5, 9, 6, 9, 203, 8, 5, 8, 7, 5, 6, 8]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 4, 5, 6, 9, 6, 11, 5, 3, 4, 12, 5, 7, 7, 4, 221, 4, 4, 7, 4, 26, 288, 4, 6, 10, 11, 6, 9, 5, 4, 7, 8, 7, 19, 7, 29, 5, 4, 17, 5, 6, 6, 6, 8, 6, 4, 11, 6, 5]
length(C_list) = 47
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
termination = MathOptInterface.INFEASIBLE
objective_value = 0.010689973085032821
