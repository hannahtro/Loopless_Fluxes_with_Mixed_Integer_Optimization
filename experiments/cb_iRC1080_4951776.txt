┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 44
max_cuts = 11
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 5, 4, 2, 4, 9, 3, 3, 3, 4, 3, 14, 5, 51, 5, 3, 3, 3, 164, 18, 10, 5, 4, 7, 4, 3, 25, 4, 5, 405, 57, 6]
length(C_list) = 11
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 4, 4, 5, 3, 5, 8, 153, 6, 3, 4, 4, 3, 4, 4, 3, 5, 4, 6, 5, 3, 4, 6, 5, 3, 31, 5, 4, 4, 5, 6, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [16, 2, 8, 3, 3, 3, 4, 5, 3, 4, 6, 4, 4, 8, 4, 5, 7, 4, 7, 5, 4, 5, 4, 10, 3, 6, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [7, 4, 3, 4, 6, 12, 9, 3, 4, 3, 3, 3, 8, 3, 3, 6, 4, 6, 8, 18, 7, 4, 7, 3, 7, 8, 7, 9, 4, 3, 9, 4, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 3, 7, 3, 3, 7, 3, 3, 3, 4, 5, 8, 6, 17, 7, 4, 3, 43, 5, 5, 83, 7, 4, 7, 8, 5, 9, 4, 8, 7, 37]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 3, 4, 5, 5, 4, 9, 7, 4, 6, 4, 6, 9, 5, 234, 8, 22, 7, 9, 9, 8, 7, 4, 35, 5, 7, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [9, 9, 5, 8, 7, 5, 4, 3, 9, 6, 4, 4, 7, 3, 7, 8, 5, 7, 3, 7, 9, 5, 7, 9, 5, 7, 25, 8, 77, 3, 6, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 3, 6, 3, 3, 3, 17, 6, 6, 8, 8, 7, 12, 6, 32, 5, 7, 4, 7, 11, 24]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 5, 5, 7, 6, 5, 6, 4, 7, 3, 5, 16, 3, 13, 9, 19, 6, 5, 4, 4, 4, 19, 5, 8, 8, 8, 7, 4, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 12, 6, 7, 6, 6, 7, 3, 3, 4, 8, 4, 8, 4, 8, 5, 5, 7, 7, 5, 4, 3, 8, 4, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [8, 11, 12, 15, 6, 8, 10, 3, 8, 8, 7, 20, 5, 11, 6, 7, 8, 10, 10, 7, 7, 31, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [9, 6, 29, 10, 5, 6, 3, 4, 50, 4, 4, 19, 28, 12, 8, 28, 25, 5, 30, 28, 8, 24, 30, 29, 27, 10, 5, 22, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 13, 3, 35, 9, 26, 13, 5, 7, 13, 8, 166, 33, 39]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 9, 18, 3, 7, 3, 7, 42, 6, 8, 8, 9, 6, 4, 8, 39, 9, 3, 14, 9, 8, 6, 7, 5, 9, 5, 8, 8, 5, 8, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [9, 6, 5, 7, 5, 7, 8, 5, 6, 5, 5, 3, 5, 5, 3, 4, 5, 4, 5, 6, 5, 4, 7, 6, 5, 7, 6, 6, 6, 220, 5, 5, 7, 4, 4, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 5, 3, 5, 6, 4, 5, 6, 4, 4, 8, 10, 3, 104, 9, 3, 5, 4, 6, 6, 6, 6, 18, 5, 5, 4, 5, 3, 6, 3, 7, 3, 9, 7, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 3, 3, 5, 4, 4, 4, 5, 4, 26, 3, 7, 6, 6, 4, 4, 83, 5, 3, 6, 6, 6, 4, 6, 3, 5, 5, 5, 7, 69, 4, 4, 5, 5, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 3, 5, 3, 5, 5, 5, 5, 4, 5, 4, 5, 6, 4, 6, 5, 5, 4, 5, 8, 4, 5, 7, 8, 4, 9, 3, 3, 6, 6, 4, 3, 5, 7, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [7, 6, 5, 8, 4, 5, 5, 6, 3, 5, 21, 5, 6, 5, 5, 172, 97, 7, 3, 5, 8, 5, 33, 5, 5, 7, 5, 3, 6, 5, 4, 6, 6, 17, 6, 5, 7, 3, 5, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 5, 8, 5, 5, 5, 6, 8, 3, 6, 5, 5, 13, 5, 9, 3, 6, 4, 5, 5, 5, 3, 6, 5, 5, 5, 5, 4, 5, 5, 5, 5, 6, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 4, 3, 6, 4, 3, 3, 7, 5, 3, 5, 6, 5, 25, 9, 5, 10, 3, 5, 5, 5, 5, 3, 3, 3, 4, 5, 5, 5, 4, 4, 7, 3, 6, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 5, 5, 6, 5, 5, 3, 5, 4, 13, 6, 7, 7, 6, 4, 5, 4, 8, 9, 5, 243, 7, 6, 5, 4, 6, 7, 4, 8, 9, 289, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [7, 7, 5, 5, 6, 11, 6, 6, 6, 5, 3, 4, 6, 4, 5, 6, 4, 6, 33, 8, 5, 10, 4, 6, 11, 3, 5, 5, 4, 5, 7, 5, 5, 5, 6, 6, 8, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [5, 7, 3, 7, 12, 4, 5, 6, 7, 5, 4, 6, 5, 5, 4, 8, 4, 5, 4, 5, 4, 4, 4, 6, 10, 5, 6, 5, 4, 4, 9, 4, 8, 5, 5, 15, 7, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [9, 7, 6, 6, 6, 5, 5, 4, 6, 10, 8, 7, 4, 20, 9, 5, 10, 7, 31, 13, 7, 7, 8, 4, 8, 7, 6, 5, 8, 4, 6, 6, 6, 5, 6, 16, 6, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 4, 4, 4, 6, 5, 9, 5, 7, 8, 6, 4, 5, 8, 4, 6, 10, 7, 13, 7, 4, 7, 7, 4, 3, 5, 12, 5, 9, 16, 5, 6, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [11, 12, 3, 4, 7, 4, 3, 6, 3, 4, 7, 4, 5, 4, 9, 14, 4, 5, 4, 6, 4, 12, 4, 5, 4, 5, 7, 5, 4, 6, 3, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 4, 7, 4, 4, 5, 3, 7, 4, 6, 4, 4, 8, 7, 9, 6, 3, 8, 4, 4, 4, 4, 4, 7, 4, 4, 4, 6, 4, 4, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 6, 10, 6, 5, 4, 6, 6, 7, 7, 8, 7, 4, 6, 5, 68, 6, 4, 3, 6, 6, 7, 7, 7, 10, 3, 5, 6, 11, 6, 10, 4, 6, 5, 5, 7, 12]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 8, 151, 11, 7, 6, 6, 8, 11, 21, 8, 7, 8, 8, 7, 6, 7, 9, 10, 5, 8, 7, 7, 8, 9, 7, 8, 7, 4, 8, 19, 7, 73, 10, 7, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [8, 9, 9, 8, 4, 8, 5, 3, 10, 3, 6, 6, 9, 13, 4, 7, 4, 10, 5, 4, 6, 4, 8, 3, 13, 6, 7, 3, 5, 4, 3, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [6, 9, 8, 8, 5, 6, 12, 10, 9, 13, 11, 10, 7, 10, 8, 9, 13, 14, 7, 13, 10, 10, 14, 63, 10, 9, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 3, 8, 50, 4, 4, 4, 3, 9, 3, 6, 24, 9, 4, 6, 3, 6, 10, 3, 8, 4, 3, 6, 10, 21, 6, 6, 4, 4, 6, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 9, 5, 3, 4, 5, 3, 4, 4, 4, 4, 3, 5, 5, 34, 6, 6, 8, 13, 4, 3, 5, 5, 3, 12, 3, 6, 8, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [10, 10, 8, 9, 7, 9, 4, 10, 18, 8, 11, 12, 10, 11, 10, 11, 11, 12, 8, 8, 9, 10, 327, 10, 11, 10, 10, 24, 12]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 8, 5, 6, 4, 5, 5, 3, 6, 7, 7, 9, 5, 7, 4, 7, 4, 7, 5, 7, 7, 6, 4, 9, 20, 4, 8, 8, 5, 5, 6, 11, 7, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [10, 9, 3, 8, 9, 9, 10, 8, 10, 152, 9, 9, 8, 3, 10, 4, 13, 13, 8, 9, 9, 9, 8, 5, 9, 4, 10, 16, 9, 8, 9, 8, 10]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 7, 6, 74, 101]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 7, 6, 4, 4, 18, 4, 3, 4, 4, 6, 3, 3, 4, 3, 3, 8, 8, 6, 45, 4, 39, 3, 4, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 415, 8, 4, 4, 3, 77, 4, 3, 4, 8, 4, 4, 6, 4, 54, 8, 14, 6, 3, 4, 4, 4, 6, 4, 5, 4, 4, 4, 3, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 4, 4, 4, 4, 4, 16, 13, 4, 4, 4, 13, 13, 4, 17, 12, 11, 309, 20, 22, 24, 15, 18, 21]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [13, 13, 14, 13, 15, 10, 24, 11, 13, 13, 13, 12, 13, 13, 15, 11, 11, 12, 23, 12, 13, 11, 12, 12, 18, 15, 13, 15, 11, 13, 13, 13, 14, 14, 14, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [16, 16, 17, 15, 17, 15, 18, 76, 15, 15, 14, 19, 20, 15, 16, 16, 18, 38, 16, 14, 20, 50]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 6, 5, 3, 5, 7, 15, 6, 6, 6, 4, 6, 4, 5, 4, 9, 5, 8, 22, 7, 5, 6, 4, 5, 4, 4, 4, 6, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 6, 6, 6, 3, 6, 12, 6, 23, 8, 8, 6, 28, 85, 6, 11, 8, 21, 6, 12, 6, 12, 10, 7, 12, 6, 12, 8, 6, 59, 13, 6, 8, 4, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 9, 8, 12, 4, 4, 8, 4, 7, 9, 7, 9, 4, 4, 8, 9, 4, 4, 218, 9, 10, 4, 8, 39, 5, 8, 9, 8, 8, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [8, 3, 13, 14, 14, 14, 14, 14, 14, 14, 13, 14, 14, 17, 16, 13, 15, 16, 13, 13, 16, 12, 15]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 4, 6, 8, 4, 4, 4, 4, 7, 5, 5, 4, 5, 6, 5, 4, 4, 11, 6, 7, 5, 16, 5, 3, 4, 4, 9, 4, 4, 3, 3, 3, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [10, 10, 5, 11, 6, 11, 7, 6, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 7, 5, 5, 7, 8, 5, 7, 9, 6, 7, 5, 8, 4, 6, 6, 7, 7, 6, 8, 4, 8, 7, 4, 7, 8, 13, 7, 8, 6, 5, 19, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [3, 76, 4, 15, 11, 13, 13, 13, 4, 14, 13, 13, 12, 43, 13, 14, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [26, 11, 4, 9, 16, 21, 26, 9, 10, 4, 22, 27, 13, 7, 12, 4, 24, 10, 8, 12, 22, 5, 10, 19, 6, 4, 24, 11, 17]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [64, 52, 24, 52, 57, 3, 5, 66, 25, 25, 61, 60, 52, 61, 53, 48, 23, 52, 23, 24, 6, 60, 25, 36, 24, 60, 24, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 53
termination = MathOptInterface.OPTIMAL
objective_value = 0.0
thermo_feasible = true
