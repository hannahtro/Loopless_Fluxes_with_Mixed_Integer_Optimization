┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSSON_1240
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSSON_1240
----------------------------------
number of metabolites : 1936
number of reactions : 2693
number of genes : 1240

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 135
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2693 flux variables and 4994 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 11, 12, 11, 11, 11, 11, 11, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 15, 15, 15, 21, 14, 14, 15, 14, 15, 14, 14, 16, 2, 2, 6, 2, 7, 3, 11, 40, 2, 41, 41, 2, 2, 10, 10, 4, 3, 100, 10, 11, 18, 10, 13, 10, 2, 4, 3, 7, 3, 3, 3, 4]
length(C_list) = 54
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 8, 3, 3, 4, 2, 2, 27, 2, 2, 2, 5, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 5, 5, 6, 4, 150, 6, 3, 4]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 3, 3, 3, 2, 3, 2, 4, 4, 3, 3, 19, 4, 4, 5, 63, 11, 19, 4, 6, 5]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 4, 38, 2, 2, 2, 2, 2, 6, 2, 17, 2, 41, 3, 5, 5, 13, 12]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 3, 3, 8, 4, 3, 35, 4, 61, 7, 12, 6, 4, 6, 6]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 133, 5]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 4, 5, 4, 5, 5, 5, 6, 6, 14, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5, 5, 6, 5, 5, 22, 5, 9, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 2, 5, 10, 5, 20, 7, 3, 5, 3, 4, 31, 30, 4, 24, 4, 6, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 4, 7, 4, 10, 5, 4, 10, 4, 15, 32]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 5, 4, 4, 8, 4, 4, 4, 10, 6, 4, 5, 28, 20, 87]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 4, 15, 10, 19, 11, 8, 6, 5, 5, 7, 8, 7, 23, 8]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 12
termination = MathOptInterface.OPTIMAL
objective_value = 0.9826451124848015
thermo_feasible = true
