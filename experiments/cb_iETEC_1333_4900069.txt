┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iETEC_1333
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iETEC_1333
----------------------------------
number of metabolites : 1962
number of reactions : 2756
number of genes : 1333

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2756 flux variables and 5121 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [8, 2, 11, 11, 11, 90, 11, 11, 11, 16, 16, 17, 16, 20, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 16]
length(C_list) = 1
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 15, 2, 12, 84, 11, 11, 11, 14, 11, 16, 16, 17, 16, 17, 16, 16, 16, 13, 17, 13, 14, 15, 13, 13, 14, 14, 19, 15, 13, 13, 268, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 11, 11, 11, 11, 11, 12, 11, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 11, 11, 11, 11, 12, 14, 11, 2, 18, 16, 17, 21, 17, 16, 16, 13, 17, 25, 13, 14, 13, 13, 13, 14, 15, 13, 13, 14, 13, 14, 13, 81]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 11, 14, 11, 22, 11, 11, 11, 3, 17, 17, 23, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 12, 11, 11, 13, 11, 11, 11, 18, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 2, 2, 11, 11, 11, 11, 12, 11, 11, 41, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 14, 154, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [5, 11, 62, 11, 13, 11, 11, 11, 2, 19, 19, 20, 21, 20, 20, 19, 16, 16, 17, 18, 17, 17, 16, 19, 16, 16, 16, 16, 17, 18, 17, 16, 16]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 14, 11, 11, 11, 12, 11, 11, 17, 17, 18, 17, 18, 18, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
AssertionError("!(isempty(C_list_filtered))")
