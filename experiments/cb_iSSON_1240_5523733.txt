┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSSON_1240
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSSON_1240
----------------------------------
number of metabolites : 1936
number of reactions : 2693
number of genes : 1240

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2693 flux variables and 4994 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [3, 11, 12, 11, 11, 11, 11, 11, 3, 17, 17, 18, 17, 18, 17, 17, 14, 14, 15, 14, 15, 14, 15, 15, 15, 21, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 2
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 7, 12, 13, 11, 11, 11, 11, 11, 2, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 2, 11, 187, 11, 11, 11, 11, 11, 3, 2, 16, 16, 34, 16, 17, 20, 16, 13, 148, 15, 13, 14, 13, 13, 13, 14, 16, 39, 13, 14, 13, 14, 13, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 11, 11, 11, 11, 11, 11, 6, 16, 16, 17, 16, 28, 16, 16, 13, 13, 14, 13, 14, 13, 14, 14, 13, 14, 14, 16, 13, 14, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 11, 11, 12, 15, 11, 12, 4, 16, 61, 17, 16, 20, 16, 29, 13, 13, 14, 13, 29, 13, 13, 14, 13, 13, 14, 14, 17, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [7, 7, 12, 11, 12, 11, 111, 11, 11, 2, 2, 28, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 7, 2, 11, 11, 11, 12, 17, 11, 11, 3, 4, 16, 16, 17, 16, 18, 16, 20, 16, 13, 29, 14, 14, 13, 13, 13, 14, 14, 13, 16, 80, 13, 14, 13, 14, 13, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 11, 11, 11, 11, 11, 11, 3, 17, 17, 18, 17, 18, 18, 17, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 12, 11, 11, 11, 11, 11, 5, 17, 17, 18, 17, 18, 17, 22, 14, 21, 24, 14, 15, 14, 14, 14, 15, 14, 15, 15, 14, 15, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [8, 41, 12, 11, 11, 11, 11, 11, 11, 2, 7, 17, 26, 18, 17, 18, 18, 38, 14, 14, 15, 14, 15, 14, 14, 14, 14, 15, 14, 15, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 7, 11, 11, 11, 171, 11, 12, 12, 2, 16, 16, 17, 16, 18, 16, 55, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 17, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [7, 11, 11, 11, 11, 11, 11, 11, 6, 6, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 13, 13, 14, 13, 14, 13, 13]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 3, 6, 3, 2, 5, 4, 4, 4, 19, 12, 8]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 5, 6, 13, 4]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 2, 4, 6, 138, 78, 5, 4, 8, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 2, 2, 6, 2, 8]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 4, 7, 3, 11, 3, 20, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 46, 2, 4, 3, 8, 247, 4, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 5, 4, 2, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 5, 4, 2, 5, 21, 15, 5, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 20, 5]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 210, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 7, 4, 4, 10]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 10, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 3, 16, 10]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 25
termination = MathOptInterface.OPTIMAL
objective_value = 0.982645153558082
thermo_feasible = true
