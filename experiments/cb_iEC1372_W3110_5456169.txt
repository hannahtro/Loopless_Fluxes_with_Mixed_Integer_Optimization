WARNING: Dual bound 0.982371 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iEC1372_W3110
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iEC1372_W3110
----------------------------------
number of metabolites : 1918
number of reactions : 2758
number of genes : 1372

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 138
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2758 flux variables and 5172 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 2, 2, 3, 193, 2, 2, 2, 2, 103, 2, 2, 2, 2, 3, 2, 3, 3, 2, 4, 3, 6, 3, 4, 2, 3, 3, 4, 41, 12, 6, 10, 2, 27, 4, 3, 2, 3, 2, 2, 2, 15, 46, 5]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 4, 3, 2, 6, 3, 2, 4, 2, 4, 2, 2, 5, 3, 7, 3, 4, 4, 3, 4, 4, 4, 7, 4, 3, 4, 4, 3, 3, 5, 4, 3, 6, 194, 4, 6, 3, 84, 2, 2, 8, 2, 2, 2]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 3, 4, 3, 5, 3, 43, 5, 3, 6, 3, 3, 4, 4, 2, 4, 4, 190, 7, 12, 62, 13, 5, 3, 7, 3, 11, 2, 3, 7, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 57, 4, 16, 9, 3, 5, 3, 5, 3, 5, 5, 5, 5, 61, 3, 4, 5, 2, 4, 5, 5, 8, 4, 5, 9, 7, 102, 9, 244, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 34, 5, 6, 4, 4, 3, 4, 6, 49, 9, 58, 2, 4, 5, 6, 2, 107, 4, 4, 5, 8, 12, 8, 2, 9, 7, 104, 3, 37, 213]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 2, 3, 4, 4, 101, 4, 5, 5, 2, 7, 6, 4, 4, 4, 6, 5, 4, 4, 2, 5, 8, 4, 55, 6, 5, 5, 4, 4, 7, 61]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 5, 7, 3, 3, 7, 8, 9, 8, 17, 10, 10, 29, 5, 8, 13, 3, 16, 6, 5, 23, 9, 4, 5, 8, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 6, 10, 155, 3, 3, 25, 30, 86]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 8, 4, 7, 3, 179, 10, 7, 52, 6, 19, 7, 5, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 5, 4, 7, 5, 144, 28, 9, 17, 5, 35, 3, 4, 6, 6, 7, 3, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 4, 15, 6, 5, 4, 8, 6, 4, 7, 4, 6, 5, 15, 81, 103, 4, 6, 4, 5, 4, 7, 12, 4, 9, 5, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 3, 5, 4, 4, 13, 6, 5, 7, 4, 6, 5, 5, 17, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 6, 170, 6, 4, 7, 6, 60, 149, 343, 10, 13, 7, 13, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 12, 8, 13, 7, 6, 13, 13, 5, 6, 18, 5, 5, 93, 6, 6, 5, 6, 8, 13, 166, 6, 7, 9, 9, 7, 6, 18, 13, 24, 7, 18, 44, 5, 5, 5, 6, 8, 4, 47, 132, 6, 10, 14, 263]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 5, 3, 5, 5, 4, 6, 7, 4, 4, 4, 6, 5, 4, 7, 3, 7, 3, 7, 11, 37, 3, 3, 5, 3, 4, 4, 15, 4, 9, 4, 6, 4, 4, 6, 5, 4, 4, 7, 119, 6, 4, 8, 5, 4, 4, 4, 4, 7, 344, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 5, 160, 5, 5, 190, 4, 5, 3, 6, 7, 5, 5, 27, 4, 5, 5, 5, 8, 6, 7, 255, 6, 200, 59, 6, 5, 5, 18, 88, 7, 7, 11, 4, 5, 4, 4, 5, 8, 16, 5, 8, 12, 6, 8, 5, 9, 34, 5, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 6, 5, 4, 5, 6, 5, 7, 6, 31, 27, 9, 8, 4, 8, 24, 22, 5, 7, 5, 8, 75, 74, 8, 8, 7, 5, 7, 49, 12, 42, 58, 5, 8, 5, 112, 7, 6, 6, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5, 4, 3, 3, 5, 5, 3, 4, 7, 7, 4, 4, 7, 7, 6, 5, 7, 7, 5, 19, 11, 4, 7, 5, 5, 6, 9, 16, 8, 10, 30, 7, 5, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [6, 8, 7, 3, 3, 7, 7, 7, 8, 8, 9, 11, 7, 172, 10, 12, 8, 11, 5, 37, 7, 8, 11, 10, 13, 9, 19, 4, 8, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 4, 7, 33, 5, 5, 4, 4, 48, 5, 4, 6, 7, 5, 5, 4, 82, 23, 5, 26, 7, 10, 6, 6, 87, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [2, 3, 8, 13, 13, 13, 13, 13, 13, 13, 11, 3, 20, 20, 48, 19, 20, 3, 20, 14, 14, 14, 14, 15, 15, 14, 14, 16, 14, 14, 14, 14, 15, 14, 14, 12, 14, 14, 15, 16, 11, 28, 24, 9, 7, 4, 14, 20, 11, 20, 5, 19, 3, 4, 3, 4, 3, 19, 19, 11, 19, 13, 11, 20, 10, 11, 5, 12, 17, 4, 12, 11, 5, 64, 3, 12, 6, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 10, 7, 12, 12, 15, 12, 11, 20, 10, 43, 11, 9, 11, 15, 9, 7, 13, 9, 9, 10, 12, 9, 7, 10, 12, 8, 12, 6, 10, 11, 7, 12, 123, 8, 9, 11, 11, 13, 9, 15, 10, 7, 11, 12, 11, 12, 13, 10, 10, 8, 18, 13, 33, 17, 12, 11, 12, 12, 8, 9, 11, 20, 9, 12, 10, 12, 18, 11, 11, 13, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [3, 4, 12, 7, 4, 110, 6, 6, 5, 9, 7, 5, 5, 6, 7, 7, 5, 5, 4, 28, 12, 5, 6, 8, 5, 5, 10, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 5, 6, 3, 5, 4, 3, 5, 15, 12, 5, 6, 17, 4, 5, 4, 5, 25, 9, 91, 5, 8, 6, 5, 30, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 4, 6, 14, 9, 4, 6, 5, 9, 7, 7, 55, 6, 9, 7, 5, 53, 9, 6, 5, 5, 5, 5, 5, 15, 5, 5, 7, 9, 7, 6, 117, 5, 8, 11, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [5, 3, 6, 4, 8, 4, 5, 6, 8, 4, 139, 6, 103, 8, 13, 9, 30, 6, 11, 5, 12, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 4, 8, 8, 4, 6, 6, 7, 82, 3, 5, 12, 4, 4, 21, 8, 6, 9, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [8, 5, 6, 8, 8, 8, 8, 8, 8, 8, 10, 17, 17, 6, 17, 16, 10, 6, 10, 10, 10, 10, 10, 10, 13, 11, 10, 10, 10, 40, 10, 10, 55, 10, 6, 9, 6, 6, 7, 4, 6, 9, 73, 7, 28, 5, 8, 6, 6, 7, 6, 5, 11, 6, 4, 6, 16, 7, 8, 11, 16, 16, 16, 33, 6, 71, 6, 10, 10, 12, 6, 6, 7, 11, 6, 6, 6, 39, 7, 140, 38, 9, 39, 40, 9, 8, 5, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [8, 7, 7, 11, 10, 10, 10, 10, 10, 10, 71, 16, 4, 19, 15, 7, 16, 16, 12, 12, 12, 12, 12, 13, 12, 57, 12, 12, 12, 12, 12, 5, 12, 12, 13, 12, 4, 5, 6, 14, 4, 4, 6, 5, 107, 17, 16, 11, 5, 4, 4, 13, 15, 4, 4, 7, 6, 13, 7, 4, 13, 15, 15, 4, 16, 4, 5, 13, 4, 5, 4, 6, 6, 7, 4, 9, 13, 6, 7, 6, 5, 5, 6, 7, 11, 4, 5, 4, 4, 4, 17, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 9, 9, 9, 9, 8, 10, 12, 78, 14, 20, 14, 14, 15, 4, 12, 11, 11, 27, 11, 11, 11, 11, 11, 11, 11, 11, 4, 25, 11, 11, 11, 4, 12, 4, 4, 4, 5, 4, 6, 24, 7, 16, 4, 4, 4, 5, 5, 11, 4, 7, 6, 14, 149, 15, 14, 14, 14, 14, 5, 5, 6, 4, 4, 4, 5, 6, 8, 4, 8, 14, 6, 13, 4, 4, 7, 11, 6, 6, 4, 4, 5, 4, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [12, 4, 5, 81, 10, 9, 9, 229, 9, 9, 17, 16, 16, 16, 16, 18, 17, 12, 13, 13, 14, 13, 22, 13, 13, 13, 13, 13, 13, 13, 12, 13, 13, 5, 6, 12, 13, 12, 13, 6, 5, 4, 4, 6, 6, 5, 6, 4, 6, 6, 5, 5, 4, 9, 4, 16, 5, 7, 6, 12, 15, 4, 6, 17, 15, 16, 16, 16, 4, 4, 5, 4, 4, 6, 4, 6, 5, 9, 15, 5, 5, 111, 6, 4, 4, 6, 4, 4, 8, 4, 7, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [16, 5, 6, 10, 10, 10, 10, 10, 10, 10, 6, 20, 20, 20, 20, 19, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 19, 16, 16, 16, 6, 16, 16, 17, 16, 6, 9, 4, 8, 57, 4, 6, 20, 151, 6, 7, 6, 4, 8, 6, 5, 19, 12, 4, 19, 19, 19, 12, 14, 11, 9, 6, 123, 33, 9, 17, 5, 4, 5, 13, 37, 8, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [7, 7, 2, 9, 7, 7, 9, 7, 7, 9, 5, 15, 14, 15, 14, 14, 15, 15, 9, 9, 9, 10, 9, 9, 10, 9, 10, 186, 9, 9, 9, 9, 39, 9, 9, 9, 9, 6, 5, 7, 3, 9, 4, 4, 4, 5, 4, 18, 15, 6, 4, 7, 6, 5, 14, 4, 5, 11, 3, 3, 14, 5, 3, 14, 14, 14, 14, 19, 8, 144, 4, 6, 3, 3, 90, 4, 3, 4, 6, 11, 5, 5, 37, 8, 10, 8, 5, 38, 3, 37, 39, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 3, 24, 12, 3, 3, 5, 3, 3, 4, 6, 3, 5, 23, 5, 4, 5, 226, 8, 3, 16, 5, 5, 4, 5, 8, 5, 5, 5, 5, 6, 15, 8, 8, 91, 13, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [6, 5, 4, 10, 11, 10, 10, 10, 10, 10, 8, 4, 5, 4, 17, 16, 6, 16, 16, 16, 16, 10, 82, 10, 10, 10, 84, 11, 10, 13, 10, 11, 10, 10, 10, 10, 11, 10, 13, 10, 145, 4, 3, 8, 4, 3, 4, 3, 5, 5, 5, 27, 5, 4, 5, 4, 4, 3, 18, 4, 27, 15, 4, 4, 15, 15, 15, 15, 5, 9, 6, 4, 4, 3, 14, 6, 4, 4, 7, 12, 8, 5, 6, 5, 7, 4, 4, 5, 3, 5, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [8, 14, 4, 11, 11, 13, 11, 4, 10, 10, 4, 4, 4, 3, 7, 16, 17, 5, 16, 17, 16, 7, 10, 38, 10, 15, 10, 10, 11, 10, 10, 10, 11, 10, 3, 10, 10, 10, 108, 6, 9, 7, 4, 8, 10, 8, 5, 13, 4, 4, 15, 6, 5, 6, 5, 4, 6, 71, 5, 4, 10, 6, 5, 4, 5, 18, 15, 16, 15, 15, 4, 4, 4, 5, 4, 6, 13, 6, 4, 8, 7, 14, 7, 6, 5, 6, 8, 4, 5, 4, 4, 4, 5, 51, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 6, 9, 150, 8, 9, 8, 9, 12, 19, 14, 29, 8, 13, 14, 16, 15, 11, 11, 11, 11, 12, 11, 11, 11, 11, 11, 11, 242, 11, 11, 11, 11, 5, 4, 4, 6, 5, 26, 3, 6, 12, 4, 4, 16, 7, 19, 6, 7, 7, 67, 5, 13, 8, 6, 6, 13, 4, 7, 7, 13, 13, 14, 13, 7, 10, 6, 4, 4, 4, 9, 10, 8, 59, 6, 4, 4, 4, 6, 4, 10, 4, 6, 8, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 14, 11, 9, 236, 8, 9, 14, 14, 10, 13, 13, 14, 5, 11, 11, 12, 22, 11, 11, 11, 11, 11, 11, 11, 11, 3, 11, 11, 11, 11, 5, 5, 4, 4, 4, 3, 5, 3, 11, 5, 15, 3, 3, 5, 4, 4, 13, 6, 11, 9, 4, 4, 4, 4, 13, 13, 13, 15, 4, 5, 4, 14, 3, 5, 12, 5, 5, 8, 12, 5, 5, 4, 4, 26, 6, 4, 30, 6, 6, 4, 5, 45, 13, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 13, 5, 10, 4, 4, 14, 5, 5, 5, 10, 15, 16, 4, 16, 16, 16, 16, 10, 10, 11, 10, 10, 10, 10, 12, 10, 10, 10, 10, 10, 9, 3, 10, 10, 10, 10, 4, 4, 4, 4, 4, 3, 5, 4, 4, 4, 6, 4, 4, 5, 4, 4, 6, 15, 5, 4, 4, 4, 15, 4, 4, 4, 15, 15, 15, 15, 5, 5, 13, 5, 4, 3, 6, 5, 5, 7, 23, 6, 4, 4, 17, 3, 4, 6, 3, 4, 5, 4, 215, 5, 7, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 10, 5, 10, 8, 8, 10, 8, 8, 15, 16, 9, 15, 16, 3, 16, 10, 10, 10, 10, 10, 10, 50, 15, 10, 12, 10, 11, 7, 10, 35, 10, 10, 6, 16, 122, 6, 4, 4, 3, 6, 10, 15, 4, 7, 6, 9, 12, 15, 4, 6, 4, 15, 5, 6, 15, 15, 4, 15, 11, 4, 5, 4, 12, 14, 12, 11, 14, 16, 11, 4, 7, 5, 5, 6, 13, 4, 4, 6, 7, 4, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [14, 5, 6, 10, 4, 10, 10, 10, 10, 11, 4, 6, 5, 5, 15, 18, 5, 16, 16, 16, 8, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 5, 13, 13, 17, 12, 5, 4, 7, 4, 8, 6, 9, 5, 10, 11, 5, 5, 6, 7, 5, 7, 44, 5, 4, 15, 4, 4, 13, 15, 15, 15, 17, 13, 7, 16, 13, 58, 5, 6, 5, 9, 9, 32, 7, 17, 15, 5, 4, 5, 13, 6, 4, 5, 5, 6, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [15, 7, 7, 10, 9, 5, 14, 10, 61, 9, 5, 3, 5, 17, 17, 10, 14, 16, 19, 15, 12, 11, 11, 12, 11, 362, 319, 15, 12, 54, 12, 12, 11, 11, 5, 4, 13, 11, 11, 13, 4, 12, 22, 6, 5, 5, 5, 19, 5, 6, 5, 7, 16, 5, 54, 7, 5, 5, 5, 5, 5, 17, 5, 5, 9, 11, 17, 5, 8, 17, 17, 17, 17, 17, 12, 5, 13, 4, 5, 4, 5, 6, 8, 13, 6, 5, 18, 12, 6, 11, 13, 4, 15, 7, 6, 9, 13, 5, 5, 6, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 12, 7, 8, 8, 8, 8, 9, 8, 4, 4, 9, 5, 14, 14, 7, 14, 13, 13, 17, 14, 12, 13, 12, 11, 11, 11, 11, 13, 32, 12, 16, 11, 11, 61, 5, 27, 11, 11, 11, 11, 5, 6, 7, 7, 5, 7, 5, 3, 5, 7, 5, 4, 5, 18, 4, 4, 4, 5, 5, 6, 12, 67, 6, 6, 13, 13, 13, 12, 7, 5, 12, 5, 7, 12, 11, 7, 6, 9, 12, 12, 16, 4, 22, 6, 5, 11, 14, 7, 8, 13, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [18, 11, 5, 8, 5, 8, 9, 9, 8, 8, 5, 6, 5, 14, 13, 5, 13, 13, 14, 14, 11, 11, 12, 12, 12, 11, 12, 11, 11, 11, 11, 11, 11, 11, 5, 12, 11, 11, 11, 11, 6, 5, 7, 5, 5, 7, 6, 7, 14, 12, 6, 12, 4, 12, 11, 5, 6, 4, 13, 15, 13, 6, 18, 5, 5, 14, 11, 6, 18, 13, 22, 13, 13, 6, 10, 7, 8, 5, 13, 4, 6, 10, 9, 14, 7, 6, 6, 8, 6, 10, 7, 10, 6, 6, 5, 10, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [11, 4, 6, 10, 139, 9, 10, 5, 10, 10, 4, 4, 5, 16, 15, 5, 17, 17, 16, 15, 12, 12, 12, 11, 12, 12, 12, 12, 11, 12, 11, 11, 12, 12, 12, 12, 6, 11, 13, 12, 14, 6, 6, 15, 6, 5, 5, 4, 9, 16, 6, 6, 4, 129, 5, 5, 15, 5, 5, 5, 15, 7, 5, 5, 15, 15, 15, 15, 7, 7, 7, 6, 5, 10, 6, 6, 5, 15, 175, 21, 6, 7, 6, 11, 4, 9, 6, 6, 37, 5, 6, 4, 16, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [17, 5, 8, 6, 8, 8, 9, 8, 9, 14, 14, 6, 13, 13, 7, 6, 12, 11, 11, 11, 11, 11, 11, 12, 11, 11, 11, 11, 9, 6, 11, 11, 11, 12, 10, 6, 6, 6, 8, 4, 4, 5, 15, 7, 6, 6, 15, 5, 6, 6, 6, 6, 3, 5, 7, 13, 14, 5, 13, 6, 12, 5, 4, 6, 4, 78, 7, 6, 4, 8, 13, 4, 7, 8, 5, 7, 6, 4, 3, 8, 6, 9, 4, 14, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [11, 15, 6, 10, 10, 4, 10, 10, 10, 5, 16, 4, 24, 17, 16, 4, 36, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 16, 5, 12, 12, 12, 14, 75, 10, 4, 5, 5, 4, 19, 69, 10, 11, 4, 15, 7, 9, 5, 10, 3, 5, 11, 6, 4, 14, 17, 17, 6, 6, 4, 5, 13, 6, 6, 28, 8, 5, 6, 8, 9, 15, 19, 4, 7, 5, 6, 4, 4, 14, 6, 16, 4, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 8, 13, 9, 8, 9, 8, 8, 8, 8, 6, 11, 13, 14, 13, 14, 14, 14, 14, 11, 64, 11, 11, 13, 42, 11, 35, 11, 11, 11, 11, 11, 11, 4, 6, 11, 11, 13, 16, 4, 6, 5, 7, 4, 5, 6, 5, 4, 6, 8, 10, 7, 14, 4, 7, 4, 11, 13, 5, 3, 5, 13, 3, 4, 13, 13, 13, 13, 13, 5, 12, 7, 191, 13, 6, 5, 8, 71, 4, 5, 9, 9, 5, 15, 6, 6, 4, 17, 11, 11, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [27, 7, 5, 9, 8, 9, 9, 10, 8, 8, 6, 5, 6, 13, 13, 13, 14, 35, 6, 14, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 6, 40, 4, 11, 12, 11, 11, 4, 5, 4, 6, 8, 5, 6, 19, 13, 13, 4, 10, 4, 3, 6, 13, 11, 13, 14, 4, 13, 5, 5, 14, 22, 13, 5, 13, 5, 9, 14, 6, 4, 4, 6, 4, 4, 9, 11, 5, 6, 5, 39, 15, 11, 11, 6, 7, 37, 10, 38, 39, 6, 4, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [14, 11, 5, 10, 8, 8, 9, 9, 8, 8, 14, 13, 7, 14, 13, 13, 15, 12, 11, 11, 11, 11, 11, 11, 12, 11, 11, 11, 11, 9, 11, 11, 12, 11, 7, 7, 6, 7, 9, 4, 5, 3, 4, 54, 4, 17, 8, 14, 6, 4, 6, 13, 7, 7, 6, 4, 12, 9, 16, 12, 13, 19, 13, 4, 7, 14, 4, 4, 9, 15, 5, 8, 11, 5, 4, 6, 4, 5, 7, 12, 4, 16, 5, 7, 4, 12, 5, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [19, 5, 5, 8, 5, 9, 9, 5, 8, 9, 15, 14, 14, 14, 14, 14, 14, 14, 11, 11, 11, 12, 11, 11, 11, 11, 11, 11, 11, 230, 6, 11, 11, 11, 11, 6, 4, 11, 6, 5, 5, 4, 5, 5, 4, 6, 6, 13, 17, 5, 4, 4, 13, 6, 5, 13, 13, 14, 13, 13, 6, 4, 6, 6, 5, 6, 6, 7, 5, 14, 9, 14, 4, 5, 10, 5, 6, 4, 7, 4, 5, 4, 7, 6, 7, 11, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [5, 12, 4, 11, 8, 8, 8, 7, 8, 17, 17, 17, 4, 17, 17, 17, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 14, 10, 10, 68, 10, 6, 10, 4, 13, 4, 4, 13, 17, 7, 12, 15, 14, 4, 4, 12, 6, 8, 12, 16, 13, 7, 11, 3, 11, 9, 16, 16, 16, 17, 11, 4, 11, 15, 203, 11, 11, 5, 7, 13, 6, 12, 11, 15, 27, 9, 6, 6, 8, 10, 5, 7, 11, 11, 15]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [14, 7, 11, 16, 9, 9, 8, 9, 11, 9, 11, 14, 14, 15, 15, 14, 12, 10, 11, 14, 11, 11, 11, 14, 12, 11, 13, 57, 18, 12, 11, 11, 11, 14, 11, 11, 11, 11, 3, 6, 12, 7, 10, 6, 6, 6, 9, 47, 4, 15, 7, 7, 6, 5, 5, 16, 13, 13, 11, 14, 11, 6, 13, 93, 14, 13, 18, 6, 10, 16, 10, 5, 15, 14, 12, 4, 11, 6, 36, 14, 34, 6, 13, 6, 8, 20, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [9, 10, 12, 8, 5, 9, 10, 11, 10, 4, 15, 14, 6, 14, 15, 14, 16, 10, 11, 10, 10, 11, 10, 10, 10, 10, 10, 11, 10, 5, 10, 10, 10, 10, 4, 39, 14, 3, 4, 6, 5, 15, 3, 8, 5, 14, 3, 10, 5, 3, 3, 9, 13, 4, 11, 4, 9, 11, 13, 13, 15, 15, 10, 8, 5, 4, 11, 21, 4, 5, 5, 7, 7, 12, 4, 14, 7, 10, 3, 5, 40, 4, 4, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [12, 13, 8, 45, 8, 9, 13, 8, 9, 13, 14, 7, 16, 13, 14, 7, 11, 11, 13, 11, 11, 11, 11, 12, 11, 11, 11, 6, 11, 12, 11, 11, 8, 9, 3, 7, 74, 10, 5, 8, 6, 7, 7, 5, 15, 12, 7, 7, 9, 4, 15, 5, 6, 26, 11, 7, 14, 4, 6, 15, 13, 13, 21, 13, 4, 6, 10, 11, 11, 8, 12, 7, 11, 12, 8, 12, 7, 7, 4, 28, 6, 7, 6, 6, 7, 8, 7, 9, 6, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 6, 22, 8, 8, 6, 8, 8, 8, 8, 5, 5, 4, 21, 7, 13, 20, 21, 21, 8, 14, 14, 15, 14, 14, 14, 14, 14, 14, 16, 14, 17, 14, 14, 23, 14, 7, 4, 6, 7, 7, 17, 37, 7, 13, 25, 7, 6, 7, 20, 20, 9, 8, 7, 12, 5, 23, 4, 91, 8, 9, 10, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [4, 12, 6, 3, 17, 8, 4, 24, 5, 9, 23, 23, 3, 13, 23, 9, 3, 8, 7, 9, 4, 8, 9, 20, 29, 9, 25, 6, 11, 13, 23, 8, 9, 24, 24, 8, 21, 33, 21, 7, 325, 20, 8, 106, 10, 4, 10, 6, 10, 7, 126, 10, 5, 4, 7, 14, 4, 53, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [10, 14, 22, 8, 14, 8, 8, 8, 8, 8, 20, 36, 12, 10, 16, 16, 16, 16, 15, 25, 6, 10, 19, 10, 10, 10, 10, 10, 10, 10, 10, 10, 13, 10, 10, 11, 56, 87, 12, 27, 21, 10, 24, 13, 26, 28, 22, 23, 6, 12, 11, 24, 15, 24, 22, 13, 11, 26, 32, 14, 15, 6, 14, 11, 15, 15, 15, 17, 15, 28, 10, 24, 25, 12, 24, 17, 21, 22, 10, 23, 27, 12, 25, 13, 14, 26, 20, 23, 20, 30, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [4, 4, 10, 9, 8, 18, 4, 8, 8, 8, 6, 13, 14, 13, 22, 13, 13, 14, 6, 22, 4, 8, 11, 14, 3, 12, 6, 6, 11, 12, 12, 11, 11, 36, 11, 11, 11, 11, 7, 4, 10, 11, 13, 6, 458, 6, 15, 6, 4, 6, 4, 4, 16, 4, 16, 13, 4, 6, 13, 7, 6, 24, 13, 13, 6, 16, 5, 3, 9, 5, 4, 8, 12, 35, 6, 5, 16, 5, 39, 35, 36, 6, 9, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [19, 7, 22, 9, 4, 17, 7, 6, 6, 23, 16, 4, 16, 17, 16, 16, 4, 13, 22, 12, 12, 4, 12, 4, 12, 12, 13, 12, 14, 6, 12, 12, 12, 12, 13, 6, 4, 6, 21, 4, 7, 7, 7, 17, 7, 8, 49, 15, 19, 8, 19, 6, 15, 6, 5, 15, 17, 15, 28, 5, 13, 15, 9, 5, 6, 10, 29, 5, 9, 13, 18, 6, 36, 11, 15, 9, 6, 7, 6, 18, 18, 5, 22]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 11, 10, 12, 6, 15, 18, 3, 18, 18, 4, 4, 23, 5, 12, 12, 12, 15, 12, 12, 12, 39, 5, 13, 12, 12, 4, 16, 6, 48, 8, 17, 5, 9, 5, 9, 17, 55, 4, 5, 8, 7, 13, 39, 11, 37, 38, 39, 11, 50]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [3, 21, 4, 4, 20, 15, 15, 21, 54, 3, 22, 22, 3, 21, 21, 23, 4, 21, 11, 14, 5, 10, 10, 11, 10, 5, 11, 10, 10, 12, 11, 4, 5, 10, 10, 141, 10, 5, 5, 12, 3, 3, 9, 4, 4, 15, 4, 6, 4, 4, 15, 13, 15, 5, 11, 4, 28, 4, 18, 18, 13, 13, 27, 12, 12, 11, 11, 12, 4, 7, 12, 4, 96, 4, 12, 14, 16, 13, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [5, 11, 20, 8, 89, 4, 25, 18, 7, 4, 5, 15, 59, 14, 15, 5, 6, 21, 14, 6, 7, 11, 11, 76, 21, 5, 12, 11, 11, 11, 11, 11, 6, 6, 11, 11, 12, 3, 6, 6, 7, 21, 8, 7, 7, 6, 8, 48, 14, 4, 4, 7, 7, 15, 6, 4, 18, 15, 7, 12, 15, 7, 19, 13, 13, 7, 7, 9, 15, 15, 6, 9, 6, 16, 7, 9, 13, 47, 6, 11, 7, 15, 6, 15, 10, 4, 7, 3, 6, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [14, 9, 25, 9, 17, 20, 20, 19, 11, 8, 22, 22, 23, 19, 25, 26, 23, 22, 18, 15, 4, 16, 15, 15, 25, 15, 33, 39, 29, 21, 15, 21, 15, 4, 16, 15, 15, 15, 19, 52, 7, 15, 60, 17, 4, 8, 16, 18, 17, 27, 10, 15, 17, 21, 73, 35, 26, 18, 22, 17, 32, 19, 23, 23, 23, 22, 23, 34, 31, 18, 22, 25, 20, 39, 26, 19, 18, 11, 15, 22, 23, 17, 17, 19, 28, 16, 15, 4, 13, 30, 18, 432, 17, 16, 22, 17, 20, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [18, 20, 26, 34, 13, 17, 13, 31, 14, 12, 24, 24, 18, 21, 30, 12, 63, 12, 12, 13, 15, 18, 13, 12, 13, 12, 15, 12, 12, 12, 12, 12, 59, 16, 12, 14, 12, 22, 15, 14, 24, 14, 15, 15, 22, 22, 25, 12, 79, 15, 27, 12, 13, 15, 12, 15, 13, 70, 15, 12, 25, 18, 20, 13, 13, 15, 12, 19, 52, 13, 14, 13, 26, 5, 13, 23, 27, 30, 27, 15, 12, 57, 13, 13, 13, 27, 13, 15, 66, 12, 58, 58, 14, 22, 27, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [13, 7, 4, 15, 5, 8, 37, 18, 5, 17, 19, 4, 14, 22, 5, 18, 17, 8, 41, 8, 11, 10, 4, 15, 5, 4, 5, 4, 4, 11, 6, 11, 4, 5, 5, 42, 4, 3, 6, 15, 3, 14, 6, 6, 5, 4, 11, 4, 4, 6, 4, 14, 5, 6, 16, 11, 21, 18, 17, 5, 14, 5, 18, 5, 14, 3, 103, 12, 14, 5, 5, 5, 16, 3, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [9, 12, 6, 13, 10, 4, 7, 3, 6, 4, 14, 6, 7, 23, 14, 5, 5, 5, 13, 23, 13, 12, 11, 13, 114, 15, 4, 11, 43, 6, 4, 20, 7, 11, 11, 11, 7, 17, 16, 4, 4, 6, 20, 5, 15, 19, 4, 16, 7, 4, 13, 15, 15, 7, 11, 11, 13, 13, 72, 14, 15, 13, 12, 116, 9, 10, 12, 9, 6, 5, 6, 29, 18, 6, 9, 10, 4, 4, 4, 16, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [31, 15, 3, 17, 8, 6, 5, 23, 24, 15, 16, 16, 13, 11, 15, 12, 16, 10, 12, 9, 11, 11, 331, 38, 13, 16, 15, 16, 14, 13, 6, 5, 4, 14, 29, 26, 11, 11, 12, 15, 15, 11, 15, 11, 38, 16, 7, 14, 8, 10, 8, 13, 15, 15, 16, 12, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 30, 28, 23, 36, 28, 20, 126, 15, 18, 26, 29, 16, 8, 26, 22, 21, 14, 11, 10, 10, 8, 34, 15, 13, 6, 23, 4, 44, 30, 23, 23, 23, 11, 12, 78, 5, 4, 13, 18, 5, 22, 30, 18, 8, 22, 12, 22, 5, 24, 23, 27, 65, 20, 12, 27, 16, 23, 23, 29, 18, 26, 11, 13, 48, 15, 33, 9, 21, 40, 17, 39, 43, 24, 21, 15, 19, 46, 18, 67, 44, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 175, 16, 3, 50, 6, 4, 4, 18, 25, 4, 29, 17, 18, 17, 11, 11, 11, 114, 11, 11, 4, 16, 98, 7, 21, 12, 11, 28, 21, 11, 11, 3, 4, 3, 6, 4, 4, 3, 10, 6, 6, 4, 4, 13, 5, 7, 4, 8, 23, 7, 86, 8, 7, 17, 17, 5, 4, 6, 8, 11, 6, 8, 9, 5, 4, 6, 5, 9, 47, 7, 4, 6, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [6, 18, 35, 4, 23, 17, 17, 16, 14, 37, 23, 22, 23, 12, 22, 15, 23, 18, 25, 39, 16, 22, 19, 27, 24, 22, 24, 11, 11, 17, 16, 11, 11, 11, 16, 28, 32, 6, 13, 15, 17, 19, 17, 23, 26, 13, 14, 19, 12, 12, 18, 27, 11, 21, 18, 11, 32, 29, 30, 24, 11, 11, 178, 23, 24, 20, 24, 15, 17, 6, 29, 17, 28, 23, 20, 15, 19, 17, 23, 19, 21, 24, 25, 26, 19, 18, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 3, 12, 3, 8, 6, 9, 17, 32, 20, 29, 27, 5, 22, 20, 30, 5, 10, 19, 16, 5, 13, 4, 19, 4, 15, 35, 29, 21, 20, 4, 11, 17, 17, 5, 5, 9, 3, 42, 34, 29, 3, 21, 14, 28, 33, 17, 13, 25, 18, 16, 13, 32, 19, 8, 14, 11, 4, 20, 20, 7, 16, 20, 28, 14, 14, 11, 9, 12, 17, 4, 34, 26, 12, 21, 19, 5, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [19, 31, 31, 3, 5, 12, 15, 31, 8, 9, 11, 14, 21, 7, 4, 10, 11, 7, 13, 9, 11, 13, 23, 12, 19, 28, 10, 28, 174, 10, 28, 4, 29, 32, 14, 14, 195, 10, 12, 61, 15, 11, 9, 5, 27, 11, 6, 11, 5, 22, 4, 4, 12, 177, 4, 35, 9, 4, 33, 5, 28, 11, 11, 5, 31, 26, 32, 8, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [10, 3, 7, 25, 4, 4, 20, 5, 4, 8, 7, 20, 20, 12, 28, 6, 20, 20, 6, 184, 6, 5, 4, 11, 6, 8, 7, 7, 7, 23, 21, 41, 11, 5, 21, 4, 8, 8, 6, 22, 6, 30, 9, 17, 27, 24, 20, 9, 5, 4, 8, 16, 27, 53, 5, 13, 25, 5, 7, 31, 4, 9, 90, 63, 4, 40, 8, 28, 9, 24, 4, 9, 39, 41, 42, 9, 28]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [23, 4, 6, 12, 6, 55, 17, 31, 15, 3, 4, 28, 22, 24, 28, 72, 7, 29, 11, 3, 4, 8, 30, 4, 6, 15, 8, 25, 11, 8, 26, 38, 8, 5, 32, 22, 28, 4, 5, 7, 18, 8, 18, 4, 6, 4, 23, 6, 9, 13, 5, 41, 19, 62, 78, 26, 13, 6, 28, 39, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [6, 10, 3, 4, 7, 5, 23, 10, 9, 9, 21, 3, 4, 5, 10, 16, 20, 4, 16, 20, 20, 3, 11, 4, 4, 6, 4, 5, 33, 21, 10, 22, 10, 21, 31, 10, 7, 4, 4, 15, 5, 8, 27, 27, 7, 11, 4, 10, 6, 15, 11, 17, 3, 15, 5, 10, 7, 26, 28, 12, 23, 4, 5, 5, 10, 19, 10, 9, 18, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [28, 11, 8, 18, 8, 3, 19, 20, 20, 18, 18, 27, 20, 20, 23, 23, 8, 16, 27, 20, 30, 16, 17, 27, 12, 21, 21, 11, 28, 11, 38, 12, 9, 13, 9, 25, 17, 22, 9, 24, 30, 25, 14, 22, 13, 17, 7, 38, 8, 29, 16, 8, 164, 11, 27, 7, 24, 17, 10, 19, 12, 17, 19, 9, 8, 11, 11, 7, 10, 16, 7, 20, 7, 8, 30, 6, 9, 17, 12, 11, 9, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 15, 4, 17, 10, 5, 4, 37, 31, 37, 4, 37, 21, 3, 4, 5, 5, 8, 11, 13, 4, 56, 21, 4, 22, 13, 3, 7, 4, 5, 3, 4, 152, 21, 32, 4, 5, 6, 33, 56, 4, 16, 18, 60, 54, 56, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [36, 7, 4, 31, 3, 16, 31, 25, 4, 4, 20, 4, 3, 15, 16, 26, 4, 10, 6, 5, 4, 25, 4, 28, 3, 4, 6, 11, 7, 10, 6, 41, 5, 8, 11, 4, 15, 31, 11, 4, 4, 4, 11, 17, 72, 9, 12, 4, 19, 6, 12, 7, 4, 28, 7, 4, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [15, 32, 4, 34, 4, 4, 5, 4, 46, 27, 30, 5, 32, 3, 27, 4, 35, 7, 4, 34, 75, 4, 3, 4, 29, 33, 5, 28, 6, 27, 7, 33, 28, 4, 30, 66, 14, 33, 29, 45, 4, 31, 27, 26, 53, 31, 5, 5, 17, 9, 4, 4, 204]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [3, 4, 15, 10, 11, 10, 10, 10, 10, 4, 9, 16, 16, 18, 20, 16, 16, 16, 13, 13, 13, 13, 13, 13, 13, 13, 14, 18, 13, 13, 18, 13, 3, 13, 5, 10, 7, 6, 4, 4, 9, 5, 4, 4, 8, 6, 40, 11, 8, 12, 8, 8, 8, 9, 8, 131, 13, 5, 6, 60, 21, 7, 10, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 5, 4, 20, 3, 6, 8, 11, 12, 16, 25, 16, 11, 11, 4, 5, 4, 15, 3, 8, 4, 4, 6, 17, 3, 8, 4, 16, 24, 16, 10, 9, 6, 24, 6, 4, 8, 6, 14, 4, 17, 17, 4, 12, 6, 6, 5, 16, 24, 16, 4, 4, 18, 4, 13, 4, 27, 17, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [16, 31, 18, 26, 19, 30, 38, 4, 24, 22, 24, 22, 20, 29, 23, 29, 7, 42, 23, 27, 35, 24, 27, 18, 23, 18, 23, 24, 21, 57, 14, 33, 26, 18, 26, 19, 23, 15, 20, 31, 22, 16, 28, 17, 35, 15, 23, 16, 26, 20, 28, 29, 29, 32, 42, 14, 17, 37, 31, 19, 29, 19, 20, 24, 15, 30, 30, 17, 31, 94, 20, 54, 16, 29, 53, 52, 58, 29, 30]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [21, 4, 4, 5, 13, 19, 10, 10, 24, 16, 31, 8, 18, 19, 5, 17, 12, 8, 12, 3, 19, 11, 8, 18, 8, 10, 30, 5, 19, 27, 60, 108, 6, 7, 10, 17, 19, 16, 63, 6, 11, 6, 38, 8, 22, 6, 49, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [7, 3, 10, 10, 9, 9, 24, 9, 14, 13, 6, 11, 20, 11, 22, 11, 11, 7, 30, 23, 8, 34, 12, 30, 24, 4, 8, 34, 35, 29, 31, 4, 15, 28, 32, 32, 5, 4, 10, 13, 9, 10, 7, 9, 7, 6, 7, 9, 10, 3, 9, 10, 23, 57, 10, 9, 4, 22, 13, 11, 23, 14, 20, 23, 13, 4, 5, 5, 22, 22, 12, 11, 14, 10, 11, 11, 10, 9, 10, 7, 11, 4, 4, 13, 9, 9, 10, 31, 9, 8, 11, 9, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [20, 10, 9, 9, 45, 9, 9, 4, 10, 12, 11, 13, 18, 11, 6, 11, 11, 25, 30, 5, 4, 6, 32, 28, 30, 5, 13, 10, 47, 31, 23, 28, 27, 5, 11, 30, 5, 94, 6, 11, 6, 6, 5, 10, 88, 7, 6, 6, 3, 9, 9, 25, 24, 7, 12, 5, 6, 23, 4, 26, 4, 4, 23, 23, 11, 5, 9, 11, 4, 9, 6, 11, 6, 14, 7, 4, 8, 7, 12, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [13, 4, 9, 10, 10, 9, 9, 5, 5, 10, 4, 9, 6, 6, 11, 11, 6, 11, 9, 11, 6, 4, 3, 10, 9, 10, 4, 4, 5, 20, 81, 6, 10, 4, 4, 4, 6, 10, 10, 6, 6, 6, 6, 29, 9, 6, 19, 5, 6, 10, 9, 19, 5, 8, 10, 9, 5, 19, 9, 4, 9, 10, 5, 3, 5, 9, 11, 4, 10, 10, 11, 18, 11, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [11, 13, 13, 17, 9, 12, 9, 10, 14, 10, 13, 11, 9, 11, 17, 11, 12, 13, 14, 12, 11, 10, 9, 11, 12, 10, 9, 11, 12, 10, 10, 13, 13, 10, 10, 16, 10, 13, 10, 12, 13, 12, 10, 10, 12, 11, 13, 13, 9, 14, 13, 13, 13, 13, 10, 11, 13, 9, 19, 13, 10, 10, 10, 10, 10, 10, 15, 3, 11, 20, 11, 9, 20, 13, 13, 10, 12, 10, 12, 10, 14, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [52, 10, 3, 22, 23, 9, 9, 6, 20, 10, 277, 11, 23, 11, 10, 14, 11, 4, 22, 17, 7, 11, 21, 10, 17, 4, 20, 21, 15, 21, 19, 41, 7, 13, 19, 24, 3, 11, 10, 32, 14, 12, 9, 7, 12, 4, 4, 6, 13, 6, 10, 7, 9, 20, 14, 9, 7, 12, 8, 24, 14, 10, 8, 7, 7, 12, 14, 5, 10, 56, 13, 10, 13, 20, 4, 38, 20, 4, 42, 4, 42, 40, 6, 13, 11, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [30, 19, 9, 10, 18, 9, 9, 20, 21, 16, 11, 11, 29, 11, 16, 41, 11, 19, 21, 29, 10, 19, 74, 34, 21, 10, 10, 19, 18, 23, 26, 30, 32, 63, 27, 45, 16, 21, 37, 18, 10, 34, 29, 10, 12, 9, 22, 17, 11, 28, 19, 11, 10, 23, 17, 20, 34, 16, 31, 23, 37, 23, 21, 18, 20, 10, 20, 16, 16, 31, 24, 19, 32, 118, 10, 10, 13, 18, 19, 36, 55, 10, 35, 21, 14, 20, 52, 18, 53, 54, 18, 24, 10, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = WARNING: Dual bound 0.982395 is smaller than the objective of the primal solution 0.982396. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[20, 14, 11, 9, 9, 12, 10, 16, 10, 9, 22, 11, 11, 6, 11, 23, 11, 18, 17, 17, 17, 17, 11, 10, 19, 14, 14, 17, 10, 10, 17, 17, 7, 17, 31, 9, 12, 19, 15, 9, 19, 17, 9, 17, 12, 11, 158, 10, 21, 17, 10, 12, 18, 23, 9, 6, 10, 23, 16, 18, 11, 19, 7, 14, 17, 19, 10, 17, 17, 23, 17, 19, 10, 16, 18, 18, 15, 9, 11]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [36, 17, 25, 22, 22, 22, 29, 29, 21, 22, 17, 22, 11, 4, 11, 11, 11, 11, 17, 25, 27, 4, 25, 30, 4, 25, 17, 19, 32, 30, 23, 16, 32, 32, 31, 23, 3, 103, 25, 20, 17, 23, 4, 18, 32, 24, 23, 16, 20, 23, 29, 33, 24, 25, 26, 14, 9, 23, 23, 18, 28, 17, 16, 78, 18, 30, 38, 31, 24, 29, 15, 20, 37, 23, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [11, 13, 8, 17, 10, 9, 17, 9, 12, 18, 10, 13, 10, 9, 22, 22, 24, 19, 13, 10, 27, 22, 22, 17, 10, 56, 10, 39, 10, 10, 17, 12, 11, 17, 9, 14, 9, 12, 142, 10, 10, 9, 11, 10, 7, 9, 31, 7, 9, 8, 18, 9, 11, 7, 10, 10, 17, 17, 17, 10, 10, 17, 10, 21, 11, 9, 8, 16, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [4, 13, 32, 30, 43, 30, 4, 30, 51, 11, 4, 41, 39, 4, 40, 4, 4, 45, 41, 43, 43, 37, 40, 39, 7, 143, 42, 43, 5, 42, 88, 15, 5, 5, 11, 5, 17, 8, 5, 8, 8, 35, 38, 36, 36, 8, 40, 14, 29, 110, 38, 5, 15, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [11, 31, 26, 36, 16, 16, 16, 16, 16, 16, 17, 20, 19, 27, 40, 16, 36, 20, 17, 17, 31, 16, 48, 28, 17, 31, 16, 8, 38, 22, 17, 23, 24, 30, 32, 20, 32, 17, 18, 49, 12, 46, 46, 31, 16, 16, 21, 18, 16, 18, 17, 17, 33, 17, 17, 33, 34, 16, 17, 29, 17, 17, 20, 21, 36, 18, 26, 13, 21, 33, 17, 8, 4, 20, 26, 26, 18, 11, 25, 17, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [4, 14, 11, 5, 7, 8, 5, 8, 6, 7, 7, 10, 5, 6, 4, 6, 7, 7, 5, 8, 6, 7, 7, 8, 11, 7, 9, 5, 8, 5, 9, 5, 6, 5, 11, 8, 8, 4, 7, 123, 7, 7, 7, 9, 7, 7, 5, 7, 7, 9, 5, 9, 8, 21, 8, 6, 3, 6, 6, 9, 10, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 21, 13, 12, 62, 12, 11, 14, 11, 11, 14, 16, 14, 14, 15, 13, 14, 14, 13, 17, 13, 13, 12, 13, 13, 14, 13, 15, 12, 16, 13, 14, 13, 14, 15, 14, 21, 14, 12, 13, 11, 14, 14, 14, 12, 13, 13, 16, 12, 12, 9, 13, 14, 13, 13, 13, 14, 9, 16, 14, 12, 14, 12, 20, 16, 12, 14, 15, 14, 12, 12, 13, 88, 28, 14, 13, 14, 14, 13, 22, 13, 14, 15, 12, 24, 14, 13, 4, 13, 13, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 8, 7, 5, 4, 7, 7, 8, 9, 13, 10, 10, 6, 21, 9, 10, 8, 11, 17, 11, 19, 8, 17, 8, 6, 5, 6, 12, 7, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [8, 8, 7, 10, 10, 7, 14, 7, 9, 11, 11, 11, 9, 8, 11, 10, 15, 10, 17, 10, 11, 12, 15, 8, 11, 10, 7, 14, 15, 14, 10, 8, 9, 27, 10, 9, 12, 7, 119, 9, 7, 11, 8, 6, 23, 14, 9, 120, 8, 8, 8, 10, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [7, 18, 28, 22, 21, 25, 22, 25, 31, 26, 21, 24, 23, 22, 26, 19, 24, 24, 23, 37, 18, 22, 16, 36, 34, 23, 18, 26, 23, 24, 24, 39, 34, 31, 22, 23, 18, 21, 39, 43, 27, 21, 29, 22, 20, 34, 23, 35, 26, 17, 29, 34, 18, 17, 24, 36, 31, 21, 21, 14, 28, 20, 18, 13, 21, 16, 35, 17, 15, 14, 20, 32, 29, 26, 18, 19, 28, 32, 34, 23, 18, 18, 21, 25, 18, 17, 25, 20, 28, 130, 17, 36, 26, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 5, 4, 5, 4, 12, 4, 8, 7, 5, 5, 5, 39, 10, 5, 4, 7, 5, 4, 8, 6, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [36, 40, 19, 8, 8, 8, 8, 31, 10, 8, 7, 19, 32, 18, 13, 22, 5, 37, 16, 12, 12, 37, 8, 45, 13, 40, 75, 29, 33, 38, 72, 36, 26, 21, 12, 31, 10, 8, 40, 31, 9, 15, 26, 32, 44, 86, 25, 33, 28, 20, 33, 36, 17, 31, 40, 41, 30, 30, 22, 16, 37, 34, 53, 6, 41, 25, 39, 36, 40, 16, 11, 10, 67, 8, 26, 38, 64, 75, 70, 27]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [7, 27, 30, 21, 15, 28, 17, 19, 27, 3, 16, 23, 27, 19, 23, 28, 28, 20, 42, 22, 19, 40, 19, 26, 25, 23, 22, 23, 28, 24, 27, 29, 202, 20, 15, 18, 29, 26, 22, 21, 16, 19, 22, 29, 29, 17, 19, 56, 28, 30, 23, 20, 16, 32, 14, 15, 14, 29, 18, 15, 20, 16, 36, 23, 17, 112, 30, 22, 15, 16, 21, 20, 22, 27, 17, 35, 39, 22, 28, 22, 27, 23, 22, 19, 21, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [22, 35, 28, 16, 17, 15, 18, 18, 44, 34, 19, 33, 34, 14, 24, 21, 42, 38, 23, 20, 31, 41, 38, 19, 28, 18, 30, 39, 38, 30, 21, 31, 21, 36, 38, 23, 26, 26, 42, 22, 19, 19, 35, 17, 46, 22, 23, 31, 20, 18, 24, 17, 24, 21, 21, 16, 23, 30, 22, 21, 23, 30, 115, 172, 32, 23, 17, 23, 23, 21, 20, 21, 17, 17, 20, 27, 25, 21, 28, 16, 28, 20, 23, 206, 18, 34, 17, 19, 30, 141, 22, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [23, 29, 18, 17, 18, 27, 18, 16, 16, 19, 21, 19, 17, 21, 25, 29, 11, 27, 33, 24, 27, 27, 18, 68, 27, 31, 29, 15, 21, 16, 19, 30, 28, 20, 26, 19, 17, 19, 27, 28, 27, 29, 28, 27, 17, 16, 158, 19, 19, 18, 19, 21, 30, 16, 18, 23, 19, 20, 19, 19, 19, 19, 22, 19, 24, 24, 26, 25, 35, 22, 22, 20, 23, 20, 20, 23, 18, 17, 18, 17, 41, 27, 18, 21, 19, 18, 19, 24, 18, 160, 19, 7, 19, 20, 16]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 8, 7, 5, 4, 9, 4, 8, 8, 8, 10, 10, 35, 8, 5, 26, 6, 22, 11, 8, 15, 9, 24, 8, 8, 70, 8, 9, 7, 5, 8, 8, 20, 66, 13, 10, 11, 9, 9, 25, 11, 15, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [19, 6, 17, 17, 16, 23, 16, 16, 5, 4, 10, 4, 19, 18, 18, 18, 8, 5, 18, 18, 9, 14, 16, 20, 6, 7, 18, 5, 18, 24, 6, 18, 18, 7, 17, 5, 7, 11, 18, 14, 7, 18, 19, 19, 18, 30, 18, 7, 19, 23, 9, 19, 18, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [26, 5, 6, 21, 6, 4, 9, 4, 5, 6, 5, 12, 18, 6, 4, 25, 29, 31, 13, 5, 5, 7, 29, 31, 4, 6, 4, 5, 30, 29, 11, 4, 29, 27, 5, 5, 12, 4, 4, 119, 104, 5, 7, 22, 28, 4, 9, 5, 21, 18, 12, 6, 19, 19, 5, 26, 4, 19, 24, 5, 8, 18, 7, 92, 4, 5, 6, 5, 15, 9, 6, 6, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [5, 28, 18, 26, 33, 24, 22, 17, 18, 17, 29, 18, 25, 27, 30, 30, 25, 32, 30, 20, 35, 25, 20, 25, 23, 35, 35, 25, 22, 23, 19, 28, 24, 33, 20, 35, 21, 25, 36, 17, 18, 21, 52, 22, 18, 33, 29, 58, 22, 21, 31, 32, 29, 19, 21, 24, 186, 22, 20, 24, 149, 20, 30, 24, 22, 22, 23, 25, 23, 19, 28, 28, 43, 17, 20, 28, 23, 24, 22, 13, 32, 19, 18, 35, 24, 25, 32]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [14, 3, 7, 4, 7, 4, 8, 9, 4, 6, 6, 4, 6, 9, 6, 6, 4, 130, 6, 4, 5, 9, 5, 6, 6, 6, 7, 6, 3, 8, 95, 8, 7, 7, 6, 6, 4, 7, 7, 6, 8, 6, 5, 10, 5, 13, 4, 6, 18, 6, 7, 5, 5, 5, 17, 5, 12, 4, 5, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 107, 5, 5, 8, 12, 13, 8, 12, 5, 6, 5, 227, 25, 92, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [9, 3, 23, 21, 22, 16, 17, 20, 19, 8, 16, 6, 21, 19, 6, 13, 21, 5, 5, 10, 7, 7, 8, 24, 10, 5, 30, 23, 5, 18, 6, 14, 11, 7, 15, 4, 6, 4, 11, 19, 4, 27, 6, 6, 21, 9, 5, 5, 5, 6, 15, 18, 6, 7, 9, 19, 5, 8, 27, 7, 36, 7, 24, 6, 9, 5, 13, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [26, 29, 4, 17, 4, 15, 17, 17, 16, 6, 15, 11, 7, 23, 6, 29, 4, 16, 20, 5, 4, 5, 6, 19, 25, 16, 18, 34, 17, 6, 18, 5, 6, 28, 29, 4, 25, 4, 26, 20, 5, 5, 19, 6, 17, 27, 22, 24, 16, 27, 14, 24, 16, 5, 23, 4, 23, 24, 19, 16, 7, 35, 24, 23, 6, 24, 5, 21, 18, 19, 20, 18, 8, 20, 19, 16, 15, 18, 5, 36, 48]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [12, 12, 9, 12, 21, 14, 12, 14, 12, 13, 11, 12, 14, 14, 5, 10, 13, 14, 10, 14, 14, 10, 10, 13, 13, 12, 15, 15, 13, 8, 4, 12, 15, 39, 3, 9, 13, 13, 11, 9, 13, 12, 8, 18, 7, 23, 12, 10, 12, 34, 14, 22, 13, 14, 9, 11, 13, 11, 10, 4, 21, 25, 16, 30, 12, 17, 38, 14, 13, 14, 7, 4, 14, 11, 13, 13, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [25, 22, 7, 4, 13, 36, 3, 20, 19, 23, 16, 22, 28, 5, 12, 22, 22, 22, 15, 11, 15, 19, 13, 19, 6, 32, 15, 22, 12, 17, 22, 7, 12, 26, 31, 24, 13, 8, 15, 13, 23, 9, 6, 21, 6, 275, 25, 22, 3, 17, 13, 17, 23, 14, 17, 23, 25, 9, 25, 18, 18, 32, 6, 24, 4, 23, 15, 24, 23, 8, 20, 20, 24, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [7, 7, 11, 6, 23, 5, 24, 23, 24, 5, 5, 24, 5, 5, 87, 6, 6, 7, 6, 23, 4, 6, 5, 6, 4, 6, 5, 6, 25, 5, 5, 23, 21, 21, 5, 5, 5, 5, 5, 5, 8, 5, 7, 5, 7, 6, 31, 6, 7, 6, 99, 6, 5, 6, 7, 5, 5, 5, 6, 5, 7, 6, 4, 5, 5, 15, 4, 4, 5, 85, 5, 12, 6, 6, 14, 5, 5, 6, 5, 13, 6, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 7, 8, 8, 54, 437, 8, 4, 9, 4, 30, 33, 9, 18, 29, 46, 13, 35, 52, 5, 27, 18, 11, 7, 43, 19, 14, 26, 21, 8, 12, 4, 25, 18, 11, 7, 9, 11, 8, 18, 6, 12, 15, 109, 8, 13, 38, 26, 8, 25, 17, 19, 21, 22, 28, 15, 25, 25, 9, 37, 4, 8, 14, 7, 15, 6, 18, 14, 54, 59, 15, 13, 7, 10, 33, 16, 8, 9, 29, 5, 5, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [41, 19, 29, 27, 28, 38, 21, 25, 28, 24, 27, 38, 31, 25, 35, 26, 36, 38, 30, 19, 21, 36, 42, 30, 36, 31, 37, 33, 20, 44, 23, 40, 21, 25, 33, 29, 27, 41, 26, 75, 24, 29, 27, 26, 27, 33, 21, 28, 26, 28, 30, 30, 34, 26, 26, 32, 25, 36, 28, 45, 38, 28, 29, 43, 27, 28, 34, 28, 28, 28, 28, 55, 30, 28, 29, 28, 36, 28, 41, 168, 24, 22, 24, 25, 38, 22, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [17, 3, 5, 16, 4, 13, 5, 5, 4, 21, 13, 5, 4, 13, 5, 4, 21, 10, 4, 11, 5, 4, 13, 4, 5, 4, 15, 8, 4, 5, 25, 4, 8, 11, 4, 4, 4, 32, 5, 4, 16, 6, 5, 5, 8, 4, 11, 30, 6, 4, 28, 30, 16, 4, 21, 4, 10, 8, 10, 11, 6, 23, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [4, 5, 207, 5, 11, 5, 6, 18, 83, 81, 252, 7, 11, 5, 8, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 5, 3, 6, 5, 6, 4, 4, 7, 11, 23, 56, 8, 255, 14, 58, 7, 8, 8, 24, 189, 7, 6, 6, 7, 7, 16, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [8, 25, 16, 16, 26, 24, 22, 31, 37, 24, 23, 27, 15, 35, 24, 26, 20, 23, 31, 29, 23, 9, 24, 4, 24, 25, 22, 135, 51, 20, 22, 23, 4, 23, 24, 21, 23, 20, 23, 22, 4, 11, 23, 21, 5, 21, 22, 21, 34, 5, 26, 28, 28, 32, 20, 21, 22, 6, 23, 26, 32, 48, 27, 23, 25, 26, 50, 20, 20, 22, 53, 28, 50, 49, 22, 25, 28, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [10, 17, 5, 10, 24, 16, 4, 8, 5, 23, 17, 16, 10, 7, 109, 10, 9, 33, 6, 32, 32, 12, 8, 17, 9, 31, 7, 9, 12, 11, 18, 12, 9, 16, 7, 236, 6, 15, 15, 8, 7, 6, 20, 22, 22, 6, 6, 7, 23, 7, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [4, 7, 18, 8, 8, 22, 24, 8, 15, 8, 34, 16, 34, 28, 8, 22, 25, 7, 35, 25, 26, 8, 8, 19, 23, 23, 7, 22, 8, 22, 12, 32, 28, 21, 22, 24, 26, 20, 8, 8, 17, 6, 17, 16, 18, 21, 44, 18, 8, 4, 11, 9, 10, 8, 19, 34, 24, 16, 11, 23, 53, 21, 23, 7, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [9, 9, 8, 10, 11, 10, 6, 5, 19, 11, 83, 9, 12, 9, 4, 9, 19, 15, 17, 10, 5, 14, 10, 228, 42, 10, 14, 15, 15, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [20, 25, 19, 19, 34, 20, 7, 21, 19, 14, 19, 8, 152, 22, 20, 38, 20, 28, 22, 21, 20, 26, 31, 25, 20, 20, 37, 40, 27, 28, 7, 20, 23, 20, 25, 26, 257, 21, 21, 20, 22, 25, 25, 24, 8, 21, 25, 25, 21, 20, 24, 20, 12, 19, 8, 25, 25, 27, 26, 21, 28, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 5, 20, 5, 4, 4, 4, 4, 22, 54, 80, 4, 7, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [4, 15, 4, 5, 4, 4, 4, 9, 4, 5, 5, 43, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [27, 20, 7, 27, 25, 19, 19, 19, 16, 24, 21, 36, 3, 20, 26, 28, 25, 16, 9, 23, 20, 20, 26, 8, 6, 18, 32, 35, 33, 25, 28, 23, 17, 4, 25, 30, 20, 28, 16, 21, 20, 30, 21, 16, 30, 28, 20, 21, 20, 14, 14, 26, 28, 20, 20, 14, 20, 26, 29, 19, 88, 22, 4, 30, 20, 20, 20, 56, 8, 18, 42, 36, 19, 30, 20]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [16, 36, 39, 17, 18, 22, 41, 27, 21, 19, 14, 28, 16, 23, 33, 33, 12, 12, 28, 12, 22, 13, 12, 19, 26, 33, 14, 21, 40, 25, 20, 35, 41, 39, 29, 28, 33, 38, 29, 47, 44, 39, 55, 46, 33, 25, 36, 43, 29, 49, 21, 29, 40, 16, 28, 33, 35, 41, 41, 25, 31, 24, 27, 26, 39, 29, 42, 19, 44, 32, 34, 32, 45, 22, 8, 42, 34, 39, 49, 25, 37, 19, 34, 26, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [26, 2, 18, 20, 17, 17, 16, 3, 35, 19, 29, 16, 21, 31, 31, 16, 23, 3, 26, 3, 20, 4, 22, 17, 26, 21, 17, 20, 22, 21, 22, 20, 21, 20, 22, 20, 18, 27, 17, 36, 114, 37, 18, 31, 53, 19, 21, 310, 19, 20, 17, 30, 16, 21, 23, 19, 20, 18, 19, 19, 24, 24, 28, 24, 28, 21, 21, 19, 19, 20, 27, 17, 20, 31, 18, 19, 13, 23, 29, 15, 18, 3, 18, 18, 4, 21, 19, 22, 21]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [3, 14, 24, 25, 4, 63, 16, 25, 16, 53, 27, 5, 15, 76, 15, 217, 15, 17, 33, 5, 26, 16, 6, 15, 15, 12, 5, 35, 25, 27, 28, 6, 25, 26, 82, 26, 27, 166, 17, 27, 26, 15, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 26, 7, 28, 10, 5, 10, 24, 10, 13, 24, 15, 32, 23, 13, 28, 31, 23, 12, 14, 4, 28, 14, 30, 23, 11, 11, 12, 25, 14, 10, 8, 11, 16, 8, 10, 189, 13, 30, 11, 12, 13, 11, 12, 26, 5, 30, 11, 24, 11, 5, 10, 12, 25, 27, 28, 11, 19, 16, 9, 18, 29, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [5, 4, 21, 21, 21, 24, 22, 21, 34, 4, 22, 25, 19, 20, 25, 18, 21, 12, 12, 8, 28, 33, 12, 23, 36, 36, 15, 6, 21, 11, 28, 30, 67, 32, 20, 36, 92, 4, 36, 4, 26, 21, 31, 5, 38, 22, 17, 21, 25, 21, 28, 21, 6, 46, 25, 20, 19, 9, 17, 43, 60, 34, 5, 10, 37, 44, 28, 5, 140, 18, 17, 34, 33, 30, 18, 18, 10, 132, 23, 52, 21, 34, 52]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [59, 24, 9, 23, 9, 19, 43, 11, 49, 26, 22, 24, 11, 10, 24, 11, 19, 28, 28, 19, 22, 35, 18, 27, 24, 10, 23, 26, 18, 24, 19, 18, 27, 10, 32, 36, 10, 19, 10, 17, 17, 22, 13, 36, 30, 19, 17, 24, 18, 16, 27, 19, 10, 19, 9, 14, 14, 29, 15, 24, 18, 16, 29, 17, 58, 14, 27, 39, 19, 28, 21, 35, 22, 45, 28, 13, 33, 10, 10, 11, 22, 35, 31, 16, 17]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [2, 24, 31, 43, 24, 47, 40, 34, 46, 37, 32, 11, 19, 23, 39, 25, 35, 12, 40, 11, 33, 14, 30, 39, 46, 32, 24, 16, 53, 22, 19, 33, 9, 28, 11, 21, 27, 17, 46, 105, 25, 32, 30, 45, 32, 35, 30, 29, 20, 36, 14, 6, 26, 19, 52, 23, 62, 49, 20, 89, 16, 24, 26, 32, 29, 39, 33, 23, 26, 41, 32, 23, 53, 23, 39, 14, 32, 47, 5, 24, 43, 14, 20, 40, 32, 15, 34, 37, 28, 21, 35]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [18, 39, 8, 21, 9, 8, 18, 8, 35, 30, 11, 25, 18, 8, 8, 23, 16, 13, 13, 16, 16, 20, 9, 13, 13, 13, 16, 8, 14, 27, 11, 11, 8, 21, 13, 10, 13, 32, 12, 10, 18, 19, 26, 30, 21, 17, 23, 13, 18, 18, 38, 18, 13, 25, 16, 20, 16, 10, 21, 22, 21, 12, 10, 20, 24, 11, 39, 24, 25, 18, 17, 36, 36, 11, 10, 25, 12, 24, 13, 19, 14, 25]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [31, 8, 8, 34, 33, 19, 8, 22, 29, 13, 27, 23, 29, 23, 20, 33, 13, 36, 26, 15, 19, 14, 19, 26, 34, 13, 16, 23, 13, 31, 62, 10, 16, 12, 32, 17, 20, 11, 8, 35, 25, 19, 24, 20, 18, 26, 28, 16, 30, 29, 32, 16, 24, 24, 21, 29, 18, 167, 28, 22, 17, 18, 18, 24, 21, 46, 17, 40, 19, 16, 19, 22, 31, 11, 15, 62, 70, 16, 41, 14, 11, 61, 19, 62, 63, 21, 15, 19, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 4, 6, 6, 60, 4, 12, 8, 6, 3, 115, 31, 119, 5, 5, 14, 5, 10, 10, 9, 6, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [23, 4, 5, 16, 74, 24, 6, 18, 24, 24, 23, 28, 16, 5, 18, 17, 5, 25, 71, 5, 64, 42, 8, 6, 6, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [10, 10, 11, 8, 8, 18, 9, 9, 9, 8, 10, 11, 8, 9, 19, 8, 11, 9, 14, 9, 310, 12, 7, 30, 9, 10, 12, 11, 203, 10, 29, 12, 9, 14, 7, 7, 10, 15, 262, 12, 10, 178]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [26, 36, 25, 19, 19, 7, 19, 8, 28, 8, 12, 16, 16, 17, 18, 22, 16, 16, 16, 34, 30, 16, 12, 23, 24, 22, 22, 25, 28, 29, 26, 23, 25, 22, 24, 24, 29, 24, 27, 25, 24, 31, 88, 24, 28, 27, 13, 12, 10, 35, 26, 21, 22, 26, 27, 33, 22, 31]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 8, 5, 9, 4, 8, 9, 76, 10, 10, 239, 7, 36, 4, 4, 8, 6, 19, 12, 8, 7, 10, 15, 110, 8, 8, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [5, 28, 18, 6, 23, 22, 24, 24, 4, 26, 4, 24, 4, 27, 27, 23, 16, 4, 21, 14, 23, 21, 6, 23, 84, 6, 21, 6, 11, 21, 5, 4, 17, 21, 5, 9, 5, 23, 3, 6, 26, 21, 13, 5, 5, 4, 4, 14, 4, 4, 7, 27, 23, 4, 3, 6, 36, 28, 26, 25, 13, 14, 11, 32, 43, 7, 9, 5, 20, 26, 8, 9, 14, 21, 19, 4, 4, 17, 21, 27, 26, 4, 49]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [22, 18, 18, 4, 15, 4, 18, 17, 21, 22, 26, 31, 35, 34, 16, 12, 24, 29, 28, 24, 19, 24, 19, 26, 13, 21, 58, 27, 11, 13, 5, 15, 22, 26, 15, 18, 23, 7, 19, 18, 5, 33, 80, 25, 17, 26, 15, 11, 15, 28, 24, 21, 39, 14, 31, 27, 26, 29, 27, 22, 32, 25, 26, 32, 27, 21, 26, 18, 33]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [35, 35, 38, 37, 36, 35, 34, 35, 40, 36, 44, 46, 37, 34, 33, 34, 39, 38, 35, 35, 36, 36, 36, 35, 38, 35, 44, 35, 37, 35, 35, 37, 36, 40, 34, 36, 37, 51, 35, 12, 47, 35, 37, 38, 35, 35, 38, 44, 36, 129, 41, 35, 38, 35, 38, 35, 37, 38, 7, 13, 35, 37, 39, 38, 44, 38, 37, 36, 39, 38, 72, 37]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [13, 7, 8, 8, 12, 8, 9, 4, 9, 9, 8, 21, 10, 14, 10, 10, 10, 8, 10, 8, 8, 8, 10, 14, 10, 10, 7, 9, 32, 9, 11, 8, 136, 11, 10, 9, 9, 13, 8, 20, 9, 10, 88, 12, 9, 11, 7, 10, 10, 10, 8, 8, 204]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [6, 12, 11, 10, 11, 10, 12, 12, 12, 10, 11, 10, 14, 11, 11, 10, 76, 17, 11, 20, 11, 11, 12, 43, 11, 11, 27, 15, 15, 21, 40, 10, 14, 15, 13, 13, 12, 12, 14, 11, 10, 206, 10, 35, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [34, 20, 16, 16, 18, 16, 16, 16, 16, 19, 20, 17, 19, 19, 27, 17, 21, 16, 55, 20, 20, 18, 19, 19, 19, 17, 19, 18, 18, 19, 15, 19, 17, 20, 19, 25, 21, 17, 16, 20, 19, 17, 30, 23, 29, 16, 19, 19, 19, 19, 18, 18, 18, 23, 14, 19, 20, 20, 12, 16, 19, 87, 24, 20, 13, 20, 19, 20, 40, 12, 13, 19, 19, 30, 18, 19, 39, 21, 18, 18, 20, 21, 19, 18, 19, 17, 23, 20, 18, 19, 18, 18]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [11, 24, 59, 32, 25, 35, 33, 32, 28, 26, 29, 16, 20, 41, 33, 34, 28, 209, 4, 34, 47, 28, 17, 28, 23, 28, 24, 24, 20, 32, 23, 30, 28, 4, 20, 33, 36, 30, 27, 12, 30, 25, 13, 31, 161, 30, 5, 32, 26, 22, 36, 23, 50, 43, 13, 23, 21, 45, 25, 25, 26, 28, 21, 25, 32, 125, 32, 30, 22, 33, 38, 21, 36, 25, 25, 50, 29, 31, 22, 38, 22, 20, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [12, 7, 8, 5, 5, 17, 7, 4, 7, 7, 5, 12, 6, 4, 6, 8, 8, 9, 17, 7, 6, 6, 6, 7, 6, 7, 6, 5, 4, 8, 7, 7, 5, 7, 4, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 8, 7, 7, 8, 7, 6, 7, 7, 10, 12, 6, 7, 8, 5, 6, 8, 4, 5, 7, 8, 6, 7, 7, 6, 5, 7, 6, 18, 8, 5, 7, 7, 7, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 9, 10, 4, 6, 11, 5, 31, 6, 8, 9, 8, 9, 3, 12, 5, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 152
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823963461343013
thermo_feasible = true
