┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECNA114_1301
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECNA114_1301
----------------------------------
number of metabolites : 1927
number of reactions : 2718
number of genes : 1301

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 82
max_cuts = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2718 flux variables and 5045 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [5, 2, 3, 16, 16, 18, 11, 11, 11, 47, 16, 15, 11, 13, 17, 2, 16, 16, 13, 13, 14, 13, 14, 13, 13, 6, 2, 11, 10, 9, 9, 9, 53, 2, 3, 13, 2, 2, 14, 49, 3, 2]
length(C_list) = 42
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 3, 3, 5, 4, 2, 3, 3, 3, 3, 3, 2, 5, 4, 5, 110, 2]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 3, 2, 2, 2, 2, 5, 2, 3, 3, 4, 4, 3, 10, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 2, 7, 3, 10, 93, 148, 4, 4, 3, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 5, 20, 3, 2, 2, 4, 3, 2, 2, 3, 2, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 4, 4, 3, 8, 9, 12, 10, 7, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 2, 3, 4, 4, 3, 3, 4, 8, 4, 5, 4, 4, 4, 4, 4, 14, 4, 7, 4, 4, 4, 3, 4, 3, 4, 5, 5, 4, 8]
length(C_list) = 32
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 6, 4, 4, 4, 5, 3, 6, 4, 4, 4, 4, 6, 23, 5, 37, 9, 5, 5, 5, 5, 5, 8, 4]
length(C_list) = 26
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 7, 5, 2, 7, 5, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 7, 36, 6, 4, 4, 57, 10, 17, 12]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 4, 4, 16, 5, 4, 7, 16]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 30, 6, 84, 6, 6, 190]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 7, 3, 11, 4, 10]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 7, 5, 17, 5, 11, 5, 6, 5, 6, 6, 4, 4, 6, 4, 8, 4, 4, 5, 8, 5, 8, 3, 4, 7, 6, 5, 4, 8, 46, 6, 4, 5, 6]
length(C_list) = 36
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 5, 12, 9, 7, 3, 8, 5, 10, 8, 8, 18, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 6, 6, 11, 153, 6, 3, 21, 7, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 6]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 3, 112, 5, 6, 7, 23, 6]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 19
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824785102726507
thermo_feasible = true
