┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJO1366
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJO1366
----------------------------------
number of metabolites : 1805
number of reactions : 2583
number of genes : 1367

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 129
max_cuts = 13
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2583 flux variables and 4836 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 4, 3, 3, 3, 2, 3, 101, 3, 13, 3, 6, 5, 2, 4, 8, 3, 2, 3, 4, 134, 4, 433, 23, 11, 5, 2, 28, 7, 3, 6]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 3, 5, 4, 4, 4, 4, 7, 5, 4, 3, 4, 4, 4, 6, 4, 5, 6, 49, 7, 6, 4, 3, 4, 77, 5, 135, 6, 4, 5, 5, 7, 7, 4, 29, 4, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 129, 3, 3, 4, 3, 3, 3, 4, 5, 4, 5, 4, 6, 5, 95, 62, 100, 12, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [3, 5, 2, 9, 173, 6, 8, 22, 8, 3, 3, 7, 6, 34, 7, 6, 7, 24, 8, 59, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 3, 3, 4, 5, 4, 7, 11, 4, 35, 4, 12, 5, 11, 28, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 7, 160, 50, 3, 3, 4, 5, 85, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 7, 2, 4, 5, 8, 8, 71, 5, 3, 3, 3, 214, 91, 4, 138, 37, 5, 163, 5, 96, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 82, 5, 4, 6, 4, 4, 3, 8, 6, 52, 4, 4, 78, 4, 5, 14, 6, 5, 4, 6, 9, 5, 5, 5, 5, 7, 9, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 7, 7, 4, 10, 5, 9, 9, 10, 8, 120, 27, 54, 6, 12, 13, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 9
termination = MathOptInterface.OPTIMAL
objective_value = 0.9823718127269812
thermo_feasible = true
