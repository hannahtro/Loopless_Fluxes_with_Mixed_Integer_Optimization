WARNING: Dual bound -0.982398 is larger than the objective of the primal solution -0.982416. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSbBS512_1146
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSbBS512_1146
----------------------------------
number of metabolites : 1910
number of reactions : 2591
number of genes : 1147

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 52
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2591 flux variables and 4791 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 16, 16, 17, 20, 17, 16, 16, 13, 13, 14, 22, 148, 13, 13, 11, 95, 13, 11, 11, 11, 14, 11, 13, 13, 14, 13, 15, 13, 11, 13, 15]
length(C_list) = 3
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 6, 9, 16, 16, 18, 17, 17, 16, 16, 13, 13, 15, 13, 18, 31, 13, 11, 11, 14, 11, 12, 15, 35, 13, 11, 18, 13, 14, 13, 14, 13, 95, 14, 13, 15]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 16, 16, 17, 16, 17, 16, 19, 16, 13, 16, 27, 14, 13, 13, 26, 11, 11, 14, 14, 14, 11, 11, 11, 172, 13, 14, 13, 14, 13, 11, 14, 13, 319]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 15, 15, 13, 13, 11, 12, 13, 11, 15, 11, 14, 11, 14, 13, 14, 13, 14, 13, 114, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [5, 2, 16, 16, 17, 17, 17, 16, 16, 14, 13, 14, 14, 14, 13, 13, 13, 11, 12, 13, 11, 11, 11, 76, 12, 14, 13, 14, 13, 15, 13, 11, 13, 14]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 16, 16, 17, 16, 116, 16, 19, 13, 13, 20, 13, 14, 13, 15, 21, 13, 14, 11, 12, 11, 13, 11, 13, 13, 14, 13, 28, 13, 11, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 16, 16, 17, 16, 17, 16, 18, 13, 13, 14, 13, 14, 13, 13, 134, 13, 11, 11, 11, 11, 13, 13, 14, 13, 14, 13, 11, 13, 115]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [3, 2, 5, 16, 16, 17, 16, 17, 16, 17, 13, 13, 14, 13, 14, 13, 13, 11, 13, 17, 11, 11, 11, 15, 14, 11, 48, 13, 14, 13, 15, 13, 11, 13, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 16, 16, 17, 16, 145, 16, 16, 114, 13, 14, 13, 14, 13, 13, 13, 11, 11, 11, 11, 11, 32, 11, 13, 13, 14, 13, 15, 13, 11, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 16, 16, 18, 19, 17, 17, 16, 13, 16, 15, 13, 14, 14, 16, 11, 197, 13, 15, 11, 11, 11, 13, 13, 12, 13, 13, 14, 13, 15, 13, 11, 13, 26]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 17, 17, 18, 17, 18, 17, 17, 15, 15, 15, 14, 15, 63, 14, 14, 11, 11, 14, 11, 11, 11, 14, 28, 11, 14, 14, 15, 14, 15, 14, 11, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [3, 18, 18, 18, 17, 18, 17, 17, 14, 14, 15, 15, 15, 15, 14, 11, 11, 14, 11, 11, 11, 14, 11, 14, 14, 15, 14, 15, 14, 11, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 17, 17, 18, 17, 108, 17, 20, 14, 14, 15, 14, 16, 15, 15, 11, 11, 11, 11, 11, 15, 14, 14, 11, 14, 14, 15, 14, 117, 14, 11, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 16, 16, 18, 16, 17, 16, 17, 13, 15, 14, 13, 83, 13, 13, 11, 11, 13, 19, 155, 11, 38, 13, 14, 11, 13, 13, 14, 14, 14, 131, 11, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 17, 16, 17, 16, 17, 23, 16, 13, 13, 15, 13, 14, 13, 13, 15, 12, 11, 22, 14, 11, 11, 12, 14, 21, 11, 13, 13, 14, 119, 14, 13, 11, 13, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 16, 258, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 11, 11, 11, 11, 11, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 18, 16, 17, 16, 17, 16, 16, 13, 13, 25, 13, 14, 13, 13, 11, 11, 14, 11, 11, 11, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [2, 6, 17, 16, 17, 16, 17, 16, 17, 13, 13, 15, 13, 14, 13, 13, 11, 13, 31, 11, 11, 11, 15, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 6, 12, 2, 16, 16, 17, 16, 19, 16, 16, 16, 13, 14, 40, 16, 13, 13, 13, 11, 11, 13, 11, 11, 11, 14, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [4, 6, 21, 16, 17, 17, 21, 16, 18, 13, 13, 15, 16, 14, 15, 13, 19, 11, 11, 14, 13, 13, 11, 11, 13, 11, 13, 13, 16, 13, 24, 17, 11, 13, 15, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 16, 16, 17, 16, 17, 17, 20, 13, 15, 14, 84, 14, 13, 13, 11, 11, 13, 13, 11, 11, 11, 14, 11, 13, 13, 14, 14, 26, 13, 11, 24, 19, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 11, 14, 21, 11, 11, 11, 15, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 16, 16, 17, 16, 18, 16, 16, 13, 13, 14, 18, 14, 13, 14, 11, 11, 16, 13, 13, 11, 11, 13, 11, 13, 13, 14, 26, 14, 13, 11, 13, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 16, 20, 17, 19, 17, 16, 16, 14, 14, 51, 13, 15, 13, 13, 13, 11, 11, 14, 15, 16, 11, 11, 12, 14, 11, 13, 13, 14, 13, 48, 13, 11, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [2, 6, 14, 7, 17, 18, 18, 17, 21, 17, 17, 14, 14, 15, 14, 15, 14, 14, 11, 11, 16, 11, 11, 11, 13, 14, 14, 15, 14, 15, 14, 11, 16, 16]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 16, 16, 17, 16, 17, 16, 16, 13, 16, 14, 13, 14, 13, 13, 11, 11, 13, 15, 11, 11, 11, 45, 21, 11, 13, 13, 16, 13, 15, 13, 11, 13, 14, 14]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 20, 16, 33, 16, 17, 16, 16, 13, 13, 14, 69, 15, 13, 13, 15, 11, 13, 12, 11, 14, 14, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [3, 16, 16, 17, 16, 17, 16, 16, 13, 13, 14, 13, 15, 13, 13, 17, 11, 11, 11, 11, 11, 14, 11, 13, 13, 14, 13, 14, 13, 11, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 16, 16, 17, 18, 21, 16, 17, 14, 13, 14, 14, 14, 36, 13, 13, 11, 11, 15, 15, 11, 11, 11, 16, 11, 14, 13, 14, 18, 14, 14, 11, 13, 14, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 16, 16, 17, 16, 18, 16, 16, 13, 13, 14, 13, 14, 13, 13, 14, 11, 11, 11, 13, 11, 14, 12, 13, 13, 14, 13, 97, 14, 11, 15, 15]
length(C_list) = 34
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 5, 5, 7, 2, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 4, 7, 7, 5, 10, 7, 2, 25, 2, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 6, 3, 4, 4, 3, 4, 7, 4, 12, 9, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [8, 6, 9, 12, 11, 9, 9, 9, 9, 9, 9, 20, 8, 9, 9, 10, 3, 9, 15, 6, 9, 11]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 2, 10, 10, 9, 8, 4, 8, 10, 10, 7, 9, 8, 7, 9, 8]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 2, 4, 6, 37]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [7, 7, 8, 15, 15, 7, 15, 9, 15, 15, 10, 10, 6, 7, 6, 10, 10, 8, 8, 9, 10, 8, 8, 8, 7, 8, 11, 10, 13, 10, 8, 8, 10, 10, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 2, 4, 3, 3, 3, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 7, 5, 5, 9, 4, 5, 6, 5, 8]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 41
termination = MathOptInterface.OPTIMAL
objective_value = 0.9828118678446147
thermo_feasible = true
