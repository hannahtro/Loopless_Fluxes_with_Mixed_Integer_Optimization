┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:504
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iRC1080
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iRC1080
----------------------------------
number of metabolites : 1706
number of reactions : 2191
number of genes : 1086

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 11
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2191 flux variables and 4310 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 3, 5, 5, 4, 2, 4, 9, 3, 3, 3]
length(C_list) = 11
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 5, 3, 5, 6, 6, 8, 3, 5, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [16, 3, 3, 4, 6, 3, 4, 4, 4, 3, 3, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 5, 5, 3, 3, 4, 4, 3, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 4, 3, 4, 4, 3, 3, 7, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 3, 4, 5, 4, 174, 4, 2, 3, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 3, 5, 5, 3, 5, 4, 5, 4, 3, 7, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [6, 2, 4, 5, 10, 4, 5, 5, 3, 3, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [4, 18, 10, 7, 138, 5, 4, 3, 5, 4, 5, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [11, 7, 4, 4, 5, 5, 4, 4, 5, 9, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 9, 3, 5, 4, 3, 3, 5, 5, 5, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 10, 4, 4, 3, 3, 10, 4, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 4, 13, 3, 4, 4, 4, 4, 5, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [10, 7, 3, 4, 3, 4, 4, 5, 4, 7, 3, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 3, 5, 3, 4, 4, 3, 4, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 6, 4, 4, 4, 4, 5, 6, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 16, 4, 4, 30, 5, 5, 3, 3, 4, 11, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 11, 5, 4, 5, 4, 5, 7, 4, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 4, 11, 5, 4, 4, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 13, 4, 3, 4, 5, 4, 6, 7, 4, 10]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 8, 5, 6, 3, 4, 4, 3, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 4, 6, 6, 6, 3, 7, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [5, 17, 3, 5, 8, 6, 3, 3, 4, 4, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 8, 4, 4, 8, 4, 4, 7, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [30, 6, 3, 3, 4, 7, 4, 5, 3, 4, 5, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 9, 4, 3, 3, 3, 10, 4, 7, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [5, 10, 5, 3, 4, 5, 3, 4, 5, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [4, 7, 93, 4, 21, 8, 12, 4, 4, 23, 5]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 11, 5, 9, 9, 4, 5, 4, 40, 8, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [3, 10, 7, 8, 3, 4, 7, 8, 3, 10, 5, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 5, 9, 3, 11, 7, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [3, 10, 8, 6, 8, 8, 3, 4, 8, 7, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 7, 7, 4, 5, 4, 4, 5, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 3, 4, 6, 3, 6, 3, 4, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 306, 5, 28, 7, 3, 10, 5]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [12, 6, 3, 4, 9, 3, 4, 13, 3, 11, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [19, 8, 13, 5, 8, 4, 4, 5, 6, 3, 3, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [13, 4, 5, 4, 3, 4, 5, 5, 4, 5, 271, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 5, 4, 3, 4, 4, 4, 3, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 4, 4, 5, 4, 11, 4, 4, 2, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 4, 4, 3, 4, 4, 3, 3, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [14, 8, 3, 3, 3, 5, 5, 3, 12, 4, 4, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [16, 13, 4, 3, 3, 3, 3, 3, 4, 3, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [14, 4, 3, 3, 4, 3, 6, 3, 4, 4, 3, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [17, 6, 3, 3, 10, 6, 3, 3, 3, 6, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [8, 15, 3, 3, 3, 3, 3, 3, 3, 3, 3]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [18, 4, 12, 5, 12, 3, 3, 4]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [6, 16, 22, 7, 20, 20, 7, 33, 4, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [16, 15, 7, 9, 8, 5, 3, 15, 4, 7]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [3, 8, 5, 27, 13, 35, 4, 5, 18, 14, 3, 34]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [55, 30, 14, 13, 16, 21, 18, 12, 18, 23, 8, 22]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [21, 5, 5, 25, 3, 3, 18, 20, 3, 18, 7, 13]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [8, 8, 25, 14, 17, 6, 12, 17, 5, 15, 4, 3]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [15, 9, 17, 25, 9, 4, 22, 12, 12, 36, 16, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [19, 26, 15, 29, 3, 13, 16, 15, 24, 31, 18, 12]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [3, 16, 4, 8, 5, 7, 8, 7, 10, 15]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [19, 19, 18, 29, 18, 22, 37, 66, 17, 19, 22, 37]
AssertionError("!(isempty(C_list_filtered))")
