┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI39_1322
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI39_1322
----------------------------------
number of metabolites : 1953
number of reactions : 2721
number of genes : 1321

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 54
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2721 flux variables and 5050 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [5, 3, 2, 3, 2, 11, 11, 114, 11, 11, 11, 17, 11, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 11, 14, 2, 41, 2, 10, 9, 2, 11, 9, 13]
length(C_list) = 8
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 37, 11, 11, 11, 11, 90, 20, 17, 11, 17, 18, 17, 18, 17, 36, 10, 11, 10, 10, 11, 2, 3, 6, 2, 11, 10, 8, 16, 17, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 8, 2, 6, 11, 52, 21, 247, 11, 11, 16, 11, 16, 17, 16, 18, 16, 16, 9, 9, 11, 9, 10, 2, 10, 9, 9, 9, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 7, 2, 3, 11, 11, 11, 11, 11, 15, 17, 13, 16, 17, 16, 17, 220, 16, 9, 9, 9, 9, 10, 4, 3, 3, 10, 9, 4, 9, 11, 140]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 6, 11, 11, 11, 13, 13, 24, 16, 12, 16, 22, 16, 17, 16, 16, 9, 9, 9, 9, 10, 6, 4, 5, 25, 9, 10, 9, 11, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 11, 11, 11, 11, 11, 11, 17, 11, 3, 17, 18, 17, 18, 17, 17, 10, 10, 10, 10, 11, 4, 6, 4, 2, 11, 10, 4, 10, 11, 14]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 11, 11, 11, 11, 11, 15, 16, 35, 6, 16, 18, 18, 353, 22, 16, 11, 9, 9, 10, 10, 3, 20, 6, 2, 10, 9, 9, 9, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 11, 11, 13, 12, 13, 12, 16, 11, 16, 17, 16, 17, 18, 16, 11, 12, 9, 9, 10, 3, 7, 8, 4, 10, 9, 4, 9, 9, 13]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 6, 2, 6, 6, 11, 11, 11, 11, 11, 16, 16, 11, 14, 16, 17, 17, 23, 16, 25, 9, 10, 9, 9, 10, 6, 43, 35, 6, 10, 9, 7, 9, 9, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [6, 8, 6, 3, 6, 11, 11, 18, 13, 11, 11, 16, 12, 16, 24, 16, 17, 16, 16, 9, 11, 12, 13, 10, 6, 46, 35, 8, 10, 9, 7, 9, 9, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 6, 5, 11, 11, 11, 11, 11, 11, 17, 11, 6, 18, 18, 17, 18, 17, 17, 10, 10, 10, 10, 11, 3, 7, 64, 11, 10, 10, 10, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [6, 6, 7, 4, 3, 8, 11, 11, 19, 11, 11, 13, 25, 127, 16, 17, 17, 17, 16, 18, 13, 9, 10, 9, 10, 401, 38, 35, 7, 10, 9, 6, 9, 9, 328]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [10, 6, 14, 11, 11, 18, 11, 11, 18, 11, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 10, 10, 57, 35, 3, 10, 9, 9, 9, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 5, 6, 11, 11, 11, 11, 11, 14, 16, 11, 11, 17, 17, 17, 17, 16, 17, 9, 12, 9, 9, 18, 11, 37, 35, 6, 10, 9, 9, 9, 13]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 11, 15, 11, 12, 11, 75, 17, 11, 6, 17, 18, 17, 18, 20, 19, 10, 10, 10, 10, 11, 4, 3, 4, 11, 10, 6, 10, 10, 14]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 11, 13, 11, 13, 11, 11, 16, 11, 6, 21, 17, 16, 17, 16, 16, 9, 9, 9, 9, 12, 9, 35, 38, 6, 10, 198, 9, 12, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [3, 6, 2, 11, 11, 11, 11, 12, 11, 16, 11, 129, 103, 16, 17, 16, 16, 9, 9, 9, 10, 10, 6, 35, 43, 3, 10, 9, 4, 9, 9, 29]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [9, 6, 7, 11, 11, 12, 11, 11, 11, 16, 11, 6, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 10, 7, 36, 35, 4, 10, 9, 7, 10, 9, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [4, 10, 11, 11, 11, 68, 11, 11, 16, 16, 16, 17, 16, 17, 16, 16, 9, 9, 9, 9, 10, 8, 34, 35, 6, 11, 9, 6, 59, 9, 13]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [14, 14, 14, 14, 6, 14, 14, 4, 14, 27, 28, 2, 5, 27, 27, 14, 14, 5, 3, 15, 5, 5, 5, 3, 15, 4, 4, 15, 14, 24]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 2, 12, 11, 11, 12, 58, 11, 16, 11, 3, 17, 17, 16, 17, 16, 16, 9, 9, 9, 9, 10, 7, 39, 35, 6, 10, 9, 6, 9, 9, 13]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [10, 4, 6, 9, 4, 4, 24, 7, 5, 4, 4, 15, 4, 4, 5, 8, 8, 8, 8, 5, 4, 6, 4, 5, 8, 4, 5, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 8, 14, 11, 11, 6, 11, 11, 17, 11, 6, 18, 18, 17, 18, 17, 17, 10, 10, 10, 11, 11, 6, 36, 39, 4, 11, 10, 6, 11, 10, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [2, 6, 6, 22, 12, 12, 12, 12, 12, 12, 123, 12, 17, 18, 17, 9, 17, 17, 10, 10, 10, 10, 11, 4, 37, 37, 6, 11, 10, 3, 10, 10, 14]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [7, 11, 11, 11, 16, 12, 11, 16, 20, 7, 16, 17, 16, 17, 16, 16, 9, 16, 9, 9, 27, 6, 35, 35, 11, 10, 9, 6, 9, 9, 13]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 5, 7, 2, 2, 190, 7, 4, 31, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [2, 2, 2]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 7, 2, 2, 3, 11]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [6, 3, 148, 4, 4, 8, 4, 7, 4, 39]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 5, 3, 4, 5, 6, 26]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 9, 4, 4, 4, 5, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [2, 3, 5, 4, 3]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 34
termination = MathOptInterface.OPTIMAL
objective_value = 0.9828410311403898
thermo_feasible = true
