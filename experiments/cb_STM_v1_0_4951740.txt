┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
STM_v1_0
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

STM_v1_0
----------------------------------
number of metabolites : 1802
number of reactions : 2545
number of genes : 1271

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 51
max_cuts = 13
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2545 flux variables and 4745 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 2, 2, 3, 3, 2, 3, 2, 4, 14, 4, 4, 16, 3, 5]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 4, 4, 3, 57, 5, 4, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 6, 5, 121, 4, 26, 8, 5, 6, 11, 62, 57, 7, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 3, 4, 4, 6, 12, 6, 6, 14, 2, 6, 149]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [4, 2, 3, 3, 4, 3, 8, 6, 4, 34]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 217, 7, 4, 17, 8, 5, 22, 159]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 4, 5, 5, 31, 3, 6, 14]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 5, 7, 12, 11, 7, 7, 8, 23, 28, 4, 22, 46, 23, 28, 34, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 8
termination = MathOptInterface.OPTIMAL
objective_value = 0.47783366076072253
thermo_feasible = true
