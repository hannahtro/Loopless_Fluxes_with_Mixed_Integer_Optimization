WARNING: Dual bound 0.48838 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488465. The solution might not be optimal.
WARNING: Dual bound 0.488378 is smaller than the objective of the primal solution 0.488453. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488424. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488437. The solution might not be optimal.
WARNING: Dual bound 0.48836 is smaller than the objective of the primal solution 0.488439. The solution might not be optimal.
WARNING: Dual bound 0.488403 is smaller than the objective of the primal solution 0.488465. The solution might not be optimal.
WARNING: Dual bound 0.48836 is smaller than the objective of the primal solution 0.488453. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488438. The solution might not be optimal.
WARNING: Dual bound 0.488426 is smaller than the objective of the primal solution 0.488449. The solution might not be optimal.
WARNING: Dual bound 0.488407 is smaller than the objective of the primal solution 0.488452. The solution might not be optimal.
WARNING: Dual bound 0.488395 is smaller than the objective of the primal solution 0.488439. The solution might not be optimal.
WARNING: Dual bound 0.48831 is smaller than the objective of the primal solution 0.488453. The solution might not be optimal.
WARNING: Dual bound 0.488421 is smaller than the objective of the primal solution 0.488464. The solution might not be optimal.
WARNING: Dual bound 0.488376 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488439. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488429 is smaller than the objective of the primal solution 0.488446. The solution might not be optimal.
WARNING: Dual bound 0.488371 is smaller than the objective of the primal solution 0.488445. The solution might not be optimal.
WARNING: Dual bound 0.488456 is smaller than the objective of the primal solution 0.488464. The solution might not be optimal.
WARNING: Dual bound 0.488404 is smaller than the objective of the primal solution 0.488427. The solution might not be optimal.
WARNING: Dual bound 0.48838 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.48837 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488355 is smaller than the objective of the primal solution 0.488416. The solution might not be optimal.
WARNING: Dual bound 0.48838 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.48843 is smaller than the objective of the primal solution 0.488457. The solution might not be optimal.
WARNING: Dual bound 0.488379 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488437 is smaller than the objective of the primal solution 0.488473. The solution might not be optimal.
WARNING: Dual bound 0.488446 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488429 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.488429 is smaller than the objective of the primal solution 0.488465. The solution might not be optimal.
WARNING: Dual bound 0.488437 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.488437 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.488437 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488371 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488404 is smaller than the objective of the primal solution 0.488475. The solution might not be optimal.
WARNING: Dual bound 0.48839 is smaller than the objective of the primal solution 0.488421. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488444 is smaller than the objective of the primal solution 0.488459. The solution might not be optimal.
WARNING: Dual bound 0.488416 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488443 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488394 is smaller than the objective of the primal solution 0.488408. The solution might not be optimal.
WARNING: Dual bound 0.488427 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488438 is smaller than the objective of the primal solution 0.488452. The solution might not be optimal.
WARNING: Dual bound 0.488424 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYS1720
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYS1720
----------------------------------
number of metabolites : 2436
number of reactions : 3357
number of genes : 1707

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 17
(indicator, big_m) = (false, true)
BIG M ADDED
model with 3357 flux variables and 6229 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 2, 2, 2, 4, 2, 2, 42, 2, 2, 3]
length(C_list) = 11
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 3, 2, 2, 4, 5, 5, 2, 3, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [4, 4, 2, 3, 10, 3, 2, 4, 2]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 4, 7, 6, 4, 8, 5, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 2, 7, 2, 2, 2, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 106]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 11]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [9, 11, 5, 126, 8, 6, 4, 8, 4, 12, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 3, 17, 4, 6, 5, 6, 3, 28]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 4, 6, 4, 8, 4, 4, 7, 4, 4, 4, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 6, 6, 4, 4, 4, 4, 5, 5, 4, 7, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 41, 6, 4, 4, 4, 4, 8, 6, 4, 6, 18]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [12, 12, 5, 4, 4, 6, 6, 3, 3, 4, 5, 5, 2]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 4, 8, 6, 4, 4, 3, 3, 5, 6, 5, 21]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [6, 16, 3, 3, 4, 4, 4, 5, 4, 4, 6, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 4, 4, 4, 3, 4, 6, 6, 4, 6, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [30, 4, 4, 5, 6, 5, 5, 7, 4, 5, 3, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [14, 15, 5, 5, 3, 3, 4, 7, 4, 34, 7, 5, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [11, 8, 6, 3, 4, 7, 4, 5, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [13, 3, 9, 4, 5, 6, 4, 5, 3, 5, 3, 62]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [10, 8, 3, 8, 5, 6, 4, 4, 8, 3, 4, 21, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 17, 6, 4, 2, 8, 4, 4, 6, 3, 3, 4, 4, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [8, 7, 5, 6, 6, 4, 4, 5, 6, 8, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [15, 10, 6, 6, 3, 2, 6, 7, 87, 18]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [13, 10, 4, 4, 4, 5, 13, 4, 4, 4, 3, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 11, 4, 6, 4, 5, 5, 4, 4, 5, 23, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [3, 8, 3, 4, 7, 4, 6, 3, 8, 5, 4, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [6, 19, 3, 7, 3, 3, 4, 5, 3, 7, 5, 6, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [42, 8, 3, 4, 5, 7, 3, 7, 3, 4, 7, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [5, 54, 4, 5, 6, 4, 7, 4, 4, 4, 8, 5, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 5, 4, 5, 4, 4, 8, 4, 4, 4, 14]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [7, 11, 4, 4, 5, 11, 4, 3, 3, 8, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [11, 5, 4, 4, 3, 4, 3, 4, 5, 7, 5, 4, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [6, 11, 4, 4, 4, 5, 4, 5, 4, 7, 68, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [14, 9, 15, 6, 4, 6, 6, 5, 4, 3, 11, 4, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [6, 8, 20, 6, 7, 5, 16, 6, 5, 8, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [18, 9, 5, 5, 8, 5, 4, 5, 4, 5, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [8, 3, 3, 6, 6, 5, 5, 6, 5, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [3, 8, 7, 16, 4, 5, 4, 7, 5, 5, 8, 3, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [14, 11, 4, 12, 4, 5, 6, 5, 5, 3, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [9, 8, 3, 2, 6, 3, 4, 3, 6, 6, 3, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 9, 5, 4, 4, 6, 4, 8, 5, 8, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [16, 8, 5, 4, 5, 4, 7, 5, 7, 4, 4, 13, 8, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 6, 12, 4, 5, 5, 5, 5, 8, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [20, 13, 7, 5, 14, 6, 7, 3, 5, 13, 3, 34, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 5, 5, 3, 5, 7, 5, 9, 6, 4, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [9, 5, 3, 4, 3, 6, 6, 5, 10, 9]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [6, 21, 5, 6, 6, 6, 4, 5, 10, 5, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [8, 4, 6, 5, 6, 17, 4, 7, 4, 3, 45, 4, 5, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [10, 11, 4, 4, 3, 9, 8, 5, 5, 13]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [7, 19, 5, 11, 6, 6, 5, 4, 11, 4, 7, 5, 4, 43]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [10, 8, 9, 4, 3, 99, 3, 10, 3, 39]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [22, 15, 6, 8, 6, 8, 5, 6, 4, 3, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 3, 4, 5, 3, 5, 5, 5, 4, 20]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [10, 10, 10, 4, 3, 4, 4, 7, 4, 4, 6, 4, 7, 39]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [7, 3, 9, 4, 3, 4, 4, 5, 5, 3, 11, 4, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [8, 13, 4, 3, 4, 5, 8, 3, 15, 23]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [11, 21, 6, 5, 3, 3, 5, 10, 6, 4, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 6, 5, 6, 6, 5, 5, 7, 7, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [2, 20, 6, 5, 5, 4, 5, 4, 20, 5, 5, 4, 18]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [12, 10, 5, 3, 7, 4, 24, 219, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [5, 15, 10, 8, 6, 4, 10, 4, 4, 30, 3, 4, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [43, 16, 4, 84, 8, 7, 239, 8, 4, 4, 128]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [7, 4, 4, 4, 4, 4, 4, 5, 4, 4, 28, 5, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [36, 6, 4, 5, 9, 5, 5, 2, 5, 4, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [21, 5, 6, 6, 4, 282, 5, 4, 12, 7, 5, 6, 3, 6, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 4, 8, 10, 6, 3, 10, 4, 4, 5, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [3, 5, 11, 4, 4, 4, 6, 6, 3, 5, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [4, 9, 8, 2, 4, 6, 10, 5, 64, 5, 4, 40]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [23, 3, 5, 7, 4, 6, 6, 112, 11, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [12, 3, 8, 3, 6, 4, 56, 6, 4, 6, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [5, 23, 8, 3, 9, 4, 5, 7, 4, 4, 7, 25]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [20, 23, 3, 6, 7, 13, 5, 4, 4, 11, 6, 7, 4, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [14, 47, 16, 11, 11, 4, 7, 5, 4, 6, 14, 22]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [10, 5, 4, 12, 13, 6, 8, 6, 6, 6, 4, 4, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [5, 19, 9, 5, 3, 7, 9, 7, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [8, 18, 8, 3, 6, 4, 13, 4, 12, 6, 8, 9, 8, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [5, 9, 4, 6, 4, 4, 4, 7, 6, 8, 10, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [11, 9, 6, 4, 10, 6, 6, 10, 8, 13, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [10, 23, 6, 4, 5, 180, 6, 4, 5, 3, 14, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [10, 13, 10, 4, 7, 8, 7, 4, 6, 7, 5, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [19, 10, 7, 9, 8, 24, 8, 13, 8, 4, 9, 10, 42]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [6, 42, 5, 4, 72, 4, 120, 4, 7, 79, 6, 8, 71]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [25, 5, 8, 5, 6, 4, 4, 4, 3, 7, 7, 6, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [17, 3, 4, 5, 5, 5, 35, 15, 7, 4, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [6, 5, 19, 4, 4, 8, 7, 4, 7, 4, 8, 6, 6, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [21, 31, 6, 8, 7, 4, 5, 9, 4, 6, 36, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [12, 27, 13, 12, 25, 4, 7, 7, 4, 4, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [17, 4, 5, 5, 7, 3, 6, 5, 11, 10, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [6, 7, 18, 11, 4, 30, 6, 4, 16, 49, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [5, 23, 6, 5, 5, 4, 5, 10, 4, 4, 4, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [8, 6, 7, 7, 4, 11, 4, 4, 9, 9, 4, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [11, 8, 4, 7, 4, 56, 4, 120, 4, 10, 10, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [17, 13, 5, 6, 13, 17, 6, 6, 4, 4, 20, 6, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [3, 39, 5, 7, 7, 6, 3, 6, 7, 4, 8, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 11, 3, 4, 5, 4, 7, 12, 11, 4, 6, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [15, 29, 14, 7, 4, 3, 3, 5, 3, 14, 24]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [7, 13, 7, 7, 6, 182, 11, 8, 6, 59]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [3, 28, 8, 4, 4, 5, 9, 6, 4, 6, 5, 51]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [8, 9, 3, 36, 10, 8, 8, 4, 77, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [20, 6, 4, 6, 17, 10, 16, 7, 8, 4, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [13, 4, 7, 6, 5, 7, 9, 8, 5, 8, 30, 6, 8, 26]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [4, 23, 21, 5, 8, 9, 6, 5, 6, 10, 12, 7, 15]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [17, 4, 14, 16, 7, 6, 8, 6, 5, 4, 5, 4, 42]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [50, 15, 11, 10, 7, 4, 5, 4, 5, 4, 4, 6, 5, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [5, 13, 4, 8, 9, 4, 9, 4, 4, 7, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [9, 6, 9, 6, 8, 6, 13, 17, 8, 6, 7, 58]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [15, 15, 7, 10, 7, 8, 8, 12, 5, 14, 7, 8, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [9, 7, 3, 4, 7, 4, 8, 8, 4, 5, 6, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [10, 4, 13, 6, 3, 9, 4, 12, 8, 8, 7, 6, 6, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [9, 4, 4, 4, 6, 5, 3, 5, 4, 3, 12, 5, 18]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [41, 6, 12, 3, 7, 7, 6, 10, 9, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [7, 5, 176, 4, 5, 4, 36, 6, 15, 17]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [3, 4, 5, 7, 8, 7, 3, 5, 5, 8, 5, 17]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [50, 104, 3, 8, 6, 5, 15, 5, 5, 19]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [25, 4, 6, 12, 8, 6, 5, 22, 7, 22]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [15, 7, 6, 19, 8, 5, 6, 7, 4, 4, 40]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [29, 7, 8, 4, 4, 8, 10, 5, 3, 6, 3]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [20, 7, 7, 7, 6, 9, 14, 9]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [18, 8, 16, 13, 4, 6, 6, 14, 6, 6, 23]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [6, 7, 4, 5, 6, 6, 4, 45, 4, 5, 4, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 42, 5, 4, 7, 4, 4, 8, 4, 4, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [39, 7, 5, 5, 6, 13, 5, 17, 4, 8, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [13, 8, 22, 6, 30, 104, 3, 7, 8, 10, 5, 24]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [62, 6, 27, 8, 6, 8, 8, 9, 15, 10, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [10, 6, 4, 82, 7, 9, 10, 6, 26, 9, 6, 6, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [29, 7, 20, 6, 3, 4, 8, 19, 8, 28, 10, 23]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [19, 6, 12, 6, 45, 11, 6, 10, 6, 4, 6, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [10, 16, 25, 4, 4, 18, 4, 8, 4, 5, 6, 7, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [5, 6, 4, 8, 5, 4, 4, 7, 8, 8, 7, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [13, 5, 19, 4, 12, 3, 10, 15, 6, 4, 4, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 7, 4, 4, 8, 7, 7, 15, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [17, 5, 4, 9, 5, 6, 9, 4, 4, 11, 5, 82, 16]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [10, 6, 7, 7, 6, 12, 8, 4, 16, 14, 34]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [13, 7, 4, 5, 4, 7, 27, 4, 8, 5, 5, 11]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [34, 14, 13, 8, 9, 35, 11, 5, 5, 36, 4, 7, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [32, 10, 6, 4, 9, 8, 4, 9, 5, 27, 4, 8]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [9, 14, 14, 6, 6, 4, 8, 7, 8, 7, 5, 10]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [17, 7, 5, 9, 5, 10, 9, 4, 7]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [8, 9, 4, 3, 7, 20, 16, 11, 13, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 29, 36, 5, 4, 10, 46, 10]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [33, 4, 10, 4, 12, 11, 4, 5, 9, 7, 11, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [19, 8, 3, 10, 12, 9, 7, 7, 5, 8, 8, 6, 7, 229]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [12, 10, 7, 6, 4, 25, 108, 11, 11, 5, 18, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [21, 17, 5, 16, 5, 13, 8, 5, 5, 4, 10, 66]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [15, 8, 7, 5, 4, 6, 6, 4, 8, 7, 7, 4, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 4, 4, 4, 7, 4, 7, 13]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [7, 12, 4, 4, 6, 8, 6, 10, 6, 7, 48]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [10, 12, 9, 15, 8, 9, 5, 4, 5, 8, 6, 12, 16, 8]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [21, 9, 5, 5, 67, 10, 7, 6, 7, 3, 3, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [4, 8, 17, 4, 4, 7, 8, 4, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [51, 7, 8, 177, 18, 8, 12, 36, 25, 8, 18, 11]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [8, 6, 9, 3, 16, 6, 6, 9, 6, 6, 4]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [13, 11, 18, 26, 8, 6, 8, 71, 8, 7, 6]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [14, 14, 16, 10, 44, 19, 11, 7, 16, 11, 10, 68, 9, 14]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [16, 11, 19, 18, 16, 19, 18, 20, 21, 22, 28]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [10, 11, 8, 7, 4, 20, 5, 6, 13, 7, 9, 6, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 10, 6, 7, 7, 9, 4, 10, 3, 9, 4, 40]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [6, 12, 4, 6, 4, 9, 8, 8, 8, 4, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [16, 8, 3, 5, 6, 9, 9, 12, 4, 14, 8, 51, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [6, 7, 7, 14, 4, 14, 8, 6, 8, 10, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [7, 8, 6, 43, 35, 8, 21, 12, 7, 18, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [4, 40, 10, 9, 10, 77, 10, 11, 8, 114, 22, 304, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 10, 4, 5, 4, 12, 5, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [52, 21, 4, 6, 11, 22, 22, 6, 6, 4, 10, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [22, 25, 5, 20, 3, 19, 21, 4, 38, 4, 26, 24, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [15, 8, 6, 4, 7, 11, 4, 10, 9, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = [18, 9, 9, 8, 8, 23, 4, 18, 5, 4, 5, 11]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [21, 5, 6, 4, 4, 4, 4, 13, 4, 6, 7, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [4, 8, 13, 12, 15, 8, 12, 16, 13, 19, 15, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [36, 8, 20, 9, 5, 11, 19, 8, 11]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [13, 10, 6, 7, 12, 22, 6, 6, 8, 7, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [3, 4, 6, 176, 5, 5, 6, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [12, 13, 4, 4, 103, 132, 4, 6, 5, 5, 5, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [42, 3, 4, 23, 17, 4, 4, 25, 102, 23]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 5, 4, 134, 7, 3, 6, 8, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
[length(mis) for mis = unique(C_list)] = [18, 9, 6, 9, 8, 4, 17, 14, 13, 4, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 179
[length(mis) for mis = unique(C_list)] = [19, 9, 4, 4, 4, 4, 9, 4, 4, 17, 8, 6, 18]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 180
[length(mis) for mis = unique(C_list)] = [8, 9, 3, 4, 3, 3, 4, 9, 4, 4, 4, 3, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 181
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 5, 4, 8, 4, 8, 8, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 182
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 10, 6, 29, 6, 82]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 183
[length(mis) for mis = unique(C_list)] = [8, 12, 5, 2, 6, 5, 3, 4, 4, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 184
[length(mis) for mis = unique(C_list)] = [7, 9, 12, 7, 6, 9, 9, 9, 11, 8, 11, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 185
[length(mis) for mis = unique(C_list)] = [9, 10, 5, 5, 4, 4, 6, 8, 8, 4, 134]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 186
[length(mis) for mis = unique(C_list)] = [12, 27, 7, 5, 9, 4, 19, 5, 5, 8, 33]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 187
[length(mis) for mis = unique(C_list)] = [42, 11, 25, 9, 9, 11, 8, 11, 4, 5, 5, 5, 11, 10, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 188
[length(mis) for mis = unique(C_list)] = [7, 12, 8, 7, 7, 4, 11, 4, 4, 7, 194, 163]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 189
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 4, 4, 4, 17, 18, 6, 7, 5, 4, 4, 203]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 190
[length(mis) for mis = unique(C_list)] = [42, 10, 7, 7, 11, 7, 8, 39, 10, 8, 8, 13, 6, 23]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 191
[length(mis) for mis = unique(C_list)] = [11, 6, 4, 5, 3, 6, 9, 4, 6, 8, 5, 6, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 192
[length(mis) for mis = unique(C_list)] = [6, 4, 5, 12, 4, 4, 3, 4, 3, 6, 6, 42, 5, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 193
[length(mis) for mis = unique(C_list)] = [5, 7, 6, 7, 14, 7, 13, 7, 4, 6, 6, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 194
[length(mis) for mis = unique(C_list)] = [3, 10, 10, 7, 4, 6, 3, 12, 7, 5, 8, 62, 2, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 195
[length(mis) for mis = unique(C_list)] = [6, 4, 7, 6, 4, 4, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 196
[length(mis) for mis = unique(C_list)] = [19, 10, 8, 10, 11, 17, 13, 11, 13, 48, 8, 5, 15]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 197
[length(mis) for mis = unique(C_list)] = [9, 7, 5, 4, 2, 4, 8, 7, 4, 4, 7, 4]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 198
[length(mis) for mis = unique(C_list)] = [16, 5, 6, 15, 8, 7, 23, 30, 7, 9, 17]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 199
[length(mis) for mis = unique(C_list)] = [2, 4, 9, 4, 7, 4, 4, 11, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 200
[length(mis) for mis = unique(C_list)] = [15, 4, 9, 15, 8, 11, 14, 20, 9, 8, 9, 10, 11, 7]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 201
[length(mis) for mis = unique(C_list)] = [15, 19, 11, 55, 24, 74, 7, 4, 4, 4, 7, 12, 4, 29]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 202
[length(mis) for mis = unique(C_list)] = [4, 16, 24, 4, 9, 12, 9, 32, 12, 20, 9, 61, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 203
[length(mis) for mis = unique(C_list)] = [9, 5, 13, 5, 3, 19, 13, 12, 9, 14]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 204
[length(mis) for mis = unique(C_list)] = [4, 4, 16, 4, 4, 22, 7, 27, 17, 39, 10]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 205
[length(mis) for mis = unique(C_list)] = [6, 4, 10, 11, 21, 12, 10, 22, 11, 11, 9, 3]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = WARNING: Dual bound 0.488363 is smaller than the objective of the primal solution 0.488389. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488373 is smaller than the objective of the primal solution 0.488417. The solution might not be optimal.
WARNING: Dual bound 0.488423 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488418 is smaller than the objective of the primal solution 0.488456. The solution might not be optimal.
WARNING: Dual bound 0.488419 is smaller than the objective of the primal solution 0.488457. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488452. The solution might not be optimal.
WARNING: Dual bound 0.488373 is smaller than the objective of the primal solution 0.488411. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488412 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488453. The solution might not be optimal.
WARNING: Dual bound 0.488402 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.48842 is smaller than the objective of the primal solution 0.488443. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.48842 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488371 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488439 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488419 is smaller than the objective of the primal solution 0.488457. The solution might not be optimal.
WARNING: Dual bound 0.488421 is smaller than the objective of the primal solution 0.488459. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
WARNING: Dual bound 0.488419 is smaller than the objective of the primal solution 0.488456. The solution might not be optimal.
WARNING: Dual bound 0.488373 is smaller than the objective of the primal solution 0.488456. The solution might not be optimal.
WARNING: Dual bound 0.488411 is smaller than the objective of the primal solution 0.488456. The solution might not be optimal.
WARNING: Dual bound 0.488415 is smaller than the objective of the primal solution 0.488453. The solution might not be optimal.
WARNING: Dual bound 0.488376 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488411 is smaller than the objective of the primal solution 0.488456. The solution might not be optimal.
WARNING: Dual bound 0.488411 is smaller than the objective of the primal solution 0.488414. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488452. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488439. The solution might not be optimal.
WARNING: Dual bound 0.488418 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488411 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488417 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
WARNING: Dual bound 0.488418 is smaller than the objective of the primal solution 0.488455. The solution might not be optimal.
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
206
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 7]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 207
[length(mis) for mis = unique(C_list)] = [4, 4, 15, 14, 14, 15, 228, 16, 15, 15, 245, 17, 18, 2]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 208
[length(mis) for mis = unique(C_list)] = [15, 5, 9, 9, 9, 9, 8, 48, 14, 9, 9, 21]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 209
[length(mis) for mis = unique(C_list)] = [20, 9, 9, 5, 4, 24, 31, 14, 4, 4, 5, 120]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 210
[length(mis) for mis = unique(C_list)] = [5, 12, 5, 8, 7, 4, 4, 5, 14, 3, 8, 9]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 211
[length(mis) for mis = unique(C_list)] = [13, 22, 3, 4, 7, 9, 8, 4, 12, 34, 7, 47]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 212
[length(mis) for mis = unique(C_list)] = [23, 19, 14, 11, 9, 11, 10, 32, 13, 4, 4, 2]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 213
[length(mis) for mis = unique(C_list)] = [5, 8, 5, 3, 7, 4, 175, 4, 5, 7, 6, 5]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 214
[length(mis) for mis = unique(C_list)] = [39, 29, 15, 4, 5, 14, 34, 5, 4, 5, 28]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 215
[length(mis) for mis = unique(C_list)] = [54, 7, 4, 6, 67, 7, 6, 103, 3, 5, 6, 4, 270, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 216
[length(mis) for mis = unique(C_list)] = [52, 22, 18, 38, 11, 10, 12, 16, 8, 20, 156, 16, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 217
[length(mis) for mis = unique(C_list)] = [5, 9, 7, 15, 21, 10, 20, 9, 15, 9, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 218
[length(mis) for mis = unique(C_list)] = [15, 10, 15, 12, 12, 34, 13, 12, 13, 15, 9]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 219
[length(mis) for mis = unique(C_list)] = [56, 16, 7, 7, 18, 9, 34, 14, 7, 11, 9, 11, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 220
[length(mis) for mis = unique(C_list)] = [4, 11, 7, 5, 5, 7, 4, 5, 5, 4, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 221
[length(mis) for mis = unique(C_list)] = [4, 11, 4, 7, 6, 12, 3, 5, 4, 7, 4, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 222
[length(mis) for mis = unique(C_list)] = [26, 31, 20, 16, 21, 18, 30, 6, 20, 20, 18, 17, 5, 19]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 223
[length(mis) for mis = unique(C_list)] = [54, 10, 12, 9, 3, 26, 28, 10, 8, 10, 8, 11, 14, 8, 18]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 224
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 7, 4, 4, 4, 5, 4]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 225
[length(mis) for mis = unique(C_list)] = [3, 13, 4, 4, 12, 4, 12, 13, 11, 5, 11]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 226
[length(mis) for mis = unique(C_list)] = [8, 25, 4, 4, 10, 4, 5, 7, 23, 32, 8]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 227
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 7, 8, 335, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 228
[length(mis) for mis = unique(C_list)] = [24, 9, 10, 7, 4, 10, 8, 6, 7, 31, 5, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 229
[length(mis) for mis = unique(C_list)] = [4, 11, 5, 9, 12, 5, 7, 12, 9, 9, 7, 4, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 230
[length(mis) for mis = unique(C_list)] = [4, 4, 88, 4, 5, 89, 14]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 231
[length(mis) for mis = unique(C_list)] = [26, 11, 12, 12, 9, 16, 10, 10, 10, 11, 10, 16, 17, 14]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 232
[length(mis) for mis = unique(C_list)] = [27, 21, 4, 9, 14, 3, 6, 208, 8, 25, 4, 18, 22]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 233
[length(mis) for mis = unique(C_list)] = [6, 36, 20, 4, 14, 21, 8, 15, 4, 9, 26, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 234
[length(mis) for mis = unique(C_list)] = [20, 12, 42, 24, 10, 14, 34, 17, 8, 25, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 235
[length(mis) for mis = unique(C_list)] = [23, 4, 10, 4, 4, 16, 8, 20, 6, 3, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 236
[length(mis) for mis = unique(C_list)] = [9, 9, 11, 20, 13, 6, 8, 10, 15, 10, 6, 14, 7]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 237
[length(mis) for mis = unique(C_list)] = [15, 25, 27, 79, 11, 32, 15, 15, 34, 346, 37, 26, 32]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 238
[length(mis) for mis = unique(C_list)] = [2, 21, 11, 43, 8, 10, 9]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 239
[length(mis) for mis = unique(C_list)] = [11, 4, 3, 4, 10, 7, 16, 7]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 240
[length(mis) for mis = unique(C_list)] = [18, 4, 4, 19, 35, 24, 23, 67, 18, 23]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 241
[length(mis) for mis = unique(C_list)] = [17, 14, 11, 9, 7, 9, 9, 15, 13, 12, 16, 19, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 242
[length(mis) for mis = unique(C_list)] = [25, 4, 13, 10, 13, 12, 31, 4, 22, 59, 13]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 243
[length(mis) for mis = unique(C_list)] = [22, 15, 12, 20, 20, 5, 7, 23, 20, 7, 25, 25, 30]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 244
[length(mis) for mis = unique(C_list)] = [57, 7, 26, 26, 6, 27, 25, 8, 28, 4, 39, 5, 36, 27, 26]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 245
[length(mis) for mis = unique(C_list)] = [19, 9, 7, 6, 12, 4, 8, 4, 14, 4, 8, 7, 15, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 246
[length(mis) for mis = unique(C_list)] = [6, 12, 6, 4, 4, 30, 4, 4, 4, 261, 4, 4, 45, 278]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 247
[length(mis) for mis = unique(C_list)] = [17, 8, 2, 22, 11, 5, 10, 11, 8, 4, 8, 5, 5, 4, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 248
[length(mis) for mis = unique(C_list)] = [21, 8, 8, 10, 28, 5, 7, 7, 41, 6, 4, 8, 14, 14]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 249
[length(mis) for mis = unique(C_list)] = [15, 51, 52, 65, 55, 14, 4, 6, 24, 14, 40, 23, 32, 4, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 250
[length(mis) for mis = unique(C_list)] = [28, 12, 8, 14, 5, 20, 27, 28, 49, 7, 15, 6, 35, 33]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 251
[length(mis) for mis = unique(C_list)] = [21, 12, 8, 8, 7, 5, 6, 3, 4, 164, 4, 10, 9, 8, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 252
[length(mis) for mis = unique(C_list)] = [14, 8, 11, 9, 10, 8, 9, 8, 8, 8, 8, 7, 9, 19]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 253
[length(mis) for mis = unique(C_list)] = [12, 14, 19, 4, 4, 19, 22, 9, 4, 26]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 254
[length(mis) for mis = unique(C_list)] = [6, 7, 8, 13, 7, 8, 14, 10, 6, 11, 7, 17]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 255
[length(mis) for mis = unique(C_list)] = [6, 8, 33, 5, 6, 4, 20, 5, 9, 60, 10, 14, 4, 12, 46]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 256
[length(mis) for mis = unique(C_list)] = [45, 59, 25, 22, 27, 29, 26, 4, 27, 30, 26, 22, 18]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 257
[length(mis) for mis = unique(C_list)] = [11, 4, 8, 5, 4, 4, 7, 27, 25, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 258
[length(mis) for mis = unique(C_list)] = [12, 9, 4, 8, 4, 17, 8, 8, 4, 4, 11, 8, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 259
[length(mis) for mis = unique(C_list)] = [70, 7, 19, 16, 8, 7, 15, 22, 9, 7, 16, 4, 6]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 260
[length(mis) for mis = unique(C_list)] = [44, 10, 20, 7, 8, 24, 7, 22, 7, 47, 5, 23]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 261
[length(mis) for mis = unique(C_list)] = [29, 9, 4, 29, 4, 23, 18, 4, 33, 28, 19]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 262
[length(mis) for mis = unique(C_list)] = [8, 7, 8, 6, 6, 6, 4, 8, 7, 5, 10, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 263
[length(mis) for mis = unique(C_list)] = [18, 15, 25, 15, 67, 17, 21, 15, 21, 21, 18, 17, 22]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 264
[length(mis) for mis = unique(C_list)] = [29, 4, 5, 26, 10, 29, 29, 25, 94, 4, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 265
[length(mis) for mis = unique(C_list)] = [13, 8, 22, 5, 6, 4, 7, 18, 9, 18]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 266
[length(mis) for mis = unique(C_list)] = [4, 16, 4, 7, 12, 4, 4, 15, 4, 5, 8, 13, 7, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 267
[length(mis) for mis = unique(C_list)] = [15, 9, 8, 13, 20, 8, 8, 10, 8, 7, 4, 7, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 268
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 5, 4, 5, 5]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 269
[length(mis) for mis = unique(C_list)] = [17, 15, 11, 7, 7, 6, 8, 30, 12, 9, 11, 10, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 270
[length(mis) for mis = unique(C_list)] = [10, 6, 10, 7, 7, 14, 6, 14, 7, 10, 7, 9]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 271
[length(mis) for mis = unique(C_list)] = [7, 12, 27, 4, 20, 30, 4, 4, 4, 5, 9, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 272
[length(mis) for mis = unique(C_list)] = [4, 5, 4, 4, 4, 9, 5, 4]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 273
[length(mis) for mis = unique(C_list)] = [4, 18, 7, 13, 5, 4, 25, 4, 10]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 274
[length(mis) for mis = unique(C_list)] = [12, 9, 8, 15, 9, 5, 12, 9, 13, 8, 15]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 275
[length(mis) for mis = unique(C_list)] = [7, 38, 31, 29, 254, 6, 32, 29, 40, 29, 42, 41]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 276
[length(mis) for mis = unique(C_list)] = [3, 8, 10, 11, 5, 6, 7, 5, 7, 5, 43, 6, 9]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 277
[length(mis) for mis = unique(C_list)] = [12, 10, 4, 4, 25, 9, 8, 12, 18, 37, 7, 16]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 278
[length(mis) for mis = unique(C_list)] = [4, 4, 21, 21, 8, 17, 22, 4, 14, 23, 23]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 279
[length(mis) for mis = unique(C_list)] = [10, 9, 14, 5, 25, 4, 4, 6, 14, 13, 4, 25, 5, 22, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 280
[length(mis) for mis = unique(C_list)] = [28, 10, 7, 6, 5, 9, 7, 6, 14, 9, 4, 9, 6, 5, 19]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 281
[length(mis) for mis = unique(C_list)] = [24, 33, 10, 4, 8, 12, 29, 58, 14, 167, 53, 4, 10, 13]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 282
[length(mis) for mis = unique(C_list)] = [38, 32, 15, 10, 4, 36, 42, 23, 35, 36]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 283
[length(mis) for mis = unique(C_list)] = [6, 5, 5, 5, 7, 4, 10, 4, 7, 4, 26, 30]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 284
[length(mis) for mis = unique(C_list)] = [41, 15, 7, 22, 27, 23, 29, 172, 12, 17, 10, 13, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 285
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 5, 3, 3, 7, 4, 6]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 286
[length(mis) for mis = unique(C_list)] = [32, 26, 24, 26, 4, 5, 28, 19, 37, 7, 25, 18]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 287
[length(mis) for mis = unique(C_list)] = [34, 7, 5, 7, 44, 6, 6, 3, 9, 193, 7, 12, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 288
[length(mis) for mis = unique(C_list)] = [31, 8, 10, 8, 5, 10, 30, 8, 8, 4, 20]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 289
[length(mis) for mis = unique(C_list)] = [22, 11, 17, 14, 8, 11, 30, 17, 8, 17, 25]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 290
[length(mis) for mis = unique(C_list)] = [3, 6, 8, 18, 7, 9, 7, 4, 6, 7, 5]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 291
[length(mis) for mis = unique(C_list)] = [84, 17, 14, 7, 14, 14, 6, 9, 10, 14, 18, 14, 17, 12]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 292
[length(mis) for mis = unique(C_list)] = [8, 5, 4, 34, 10, 4, 4, 4, 5, 5, 5, 4, 10]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 293
[length(mis) for mis = unique(C_list)] = [36, 4, 16, 4, 26, 39, 31, 28, 37, 35]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 294
[length(mis) for mis = unique(C_list)] = [45, 11, 10, 40, 8, 31, 11, 239, 17, 8, 50, 14, 30]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 295
[length(mis) for mis = unique(C_list)] = [4, 21, 7, 5, 7, 6, 5, 4, 4, 4, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 296
[length(mis) for mis = unique(C_list)] = [6, 10, 119, 8, 5, 5, 5, 5, 8, 12, 6, 338]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 297
[length(mis) for mis = unique(C_list)] = [22, 5, 121, 4, 6, 8, 30, 4, 10, 6, 20, 25]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 298
[length(mis) for mis = unique(C_list)] = [24, 6, 12, 4, 10, 6, 8, 32, 7, 10, 9, 4]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 299
[length(mis) for mis = unique(C_list)] = [24, 12, 15, 15, 8, 11, 82, 14, 11, 12, 32, 10, 21]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 300
[length(mis) for mis = unique(C_list)] = [34, 7, 2, 7, 8, 17, 21, 9, 7, 5, 6]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 301
[length(mis) for mis = unique(C_list)] = [6, 16, 5, 4, 13, 11, 32, 5, 13, 9, 51]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 302
[length(mis) for mis = unique(C_list)] = [31, 8, 43, 16, 25, 23, 26, 36, 38, 28, 37, 24, 35]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 303
[length(mis) for mis = unique(C_list)] = [33, 14, 14, 29, 19, 20, 43, 13, 15, 36, 13, 21, 4, 13]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 304
[length(mis) for mis = unique(C_list)] = [6, 6, 26, 19, 4, 33, 13, 12, 20]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 305
[length(mis) for mis = unique(C_list)] = [50, 16, 4, 15, 16, 4, 10, 15, 15, 14, 8, 14, 21, 51]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 306
[length(mis) for mis = unique(C_list)] = [6, 24, 4, 6, 4, 25, 5, 24, 4, 4, 4, 19, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 307
[length(mis) for mis = unique(C_list)] = [20, 21, 5, 4, 4, 19, 4, 4, 20, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 308
[length(mis) for mis = unique(C_list)] = [17, 12, 2, 9, 8, 4, 2, 4, 8, 8]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 309
[length(mis) for mis = unique(C_list)] = [16, 4, 15, 15, 4, 64, 4, 8, 27, 14, 27, 26]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 310
[length(mis) for mis = unique(C_list)] = [14, 13, 20, 4, 14, 9, 4, 82, 5, 68, 14, 18]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 311
[length(mis) for mis = unique(C_list)] = [19, 8, 10, 10, 13, 9, 12, 4, 11, 11, 10, 42]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 312
[length(mis) for mis = unique(C_list)] = [2, 12, 15, 34, 30, 4, 4, 29]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 313
[length(mis) for mis = unique(C_list)] = [46, 13, 8, 20, 35, 12, 4, 37, 32, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 314
termination = MathOptInterface.INFEASIBLE
objective_value = 0.48845539357108997
