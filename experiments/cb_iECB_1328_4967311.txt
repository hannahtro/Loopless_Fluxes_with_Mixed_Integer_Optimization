┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECB_1328
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECB_1328
----------------------------------
number of metabolites : 1951
number of reactions : 2748
number of genes : 1329

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2748 flux variables and 5105 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [6, 7, 11, 11, 11, 11, 11, 11, 11, 19, 19, 20, 19, 20, 19, 19, 30, 16, 17, 16, 16, 17, 17, 16, 16, 17, 16, 16, 17, 18, 16, 16, 3, 2, 5, 2, 7, 2, 4, 2, 3, 2, 41, 3, 2, 7, 41, 42, 42, 12, 12, 12, 6, 6, 12, 13, 13, 12, 9, 3, 12, 12, 55, 26]
length(C_list) = 55
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [4, 2, 2, 4, 2, 3, 3, 4, 3, 3, 4, 2, 2, 41, 3, 12, 4, 2, 4, 20, 5, 4, 5, 4, 3, 3, 4, 6, 5, 3, 5, 4, 5, 3, 5, 4, 3, 4]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [6, 9, 7, 6, 9, 3, 5, 3, 3, 5, 19, 2, 3, 10, 4, 15, 9, 9, 9, 11, 10, 9, 4, 7, 9, 2, 10, 7, 8, 13, 11]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 2, 4, 2, 4, 2, 5, 3, 3, 6, 10, 3, 5, 14, 3, 6, 6, 3, 6, 4, 20, 4, 4, 58, 6, 3, 2, 6]
length(C_list) = 28
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [3, 3, 2, 5, 4, 5, 6, 6, 14, 2, 9, 3, 14, 6, 2, 2, 8, 11]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 5, 5, 3, 21, 11, 4, 10, 30, 8, 5, 4, 55, 5, 19, 3, 45, 7, 6, 11, 4, 21, 10]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [6, 5, 11, 10, 10, 10, 10, 281, 10, 6, 15, 15, 16, 15, 16, 15, 15, 12, 12, 13, 12, 12, 13, 13, 14, 12, 13, 12, 12, 13, 12, 12, 12, 5, 5, 6, 6, 6, 8, 8, 3, 5, 6, 5, 15, 6, 6, 11, 8, 6, 9, 10, 8, 33, 8, 8, 7, 6, 8, 9, 9, 9, 5, 6, 5, 51, 9, 8, 8, 6, 3]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [11, 2, 12, 12, 12, 12, 12, 12, 103, 17, 17, 18, 17, 18, 25, 17, 16, 14, 44, 15, 14, 15, 15, 15, 14, 144, 18, 21, 14, 15, 14, 14, 14, 14, 14, 15, 14, 3, 14, 9, 7, 4, 41, 9, 9, 3, 41, 43, 4, 42, 11, 11, 11, 11, 12, 12, 11, 8, 12, 11, 13]
length(C_list) = 55
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 4, 3, 4, 4, 200, 4, 4, 5, 5, 8, 9, 6, 3, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 4, 7, 114, 6, 5, 6, 6, 8]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 5]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 9, 9, 10, 6, 11, 6, 9, 13, 6, 9, 7, 4, 7, 6, 6, 21, 7, 112, 73, 26, 53, 5]
length(C_list) = 25
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [4, 5, 6, 5, 13, 5, 23, 120, 46, 6, 5, 12]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 2, 3, 6, 3, 7, 21, 5]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [4, 9, 5, 5, 5]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 15
termination = MathOptInterface.OPTIMAL
objective_value = 0.9824784581621391
thermo_feasible = true
