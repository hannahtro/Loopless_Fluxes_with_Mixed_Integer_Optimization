ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iLB1027_lipid
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iLB1027_lipid
----------------------------------
number of metabolites : 2172
number of reactions : 4456
number of genes : 1027

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 22
(indicator, big_m) = (false, true)
BIG M ADDED
model with 4456 flux variables and 8868 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [8, 4, 8, 311, 3, 3, 30, 3, 19, 431, 5, 5, 15, 19, 20, 243, 6]
length(C_list) = 9
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [12, 3, 62, 11, 8, 6, 7, 16, 3, 10, 7, 14, 8, 12, 47, 505, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [13, 4, 4, 10, 4, 4, 9, 138, 8, 3, 7, 5, 4, 57, 8, 3, 4, 4, 5, 20, 13, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 19, 4, 4, 19, 4, 9, 3, 3, 23, 4, 3, 4, 9, 8, 12, 3, 3, 36, 10, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [66, 4, 4, 18, 4, 4, 4, 3, 4, 3, 4, 3, 3, 4, 38, 4, 38, 5, 3, 20, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [17, 4, 4, 38, 4, 4, 4, 4, 85, 30, 3, 33, 4, 4, 8, 193, 3, 4, 3, 4, 20, 161, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 4, 4, 32, 53, 4, 7, 456, 4, 38, 4, 4, 4, 7, 4, 4, 5, 51, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 25, 10, 4, 4, 3, 509, 3, 4, 4, 5, 4, 4, 6, 4, 4, 4, 3, 7, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [12, 6, 4, 4, 4, 3, 11, 4, 7, 264, 6, 7, 5, 4, 49, 7, 50, 10, 5, 4, 53, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 87, 4, 3, 4, 68, 7, 6, 4, 40, 4, 4, 4, 7, 4, 4, 19, 24, 422, 14]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4, 3, 4, 4, 3, 7, 4, 4, 72, 4, 3, 123, 7, 4, 4, 4, 4, 20, 12, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 19, 3, 4, 101, 6, 6, 3, 4, 6, 6, 4, 458, 6, 4, 29, 4, 4, 36, 4, 5]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 9, 4, 4, 5, 4, 376, 13, 5, 26, 3, 4, 3, 5, 4, 4, 5, 20, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 21, 4, 3, 4, 3, 37, 4, 3, 35, 3, 4, 4, 15, 4, 6, 4, 4, 28, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [3, 7, 4, 4, 3, 9, 11, 3, 7, 103, 4, 7, 4, 4, 3, 7, 5, 3, 4, 4, 23, 13, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [4, 3, 93, 4, 7, 3, 50, 4, 5, 8, 4, 3, 4, 5, 5, 5, 4, 3, 4, 20, 8, 9]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [5, 11, 4, 18, 4, 7, 4, 3, 502, 5, 3, 24, 3, 9, 4, 5, 4, 4, 3, 52, 20, 344, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 21, 4, 3, 11, 220, 5, 31, 3, 46, 3, 14, 9, 5, 9, 3, 5, 43, 8, 12]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 18
[length(mis) for mis = unique(C_list)] = [9, 4, 5, 63, 4, 3, 55, 5, 5, 4, 3, 24, 6, 35, 4, 5, 4, 4, 6, 4, 53, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 19
[length(mis) for mis = unique(C_list)] = [9, 3, 4, 23, 4, 4, 43, 11, 5, 57, 3, 67, 4, 5, 4, 5, 4, 3, 4, 3, 55, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 20
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 4, 5, 53, 8, 5, 67, 14, 27, 5, 3, 118, 6, 4, 11, 3, 4, 22, 3, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 21
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 35, 3, 4, 36, 3, 357, 39, 4, 5, 3, 6, 10, 5, 9, 4, 4, 20, 43, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 22
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 8, 4, 8, 32, 4, 5, 5, 4, 53, 3, 11, 4, 5, 8, 3, 3, 39, 5]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 23
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 11, 3, 4, 89, 3, 119, 8, 3, 58, 4, 3, 5, 5, 6, 8, 3, 8, 20, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 24
[length(mis) for mis = unique(C_list)] = [3, 11, 3, 4, 4, 4, 18, 8, 5, 390, 4, 31, 7, 4, 71, 5, 72, 4, 6, 33, 6, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 25
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 436, 4, 3, 4, 4, 5, 4, 4, 24, 5, 3, 4, 5, 4, 5, 20, 61, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 26
[length(mis) for mis = unique(C_list)] = [13, 3, 54, 67, 3, 4, 4, 4, 5, 62, 3, 10, 6, 4, 4, 5, 4, 3, 3, 20, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 27
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 18, 3, 5, 4, 3, 5, 4, 3, 24, 4, 3, 4, 141, 4, 4, 13, 20, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 28
[length(mis) for mis = unique(C_list)] = [5, 4, 5, 36, 3, 4, 4, 3, 5, 42, 3, 27, 3, 3, 4, 5, 4, 5, 3, 3, 43, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 29
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 19, 4, 3, 35, 4, 5, 4, 4, 23, 4, 3, 4, 5, 4, 4, 4, 20, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 30
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 35, 4, 3, 50, 4, 185, 29, 3, 35, 8, 3, 50, 328, 31, 8, 4, 9, 20, 3, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 31
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 35, 3, 4, 12, 3, 62, 6, 4, 8, 4, 9, 3, 5, 4, 9, 4, 3, 19, 11, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 32
[length(mis) for mis = unique(C_list)] = [4, 13, 4, 4, 4, 81, 6, 3, 6, 241, 3, 24, 4, 4, 4, 6, 3, 8, 10, 36, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 33
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 4, 4, 3, 3, 579, 4, 4, 26, 16, 7, 4, 6, 4, 4, 8, 20, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 34
[length(mis) for mis = unique(C_list)] = [31, 4, 6, 18, 3, 7, 3, 11, 19, 3, 28, 4, 6, 4, 88, 4, 72, 16, 23, 7, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 35
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 62, 4, 4, 43, 6, 6, 13, 4, 28, 4, 77, 4, 5, 4, 3, 4, 43, 4, 22]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 36
[length(mis) for mis = unique(C_list)] = [12, 89, 4, 53, 4, 4, 3, 65, 6, 54, 4, 71, 3, 5, 4, 5, 4, 3, 4, 55, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 37
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 8, 3, 3, 3, 4, 5, 4, 3, 25, 4, 3, 73, 57, 4, 4, 3, 20, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 38
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 8, 4, 23, 4, 15, 3, 3, 30, 5, 4, 12, 4, 7, 20, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 39
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 4, 4, 4, 4, 4, 7, 27, 4, 27, 4, 4, 101, 4, 4, 4, 20, 5, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 40
[length(mis) for mis = unique(C_list)] = [12, 13, 3, 3, 52, 3, 75, 4, 6, 5, 3, 26, 3, 4, 37, 5, 4, 4, 8, 37, 585, 9]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 41
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 4, 3, 3, 6, 3, 7, 6, 4, 16, 4, 5, 44, 98, 45, 9, 4, 4, 53, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 42
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 19, 4, 4, 50, 3, 5, 50, 4, 4, 3, 4, 416, 5, 4, 17, 3, 5, 22, 5, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 43
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 3, 3, 4, 3, 6, 7, 3, 4, 11, 8, 8, 6, 4, 4, 3, 3, 8, 3, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 44
[length(mis) for mis = unique(C_list)] = [4, 37, 4, 4, 3, 4, 4, 4, 5, 4, 3, 4, 4, 6, 7, 8, 4, 4, 4, 4, 4, 4, 6]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 45
[length(mis) for mis = unique(C_list)] = [6, 3, 8, 46, 9, 4, 27, 6, 7, 3, 4, 58, 8, 6, 3, 138, 4, 3, 3, 22, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 46
[length(mis) for mis = unique(C_list)] = [8, 16, 3, 6, 3, 8, 3, 3, 203, 8, 27, 7, 6, 23, 6, 3, 3, 3, 10, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 47
[length(mis) for mis = unique(C_list)] = [4, 4, 5, 17, 4, 11, 4, 3, 5, 18, 5, 14, 4, 4, 3, 5, 4, 4, 109, 4, 167, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 48
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 18, 3, 4, 4, 4, 6, 19, 3, 24, 6, 79, 3, 6, 3, 4, 3, 22, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 49
[length(mis) for mis = unique(C_list)] = [7, 14, 4, 4, 3, 3, 4, 5, 5, 4, 3, 91, 3, 3, 4, 5, 4, 3, 3, 4, 4, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 50
[length(mis) for mis = unique(C_list)] = [3, 3, 7, 38, 4, 3, 3, 3, 7, 28, 3, 29, 3, 3, 3, 382, 4, 4, 4, 55, 28, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 51
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 3, 4, 4, 6, 3, 3, 15, 3, 4, 4, 234, 3, 4, 3, 11, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 52
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 18, 3, 80, 4, 3, 57, 22, 3, 33, 3, 4, 4, 5, 9, 7, 43, 4, 22, 30, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 53
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 28, 448, 13, 11, 3, 333, 6, 11, 8, 5, 4, 13, 6, 13, 3, 4, 20, 3, 7]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 54
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 4, 4, 24, 3, 6, 53, 81, 27, 3, 4, 64, 5, 4, 4, 23, 8, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 55
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 3, 3, 4, 71, 3, 5, 41, 3, 44, 3, 3, 4, 5, 3, 322, 6, 22, 33, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 56
[length(mis) for mis = unique(C_list)] = [8, 4, 3, 75, 4, 3, 4, 4, 223, 61, 3, 26, 4, 3, 4, 5, 3, 4, 3, 30, 20, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 57
[length(mis) for mis = unique(C_list)] = [4, 3, 10, 4, 3, 3, 4, 4, 9, 17, 4, 5, 13, 8, 4, 6, 10, 3, 13, 51, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 58
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 18, 4, 6, 8, 4, 40, 48, 3, 24, 3, 3, 13, 6, 13, 3, 4, 5, 20, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 59
[length(mis) for mis = unique(C_list)] = [8, 8, 4, 4, 4, 4, 37, 5, 7, 30, 4, 5, 3, 4, 6, 4, 5, 4, 3, 20, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 60
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 18, 6, 3, 3, 3, 5, 8, 3, 27, 4, 3, 13, 8, 13, 3, 6, 23, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 61
[length(mis) for mis = unique(C_list)] = [7, 6, 3, 8, 3, 3, 8, 3, 7, 46, 4, 5, 3, 3, 8, 5, 11, 8, 3, 3, 3, 8, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 62
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 36, 6, 11, 4, 4, 220, 22, 3, 39, 4, 4, 38, 624, 13, 6, 17, 3, 20, 3, 4]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 63
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 3, 232, 4, 23, 4, 4, 4, 4, 4, 8, 9, 3, 3, 4, 4, 3, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 64
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 3, 4, 4, 4, 3, 6, 4, 4, 4, 18, 3, 4, 6, 4, 4, 4, 4, 77, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 65
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 4, 3, 4, 4, 4, 6, 23, 4, 3, 4, 4, 4, 5, 3, 4, 4, 3, 4, 4, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 66
[length(mis) for mis = unique(C_list)] = [4, 6, 7, 34, 4, 4, 41, 6, 6, 26, 3, 4, 4, 3, 6, 3, 4, 4, 4, 40, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 67
[length(mis) for mis = unique(C_list)] = [6, 6, 8, 6, 3, 3, 29, 3, 6, 105, 8, 59, 3, 33, 16, 6, 15, 6, 3, 20, 8, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 68
[length(mis) for mis = unique(C_list)] = [4, 6, 11, 6, 4, 3, 52, 3, 6, 6, 3, 6, 4, 154, 4, 6, 3, 4, 3, 20, 16, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 69
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 4, 4, 4, 5, 533, 27, 4, 26, 4, 4, 6, 5, 3, 4, 4, 3, 60, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 70
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 18, 9, 4, 49, 3, 6, 19, 3, 24, 8, 3, 6, 130, 4, 4, 6, 3, 20, 8, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 71
[length(mis) for mis = unique(C_list)] = [3, 6, 6, 8, 7, 3, 4, 3, 6, 5, 6, 6, 15, 14, 42, 6, 4, 3, 8, 3, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 72
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 18, 3, 3, 3, 3, 6, 63, 4, 14, 3, 7, 4, 6, 3, 3, 41, 28, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 73
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 88, 9, 4, 16, 8, 29, 75, 95, 6, 3, 3, 50, 6, 4, 6, 12, 79, 8, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 74
[length(mis) for mis = unique(C_list)] = [4, 14, 12, 35, 6, 3, 3, 3, 6, 37, 6, 35, 4, 6, 12, 6, 3, 13, 6, 20, 6, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 75
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 6, 4, 13, 3, 3, 6, 3, 3, 4, 6, 3, 5, 4, 10, 4, 3, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 76
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 43, 4, 3, 42, 7, 50, 4, 53, 3, 4, 4, 6, 4, 4, 6, 3, 20, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 77
[length(mis) for mis = unique(C_list)] = [14, 7, 3, 18, 3, 6, 4, 4, 6, 218, 6, 58, 3, 6, 4, 7, 4, 3, 20, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 78
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 6, 11, 11, 3, 3, 7, 3, 5, 21, 6, 3, 11, 24, 4, 6, 4, 18, 3, 3, 7]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 79
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 4, 3, 4, 30, 8, 6, 6, 4, 4, 8, 6, 294, 7, 4, 8, 20, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 80
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 5, 3, 4, 4, 3, 6, 3, 3, 3, 4, 4, 5, 6, 3, 6, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 81
[length(mis) for mis = unique(C_list)] = [3, 7, 34, 4, 4, 3, 4, 3, 5, 4, 4, 40, 10, 4, 4, 9, 3, 4, 4, 4, 4, 18]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 82
[length(mis) for mis = unique(C_list)] = [3, 8, 4, 18, 99, 4, 68, 3, 5, 19, 4, 29, 6, 4, 4, 5, 3, 4, 3, 3, 20, 3, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 83
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 14, 4, 6, 9, 4, 303, 26, 4, 37, 6, 4, 3, 146, 4, 4, 4, 28, 4, 6]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 84
[length(mis) for mis = unique(C_list)] = [4, 4, 7, 33, 4, 4, 58, 6, 6, 28, 4, 29, 3, 4, 4, 89, 3, 3, 3, 22, 3, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 85
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 18, 3, 3, 6, 6, 8, 19, 3, 28, 4, 4, 4, 6, 3, 4, 4, 3, 20, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 86
[length(mis) for mis = unique(C_list)] = [3, 8, 3, 24, 3, 4, 10, 4, 7, 15, 7, 391, 5, 5, 3, 7, 6, 3, 3, 4, 3, 4, 7]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 87
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 38, 4, 3, 51, 3, 25, 43, 9, 47, 3, 4, 4, 25, 4, 8, 11, 20, 4, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 88
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 18, 4, 42, 3, 6, 4, 4, 43, 4, 160, 3, 3, 3, 3, 21, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 89
[length(mis) for mis = unique(C_list)] = [4, 3, 6, 32, 8, 3, 6, 10, 6, 23, 3, 161, 3, 3, 13, 8, 5, 14, 6, 35, 9, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 90
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 3, 4, 3, 82, 4, 19, 45, 3, 45, 3, 3, 3, 6, 3, 3, 3, 78, 23, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 91
[length(mis) for mis = unique(C_list)] = [4, 3, 8, 3, 3, 3, 65, 10, 7, 55, 4, 27, 5, 3, 10, 6, 3, 3, 7, 3, 22, 6, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 92
[length(mis) for mis = unique(C_list)] = [4, 4, 6, 3, 5, 6, 36, 4, 6, 4, 6, 28, 6, 6, 3, 6, 8, 3, 4, 6, 20, 6, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 93
[length(mis) for mis = unique(C_list)] = [3, 6, 4, 52, 3, 4, 57, 471, 24, 3, 7, 5, 3, 7, 6, 3, 6, 6, 6, 47, 109, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 94
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 3, 4, 3, 3, 6, 20, 4, 30, 3, 5, 4, 6, 3, 4, 4, 20, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 95
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 41, 6, 3, 6, 4, 22, 24, 6, 3, 6, 3, 15, 9, 15, 6, 10, 20, 15, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 96
[length(mis) for mis = unique(C_list)] = [4, 10, 4, 6, 14, 8, 3, 3, 216, 3, 3, 27, 6, 6, 12, 6, 4, 8, 6, 23, 25, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 97
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 11, 4, 3, 3, 172, 6, 4, 3, 3, 4, 4, 3, 6, 5, 3, 21, 93, 8]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 98
[length(mis) for mis = unique(C_list)] = [8, 3, 5, 6, 3, 4, 36, 7, 6, 3, 3, 39, 3, 7, 7, 10, 9, 3, 3, 3, 20, 11, 6]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 99
[length(mis) for mis = unique(C_list)] = [5, 5, 4, 22, 3, 3, 65, 3, 15, 4, 3, 37, 3, 3, 5, 5, 3, 3, 4, 4, 69, 3, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 100
[length(mis) for mis = unique(C_list)] = [3, 14, 3, 4, 3, 8, 55, 4, 4, 29, 6, 54, 6, 7, 13, 15, 13, 4, 3, 6, 36, 11, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 101
[length(mis) for mis = unique(C_list)] = [4, 14, 13, 8, 4, 3, 50, 3, 6, 58, 5, 25, 7, 6, 10, 6, 3, 9, 10, 3, 20, 5, 10]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 102
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 3, 4, 4, 3, 9, 8, 3, 4, 3, 3, 7, 3, 6, 4, 3, 4, 3, 18, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 103
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 7, 4, 3, 3, 3, 58, 4, 3, 14, 6, 6, 227, 6, 3, 3, 3, 3, 7, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 104
[length(mis) for mis = unique(C_list)] = [7, 3, 3, 18, 6, 4, 4, 3, 8, 27, 4, 47, 4, 4, 4, 41, 4, 3, 3, 4, 22, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 105
[length(mis) for mis = unique(C_list)] = [4, 16, 6, 363, 3, 6, 35, 3, 7, 3, 51, 33, 3, 6, 12, 258, 12, 3, 6, 11, 20, 3, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 106
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 24, 3, 3, 4, 8, 8, 48, 4, 62, 4, 3, 4, 6, 3, 4, 3, 48, 9, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 107
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 6, 4, 15, 6, 11, 9, 499, 3, 26, 6, 4, 14, 6, 12, 6, 3, 21, 5, 6]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 108
[length(mis) for mis = unique(C_list)] = [3, 14, 7, 32, 3, 6, 6, 3, 92, 25, 6, 6, 3, 41, 531, 6, 13, 3, 3, 4, 3, 6, 4]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 109
[length(mis) for mis = unique(C_list)] = [3, 16, 4, 18, 4, 3, 4, 3, 5, 19, 4, 25, 6, 4, 4, 6, 4, 4, 4, 9, 20, 3, 154]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 110
[length(mis) for mis = unique(C_list)] = [4, 3, 3, 19, 8, 5, 5, 7, 6, 20, 3, 28, 4, 4, 6, 7, 4, 3, 8, 37, 3, 10]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 111
[length(mis) for mis = unique(C_list)] = [4, 16, 3, 18, 6, 4, 51, 7, 12, 19, 3, 27, 10, 3, 13, 7, 13, 7, 12, 6, 23, 11, 6]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 112
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 11, 6, 5, 6, 3, 6, 4, 6, 28, 6, 6, 3, 285, 4, 64, 4, 30, 7, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 113
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 5, 6, 6, 4, 3, 6, 4, 6, 4, 3, 5, 5, 6, 3, 4, 3, 3, 3, 3, 4]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 114
[length(mis) for mis = unique(C_list)] = [11, 5, 12, 6, 6, 4, 30, 4, 24, 6, 58, 4, 3, 3, 14, 11, 15, 4, 4, 8, 253, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 115
[length(mis) for mis = unique(C_list)] = [7, 3, 4, 8, 3, 8, 55, 3, 310, 55, 3, 596, 4, 4, 88, 3, 3, 6, 20, 20, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 116
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 16, 3, 4, 4, 3, 18, 12, 4, 11, 3, 5, 4, 18, 4, 4, 4, 5, 19, 5]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 117
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 18, 4, 3, 4, 3, 713, 25, 6, 28, 3, 8, 3, 7, 3, 4, 3, 3, 3, 4, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 118
[length(mis) for mis = unique(C_list)] = [3, 6, 5, 3, 4, 3, 66, 6, 34, 60, 4, 3, 4, 13, 6, 13, 5, 3, 3, 22, 5, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 119
[length(mis) for mis = unique(C_list)] = [12, 3, 3, 18, 7, 3, 490, 5, 6, 19, 3, 35, 6, 3, 96, 9, 13, 5, 6, 6, 20, 4, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 120
[length(mis) for mis = unique(C_list)] = [4, 14, 3, 3, 12, 7, 30, 3, 6, 16, 4, 6, 4, 265, 4, 5, 4, 39, 20, 3]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 121
[length(mis) for mis = unique(C_list)] = [11, 3, 4, 49, 4, 3, 40, 8, 12, 41, 4, 5, 3, 4, 9, 9, 12, 8, 3, 4, 20, 57]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 122
[length(mis) for mis = unique(C_list)] = [6, 3, 3, 3, 4, 4, 3, 3, 6, 3, 4, 3, 3, 4, 4, 6, 4, 5, 8, 25, 7, 576, 12]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 123
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 4, 3, 3, 5, 4, 6, 25, 3, 26, 3, 3, 4, 6, 6, 3, 3, 3, 20, 4, 5]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 124
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 18, 4, 4, 4, 3, 6, 6, 4, 28, 4, 4, 4, 6, 4, 4, 4, 3, 22, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 125
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 18, 6, 5, 4, 4, 10, 19, 4, 5, 15, 3, 15, 212, 14, 3, 3, 9, 20, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 126
[length(mis) for mis = unique(C_list)] = [8, 6, 4, 4, 7, 4, 4, 4, 7, 8, 29, 16, 4, 6, 8, 145, 3, 3, 7, 8, 24, 7, 7]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 127
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 4, 3, 12, 3, 3, 6, 4, 5, 4, 5, 3, 5, 386, 4, 3, 4, 3, 33, 4, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 128
[length(mis) for mis = unique(C_list)] = [12, 18, 3, 18, 3, 3, 31, 6, 6, 34, 6, 4, 6, 8, 13, 6, 13, 3, 3, 20, 6, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 129
[length(mis) for mis = unique(C_list)] = [4, 16, 3, 4, 9, 37, 42, 3, 42, 3, 6, 6, 3, 3, 13, 9, 4, 3, 3, 49, 28, 5]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 130
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 47, 3, 4, 6, 5, 10, 19, 4, 8, 7, 3, 3, 7, 4, 4, 3, 13, 32, 3, 10]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 131
[length(mis) for mis = unique(C_list)] = [5, 5, 6, 72, 3, 4, 18, 3, 4, 21, 3, 4, 4, 10, 207, 3, 3, 3, 3, 53, 9, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 132
[length(mis) for mis = unique(C_list)] = [4, 3, 7, 7, 15, 3, 3, 7, 6, 23, 4, 4, 3, 7, 6, 5, 3, 22, 9, 328]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 133
[length(mis) for mis = unique(C_list)] = [4, 6, 4, 16, 4, 4, 24, 6, 6, 17, 11, 20, 5, 4, 5, 14, 4, 4, 4, 4, 50, 3, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 134
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 18, 6, 3, 3, 4, 5, 19, 3, 61, 3, 4, 7, 6, 3, 3, 11, 20, 7, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 135
[length(mis) for mis = unique(C_list)] = [6, 4, 4, 7, 35, 3, 31, 9, 264, 57, 3, 5, 4, 16, 6, 15, 62, 6, 3, 56, 35, 5]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 136
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 35, 3, 4, 4, 3, 7, 39, 4, 26, 3, 4, 3, 13, 6, 4, 5, 4, 20, 31, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 137
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 3, 3, 3, 3, 5, 3, 4, 3, 7, 5, 3, 3, 3, 7, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 138
[length(mis) for mis = unique(C_list)] = [7, 6, 4, 35, 5, 3, 4, 4, 8, 26, 6, 29, 3, 4, 3, 6, 3, 3, 4, 19, 3, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 139
[length(mis) for mis = unique(C_list)] = [7, 4, 6, 53, 10, 8, 48, 4, 8, 27, 5, 28, 4, 3, 4, 6, 97, 6, 3, 20, 3, 8]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 140
[length(mis) for mis = unique(C_list)] = [6, 4, 3, 10, 4, 3, 3, 3, 5, 30, 4, 29, 3, 3, 8, 6, 4, 3, 28, 4, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 141
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 3, 4, 3, 3, 6, 3, 5, 4, 4, 10, 4, 4, 4, 3, 5, 4, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 142
[length(mis) for mis = unique(C_list)] = [4, 8, 3, 9, 10, 3, 6, 3, 6, 8, 4, 3, 4, 6, 271, 17, 4, 6, 4, 3, 10, 3, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 143
[length(mis) for mis = unique(C_list)] = [4, 5, 3, 34, 3, 5, 11, 3, 6, 28, 3, 3, 3, 4, 8, 6, 221, 3, 4, 5, 3, 6]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 144
[length(mis) for mis = unique(C_list)] = [4, 6, 3, 4, 28, 3, 7, 3, 5, 5, 3, 3, 4, 3, 5, 3, 4, 3, 3, 23, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 145
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 45, 3, 3, 3, 4, 8, 43, 3, 54, 4, 4, 3, 9, 3, 6, 4, 19, 9, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 146
[length(mis) for mis = unique(C_list)] = [3, 12, 3, 4, 7, 3, 6, 3, 68, 3, 7, 4, 3, 11, 12, 27, 12, 3, 3, 12, 3, 10]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 147
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 18, 3, 3, 3, 6, 29, 4, 3, 4, 6, 4, 5, 6, 4, 4, 3, 23, 3, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 148
[length(mis) for mis = unique(C_list)] = [8, 3, 4, 10, 4, 6, 4, 4, 6, 6, 3, 43, 6, 3, 3, 6, 3, 3, 6, 4, 34, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 149
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 3, 3, 4, 4, 6, 6, 4, 5, 4, 4, 15, 4, 6, 6, 4, 4, 4, 4, 9, 4]
length(C_list) = 22
termination_sub = MathOptInterface.INFEASIBLE
iter = 150
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 35, 5, 10, 7, 3, 6, 38, 7, 35, 4, 4, 4, 6, 4, 3, 8, 56, 33]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 151
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 19, 4, 3, 3, 3, 9, 44, 3, 3, 3, 4, 3, 478, 3, 3, 3, 4, 22, 32, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 152
[length(mis) for mis = unique(C_list)] = [3, 13, 6, 10, 5, 3, 27, 10, 6, 25, 6, 5, 3, 35, 15, 11, 14, 7, 3, 3, 3, 41, 8]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 153
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 55, 3, 4, 15, 4, 62, 28, 3, 28, 3, 5, 5, 3, 13, 4, 3, 55, 11, 3]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 154
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 7, 4, 3, 3, 3, 6, 4, 5, 3, 4, 4, 3, 6, 11, 8, 4, 4, 5, 4]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 155
[length(mis) for mis = unique(C_list)] = [3, 3, 3, 50, 4, 4, 3, 3, 9, 23, 4, 24, 3, 4, 4, 6, 85, 8, 4, 8, 20, 31, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 156
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 3, 3, 4, 3, 3, 7, 3, 4, 4, 59, 69, 4, 7, 4, 4, 4, 8, 4]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 157
[length(mis) for mis = unique(C_list)] = [4, 8, 4, 52, 3, 7, 13, 4, 130, 27, 3, 28, 3, 4, 3, 42, 3, 3, 4, 5, 17, 55, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 158
[length(mis) for mis = unique(C_list)] = [5, 4, 7, 4, 4, 4, 3, 6, 17, 4, 3, 14, 4, 4, 3, 363, 3, 7, 4, 30, 4, 3]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 159
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 19, 4, 3, 3, 4, 6, 45, 5, 15, 3, 3, 3, 6, 3, 8, 4, 4, 44, 3, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 160
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 16, 9, 5, 55, 4, 6, 17, 14, 3, 4, 3, 5, 183, 3, 119, 3, 11, 3, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 161
[length(mis) for mis = unique(C_list)] = [8, 7, 6, 4, 5, 4, 4, 40, 7, 5, 4, 4, 10, 3, 20, 7, 4, 3, 7, 10, 8, 6]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 162
[length(mis) for mis = unique(C_list)] = [15, 8, 4, 7, 4, 3, 3, 3, 15, 3, 3, 175, 4, 7, 3, 31, 4, 4, 4, 4, 3, 6, 3]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 163
[length(mis) for mis = unique(C_list)] = [3, 4, 3, 3, 6, 18, 4, 6, 3, 3, 28, 3, 4, 3, 6, 8, 4, 6, 4, 3, 3, 4]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 164
[length(mis) for mis = unique(C_list)] = [5, 3, 217, 41, 4, 3, 29, 3, 29, 3, 6, 28, 3, 5, 3, 6, 4, 12, 5, 36, 4, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 165
[length(mis) for mis = unique(C_list)] = [4, 12, 3, 22, 4, 6, 27, 3, 6, 31, 3, 9, 8, 3, 3, 6, 3, 3, 15, 29, 4, 7]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 166
[length(mis) for mis = unique(C_list)] = [5, 3, 5, 3, 6, 3, 19, 7, 7, 4, 3, 3, 3, 4, 3, 6, 3, 8, 3, 4, 3, 5]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 167
[length(mis) for mis = unique(C_list)] = [7, 5, 4, 3, 3, 3, 44, 3, 8, 60, 5, 44, 3, 5, 4, 6, 3, 3, 3, 3, 35, 6, 5]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 168
[length(mis) for mis = unique(C_list)] = [4, 18, 5, 4, 70, 3, 35, 10, 6, 25, 7, 79, 4, 8, 13, 50, 4, 30, 9, 68, 11, 4]
length(C_list) = 12
termination_sub = MathOptInterface.INFEASIBLE
iter = 169
[length(mis) for mis = unique(C_list)] = ┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
[6, 5, 4, 19, 6, 5, 51, 4, 71, 69, 4, 14, 4, 4, 3, 6, 4, 4, 5, 28, 6, 3]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 170
[length(mis) for mis = unique(C_list)] = [3, 6, 3, 66, 3, 4, 3, 4, 6, 29, 7, 4, 4, 4, 66, 6, 63, 3, 3, 89, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 171
[length(mis) for mis = unique(C_list)] = [3, 4, 4, 3, 3, 3, 57, 5, 6, 4, 3, 3, 3, 5, 9, 6, 9, 3, 3, 3, 34, 4, 6]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 172
[length(mis) for mis = unique(C_list)] = [4, 6, 5, 47, 3, 11, 21, 3, 7, 24, 4, 39, 5, 4, 4, 7, 3, 3, 19, 8, 3]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 173
[length(mis) for mis = unique(C_list)] = [4, 3, 4, 3, 3, 6, 6, 3, 6, 45, 4, 12, 5, 12, 4, 5, 3, 3, 8, 3, 30, 32, 9]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 174
[length(mis) for mis = unique(C_list)] = [16, 6, 3, 4, 3, 3, 4, 4, 6, 3, 4, 21, 4, 3, 4, 209, 4, 3, 17, 3, 131, 52, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 175
[length(mis) for mis = unique(C_list)] = [5, 4, 3, 5, 4, 6, 3, 3, 6, 4, 3, 3, 4, 5, 6, 3, 3, 3, 4, 5, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 176
[length(mis) for mis = unique(C_list)] = [3, 5, 3, 5, 5, 3, 38, 3, 7, 4, 5, 4, 3, 4, 4, 6, 4, 3, 4, 16, 4, 82, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 177
[length(mis) for mis = unique(C_list)] = [12, 4, 4, 3, 3, 3, 4, 6, 4, 4, 3, 8, 4, 4, 6, 4, 3, 3, 4, 3, 3]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 178
termination = MathOptInterface.INFEASIBLE
objective_value = 0.35960670777572873
