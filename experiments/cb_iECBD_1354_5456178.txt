ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECBD_1354
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECBD_1354
----------------------------------
number of metabolites : 1952
number of reactions : 2748
number of genes : 1354

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 137
max_cuts = 14
(indicator, big_m) = (false, true)
BIG M ADDED
model with 2748 flux variables and 5105 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [4, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 4, 2, 3, 3, 3, 2, 2, 4, 3, 4, 3, 4, 4, 4, 3, 8, 4, 3, 2, 9, 4, 3, 2, 5, 3]
length(C_list) = 14
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 3, 5, 3, 4, 3, 3, 3, 3, 5, 3, 68, 4, 4, 8, 3, 4, 4, 3, 4, 4, 3, 10, 4, 4, 2, 5, 4, 4, 4, 3, 3, 3, 5, 5, 12, 4, 5, 4, 4, 4, 4, 3, 4, 3, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [5, 5, 3, 4, 4, 4, 3, 3, 4, 5, 4, 2, 5, 3, 9, 4, 6, 5, 12, 4, 5, 4, 6, 5, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [6, 6, 3, 4, 6, 4, 4, 5, 4, 5, 4, 2, 2, 11, 18, 5, 15, 10]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 6, 4, 4, 3, 7, 2, 3, 81, 5, 4, 4, 3, 6, 137, 4, 3, 8, 6, 6, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 12, 2, 6, 7, 6, 4, 2, 9, 8, 4, 157, 7, 6]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 2, 5, 6, 135, 6, 32, 4, 91, 6, 7, 9, 6, 6, 11, 4, 24, 11, 3, 4]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 7
termination = MathOptInterface.OPTIMAL
objective_value = 0.9756145115851286
thermo_feasible = true
