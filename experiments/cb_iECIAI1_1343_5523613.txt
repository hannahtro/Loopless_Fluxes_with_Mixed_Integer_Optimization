┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iECIAI1_1343
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iECIAI1_1343
----------------------------------
number of metabolites : 1968
number of reactions : 2765
number of genes : 1343

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 55
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2765 flux variables and 5139 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [3, 2, 2, 12, 2, 6, 2, 15, 2, 5, 7, 29, 6, 2, 15, 8, 9, 3, 2, 17, 11, 24, 57, 9, 3, 47, 16, 4, 4]
length(C_list) = 13
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 2, 5, 2, 6, 2, 4, 19, 8, 9, 3, 15, 11, 55, 9, 46, 16]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [8, 4, 4, 4, 2, 3, 2, 5, 7, 2, 4, 6, 4, 15, 15, 4, 4, 9, 4, 4, 11, 4, 21, 6, 19, 20, 38, 4, 18]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 6, 2, 2, 3, 7, 4, 9, 3, 3, 4, 5, 15, 8, 9, 7, 8, 15, 10, 7, 57, 9, 58, 2, 16, 6, 30]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [9, 2, 3, 5, 4, 13, 21, 32, 8, 7, 7, 3, 15, 8, 9, 6, 208, 17, 42, 4, 56, 9, 7, 47, 16, 6, 20, 2]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 2, 4, 6, 32, 8, 6, 6, 17, 6, 15, 196, 10, 8, 4, 14, 3, 11, 7, 54, 9, 48, 16, 9, 7, 3, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [4, 6, 6, 7, 191, 3, 7, 3, 8, 6, 8, 4, 7, 7, 15, 9, 9, 8, 3, 14, 87, 7, 55, 9, 6, 48, 16, 7, 3, 6, 12, 6]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 6, 7, 6, 67, 21, 4, 7, 7, 6, 8, 15, 8, 9, 11, 8, 14, 10, 56, 9, 50, 18, 10, 8, 7]
length(C_list) = 2
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 6, 3, 6, 27, 6, 6, 7, 20, 5, 4, 7, 6, 17, 10, 9, 7, 8, 14, 4, 10, 4, 54, 9, 9, 51, 4, 23, 6, 6, 3, 8, 169]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [3, 7, 3, 8, 6, 16, 34, 6, 5, 8, 17, 11, 10, 7, 7, 20, 4, 12, 8, 17, 10, 46, 17, 61]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 16, 6, 4, 6, 70, 6, 7, 9, 13, 4, 6, 5, 15, 12, 9, 4, 8, 3, 14, 13, 11, 54, 9, 7, 49, 7, 17, 3, 6]
length(C_list) = 7
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [8, 7, 4, 6, 6, 4, 3, 2, 14, 11, 8, 15, 10, 10, 8, 8, 6, 14, 10, 93, 54, 9, 48, 6, 16, 3, 7]
length(C_list) = 5
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [8, 46, 3, 6, 6, 6, 6, 6, 6, 7, 6, 142, 9, 10, 7, 88, 6, 16, 11, 7, 17, 109, 7, 51, 9, 25, 6, 6, 72, 6]
length(C_list) = 1
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [8, 6, 31, 10, 7, 7, 8, 36, 9, 6, 6, 7, 15, 8, 9, 6, 8, 6, 14, 10, 55, 7, 47, 18, 6, 10, 6]
length(C_list) = 27
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 2, 4, 2, 14]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [3, 3, 4, 4]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 16
termination = MathOptInterface.OPTIMAL
objective_value = 20.52222573839084
thermo_feasible = true
