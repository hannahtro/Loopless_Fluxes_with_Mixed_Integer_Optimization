┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iYS1720
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iYS1720
----------------------------------
number of metabolites : 2436
number of reactions : 3357
number of genes : 1707

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 67
max_cuts = 50
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 3357 flux variables and 6229 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 11, 2, 2, 3, 2, 8, 2, 2, 2, 8, 4, 40, 40, 41, 41, 4, 16, 9, 9, 9, 14, 16, 16, 9, 9, 9, 3, 2, 4, 6, 3, 8, 270, 39, 16, 15, 11, 14, 42, 43]
length(C_list) = 41
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 2, 3, 3, 2, 2, 2, 202, 7, 2, 5, 22, 29, 6, 4]
length(C_list) = 18
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [4, 4, 3, 3, 2, 3, 2, 3, 3, 4, 2, 74, 6, 5, 4, 226]
length(C_list) = 16
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 8, 7, 5, 14, 5, 4, 4, 22, 4, 145, 4, 7]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [2, 10, 4, 8, 6, 5, 3, 4, 5, 39, 39, 40, 41, 3, 6, 8, 116, 8, 8, 15, 17, 8, 8, 8, 9, 33, 4, 5, 3, 8, 38, 12, 15, 14, 5, 8, 40, 40]
length(C_list) = 38
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [3, 7, 7, 5, 4, 5, 8, 5, 5, 8, 23, 9, 4, 10, 4]
length(C_list) = 15
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [2, 4, 2, 5, 5, 3, 3, 19, 3, 6, 4, 4, 5, 5, 10, 186, 5, 23, 6, 361]
length(C_list) = 20
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [2, 2, 3, 2, 4, 3, 6, 11, 3]
length(C_list) = 9
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [2, 3, 7]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 6, 8, 9, 8, 7, 68, 15, 7, 10]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 23]
length(C_list) = 4
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [2, 3, 3, 4, 8, 5]
length(C_list) = 6
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 2, 2, 37, 16, 4, 116, 46]
length(C_list) = 8
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
[length(mis) for mis = unique(C_list)] = [3, 5, 7, 102, 70, 7, 8, 4, 5, 6, 7]
length(C_list) = 11
termination_sub = MathOptInterface.INFEASIBLE
iter = 14
MIS problem not feasible
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 8, 11, 25, 13, 7, 8, 4, 7, 8, 49, 7, 8, 19, 11]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 15
[length(mis) for mis = unique(C_list)] = [2, 3, 4, 5, 5, 38, 153, 10, 5, 5, 13, 10, 8]
length(C_list) = 13
termination_sub = MathOptInterface.INFEASIBLE
iter = 16
[length(mis) for mis = unique(C_list)] = [4, 4, 4, 4, 6, 7, 6, 5, 5, 7]
length(C_list) = 10
termination_sub = MathOptInterface.INFEASIBLE
iter = 17
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 17
termination = MathOptInterface.OPTIMAL
objective_value = 0.4884567206390035
thermo_feasible = true
