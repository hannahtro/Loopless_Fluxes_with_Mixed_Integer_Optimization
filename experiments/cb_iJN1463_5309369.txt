┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iJN1463
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iJN1463
----------------------------------
number of metabolites : 2153
number of reactions : 2927
number of genes : 1462

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 59
max_cuts = 44
(indicator, big_m) = (true, false)
INDICATOR ADDED
model with 2927 flux variables and 5473 variables in total
master problem solved
feasible = false
[length(mis) for mis = unique(C_list)] = [2, 4, 4, 2, 4, 6, 5, 3, 3, 3, 132, 2, 5, 6, 4, 314, 6, 4, 8, 5, 6, 213, 6, 8, 5, 10, 3, 6]
length(C_list) = 28
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [6, 3, 6, 2, 2, 5, 4, 64, 5, 7, 3, 5, 10, 3, 9, 3, 12, 3, 3, 5, 132, 6, 5, 36]
length(C_list) = 24
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [2, 4, 12, 4, 47, 5, 31, 3, 42, 4, 4, 12, 139, 12, 11, 4, 28, 18, 219, 12, 3]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [12, 4, 12, 4, 4, 5, 4, 4, 12, 3, 13, 5, 12, 4, 53, 5, 7, 16, 317]
length(C_list) = 19
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 14, 4, 8, 12, 12, 14, 7, 14, 7, 13, 13, 6, 6, 6, 6, 6, 69, 3, 4, 5, 4, 3]
length(C_list) = 23
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [2, 2, 5, 3, 3, 5, 11, 8, 3, 3, 97, 203, 3, 3, 4, 4, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [10, 4, 4, 9, 7, 5, 3, 6, 3, 8, 8, 4, 6, 8, 5, 7, 7, 5, 8, 5, 8, 38, 6, 9, 6, 27, 7, 5, 6, 6, 89, 6, 12, 6, 7]
length(C_list) = 35
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [4, 11, 6, 6, 7, 26, 16, 6, 6, 6, 7, 13, 7, 6, 2, 3, 7, 6, 6, 9, 5, 13, 9, 9, 6, 10, 5, 6, 6, 7]
length(C_list) = 30
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 3, 4, 6, 5, 4, 62, 32, 6, 5, 8, 5]
length(C_list) = 14
termination_sub = MathOptInterface.INFEASIBLE
iter = 9
[length(mis) for mis = unique(C_list)] = [5, 4, 4, 5, 5, 5, 3, 5, 7, 10, 5, 5, 5, 24, 6, 4, 4]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 10
[length(mis) for mis = unique(C_list)] = [4, 3, 5, 4, 3, 4, 3, 3, 10, 4, 4, 4, 3, 4, 5, 10, 3, 4, 6, 138, 11]
length(C_list) = 21
termination_sub = MathOptInterface.INFEASIBLE
iter = 11
[length(mis) for mis = unique(C_list)] = [5, 7, 4, 8, 8, 7, 4, 11, 7, 7, 6, 7, 7, 7, 8, 7, 11, 5, 9, 7, 6, 6, 8, 8, 6, 6, 7, 13, 7, 7, 7]
length(C_list) = 31
termination_sub = MathOptInterface.INFEASIBLE
iter = 12
[length(mis) for mis = unique(C_list)] = [2, 4, 3, 6, 17, 11, 4, 2, 10, 6, 7, 8, 4, 6, 23, 8, 3]
length(C_list) = 17
termination_sub = MathOptInterface.INFEASIBLE
iter = 13
MIS problem not feasible
termination_mis = MathOptInterface.INFEASIBLE
[length(mis) for mis = unique(C_list)] = Any[]
length(C_list) = 0
iter = 13
termination = MathOptInterface.OPTIMAL
objective_value = 0.5861175465440135
thermo_feasible = true
