┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: flux through non-zero reactions is thermo feasible
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:539
┌ Warning: master problem cannot be solved
└ @ Main ~/git/Loopless_Fluxes_with_Mixed_Integer_Optimization/src/cuts_decomposition.jl:486
ENV["GRB_LICENSE_FILE"] = "/home/htc/htroppen/gurobi.lic"
iSynCJ816
(time_limit, fast, json, yeast) = (1800, true, true, false)
fast = true

iSynCJ816
----------------------------------
number of metabolites : 928
number of reactions : 1044
number of genes : 816

MOI.get(master_problem, MOI.RawOptimizerAttribute("numerics/feastol")) = 1.0e-6
multiple_mis = 5
max_cuts = 3
(indicator, big_m) = (false, true)
BIG M ADDED
model with 1044 flux variables and 2032 variables in total
master problem solved
feasible = true
[length(mis) for mis = unique(C_list)] = [1, 3, 4, 6]
length(C_list) = 3
sub problem solved
iter = 1
[length(mis) for mis = unique(C_list)] = [5, 3, 4, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 2
[length(mis) for mis = unique(C_list)] = [10, 3, 6, 5, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 3
[length(mis) for mis = unique(C_list)] = [10, 3, 5, 5, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 4
[length(mis) for mis = unique(C_list)] = [6, 3, 4, 4, 6, 3]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 5
[length(mis) for mis = unique(C_list)] = [23, 4, 10, 4]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 6
[length(mis) for mis = unique(C_list)] = [8, 3, 6]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 7
[length(mis) for mis = unique(C_list)] = [15, 3, 1]
length(C_list) = 3
termination_sub = MathOptInterface.INFEASIBLE
iter = 8
termination_master = MathOptInterface.INFEASIBLE
BoundsError((missing, Any[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], Any[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], missing, missing, missing, missing, missing, 0.01688098907470703, MathOptInterface.INFEASIBLE, 8, Any[(Any[], Any[686], 1), (Any[1], Any[453, 464], 3), (Any[451, 613], Any[500, 731], 4), (Any[469, 919], Any[1], 3), (Any[469, 919], Any[92, 93], 4), (Any[724, 895], Any[428, 447, 489], 5), (Any[1], Any[469, 919], 3), (Any[1], Any[413, 605], 3), (Any[92, 93], Any[321, 341, 443], 5), (Any[453, 464], Any[1], 3), (Any[321, 341, 443], Any[92, 93], 5), (Any[637, 856], Any[269, 329, 362], 5), (Any[565, 573], Any[1], 3), (Any[413, 605], Any[1], 3), (Any[23, 883], Any[92, 93], 4), (Any[60, 249, 356], Any[1], 4), (Any[615], Any[565, 573, 663], 4), (Any[171, 366, 541, 550, 558, 772, 887], Any[207, 453, 464], 10), (Any[772, 777], Any[1], 3), (Any[181, 323, 500], Any[1, 459, 613], 6), (Any[131, 355, 665, 674], Any[60, 249, 356, 967], 8), (Any[686], Any[], 1), (Any[201, 890], Any[1], 3), (Any[75, 279, 323, 471, 482, 760, 785, 920, 921, 925, 939, 940, 941], Any[786, 791], 15)], Any[1.605025053024292, 0.011319160461425781, 0.010332107543945312, 0.010666847229003906, 0.07150602340698242, 0.08066606521606445, 0.07661795616149902, 0.07871007919311523, 0.016717195510864258], Any[0.025361061096191406, 0.0076389312744140625, 0.006905078887939453, 0.006903886795043945, 0.006883144378662109, 0.007318019866943359, 0.007236957550048828, 0.0056400299072265625], Any[3.575653076171875, 0.08964705467224121, 0.13685894012451172, 0.07420802116394043, 0.1151587963104248, 0.08161497116088867, 0.06026887893676758, 0.0993809700012207]), 16)
